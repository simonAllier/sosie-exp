[{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[1,2,3,4,5,6],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[7,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,1,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,4,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,10,11,12,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,7,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,0,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[377],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[364],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[459,460,461,462,463,328,329,464,330,465,331,332,333,334,466,467,335,468,469,336,470,337,338,339,340,341,342,343,471,472,473,474,475,0,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[254,255,316,317,318,320,322,323,324,327,387,388,389,391,393,394,395,398],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[1,48,50,51,151,152,155,156,232,234,240,241,242,300,301,302,303,306,308,309,416,417,423,424],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[170,171,172,173,175,177],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,489,490,41,42,43,44,45,46,47,1,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,4,152,153,154,155,156,157,158,159,160,9,491,161,492,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,493,246,247,248,249,250,10,11,12,251,252,253,459,460,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,494,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,461,462,495,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,464,330,465,331,332,333,334,466,467,335,468,469,336,470,337,338,339,340,341,342,343,471,472,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,7,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,473,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,496,497,498,431,432,433,434,435,474,436,499,437,500,475,0,438,476,439,440,477,441,442,443,444,478,445,501,479,446,447,480,448,449,450,451,452,453,454,455,456,457,458],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[362],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[227,229,373,375,453],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[422],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[347,349,355,356],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[108],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[203],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[50,51,55,56,61,109,129,131,153,154,191,240,308,309,345,346,349,351,352,358,361,363,370,420,421],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[1,2,3,4,5,6],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":347,"org.easymock.tests2.UsageTest.argumentsOrdered":424,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":150,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":200,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":419,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":255,"org.easymock.tests2.DelegateToTest.testReturnException":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":142,"org.easymock.tests.MockingTest.testPartialClassMocking":9,"org.easymock.tests.MockClassControlTest.testToString":121,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":299,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":467,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":81,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":332,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":381,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":354,"org.easymock.tests2.UsageTest.wrongArguments":417,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":76,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":167,"org.easymock.samples.ExampleTest.answerVsDelegate":259,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":43,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":163,"org.easymock.tests2.UsageConstraintsTest.testNull":350,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":284,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":408,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":126,"org.easymock.tests2.CaptureTest.testPrimitive":270,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":80,"org.easymock.tests.UsageTest.moreThanOneArgument":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":100,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":237,"org.easymock.tests.UsageTest.argumentsOrdered":156,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":54,"org.easymock.tests.UsageVarargTest.varargIntAccepted":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":246,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":438,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":397,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":192,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":250,"org.easymock.tests.ReplayStateInvalidUsageTest.times":222,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":321,"org.easymock.tests2.DependencyTest.testClassMocking":378,"org.easymock.tests2.AnswerTest.answer":453,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":207,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":314,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":490,"org.easymock.tests2.CaptureTest.testAnd":267,"org.easymock.tests2.UsageTest.strictResetToDefault":415,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":403,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":111,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":58,"org.easymock.tests2.DelegateToTest.testDelegate":377,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":96,"org.easymock.tests.LimitationsTest.mockFinalMethod":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":72,"org.easymock.tests2.DependencyTest.testClassMockingSupport":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":73,"org.easymock.tests2.CaptureTest.testCapture1_2446744":271,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":288,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":312,"org.easymock.tests.UsageThrowableTest.throwError":130,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":216,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":42,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":493,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":398,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":239,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":472,"org.easymock.samples.PartialClassMockTest.testGetArea":251,"org.easymock.tests.MockingTest.testInterfaceMocking":161,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":247,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":102,"org.easymock.tests2.UsageTest.niceToStrict":418,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":335,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":190,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":442,"org.easymock.tests2.MockBuilderTest.testCreateMock":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":324,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":90,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":404,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":489,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":149,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":59,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":165,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":485,"org.easymock.tests.UsageOverloadedMethodTest.overloading":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":342,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":230,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":360,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":31,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":359,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":276,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":181,"org.easymock.tests.MockClassControlTest.testEquals":125,"org.easymock.tests2.EasyMockSupportClassTest.testAll":330,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":106,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":70,"org.easymock.tests2.CaptureTest.testCaptureAll":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":313,"org.easymock.tests.MockNameTest.defaultName":226,"org.easymock.tests2.UsageConstraintsTest.testMatches":361,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":238,"org.easymock.samples.ExampleTest.voteForRemovals":263,"org.easymock.tests.UsageVarargTest.allKinds":189,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":71,"org.easymock.samples.BasicClassMockTest.testPrintContent":253,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":136,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":146,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":376,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":176,"org.easymock.tests2.UsageConstraintsTest.greaterThan":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":465,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":110,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":294,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":177,"org.easymock.samples.ExampleTest.voteForRemoval":260,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":295,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":383,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":44,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":287,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":414,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":243,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":401,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":141,"org.easymock.tests2.CaptureTest.testCaptureFirst":280,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":196,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":402,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":426,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":233,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":27,"org.easymock.tests2.UsageTest.moreThanOneArgument":416,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":385,"org.easymock.tests2.CaptureTest.testCapture2_2446744":279,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":208,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":188,"org.easymock.tests.GenericTest.testBridgedEquals":108,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":486,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":483,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":66,"org.easymock.tests.UsageExpectAndReturnTest.longType":23,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":99,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":140,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":367,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":235,"org.easymock.tests.UsageCallCountTest.tooManyCalls":67,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":86,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":135,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":435,"org.easymock.tests.MockingTest.testNiceClassMocking":164,"org.easymock.tests.MockingTest.testClassMocking":159,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":60,"org.easymock.tests2.UsageConstraintsTest.testContains":358,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":451,"org.easymock.tests2.UsageConstraintsTest.testFind":349,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":129,"org.easymock.tests.MockTypeTest.fromEasyMockClass":41,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":429,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":46,"org.easymock.tests.UsageExpectAndReturnTest.object":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":407,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":183,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":116,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":487,"org.easymock.tests.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":195,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":17,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":55,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":462,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":36,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":229,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":388,"org.easymock.tests.MockClassControlTest.testHashCode":124,"org.easymock.tests2.EasyMockSupportTest.testVerify":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":469,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":56,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":148,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":311,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":315,"org.easymock.tests.UsageVarargTest.varargCharAccepted":182,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":169,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":213,"org.easymock.tests2.UsageTest.openCallCountByLastCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":410,"org.easymock.tests.DefaultClassInstantiatorTest.object":170,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":147,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":114,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":336,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":319,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":387,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":123,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":292,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":87,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":37,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":10,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":343,"org.easymock.tests2.UsageTest.resumeIfFailure":425,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":144,"org.easymock.tests2.StubTest.stubWithReturnValue":298,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":478,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":29,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":368,"org.easymock.tests2.SerializationTest.testAllMockedMethod":413,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":206,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":6,"org.easymock.samples.SupportTest.voteForRemovals":257,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":390,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":93,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":212,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":454,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":19,"org.easymock.tests.UsageExpectAndThrowTest.object":91,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":365,"org.easymock.tests2.DelegateToTest.testWrongClass":375,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":244,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":245,"org.easymock.samples.ConstructorCalledMockTest.testTax":459,"org.easymock.tests.UsageStrictMockTest.range":50,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":432,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":406,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":434,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":484,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":444,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":155,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":166,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":103,"org.easymock.tests2.CaptureTest.testCaptureNone":275,"org.easymock.tests.UsageUnorderedTest.message":234,"org.easymock.tests.UsageVerifyTest.twoReturns":242,"org.easymock.tests.UsageVarargTest.varargByteAccepted":187,"org.easymock.tests2.ThreadingTest.testThreadSafe":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":338,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":64,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":117,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":252,"org.easymock.tests2.CaptureTest.testCapture_2617107":269,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":210,"org.easymock.tests2.UsageConstraintsTest.any":356,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":221,"org.easymock.tests2.StubTest.stub":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":143,"org.easymock.tests.UsageExpectAndThrowTest.longType":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":211,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":174,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":220,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":307,"org.easymock.tests2.SerializationTest.testClass":473,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":392,"org.easymock.tests.LimitationsTest.mockNativeMethod":15,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":107,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":39,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":318,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":310,"org.easymock.tests2.NameTest.nameForMocksControl":303,"org.easymock.tests2.MockedExceptionTest.testMockedException":450,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":331,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":154,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":492,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":428,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":85,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":281,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":445,"org.easymock.tests.MockingTest.testNicePartialClassMocking":491,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":286,"org.easymock.tests2.CaptureTest.testCaptureLast":274,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":316,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":74,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":475,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":353,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":366,"org.easymock.tests.MockingTest.testTwoMocks":160,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":89,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":423,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":370,"org.easymock.samples.ExampleTest.removeNonExistingDocument":264,"org.easymock.tests.UsageStrictMockTest.differentMethods":51,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":389,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":172,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":384,"org.easymock.tests2.MockBuilderTest.testCreateMockString":448,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":119,"org.easymock.tests.UsageExpectAndThrowTest.floatType":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":333,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":456,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":495,"org.easymock.tests.UsageVerifyTest.twoThrows":241,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":337,"org.easymock.samples.ExampleTest.voteAgainstRemoval":261,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":201,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":293,"org.easymock.tests.LimitationsTest.privateConstructor":14,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":482,"org.easymock.tests2.UsageConstraintsTest.testNotNull":369,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":449,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":137,"org.easymock.tests2.UsageTest.defaultResetToNice":422,"org.easymock.samples.ExampleTest.voteAgainstRemovals":258,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":202,"org.easymock.tests.UsageVarargTest.differentLength":184,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":317,"org.easymock.tests2.CallbackTest.callback":266,"org.easymock.tests2.UsageConstraintsTest.equals":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":494,"org.easymock.tests.UsageTest.openCallCountByLastCall":153,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":78,"org.easymock.tests.UsageCallCountTest.tooFewCalls":62,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":436,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":168,"org.easymock.tests.UsageThrowableTest.throwCheckedException":134,"org.easymock.tests.MockingTest.testStrictClassMocking":158,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":500,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":139,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":474,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":322,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":223,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":437,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":458,"org.easymock.tests.ObjectMethodsTest.testHashCode":115,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":386,"org.easymock.tests2.NameTest.nameForNiceMock":302,"org.easymock.tests2.DependencyTest.testInterfaceMocking":380,"org.easymock.samples.ExampleTest.addDocument":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests2.DelegateToTest.testStubDelegate":374,"org.easymock.tests2.AnswerTest.stubAnswer":457,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":48,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":501,"org.easymock.tests.UsageVarargTest.varargLongAccepted":186,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":199,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":38,"org.easymock.tests.UsageExpectAndReturnTest.floatType":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":461,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":460,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":396,"org.easymock.tests.UsageThrowableTest.noUpperLimit":131,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":231,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":363,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":345,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":430,"org.easymock.tests2.SerializationTest.test":412,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":272,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":171,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":21,"org.easymock.tests2.UsageConstraintsTest.testSame":351,"org.easymock.samples.SupportTest.addDocument":256,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":499,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":334,"org.easymock.tests.GenericTest.testPackageScope":105,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":194,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":395,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":162,"org.easymock.tests2.NameTest.nameForMock":300,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":32,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":480,"org.easymock.tests2.UsageStrictMockTest.differentMethods":309,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":290,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":95,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":113,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":112,"org.easymock.tests2.MockedExceptionTest.testRealException":452,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":203,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":306,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":77,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":225,"org.easymock.tests2.NameTest.nameForStrictMock":301,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":441,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":463,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":427,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":285,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":431,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":173,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":364,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":439,"org.easymock.tests2.UsageStrictMockTest.range":308,"org.easymock.tests2.UsageConstraintsTest.lessThan":371,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":391,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":468,"org.easymock.tests2.CaptureTest.testCaptureRightOne":277,"org.easymock.tests2.UsageConstraintsTest.testOr":352,"org.easymock.tests.UsageRangeTest.combination":109,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":282,"org.easymock.tests.UsageTest.wrongArguments":152,"org.easymock.tests2.MockBuilderTest.testWithConstructor":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":466,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":33,"org.easymock.tests.UsageVarargTest.varargShortAccepted":185,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":175,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":65,"org.easymock.tests2.UsageConstraintsTest.cmpTo":357,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":193,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":421,"org.easymock.tests2.CaptureTest.testCaptureFromStub":278,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":215,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":440,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":63,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":34,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":49,"org.easymock.tests2.UsageConstraintsTest.constraints":346,"org.easymock.samples.ExampleTest.addAndChangeDocument":265,"org.easymock.tests.UsageStrictMockTest.testVerify":53,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":254,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":47,"org.easymock.tests2.CompareToTest.testGreateThan":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":69,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":248,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":26,"org.easymock.tests.LimitationsTest.abstractClass":13,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":405,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":179}}]
