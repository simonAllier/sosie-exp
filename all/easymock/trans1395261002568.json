[{"position":"org.easymock.internal.matchers.Contains:40","failures":[0],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[1,2],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,8,9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[10,11,12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[14,19,29,30,31,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[33,59,34,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,1,109,110,111,112,113,114,115,116,117,118,119,120,14,121,122,15,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,16,168,17,18,169,170,171,172,19,20,173,174,21,22,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,7,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,24,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,10,327,328,329,11,330,331,332,333,334,335,336,25,337,338,339,340,341,35,36,37,38,39,40,41,42,43,44,45,46,342,343,344,345,346,347,348,349,350,351,352,353,354,355,26,356,357,358,359,360,27,28,361,362,363,364,365,366,367,368,369,12,370,371,372,373,374,375,376,2,377,378,379,13,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,47,48,49,50,51,52,53,54,55,56,57,58,405,406,407,408,8,409,9,410,411,412,413,414,415,3,416,4,417,418,419,420,421,5,6,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[415,3,417,419,420,5,430,435,464,466,474],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[495,496,497,498,494],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[499,500,501,502,503,504],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"position":"org.easymock.internal.LastControl:94","failures":[415,3,4,417,418,419,420,421,5,6,430,431,435,436,464,465,466,467,474,475],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[339,495,505,506,507,508,496,497,509,376,378,498,494,389,390],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[142],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[510,511,512],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,65,67,75,81,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,119,120,14,121,122,15,123,124,125,132,133,134,135,136,137,138,140,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,16,168,17,18,169,170,171,172,19,20,173,174,21,22,175,179,180,182,186,187,188,189,190,192,193,194,195,196,197,198,201,202,203,204,205,206,207,208,209,210,211,212,214,215,217,218,219,220,221,245,246,247,248,250,258,259,275,276,277,278,279,280,284,285,286,287,288,294,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,326,327,330,332,333,334,335,336,25,337,338,339,340,341,342,345,346,347,350,352,353,354,355,26,356,357,358,359,360,27,28,361,362,363,364,365,366,367,368,373,374,13,381,389,405,406,407,408,409,9,410,412,413,414,415,3,4,417,418,419,420,421,6,422,423,424,425,426,427,428,429,430,431,432,434,435,436,437,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,479,480,484,485,487,488,490,491,492,493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[72,72,73,73,324,513],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[14,19,29,30,31,32],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[514,515],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[33,59,34,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,1,109,110,111,112,113,114,115,116,117,118,119,120,14,121,122,15,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,16,168,17,18,169,170,171,172,19,20,173,174,21,22,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,7,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,24,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,10,327,328,329,11,330,331,332,333,334,335,336,25,337,338,339,340,341,35,36,37,38,39,40,41,42,43,44,45,46,342,343,344,345,346,347,348,349,350,351,352,353,354,355,26,356,357,358,359,360,27,28,361,362,363,364,365,366,367,368,369,12,370,371,372,373,374,375,376,2,377,378,379,13,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,47,48,49,50,51,52,53,54,55,56,57,58,405,406,407,408,8,409,9,410,411,412,413,414,415,3,416,4,417,418,419,420,421,5,6,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[33,59,34,60,61,62,63,64,65,67,68,69,70,71,72,73,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,119,120,14,121,122,15,123,124,132,133,134,135,136,137,138,140,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,16,168,17,18,516,516,169,170,171,172,19,20,173,174,21,22,175,179,180,182,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,245,247,248,258,259,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,24,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,326,10,327,328,330,332,333,334,335,336,25,337,338,339,340,341,40,342,345,346,347,350,351,353,354,355,26,356,357,358,359,360,27,28,361,362,363,364,365,366,367,368,12,373,374,375,2,379,13,381,389,392,393,394,395,396,397,398,399,400,401,402,403,404,52,405,406,407,408,409,9,410,412,413,414,415,3,4,417,418,419,420,421,6,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,441,444,454,460,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,483,484,485,487,488],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[87,132,133,134,135,136,137,170,196,229,295,296,297,405,406,407,408,488],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[7,8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"failures":[330,331],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":402,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":7,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":357,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":33,"org.easymock.tests2.DelegateToTest.testReturnException":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":133,"org.easymock.tests.MockingTest.testPartialClassMocking":179,"org.easymock.tests.MockClassControlTest.testToString":251,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":489,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":448,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":444,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":144,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":351,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":505,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":421,"org.easymock.tests2.UsageTest.wrongArguments":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":194,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":203,"org.easymock.samples.ExampleTest.answerVsDelegate":61,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":113,"org.easymock.tests2.UsageConstraintsTest.testNull":417,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":184,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":318,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":401,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":256,"org.easymock.tests2.CaptureTest.testPrimitive":467,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":198,"org.easymock.tests.UsageTest.moreThanOneArgument":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":163,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":286,"org.easymock.tests.UsageTest.argumentsOrdered":22,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":298,"org.easymock.tests.UsageVarargTest.varargIntAccepted":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":497,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":368,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":45,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":209,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":52,"org.easymock.tests.ReplayStateInvalidUsageTest.times":85,"org.easymock.tests2.DependencyTest.testClassMocking":348,"org.easymock.tests2.AnswerTest.answer":342,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":314,"org.easymock.tests2.CaptureTest.testAnd":464,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":110,"org.easymock.tests2.UsageTest.strictResetToDefault":354,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":326,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":396,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":247,"org.easymock.tests2.DelegateToTest.testDelegate":412,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":159,"org.easymock.tests.LimitationsTest.mockFinalMethod":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":190,"org.easymock.tests2.DependencyTest.testClassMockingSupport":349,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":74,"org.easymock.tests2.CaptureTest.testCapture1_2446744":468,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":312,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":79,"org.easymock.tests.UsageThrowableTest.throwError":303,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":112,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":46,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":462,"org.easymock.samples.PartialClassMockTest.testGetArea":59,"org.easymock.tests.MockingTest.testInterfaceMocking":181,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":206,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":449,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":145,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":131,"org.easymock.tests2.UsageTest.niceToStrict":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":222,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":373,"org.easymock.tests2.MockBuilderTest.testCreateMock":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":457,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":55,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":153,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":31,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":397,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":109,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":274,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":275,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":201,"org.easymock.tests.UsageOverloadedMethodTest.overloading":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":453,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":425,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":292,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":100,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":424,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":473,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":213,"org.easymock.tests2.EasyMockSupportClassTest.testAll":441,"org.easymock.tests.MockClassControlTest.testEquals":255,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":141,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":161,"org.easymock.tests2.CaptureTest.testCaptureAll":465,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":188,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":313,"org.easymock.tests.MockNameTest.defaultName":257,"org.easymock.tests2.UsageConstraintsTest.testMatches":426,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":287,"org.easymock.samples.ExampleTest.voteForRemovals":65,"org.easymock.tests.UsageVarargTest.allKinds":221,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":189,"org.easymock.samples.BasicClassMockTest.testPrintContent":69,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":309,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":333,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":509,"org.easymock.tests2.UsageConstraintsTest.greaterThan":428,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":442,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":246,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":328,"org.easymock.samples.ExampleTest.voteForRemoval":62,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":268,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":329,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":364,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":114,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":321,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":138,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":353,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":394,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":132,"org.easymock.tests2.CaptureTest.testCaptureFirst":477,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":228,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":395,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":362,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":24,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":96,"org.easymock.tests2.CaptureTest.testCapture2_2446744":476,"org.easymock.tests2.UsageTest.moreThanOneArgument":355,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":366,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":239,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":220,"org.easymock.tests.GenericTest.testBridgedEquals":143,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":282,"org.easymock.tests.UsageExpectAndReturnTest.longType":92,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":186,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":515,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":162,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":433,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":199,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":284,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":296,"org.easymock.tests.UsageCallCountTest.tooManyCalls":283,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":97,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":57,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":308,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":479,"org.easymock.tests.MockingTest.testNiceClassMocking":185,"org.easymock.tests.MockingTest.testClassMocking":177,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":514,"org.easymock.tests2.UsageConstraintsTest.testContains":423,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":276,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":407,"org.easymock.tests2.UsageConstraintsTest.testFind":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":193,"org.easymock.tests.MockTypeTest.fromEasyMockClass":111,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":119,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":332,"org.easymock.tests.UsageExpectAndReturnTest.object":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":323,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":400,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":506,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":215,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":129,"org.easymock.tests.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":227,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":116,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":390,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":105,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":210,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":291,"org.easymock.tests.ResultTest.createThrowResultToString":512,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":36,"org.easymock.tests.MockClassControlTest.testHashCode":254,"org.easymock.tests2.EasyMockSupportTest.testVerify":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":451,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":273,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":311,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":352,"org.easymock.tests.UsageVarargTest.varargCharAccepted":214,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":260,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":244,"org.easymock.tests2.UsageTest.openCallCountByLastCall":358,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":403,"org.easymock.tests.DefaultClassInstantiatorTest.object":261,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":272,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":127,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":452,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":151,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":50,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":35,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":10,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":253,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":150,"org.easymock.tests.CapturesMatcherTest.test":516,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":106,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":460,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":252,"org.easymock.tests2.UsageTest.resumeIfFailure":361,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":1,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":135,"org.easymock.tests2.StubTest.stubWithReturnValue":488,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":376,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":434,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":98,"org.easymock.tests2.SerializationTest.testAllMockedMethod":341,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":237,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":494,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":32,"org.easymock.samples.SupportTest.voteForRemovals":71,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":38,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":156,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":243,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":343,"org.easymock.tests.UsageExpectAndThrowTest.object":154,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":118,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":431,"org.easymock.tests2.DelegateToTest.testWrongClass":410,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":258,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":259,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.samples.ConstructorCalledMockTest.testTax":72,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":387,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":399,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":478,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":155,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":438,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":21,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":87,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":202,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":29,"org.easymock.tests2.CaptureTest.testCaptureNone":472,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":271,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":500,"org.easymock.tests.UsageUnorderedTest.message":16,"org.easymock.tests.UsageVerifyTest.twoReturns":18,"org.easymock.tests.UsageVarargTest.varargByteAccepted":219,"org.easymock.tests2.ThreadingTest.testThreadSafe":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":455,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":280,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":130,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":68,"org.easymock.tests2.CaptureTest.testCapture_2617107":466,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":241,"org.easymock.tests2.UsageConstraintsTest.any":6,"org.easymock.tests2.StubTest.stub":487,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":297,"org.easymock.tests.UsageExpectAndThrowTest.longType":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":242,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":265,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":83,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":336,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":40,"org.easymock.tests2.SerializationTest.testClass":339,"org.easymock.tests.LimitationsTest.mockNativeMethod":166,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":108,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":49,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":338,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":501,"org.easymock.tests2.NameTest.nameForMocksControl":493,"org.easymock.tests2.MockedExceptionTest.testMockedException":406,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":443,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":174,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":182,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":148,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":331,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":315,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":2,"org.easymock.tests.MockingTest.testNicePartialClassMocking":180,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":495,"org.easymock.tests2.CaptureTest.testCaptureLast":471,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":47,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":75,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":485,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":420,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":432,"org.easymock.tests.MockingTest.testTwoMocks":178,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":152,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":436,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":504,"org.easymock.samples.ExampleTest.removeNonExistingDocument":66,"org.easymock.tests.UsageStrictMockTest.differentMethods":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":54,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":81,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":37,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":503,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":263,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":365,"org.easymock.tests2.MockBuilderTest.testCreateMockString":381,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":445,"org.easymock.tests.UsageExpectAndThrowTest.floatType":146,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":440,"org.easymock.tests.ResultTest.createReturnResultToString":511,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":345,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":391,"org.easymock.tests.UsageVerifyTest.twoThrows":17,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":454,"org.easymock.tests.ResultTest.createDelegateResultToString":510,"org.easymock.samples.ExampleTest.voteAgainstRemoval":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":232,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":269,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":327,"org.easymock.tests.LimitationsTest.privateConstructor":165,"org.easymock.tests2.UsageConstraintsTest.testNotNull":435,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":405,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":310,"org.easymock.tests2.UsageTest.defaultResetToNice":360,"org.easymock.samples.ExampleTest.voteAgainstRemovals":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":233,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":48,"org.easymock.tests.UsageVarargTest.differentLength":216,"org.easymock.tests2.CallbackTest.callback":463,"org.easymock.tests2.UsageConstraintsTest.equals":416,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":324,"org.easymock.tests.UsageTest.openCallCountByLastCall":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":196,"org.easymock.tests.UsageCallCountTest.tooFewCalls":278,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":481,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":204,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":502,"org.easymock.tests.UsageThrowableTest.throwCheckedException":307,"org.easymock.tests.MockingTest.testStrictClassMocking":176,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":30,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":484,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":170,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":480,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":53,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":86,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":483,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":347,"org.easymock.tests.ObjectMethodsTest.testHashCode":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":496,"org.easymock.tests2.NameTest.nameForNiceMock":492,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":367,"org.easymock.tests2.DependencyTest.testInterfaceMocking":350,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":507,"org.easymock.samples.ExampleTest.addDocument":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.DelegateToTest.testStubDelegate":9,"org.easymock.tests2.AnswerTest.stubAnswer":346,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":121,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":377,"org.easymock.tests.UsageVarargTest.varargLongAccepted":218,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":107,"org.easymock.tests.UsageExpectAndReturnTest.floatType":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":389,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":73,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":429,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":44,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":293,"org.easymock.tests.UsageThrowableTest.noUpperLimit":304,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":414,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":382,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":469,"org.easymock.tests2.SerializationTest.test":340,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":262,"org.easymock.tests2.UsageConstraintsTest.testSame":418,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":90,"org.easymock.samples.SupportTest.addDocument":70,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":482,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":446,"org.easymock.tests.GenericTest.testPackageScope":140,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":226,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":43,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":183,"org.easymock.tests2.NameTest.nameForMock":490,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":101,"org.easymock.tests2.UsageStrictMockTest.differentMethods":337,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":158,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":126,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":248,"org.easymock.tests2.MockedExceptionTest.testRealException":408,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":115,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":235,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":234,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":335,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":195,"org.easymock.tests2.NameTest.nameForStrictMock":491,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":372,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":330,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":319,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":386,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":430,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":264,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":12,"org.easymock.tests2.UsageStrictMockTest.range":25,"org.easymock.tests2.UsageConstraintsTest.lessThan":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":508,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":230,"org.easymock.tests2.CaptureTest.testCaptureRightOne":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":450,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":499,"org.easymock.tests2.UsageConstraintsTest.testOr":419,"org.easymock.tests.UsageRangeTest.combination":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":316,"org.easymock.tests.UsageTest.wrongArguments":20,"org.easymock.tests2.MockBuilderTest.testWithConstructor":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":447,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":223,"org.easymock.tests.UsageVarargTest.varargShortAccepted":217,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":266,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":281,"org.easymock.tests2.UsageConstraintsTest.cmpTo":422,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":225,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":359,"org.easymock.tests2.CaptureTest.testCaptureFromStub":475,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":78,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":370,"org.easymock.tests.UsageTest.unexpectedCallWithArray":19,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":279,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":513,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":103,"org.easymock.tests2.UsageConstraintsTest.constraints":415,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":122,"org.easymock.samples.ExampleTest.addAndChangeDocument":67,"org.easymock.tests.UsageStrictMockTest.testVerify":125,"org.easymock.tests2.ConstraintsToStringTest.containsToString":0,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":34,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":187,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":470,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":207,"org.easymock.tests.LimitationsTest.abstractClass":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":208,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":398,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":211}}]
