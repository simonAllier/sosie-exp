[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[19,26,27,28,29,31,76,34,35,36,77,38,39,40],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[41,78,79,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,80,81,82,73,83,84,85,86,87,88,89,90,91],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[41,92,93],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:71","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[60],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[94,95],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:61","failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,16,110,111],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[18,113,114,115,116,117,96,97,118,98,119,99,100,120,121,122,123,124,125,126,127,128,129,130,94,95,131,132,133,101,134,135,136,102,103,104,137,138,139,140,105,106,141,107,142,143,108,144,145,146,147,148,149,9,29,30,150,109,16,110,151,111,36,152,153,154,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[137],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[155,156,157,158],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[125],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[41,93,51,54,64,70,159,160,161,162,163,164,165,166,167,2,85,168,169,87,170,171,88,172,173,174,175,176,177,144,178,179,180,181,182,90,90,91,91,183,184,185,186,187,188,189,190,191,192,193,194],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[196,197,29,198,199,77],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.Injector:116","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[78,79,80,81,82,83,84,86,87,88,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"field"}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[113,51,200,201,202],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[203],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[122,154],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[204,102,104,137,138,139,140,105,141,205,107,142,108],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[4,9,206,207,208,209,210,110,34,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":97,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":8,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":82,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":133,"org.easymock.tests2.SerializationTest.testAllMockedMethod":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":6,"org.easymock.tests.MockingTest.testPartialClassMocking":191,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":197,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":211,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":54,"org.easymock.tests.UsageExpectAndThrowTest.object":221,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":202,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":95,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":152,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":153,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":120,"org.easymock.tests2.UsageTest.wrongArguments":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":150,"org.easymock.samples.ConstructorCalledMockTest.testTax":90,"org.easymock.tests.UsageStrictMockTest.range":31,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":168,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":43,"org.easymock.tests2.UsageConstraintsTest.testNull":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":222,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":174,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":163,"org.easymock.tests2.CaptureTest.testPrimitive":137,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":48,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":12,"org.easymock.tests.UsageTest.moreThanOneArgument":37,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":39,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":198,"org.easymock.tests2.CaptureTest.testCaptureNone":106,"org.easymock.tests.UsageUnorderedTest.message":36,"org.easymock.tests.UsageVerifyTest.twoReturns":35,"org.easymock.tests.UsageTest.argumentsOrdered":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":65,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":183,"org.easymock.tests2.CaptureTest.testCapture_2617107":104,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":145,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":110,"org.easymock.tests2.UsageConstraintsTest.any":122,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":162,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":149,"org.easymock.tests.UsageExpectAndThrowTest.longType":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":7,"org.easymock.tests2.SerializationTest.testClass":41,"org.easymock.tests.LimitationsTest.mockNativeMethod":186,"org.easymock.tests2.AnswerTest.answer":195,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":189,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":121,"org.easymock.tests2.CaptureTest.testAnd":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":178,"org.easymock.tests2.NameTest.nameForMocksControl":24,"org.easymock.tests2.MockedExceptionTest.testMockedException":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":53,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":157,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":215,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":193,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":172,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":164,"org.easymock.tests.MockingTest.testNicePartialClassMocking":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":226,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":176,"org.easymock.tests2.CaptureTest.testCaptureLast":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":9,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":88,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":100,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":131,"org.easymock.tests.MockingTest.testTwoMocks":190,"org.easymock.tests2.CaptureTest.testCapture1_2446744":138,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":89,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":224,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":219,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":134,"org.easymock.tests.UsageThrowableTest.throwError":231,"org.easymock.tests.UsageStrictMockTest.differentMethods":32,"org.easymock.tests2.MockBuilderTest.testCreateMockString":167,"org.easymock.tests.UsageExpectAndThrowTest.floatType":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":55,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":50,"org.easymock.tests.UsageVerifyTest.twoThrows":34,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":64,"org.easymock.samples.PartialClassMockTest.testGetArea":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":146,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":59,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":79,"org.easymock.tests2.UsageConstraintsTest.testNotNull":101,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":236,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":0,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":47,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":161,"org.easymock.tests2.MockBuilderTest.testCreateMock":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":67,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":220,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":196,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":16,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":63,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":210,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":126,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":170,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":125,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":141,"org.easymock.tests.UsageThrowableTest.throwCheckedException":233,"org.easymock.tests2.EasyMockSupportClassTest.testAll":51,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":188,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":228,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":199,"org.easymock.tests2.CaptureTest.testCaptureAll":103,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":17,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":171,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":87,"org.easymock.tests2.UsageConstraintsTest.testMatches":127,"org.easymock.tests2.NameTest.nameForNiceMock":23,"org.easymock.tests.UsageVarargTest.allKinds":111,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":33,"org.easymock.samples.BasicClassMockTest.testPrintContent":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":71,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":10,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":30,"org.easymock.tests2.UsageConstraintsTest.greaterThan":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":52,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":156,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":181,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":177,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":91,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":130,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":117,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":185,"org.easymock.tests2.SerializationTest.test":92,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":139,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":11,"org.easymock.tests2.UsageConstraintsTest.testSame":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":5,"org.easymock.tests2.CaptureTest.testCaptureFirst":108,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":56,"org.easymock.tests.GenericTest.testPackageScope":187,"org.easymock.tests2.UsageTest.moreThanOneArgument":25,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":113,"org.easymock.tests2.CaptureTest.testCapture2_2446744":143,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":166,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":45,"org.easymock.tests2.NameTest.nameForMock":21,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":229,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":132,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":227,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":84,"org.easymock.tests2.UsageStrictMockTest.differentMethods":20,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":14,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":225,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":68,"org.easymock.tests2.MockedExceptionTest.testRealException":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":216,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":169,"org.easymock.tests2.NameTest.nameForStrictMock":22,"org.easymock.tests2.UsageConstraintsTest.testContains":124,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.UsageConstraintsTest.testFind":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":75,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":114,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":175,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":115,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":94,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":144,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":160,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.UsageConstraintsTest.lessThan":135,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":46,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":60,"org.easymock.tests2.CaptureTest.testCaptureRightOne":107,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":201,"org.easymock.tests2.UsageConstraintsTest.testOr":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":86,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":173,"org.easymock.tests.UsageTest.wrongArguments":38,"org.easymock.tests2.MockBuilderTest.testWithConstructor":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":57,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":61,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":208,"org.easymock.tests2.UsageConstraintsTest.cmpTo":123,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":136,"org.easymock.tests2.CaptureTest.testCaptureMultiple":204,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":74,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":207,"org.easymock.tests2.CaptureTest.testCaptureFromStub":142,"org.easymock.tests.UsageTest.unexpectedCallWithArray":77,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":232,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":29,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":83,"org.easymock.tests2.CaptureTest.testCapture":205,"org.easymock.tests2.UsageConstraintsTest.constraints":96,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":179,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":217,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":70,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":140,"org.easymock.tests2.UsageTest.resumeIfFailure":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":148}}]
