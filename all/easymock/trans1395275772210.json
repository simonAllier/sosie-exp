[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"leafClass"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,0,41,42,43,44,45,46],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,7,8,62,63,64,65,9,10,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,11,85,86,87,88,12,13,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,0,1,2,211,212,213,214,215,216,217,41,218,219,42,220,221,222,223,43,224,225,44,226,227,46,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[356,359,492,493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"answer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[9,10,0,495,496,497,498,499,43,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[48,49,50,51,52,53,55,62,63,64,65,9,81,84,11,88,12,102,103,106,107,109,110,111,112,113,115,116,118,119,122,125,127,128,136,137,140,141,142,143,144,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,171,172,173,174,175,177,179,180,183,184,185,186,187,189,190,191,192,193,194,197,0,1,2,211,214,215,216,217,221,222,229,231,232,233,234,237,240,242,247,248,249,250,251,252,253,254,255,256,261,262,273,274,275,276,277,278,279,281,282,283,309,311,314,315,316,318,328,330,331,332,333,334,335,336,360,362,363,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,397,399,400,401,403,404,406,407,408,409,410,413,414,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,447,448,450,454,455,456,457,458,459,464,474,475,476,477,478,494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[500,141,160,163],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[501,502,310,319,503,504],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[505,169],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[162],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[184,186,187,188,189,190,191,193,506,194,195,197],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[10,495,496,497,507,508,43],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[9,10,0,509,495,496,497,498,507,499,43,44,510],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[260],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[511,141,143,160,166],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[163],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[105,117,123,124,280,282,283,310,313,319,320,323,324,512,361],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[57,58,61,7,7,8,8,62,63,64,9,83,84,11,85,88,12,133,19,22,32,38,0,2,217,218,219,220,221,222,223,224,226,227,228,229,230,232,233,234,235,237,239,240,241,242,243,244,245,246,261,262,263,265,270,328,336,444,445,446,447,448,450,453,463,464,465,466,467,468,469,470,483],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[105,106,310,313,314,319],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[144],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[125,254,255,256,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":144,"org.easymock.tests2.UsageTest.argumentsOrdered":124,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":317,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":208,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":294,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":119,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":47,"org.easymock.tests2.DelegateToTest.testReturnException":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":331,"org.easymock.tests.MockingTest.testPartialClassMocking":447,"org.easymock.tests.MockClassControlTest.testToString":465,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":170,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":26,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":421,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":22,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":495,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":151,"org.easymock.tests2.UsageTest.wrongArguments":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":362,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":251,"org.easymock.samples.ExampleTest.answerVsDelegate":49,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":270,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":452,"org.easymock.tests2.UsageConstraintsTest.testNull":147,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":232,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":470,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":207,"org.easymock.tests2.CaptureTest.testPrimitive":187,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":366,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":440,"org.easymock.tests.UsageTest.moreThanOneArgument":318,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":476,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":392,"org.easymock.tests.UsageTest.argumentsOrdered":324,"org.easymock.tests.UsageVarargTest.varargIntAccepted":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":367,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":508,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":217,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":99,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":371,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":72,"org.easymock.tests.ReplayStateInvalidUsageTest.times":351,"org.easymock.tests2.DependencyTest.testClassMocking":79,"org.easymock.tests2.AnswerTest.answer":211,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":301,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":112,"org.easymock.tests2.CaptureTest.testAnd":184,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":267,"org.easymock.tests2.UsageTest.strictResetToDefault":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":202,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":255,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":396,"org.easymock.tests2.DelegateToTest.testDelegate":183,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":436,"org.easymock.tests.LimitationsTest.mockFinalMethod":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":277,"org.easymock.tests2.DependencyTest.testClassMockingSupport":80,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":492,"org.easymock.tests2.CaptureTest.testCapture1_2446744":188,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":236,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":434,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":110,"org.easymock.tests.UsageThrowableTest.throwError":412,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":345,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":269,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":491,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":478,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":40,"org.easymock.samples.PartialClassMockTest.testGetArea":61,"org.easymock.tests.MockingTest.testInterfaceMocking":449,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":346,"org.easymock.tests2.CompareToTest.testLessOrEqual":511,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":368,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":442,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":422,"org.easymock.tests2.UsageTest.niceToStrict":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":27,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":342,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":284,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":221,"org.easymock.tests2.MockBuilderTest.testCreateMock":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":35,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":75,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":430,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":203,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":259,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":454,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":249,"org.easymock.tests.UsageOverloadedMethodTest.overloading":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":31,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":157,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":358,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":383,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":156,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":193,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":402,"org.easymock.tests.MockClassControlTest.testEquals":469,"org.easymock.tests2.EasyMockSupportClassTest.testAll":19,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":262,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":438,"org.easymock.tests2.CaptureTest.testCaptureAll":185,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":275,"org.easymock.tests.MockNameTest.defaultName":411,"org.easymock.tests2.UsageConstraintsTest.testMatches":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":477,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":343,"org.easymock.samples.ExampleTest.voteForRemovals":53,"org.easymock.tests.UsageVarargTest.allKinds":410,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":281,"org.easymock.samples.BasicClassMockTest.testPrintContent":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":276,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":418,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":101,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":182,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":335,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":499,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":489,"org.easymock.tests2.UsageConstraintsTest.greaterThan":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":254,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":243,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":490,"org.easymock.samples.ExampleTest.voteForRemoval":50,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":137,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":244,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":271,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":235,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":336,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":200,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":330,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":178,"org.easymock.tests2.CaptureTest.testCaptureFirst":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":201,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":126,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":379,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":139,"org.easymock.tests2.UsageTest.moreThanOneArgument":116,"org.easymock.tests2.CaptureTest.testCapture2_2446744":196,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":302,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":409,"org.easymock.tests.GenericTest.testBridgedEquals":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":461,"org.easymock.tests.UsageExpectAndReturnTest.longType":375,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":439,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":420,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":165,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":437,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":480,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":474,"org.easymock.tests.UsageCallCountTest.tooManyCalls":462,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":380,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":77,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":426,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":417,"org.easymock.tests.MockingTest.testNiceClassMocking":453,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":84,"org.easymock.tests.MockingTest.testClassMocking":445,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":455,"org.easymock.tests2.UsageConstraintsTest.testContains":155,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":64,"org.easymock.tests2.UsageConstraintsTest.testFind":146,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":248,"org.easymock.tests.MockTypeTest.fromEasyMockClass":268,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":177,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":308,"org.easymock.tests.UsageExpectAndReturnTest.object":382,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":496,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":404,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":340,"org.easymock.tests.UsageTest.exactCallCountByLastCall":325,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":289,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":471,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":393,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":399,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":388,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":357,"org.easymock.tests.MockClassControlTest.testHashCode":468,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":90,"org.easymock.tests2.EasyMockSupportTest.testVerify":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":29,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":394,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":258,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":109,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":108,"org.easymock.tests.UsageVarargTest.varargCharAccepted":403,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":482,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":307,"org.easymock.tests2.UsageTest.openCallCountByLastCall":120,"org.easymock.tests.DefaultClassInstantiatorTest.object":483,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":4,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":209,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":257,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":338,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":512,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":30,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":415,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":70,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":89,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":467,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":241,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":427,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":389,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":479,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":38,"org.easymock.tests2.UsageTest.resumeIfFailure":125,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":265,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":333,"org.easymock.tests2.StubTest.stubWithReturnValue":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":43,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":166,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":381,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":300,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":502,"org.easymock.samples.SupportTest.voteForRemovals":60,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":92,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":433,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":306,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":212,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":473,"org.easymock.tests.UsageExpectAndThrowTest.object":431,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":163,"org.easymock.tests2.DelegateToTest.testWrongClass":181,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":278,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":279,"org.easymock.samples.ConstructorCalledMockTest.testTax":7,"org.easymock.tests.UsageStrictMockTest.range":313,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":134,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":205,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":432,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":16,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":323,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":250,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":503,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":443,"org.easymock.tests2.CaptureTest.testCaptureNone":192,"org.easymock.tests.UsageUnorderedTest.message":280,"org.easymock.tests.UsageVerifyTest.twoReturns":283,"org.easymock.tests.UsageVarargTest.varargByteAccepted":408,"org.easymock.tests2.ThreadingTest.testThreadSafe":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":33,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":459,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":57,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":341,"org.easymock.tests2.CaptureTest.testCapture_2617107":186,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":304,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":365,"org.easymock.tests2.UsageConstraintsTest.any":153,"org.easymock.tests2.StubTest.stub":127,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":481,"org.easymock.tests.UsageExpectAndThrowTest.longType":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":332,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":487,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":349,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":104,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":94,"org.easymock.tests.LimitationsTest.mockNativeMethod":328,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":391,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":69,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":107,"org.easymock.tests2.NameTest.nameForMocksControl":174,"org.easymock.tests2.MockedExceptionTest.testMockedException":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":21,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":322,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":450,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":425,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":176,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":229,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":224,"org.easymock.tests.MockingTest.testNicePartialClassMocking":448,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":509,"org.easymock.tests2.CaptureTest.testCaptureLast":191,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":67,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":493,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":12,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":164,"org.easymock.tests.MockingTest.testTwoMocks":446,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":372,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":429,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":123,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":168,"org.easymock.samples.ExampleTest.removeNonExistingDocument":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":74,"org.easymock.tests.UsageStrictMockTest.differentMethods":314,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":91,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":485,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":138,"org.easymock.tests2.MockBuilderTest.testCreateMockString":228,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":463,"org.easymock.tests.UsageExpectAndThrowTest.floatType":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":23,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":18,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":66,"org.easymock.tests.UsageVerifyTest.twoThrows":282,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":32,"org.easymock.samples.ExampleTest.voteAgainstRemoval":51,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":295,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":242,"org.easymock.tests.LimitationsTest.privateConstructor":327,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":15,"org.easymock.tests2.UsageConstraintsTest.testNotNull":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":419,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":62,"org.easymock.tests2.UsageTest.defaultResetToNice":122,"org.easymock.samples.ExampleTest.voteAgainstRemovals":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":296,"org.easymock.tests.UsageVarargTest.differentLength":405,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":68,"org.easymock.tests2.CallbackTest.callback":113,"org.easymock.tests2.UsageConstraintsTest.equals":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":238,"org.easymock.tests.UsageTest.openCallCountByLastCall":321,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":364,"org.easymock.tests.UsageCallCountTest.tooFewCalls":457,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":252,"org.easymock.tests.UsageThrowableTest.throwCheckedException":416,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":504,"org.easymock.tests.MockingTest.testStrictClassMocking":444,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":398,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":88,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":73,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":87,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":216,"org.easymock.tests.ObjectMethodsTest.testHashCode":339,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":507,"org.easymock.tests2.NameTest.nameForNiceMock":173,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":140,"org.easymock.tests2.DependencyTest.testInterfaceMocking":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":497,"org.easymock.samples.ExampleTest.addDocument":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":34,"org.easymock.tests2.DelegateToTest.testStubDelegate":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":39,"org.easymock.tests2.AnswerTest.stubAnswer":215,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":311,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":225,"org.easymock.tests.UsageVarargTest.varargLongAccepted":407,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":293,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":390,"org.easymock.tests.UsageExpectAndReturnTest.floatType":374,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":9,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":8,"org.easymock.tests.UsageThrowableTest.noUpperLimit":413,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":98,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":142,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":129,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":189,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":484,"org.easymock.tests2.UsageConstraintsTest.testSame":148,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":373,"org.easymock.samples.SupportTest.addDocument":59,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":86,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":24,"org.easymock.tests.GenericTest.testPackageScope":261,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":288,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":97,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":451,"org.easymock.tests2.NameTest.nameForMock":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":384,"org.easymock.tests2.UsageStrictMockTest.differentMethods":106,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":239,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":376,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":435,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":337,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":256,"org.easymock.tests2.MockedExceptionTest.testRealException":65,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":272,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":510,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":297,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":363,"org.easymock.tests2.NameTest.nameForStrictMock":172,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":220,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":175,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":5,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":233,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":133,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":486,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":162,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":218,"org.easymock.tests2.UsageStrictMockTest.range":105,"org.easymock.tests2.UsageConstraintsTest.lessThan":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":93,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":498,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":28,"org.easymock.tests2.CaptureTest.testCaptureRightOne":194,"org.easymock.tests2.UsageConstraintsTest.testOr":149,"org.easymock.tests.UsageRangeTest.combination":253,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":230,"org.easymock.tests.UsageTest.wrongArguments":320,"org.easymock.tests2.MockBuilderTest.testWithConstructor":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":25,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":464,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":377,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":285,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":488,"org.easymock.tests.UsageVarargTest.varargShortAccepted":406,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":460,"org.easymock.tests2.UsageConstraintsTest.cmpTo":154,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":213,"org.easymock.tests2.CompareToTest.testLessThan":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":287,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":121,"org.easymock.tests2.CaptureTest.testCaptureFromStub":195,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":344,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":219,"org.easymock.tests.UsageTest.unexpectedCallWithArray":319,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":458,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":45,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":386,"org.easymock.tests2.CaptureTest.testCapture":506,"org.easymock.tests2.UsageConstraintsTest.constraints":143,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":312,"org.easymock.samples.ExampleTest.addAndChangeDocument":55,"org.easymock.tests.UsageStrictMockTest.testVerify":316,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":56,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":309,"org.easymock.tests2.CompareToTest.testGreateThan":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":274,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":190,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":369,"org.easymock.tests.LimitationsTest.abstractClass":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":378,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":370,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":204}}]
