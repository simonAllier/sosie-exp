[{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,1],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[8,9],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[10,11,12,13,2,14,15,16,17,18,19,3,20,21,22,23,24,25,26,27,28,4,29,5,30,31,32,33,34,6,35,36,37,38,39,40,41,9,42,7,43,44,45],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"failures":[46,47],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[48,49,50,51],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[11,23,24,25,27,28,32,6,36,41,9,7,43,44,45],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[53,46,54,55,56,57,58],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[59,60,61,62,63,64,65,66,67,68,68,69,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,10,86,11,12,87,48,49,50,53,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,46,54,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,52,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,55,56,178,57,179,180,181,182,183,184,185,186,187,188,22,23,189,190,191,192,193,24,25,194,195,196,197,198,199,200,201,202,203,26,27,28,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,6,35,219,36,37,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,58,264,265,40,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,9,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,42,7,43,330,331,44,45,332],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[11,333,27,28,36],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[335],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[336],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[10,11,12,13,2,14,15,16,17,18,19,3,20,21,163,22,23,24,25,26,27,28,4,29,5,337,30,31,32,33,34,6,35,36,37,9,42,7,43,44,45],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[207],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[48,49,50,51],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[117,338,180,185,197],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[116,189],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[156,52],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[120,121,122,123,147,222,223,224,225,226,227,288,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[77,84,86,11,12,53,110,117,119,134,138,139,142,150,163,180,340,185,186,187,23,189,190,24,25,194,195,27,28,217,6,219,36,37,341,234,235,9,307,325,329,7,43,44,45,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[342,343],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[344],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[151,156,56,295,312],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":151,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":329,"org.easymock.tests2.UsageTest.argumentsOrdered":25,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":225,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":190,"org.easymock.tests2.StubTest.stubWithReturnValue":147,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":247,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":70,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":170,"org.easymock.tests2.SerializationTest.testAllMockedMethod":50,"org.easymock.tests2.DelegateToTest.testReturnException":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":223,"org.easymock.tests.MockingTest.testPartialClassMocking":320,"org.easymock.samples.SupportTest.voteForRemovals":60,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":3,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":339,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":278,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":51,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":266,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":197,"org.easymock.tests.UsageExpectAndThrowTest.object":276,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":82,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":167,"org.easymock.tests2.DelegateToTest.testWrongClass":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":313,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":314,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":294,"org.easymock.tests2.UsageTest.wrongArguments":23,"org.easymock.samples.ConstructorCalledMockTest.testTax":68,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":202,"org.easymock.samples.ExampleTest.answerVsDelegate":62,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":88,"org.easymock.tests2.UsageConstraintsTest.testNull":153,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":277,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":112,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":142,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":183,"org.easymock.tests2.CaptureTest.testPrimitive":98,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":298,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":285,"org.easymock.tests.UsageTest.moreThanOneArgument":42,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":201,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":317,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":4,"org.easymock.tests2.CaptureTest.testCaptureNone":103,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests.UsageVerifyTest.twoReturns":28,"org.easymock.tests.UsageVarargTest.varargByteAccepted":310,"org.easymock.tests2.ThreadingTest.testThreadSafe":75,"org.easymock.tests.UsageTest.argumentsOrdered":45,"org.easymock.tests.UsageVarargTest.varargIntAccepted":304,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":233,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":72,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":20,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":204,"org.easymock.tests2.CaptureTest.testCapture_2617107":97,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":21,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":297,"org.easymock.tests2.UsageConstraintsTest.any":157,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":182,"org.easymock.tests2.StubTest.stub":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":208,"org.easymock.tests.UsageExpectAndThrowTest.longType":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":224,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":16,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":261,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":86,"org.easymock.tests2.SerializationTest.testClass":48,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":124,"org.easymock.tests.LimitationsTest.mockNativeMethod":286,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":80,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":257,"org.easymock.tests2.AnswerTest.answer":55,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":128,"org.easymock.tests2.CaptureTest.testAnd":95,"org.easymock.tests2.UsageTest.strictResetToDefault":188,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":116,"org.easymock.tests2.NameTest.nameForMocksControl":177,"org.easymock.tests2.MockedExceptionTest.testMockedException":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":316,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":137,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":331,"org.easymock.tests2.DelegateToTest.testDelegate":132,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":270,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":47,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":184,"org.easymock.tests.MockingTest.testNicePartialClassMocking":321,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":281,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":114,"org.easymock.tests2.CompareToTest.testNotComparable":344,"org.easymock.tests2.CaptureTest.testCaptureLast":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":226,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":34,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":94,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":293,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":168,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":33,"org.easymock.tests2.CaptureTest.testCapture1_2446744":99,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":274,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":126,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":172,"org.easymock.tests.UsageThrowableTest.throwError":209,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":260,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":77,"org.easymock.tests2.ConstraintsToStringTest.andToString":19,"org.easymock.tests2.MockBuilderTest.testCreateMockString":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":319,"org.easymock.tests.UsageExpectAndThrowTest.floatType":268,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":163,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":56,"org.easymock.tests.UsageVerifyTest.twoThrows":27,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":198,"org.easymock.samples.PartialClassMockTest.testGetArea":71,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":205,"org.easymock.samples.ExampleTest.voteAgainstRemoval":64,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":267,"org.easymock.tests2.UsageTest.niceToStrict":189,"org.easymock.tests2.UsageConstraintsTest.testNotNull":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":216,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":120,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":181,"org.easymock.tests2.MockBuilderTest.testCreateMock":340,"org.easymock.tests2.UsageTest.defaultResetToNice":193,"org.easymock.samples.ExampleTest.voteAgainstRemovals":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":253,"org.easymock.tests.UsageVarargTest.differentLength":307,"org.easymock.tests2.CallbackTest.callback":53,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":337,"org.easymock.tests.UsageTest.openCallCountByLastCall":330,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":275,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":2,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":138,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":148,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":200,"org.easymock.tests.UsageCallCountTest.tooFewCalls":231,"org.easymock.tests.UsageOverloadedMethodTest.overloading":300,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":265,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":161,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":249,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":91,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":160,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":203,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":335,"org.easymock.tests.UsageThrowableTest.throwCheckedException":213,"org.easymock.tests2.EasyMockSupportClassTest.testAll":196,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":237,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":283,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":18,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":291,"org.easymock.tests2.CaptureTest.testCaptureAll":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":127,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":288,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":93,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":90,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":262,"org.easymock.tests2.UsageConstraintsTest.testMatches":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":92,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":57,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":318,"org.easymock.samples.ExampleTest.voteForRemovals":66,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":79,"org.easymock.tests2.NameTest.nameForNiceMock":176,"org.easymock.tests.UsageVarargTest.allKinds":312,"org.easymock.tests2.DependencyTest.testInterfaceMocking":81,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":292,"org.easymock.samples.BasicClassMockTest.testPrintContent":73,"org.easymock.samples.ExampleTest.addDocument":65,"org.easymock.tests2.DelegateToTest.testStubDelegate":130,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":215,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":84,"org.easymock.tests2.AnswerTest.stubAnswer":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":227,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":35,"org.easymock.tests2.UsageConstraintsTest.greaterThan":164,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":326,"org.easymock.tests.UsageVarargTest.varargLongAccepted":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":119,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":220,"org.easymock.samples.ExampleTest.voteForRemoval":63,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":76,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":256,"org.easymock.tests.UsageExpectAndReturnTest.floatType":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":83,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":69,"org.easymock.tests2.ConstraintsToStringTest.orToString":13,"org.easymock.tests.UsageThrowableTest.noUpperLimit":210,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":39,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":165,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":324,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":149,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests2.SerializationTest.test":49,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":100,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":135,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":211,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":239,"org.easymock.tests2.UsageConstraintsTest.testSame":154,"org.easymock.samples.SupportTest.addDocument":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":222,"org.easymock.tests2.CaptureTest.testCaptureFirst":108,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":136,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":195,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":41,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":245,"org.easymock.tests.GenericTest.testPackageScope":236,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":78,"org.easymock.tests2.UsageTest.moreThanOneArgument":22,"org.easymock.tests2.CaptureTest.testCapture2_2446744":107,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":185,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":311,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":234,"org.easymock.tests2.NameTest.nameForMock":174,"org.easymock.tests.UsageExpectAndReturnTest.longType":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":289,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":250,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":282,"org.easymock.tests2.UsageStrictMockTest.differentMethods":12,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":315,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":242,"org.easymock.tests.UsageCallCountTest.tooManyCalls":235,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":280,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":29,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":328,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":230,"org.easymock.tests2.MockedExceptionTest.testRealException":123,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":246,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":271,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":295,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":263,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":214,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":89,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":229,"org.easymock.tests2.UsageConstraintsTest.testContains":159,"org.easymock.tests2.NameTest.nameForStrictMock":175,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":122,"org.easymock.tests2.UsageConstraintsTest.testFind":152,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":301,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":46,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":113,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":217,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":54,"org.easymock.tests.UsageExpectAndReturnTest.object":248,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":8,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":115,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":180,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests2.UsageConstraintsTest.lessThan":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":141,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":306,"org.easymock.tests.UsageTest.exactCallCountByLastCall":332,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":287,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":134,"org.easymock.tests2.CaptureTest.testCaptureRightOne":105,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":31,"org.easymock.tests2.UsageConstraintsTest.testOr":155,"org.easymock.tests.UsageRangeTest.combination":325,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":302,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":254,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":110,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":264,"org.easymock.tests.UsageTest.wrongArguments":43,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":243,"org.easymock.tests2.EasyMockSupportTest.testVerify":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":251,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":15,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":343,"org.easymock.tests.UsageVarargTest.varargShortAccepted":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":58,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":125,"org.easymock.tests2.UsageConstraintsTest.cmpTo":158,"org.easymock.tests.UsageVarargTest.varargCharAccepted":305,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":85,"org.easymock.tests2.UsageTest.openCallCountByLastCall":191,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":144,"org.easymock.tests2.CaptureTest.testCaptureFromStub":106,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":258,"org.easymock.tests.UsageTest.unexpectedCallWithArray":7,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":32,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":273,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":212,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":232,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":252,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":219,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":117,"org.easymock.tests2.UsageConstraintsTest.constraints":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":272,"org.easymock.samples.ExampleTest.addAndChangeDocument":67,"org.easymock.tests2.ConstraintsToStringTest.notToString":14,"org.easymock.tests.CapturesMatcherTest.test":336,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":255,"org.easymock.tests.UsageStrictMockTest.testVerify":221,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":74,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":199,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":290,"org.easymock.tests2.UsageTest.resumeIfFailure":194,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":206,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":207,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":40,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":333,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":303,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139}}]
