[{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"hashCodeMethod"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[31,32,33,34,35,36,37,38],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[39,40,41,42,43,44,45,46,47],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[48,9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[49,49,50,50,51,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,21,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,32,93,33,94,95,96,97,98,99,100,101,102,103,104,105,106,107,4,108,109,34,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,35,140,141,36,142,37,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,22,160,161,23,162,163,164,165,24,166,167,168,169,26,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,39,40,185,186,187,188,41,42,189,43,30,190,191,0,192,193,194,195,196,44,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,27,217,218,219,28,220,221,222,5,223,224,225,226,227,6,7,228,229,230,231,232,233,234,235,236,237,238,239,240,241,45,242,46,243,244,245,246,247,248,249,47,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,8,274,275,276,277,278,9,279,280,10,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,1,334,335,336,337,11,12,338,339,340,341,342,343,344,345,346,347,38,348,349,350,351,352,13,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,15,16,481,482,17,18,483,484,485,486],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[48,487,9,488,489,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[407,413],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[377],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[21,490,491,492,493,494,495,496,24,212],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[61,62,68,71,73,75,76,79,82,85,86,89,123,124,126,127,128,131,133,134,137,138,139,150,151,155,156,214,215,217,285,286,287,288,289,290,291,292,330,331,332,333,1,334,336,378,379,381,387,388,389,390,396,397,398,405,459],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.LastControl:94","failures":[39,40,186,187,188,41,42,189,43,30,44,197,201,202,45,242,46,243,47,250],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[58,129,159,497,160,161,163,164,165,166,168,169,498,499,170,212,268,271,380],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.Range:40","failures":[49,50,51,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,21,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,32,93,33,94,95,96,97,98,99,100,101,102,103,104,105,106,107,4,108,109,34,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,35,140,141,36,142,37,143,144,145,146,147,148,149,150,151,152,153,154,155,500,501,502,156,157,158,159,22,160,161,23,162,163,164,165,24,166,503,167,168,169,26,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,39,40,185,186,187,188,41,42,189,43,30,190,191,0,192,193,194,195,196,44,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,27,217,504,218,219,28,29,220,221,222,5,223,224,225,226,227,6,7,228,229,230,231,232,233,234,235,236,237,238,239,240,241,45,242,46,243,244,245,246,247,248,249,47,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,505,506,269,270,271,272,273,8,274,275,276,277,278,9,279,280,10,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,1,334,335,336,337,11,12,338,339,340,341,342,343,344,345,346,347,38,348,349,350,351,352,13,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,507,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,15,16,481,482,17,18,483,484,485,486],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[63,64,176,235],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[49,50,51,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,21,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,32,93,33,94,95,96,97,98,99,508,100,101,102,103,104,105,106,107,4,108,109,34,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,35,140,141,36,142,37,509,143,144,145,146,147,148,149,150,151,152,153,154,155,500,501,156,157,158,159,160,161,162,163,164,165,166,503,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,39,40,185,186,187,188,41,42,189,43,30,190,191,0,192,193,194,195,196,44,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,27,217,504,218,219,28,29,220,221,222,5,223,224,225,226,227,6,7,228,229,230,231,232,233,234,235,236,237,238,239,240,241,45,242,46,243,244,245,246,247,248,249,47,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,505,506,269,270,271,272,273,8,274,275,276,277,278,9,279,280,10,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,1,334,336,337,11,12,338,339,340,341,342,343,344,345,346,347,38,348,349,350,351,352,13,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,15,16,481,482,17,18,483,484,485,486],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[149,150,151,152,154,220,226,255,259,260,262,263,264,265,266,267,350,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,433,434,458,473,479,482],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[106,4,108,194,532,48,533,534,535,536,537,538,487,539,540,222,5,6,7,8,9,279,10,281,337,11,12,348,351,352,13,488,541,489,542,543,544,14,406,407,480,15,16,17,18],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[63,64,176,235],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[152,350],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[545,509],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[49,49,50,50,106,183,184,186,187,188,41,191,192,193,195,196,44,201,202,203,250,279,385,386,391,392,393,394,395,421,422,423,424,425,431,432,435,472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[49,49,50,50,51,52,53,55,58,60,65,71,74,84,90,99,100,101,102,103,106,4,108,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,131,135,136,137,35,142,145,151,154,160,163,165,166,169,176,183,184,39,40,186,187,188,41,42,189,30,190,191,0,192,193,194,195,196,44,197,198,200,201,202,203,210,211,212,213,215,216,27,217,218,219,28,220,221,222,223,225,226,227,228,229,235,45,242,243,244,247,248,249,47,250,251,252,253,255,256,257,258,259,260,261,275,276,279,10,281,294,321,327,337,12,344,345,346,347,352,378,380,385,386,389,391,392,393,394,395,399,400,402,406,407,421,422,423,424,425,431,432,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,472,479,480,481,482,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[51,52,53,55,58,60,65,71,74,84,90,102,106,4,108,123,124,125,126,127,128,131,135,136,137,145,160,163,165,166,169,210,211,215,216,27,217,218,219,28,279,10,281,344,345,346,347,385,386,389,391,392,393,394,395,399,400,402,421,422,423,424,431,436,437,438,439,440,441,444,445,447,448,449,451,452,453,454,455],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[51,31,52,53,54,55,56,58,59,60,61,62,63,64,65,71,74,84,90,102,103,105,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,134,136,35,36,144,146,149,150,151,159,163,164,165,166,168,170,176,40,42,189,30,190,0,194,44,197,198,199,200,204,205,206,207,210,211,212,213,214,215,216,27,217,218,219,28,220,221,5,223,224,227,6,7,229,235,45,242,46,243,245,246,247,248,249,47,252,253,254,255,256,257,258,259,260,278,9,280,282,283,285,286,287,288,289,290,291,292,297,300,301,302,303,304,330,11,12,339,340,341,38,349,350,352,13,353,354,355,356,359,360,362,367,372,378,379,389,399,400,402,407,409,410,411,412,413,414,415,416,417,418,419,420,434,438,439,441,446,451,456,457,459,460,461,462,464,465,467,468,469,470,471,474,475,476,477,478,15,16,17,18,483],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[39,40,187,41,42,43,44,201,45,46,47],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:813","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[200],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[21,490,491,492,493,494,495,496,24,212],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[546,547,548,549,550],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[49,50,51,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,21,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,32,93,33,94,95,96,97,98,99,100,101,102,103,104,105,106,107,4,108,109,34,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,35,140,141,36,142,37,143,144,145,146,147,148,149,150,151,152,153,154,155,500,501,502,156,157,158,159,22,160,161,23,162,163,164,165,24,166,503,167,168,169,26,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,39,40,185,186,187,188,41,42,189,43,30,190,191,0,192,193,194,195,196,44,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,27,217,504,218,219,28,29,220,221,222,5,223,224,225,226,227,6,7,228,229,230,231,232,233,234,235,236,237,238,239,240,241,45,242,46,243,244,245,246,247,248,249,47,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,505,506,269,270,271,272,273,8,274,275,276,277,278,9,279,280,10,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,1,334,335,336,337,11,12,338,339,340,341,342,343,344,345,346,347,38,348,349,350,351,352,13,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,507,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,15,16,481,482,17,18,483,484,485,486],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[317,321,417],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[31,144,146,148,349],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":40,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":479,"org.easymock.tests2.UsageTest.argumentsOrdered":7,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":315,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":224,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":64,"org.easymock.tests2.DelegateToTest.testReturnException":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":263,"org.easymock.tests.MockingTest.testPartialClassMocking":399,"org.easymock.tests.MockClassControlTest.testToString":287,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":94,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":294,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":78,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":357,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":211,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":531,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":491,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":431,"org.easymock.tests2.UsageTest.wrongArguments":5,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":182,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":355,"org.easymock.samples.ExampleTest.answerVsDelegate":31,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":271,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":404,"org.easymock.tests2.UsageConstraintsTest.testNull":187,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":126,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":119,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":292,"org.easymock.tests2.CaptureTest.testPrimitive":243,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":435,"org.easymock.tests.UsageTest.moreThanOneArgument":480,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":376,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":423,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":426,"org.easymock.tests.UsageTest.argumentsOrdered":18,"org.easymock.tests.UsageVarargTest.varargIntAccepted":462,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":539,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":495,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":159,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":501,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":240,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":395,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":515,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":535,"org.easymock.tests.ReplayStateInvalidUsageTest.times":417,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":176,"org.easymock.tests2.DependencyTest.testClassMocking":208,"org.easymock.tests2.AnswerTest.answer":35,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":322,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":207,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":506,"org.easymock.tests2.CaptureTest.testAnd":45,"org.easymock.tests2.UsageTest.strictResetToDefault":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":114,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":346,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":430,"org.easymock.tests2.DelegateToTest.testDelegate":148,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":514,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":372,"org.easymock.tests.LimitationsTest.mockFinalMethod":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":478,"org.easymock.tests2.DependencyTest.testClassMockingSupport":209,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":406,"org.easymock.tests2.CaptureTest.testCapture1_2446744":244,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":130,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":370,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":205,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":411,"org.easymock.tests.UsageThrowableTest.throwError":253,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":270,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":507,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":425,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":92,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":518,"org.easymock.samples.PartialClassMockTest.testGetArea":58,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":412,"org.easymock.tests.MockingTest.testInterfaceMocking":401,"org.easymock.tests2.CompareToTest.testLessOrEqual":550,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":392,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":79,"org.easymock.tests2.UsageTest.niceToStrict":223,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":358,"org.easymock.tests2.ThreadingTest.testChangeDefault":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":163,"org.easymock.tests2.MockBuilderTest.testCreateMock":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":179,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":48,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":366,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":115,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":505,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":486,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":353,"org.easymock.tests.UsageOverloadedMethodTest.overloading":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":192,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":350,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":447,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":2,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":249,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":463,"org.easymock.tests2.EasyMockSupportClassTest.testAll":71,"org.easymock.tests.MockClassControlTest.testEquals":291,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":379,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":537,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":374,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":206,"org.easymock.tests2.CaptureTest.testCaptureAll":242,"org.easymock.tests.MockNameTest.defaultName":284,"org.easymock.tests2.UsageConstraintsTest.testMatches":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":424,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":409,"org.easymock.samples.ExampleTest.voteForRemovals":55,"org.easymock.tests.UsageVarargTest.allKinds":471,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":477,"org.easymock.samples.BasicClassMockTest.testPrintContent":62,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":259,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":104,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":496,"org.easymock.tests2.UsageConstraintsTest.greaterThan":195,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":72,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":345,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":137,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":519,"org.easymock.samples.ExampleTest.voteForRemoval":52,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":336,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":138,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":100,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":498,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":272,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":502,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":129,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":511,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":459,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":220,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":112,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":262,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":143,"org.easymock.tests2.CaptureTest.testCaptureFirst":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":113,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":229,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":13,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":443,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":102,"org.easymock.tests2.UsageTest.moreThanOneArgument":222,"org.easymock.tests2.CaptureTest.testCapture2_2446744":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":323,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":470,"org.easymock.tests.GenericTest.testBridgedEquals":381,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":303,"org.easymock.tests.UsageExpectAndReturnTest.longType":439,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":474,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":110,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":499,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":375,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":199,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":261,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":421,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":383,"org.easymock.tests.UsageCallCountTest.tooManyCalls":304,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":541,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":444,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":362,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":258,"org.easymock.tests.MockingTest.testNiceClassMocking":405,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":216,"org.easymock.tests.MockingTest.testClassMocking":397,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":497,"org.easymock.tests2.UsageConstraintsTest.testContains":191,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":297,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":151,"org.easymock.tests2.UsageConstraintsTest.testFind":186,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":458,"org.easymock.tests.MockTypeTest.fromEasyMockClass":269,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":33,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":277,"org.easymock.tests.UsageExpectAndReturnTest.object":446,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":118,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":492,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":465,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":341,"org.easymock.tests.UsageTest.exactCallCountByLastCall":483,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":310,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":427,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":293,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":544,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":21,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":460,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":452,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":231,"org.easymock.tests.MockClassControlTest.testHashCode":290,"org.easymock.tests2.EasyMockSupportTest.testVerify":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":81,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":534,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":428,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":485,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":38,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":204,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":67,"org.easymock.tests.UsageVarargTest.varargCharAccepted":464,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":329,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":328,"org.easymock.tests2.UsageTest.openCallCountByLastCall":225,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":121,"org.easymock.tests.DefaultClassInstantiatorTest.object":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":484,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":339,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":82,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":364,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":256,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":174,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":230,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":517,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":135,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":363,"org.easymock.tests.ReplayStateInvalidCallsTest.times":523,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":453,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":382,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":524,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":536,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":90,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":288,"org.easymock.tests2.UsageTest.resumeIfFailure":228,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":268,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":500,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":265,"org.easymock.tests2.StubTest.stubWithReturnValue":154,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":445,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":200,"org.easymock.tests2.SerializationTest.testAllMockedMethod":214,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":321,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":487,"org.easymock.samples.SupportTest.voteForRemovals":60,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":377,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":369,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":327,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":140,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":295,"org.easymock.tests.UsageExpectAndThrowTest.object":367,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":197,"org.easymock.tests2.DelegateToTest.testWrongClass":146,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":521,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":385,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":386,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.samples.ConstructorCalledMockTest.testTax":49,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":157,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":117,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":368,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":165,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":419,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":354,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":488,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":513,"org.easymock.tests2.CaptureTest.testCaptureNone":248,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":276,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":469,"org.easymock.tests2.ThreadingTest.testThreadSafe":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":85,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":301,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":61,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":342,"org.easymock.tests2.CaptureTest.testCapture_2617107":46,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":540,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":408,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":325,"org.easymock.tests2.UsageConstraintsTest.any":30,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":416,"org.easymock.tests2.StubTest.stub":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":326,"org.easymock.tests.UsageExpectAndThrowTest.longType":360,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":1,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":415,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":107,"org.easymock.tests2.SerializationTest.testClass":212,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":235,"org.easymock.tests.LimitationsTest.mockNativeMethod":389,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":455,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":380,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":173,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":529,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":109,"org.easymock.tests2.NameTest.nameForMocksControl":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":175,"org.easymock.tests2.MockedExceptionTest.testMockedException":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":73,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":482,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":402,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":361,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":123,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":166,"org.easymock.tests.MockingTest.testNicePartialClassMocking":400,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":128,"org.easymock.tests2.CompareToTest.testCompareEqual":548,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":490,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":171,"org.easymock.tests2.CaptureTest.testCaptureLast":247,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":407,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":528,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":42,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":28,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":198,"org.easymock.tests.MockingTest.testTwoMocks":398,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":525,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":436,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":365,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":202,"org.easymock.samples.ExampleTest.removeNonExistingDocument":56,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":413,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":178,"org.easymock.tests.UsageStrictMockTest.differentMethods":281,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":232,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":509,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":332,"org.easymock.tests2.ConstraintsToStringTest.andToString":538,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":101,"org.easymock.tests2.MockBuilderTest.testCreateMockString":170,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":75,"org.easymock.tests.UsageExpectAndThrowTest.floatType":359,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":70,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":36,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":66,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":84,"org.easymock.samples.ExampleTest.voteAgainstRemoval":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":316,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":136,"org.easymock.tests.LimitationsTest.privateConstructor":388,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":20,"org.easymock.tests2.UsageConstraintsTest.testNotNull":201,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":260,"org.easymock.tests2.UsageTest.defaultResetToNice":227,"org.easymock.samples.ExampleTest.voteAgainstRemovals":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":317,"org.easymock.tests.UsageVarargTest.differentLength":466,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":172,"org.easymock.tests2.CallbackTest.callback":34,"org.easymock.tests2.UsageConstraintsTest.equals":185,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":542,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":132,"org.easymock.tests.UsageTest.openCallCountByLastCall":481,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":183,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":433,"org.easymock.tests.UsageCallCountTest.tooFewCalls":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":356,"org.easymock.tests.UsageThrowableTest.throwCheckedException":257,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":489,"org.easymock.tests.MockingTest.testStrictClassMocking":396,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":473,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":177,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":27,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":418,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":218,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":37,"org.easymock.tests2.CompareToTest.testGreateOrEqual":549,"org.easymock.tests.ObjectMethodsTest.testHashCode":340,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":494,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":527,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":103,"org.easymock.tests2.NameTest.nameForNiceMock":97,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":522,"org.easymock.tests2.DependencyTest.testInterfaceMocking":210,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":493,"org.easymock.samples.ExampleTest.addDocument":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":86,"org.easymock.tests2.DelegateToTest.testStubDelegate":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":91,"org.easymock.tests2.AnswerTest.stubAnswer":142,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":279,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":503,"org.easymock.tests.UsageVarargTest.varargLongAccepted":468,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":314,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":454,"org.easymock.tests.UsageExpectAndReturnTest.floatType":438,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":65,"org.easymock.tests2.ConstraintsToStringTest.orToString":532,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":50,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":239,"org.easymock.tests.UsageThrowableTest.noUpperLimit":254,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":184,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":155,"org.easymock.tests2.SerializationTest.test":213,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":245,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":437,"org.easymock.tests2.UsageConstraintsTest.testSame":188,"org.easymock.samples.SupportTest.addDocument":59,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":504,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":512,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":76,"org.easymock.tests.GenericTest.testPackageScope":378,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":238,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":403,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":510,"org.easymock.tests2.NameTest.nameForMock":95,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":448,"org.easymock.tests2.UsageStrictMockTest.differentMethods":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":440,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":371,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":338,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":347,"org.easymock.tests2.MockedExceptionTest.testRealException":152,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":273,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":543,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":432,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":420,"org.easymock.tests2.NameTest.nameForStrictMock":96,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":162,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":32,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":127,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":156,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":44,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":333,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":160,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":516,"org.easymock.tests2.UsageConstraintsTest.lessThan":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":234,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":313,"org.easymock.tests2.CaptureTest.testCaptureRightOne":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":80,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":545,"org.easymock.tests2.UsageConstraintsTest.testOr":41,"org.easymock.tests.UsageRangeTest.combination":344,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":124,"org.easymock.tests.UsageTest.wrongArguments":16,"org.easymock.tests2.MockBuilderTest.testWithConstructor":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":77,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":441,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":306,"org.easymock.tests.UsageVarargTest.varargShortAccepted":467,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":334,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":302,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":530,"org.easymock.tests2.UsageConstraintsTest.cmpTo":190,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":141,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":520,"org.easymock.tests2.CompareToTest.testLessThan":546,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":308,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":226,"org.easymock.tests2.CaptureTest.testCaptureFromStub":250,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":410,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":161,"org.easymock.tests.UsageTest.unexpectedCallWithArray":15,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":526,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":300,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":25,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":450,"org.easymock.tests2.UsageConstraintsTest.constraints":39,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.samples.ExampleTest.addAndChangeDocument":57,"org.easymock.tests2.ConstraintsToStringTest.notToString":533,"org.easymock.tests.UsageStrictMockTest.testVerify":283,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":63,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":278,"org.easymock.tests2.CompareToTest.testGreateThan":547,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":475,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":393,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":442,"org.easymock.tests.LimitationsTest.abstractClass":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":394,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":116}}]
