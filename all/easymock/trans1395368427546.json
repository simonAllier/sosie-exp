[{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[0],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[18,19,20,21,22],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,1,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,3,4,5,6,7,8,9,10,11,12,13,14,15,16,215,216,217,218,219,220,221,222,223,17,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[41,52,54,58,67,69,70,71,72,73,74,102,119,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,149,228,235,257],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"e":"e"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[267,217,218,219],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[268,269,270],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[252,271,272],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[183,184,186,188,1,190,200,205,3,5,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[245,273],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[274],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:70","failures":[161,162,263,264],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[186,190,200,205],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,276,277,278,279,280,281,36,282,37,38,39,40,41,42,283,284,285,286,287,288,43,289,290,45,46,47,48,49,51,52,54,55,291,56,57,58,59,60,61,62,63,67,68,69,70,71,72,73,74,292,293,294,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,295,296,297,298,299,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,151,300,301,302,303,156,157,158,159,160,161,162,163,164,304,305,306,307,181,182,183,184,185,186,187,188,1,189,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,308,208,209,210,211,212,213,3,4,5,6,7,8,9,10,11,12,13,14,15,16,215,217,218,219,221,222,223,224,309,310,311,312,313,225,314,315,316,228,229,230,231,232,233,234,235,236,237,238,239,240,317,241,244,245,273,246,247,248,249,318,319,250,320,251,252,254,321,322,323,324,256,257,258,325,326,272,327,259,260,261,262,263,264,265],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[183,184,185,186,187,188,1,189,190,191,200,201,205,206,3,4,5,6,13,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[328],"status":-1,"binaryOperator":"(int <= int)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":184,"org.easymock.tests2.UsageTest.argumentsOrdered":238,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":54,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":40,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":233,"org.easymock.tests2.StubTest.stubWithReturnValue":257,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":204,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":85,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":25,"org.easymock.tests2.SerializationTest.testAllMockedMethod":219,"org.easymock.tests2.DelegateToTest.testReturnException":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":38,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":167,"org.easymock.tests.MockingTest.testPartialClassMocking":292,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":266,"org.easymock.samples.SupportTest.voteForRemovals":28,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":53,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":271,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":135,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":123,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":168,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":242,"org.easymock.tests.UsageExpectAndThrowTest.object":133,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":216,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":201,"org.easymock.tests2.DelegateToTest.testWrongClass":223,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":144,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":145,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":189,"org.easymock.tests2.UsageTest.wrongArguments":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":116,"org.easymock.tests.UsageStrictMockTest.range":161,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":302,"org.easymock.samples.ExampleTest.answerVsDelegate":30,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":176,"org.easymock.tests2.UsageConstraintsTest.testNull":186,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":226,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":178,"org.easymock.tests2.CaptureTest.testPrimitive":6,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":120,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":59,"org.easymock.tests.UsageTest.moreThanOneArgument":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":142,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":47,"org.easymock.tests2.CaptureTest.testCaptureNone":11,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":166,"org.easymock.tests.UsageUnorderedTest.message":43,"org.easymock.tests.UsageVerifyTest.twoReturns":103,"org.easymock.tests.UsageVarargTest.varargByteAccepted":112,"org.easymock.tests2.ThreadingTest.testThreadSafe":209,"org.easymock.tests.UsageTest.argumentsOrdered":60,"org.easymock.tests.UsageVarargTest.varargIntAccepted":106,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":288,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests2.CaptureTest.testCapture_2617107":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":96,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":119,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":314,"org.easymock.tests2.UsageConstraintsTest.any":191,"org.easymock.tests2.StubTest.stub":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":100,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":39,"org.easymock.tests.UsageExpectAndThrowTest.longType":126,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":268,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":262,"org.easymock.tests2.SerializationTest.testClass":217,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":208,"org.easymock.tests.LimitationsTest.mockNativeMethod":282,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":214,"org.easymock.tests2.AnswerTest.answer":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":95,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":21,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":312,"org.easymock.tests2.CaptureTest.testAnd":3,"org.easymock.tests2.UsageTest.strictResetToDefault":229,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":265,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":252,"org.easymock.tests2.NameTest.nameForMocksControl":327,"org.easymock.tests2.MockedExceptionTest.testMockedException":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":46,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":173,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":58,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":328,"org.easymock.tests2.DelegateToTest.testDelegate":224,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":294,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":127,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":248,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":227,"org.easymock.tests.MockingTest.testNicePartialClassMocking":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":138,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":320,"org.easymock.tests2.CompareToTest.testNotComparable":0,"org.easymock.tests2.CaptureTest.testCaptureLast":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":41,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":122,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":324,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":280,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":202,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":121,"org.easymock.tests2.CaptureTest.testCapture1_2446744":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":136,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":310,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":131,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":237,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":206,"org.easymock.tests.UsageThrowableTest.throwError":67,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":289,"org.easymock.tests.UsageStrictMockTest.differentMethods":162,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":211,"org.easymock.tests2.MockBuilderTest.testCreateMockString":316,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":49,"org.easymock.tests.UsageExpectAndThrowTest.floatType":125,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":197,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":244,"org.easymock.tests.UsageVerifyTest.twoThrows":102,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":97,"org.easymock.samples.ExampleTest.voteAgainstRemoval":32,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":165,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":254,"org.easymock.tests2.UsageTest.niceToStrict":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":124,"org.easymock.tests2.UsageConstraintsTest.testNotNull":205,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":304,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":74,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":225,"org.easymock.tests2.UsageTest.defaultResetToNice":236,"org.easymock.samples.ExampleTest.voteAgainstRemovals":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":20,"org.easymock.tests.UsageVarargTest.differentLength":109,"org.easymock.tests2.CallbackTest.callback":258,"org.easymock.tests.UsageTest.openCallCountByLastCall":57,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":132,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":174,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":181,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":118,"org.easymock.tests.UsageCallCountTest.tooFewCalls":286,"org.easymock.tests.UsageOverloadedMethodTest.overloading":51,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":195,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":87,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":50,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":269,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":194,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":303,"org.easymock.tests.UsageThrowableTest.throwCheckedException":71,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":36,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":140,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":278,"org.easymock.tests2.CaptureTest.testCaptureAll":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":323,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":322,"org.easymock.tests2.UsageConstraintsTest.testMatches":196,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":273,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":48,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":44,"org.easymock.samples.ExampleTest.voteForRemovals":34,"org.easymock.tests2.NameTest.nameForNiceMock":272,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":213,"org.easymock.tests.UsageVarargTest.allKinds":114,"org.easymock.tests2.DependencyTest.testInterfaceMocking":215,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":279,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.samples.ExampleTest.addDocument":33,"org.easymock.tests2.DelegateToTest.testStubDelegate":222,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":73,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":259,"org.easymock.tests2.AnswerTest.stubAnswer":245,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":42,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":159,"org.easymock.tests2.UsageConstraintsTest.greaterThan":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":297,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":255,"org.easymock.tests.UsageVarargTest.varargLongAccepted":111,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":163,"org.easymock.samples.ExampleTest.voteForRemoval":31,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":210,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":94,"org.easymock.tests.UsageExpectAndReturnTest.floatType":78,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":317,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":199,"org.easymock.tests.UsageThrowableTest.noUpperLimit":68,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":150,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":290,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":228,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":182,"org.easymock.tests2.SerializationTest.test":218,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":8,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":171,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":77,"org.easymock.tests2.UsageConstraintsTest.testSame":187,"org.easymock.samples.SupportTest.addDocument":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":37,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":220,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":172,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":240,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":152,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":83,"org.easymock.tests.GenericTest.testPackageScope":281,"org.easymock.tests2.UsageTest.moreThanOneArgument":230,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":212,"org.easymock.tests2.CaptureTest.testCapture2_2446744":15,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":22,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":113,"org.easymock.tests2.NameTest.nameForMock":325,"org.easymock.tests.UsageExpectAndReturnTest.longType":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":276,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":88,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":141,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":203,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":143,"org.easymock.tests2.UsageStrictMockTest.differentMethods":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":45,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":80,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":299,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":285,"org.easymock.tests2.MockedExceptionTest.testRealException":307,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":84,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":128,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":117,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":321,"org.easymock.tests2.NameTest.nameForStrictMock":326,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":284,"org.easymock.tests2.UsageConstraintsTest.testContains":193,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":306,"org.easymock.tests2.UsageConstraintsTest.testFind":185,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":52,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":246,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":250,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":247,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":156,"org.easymock.tests.UsageExpectAndReturnTest.object":86,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":200,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":251,"org.easymock.tests2.UsageStrictMockTest.range":263,"org.easymock.tests2.UsageConstraintsTest.lessThan":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":177,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":108,"org.easymock.tests.UsageTest.exactCallCountByLastCall":61,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":19,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":170,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.UsageConstraintsTest.testOr":188,"org.easymock.tests.UsageRangeTest.combination":296,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":249,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":92,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":104,"org.easymock.tests.UsageTest.wrongArguments":56,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":148,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":18,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":65,"org.easymock.tests.UsageVarargTest.varargShortAccepted":110,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":146,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":309,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":308,"org.easymock.tests2.UsageConstraintsTest.cmpTo":192,"org.easymock.tests.UsageVarargTest.varargCharAccepted":107,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":274,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":260,"org.easymock.tests2.UsageTest.openCallCountByLastCall":234,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":235,"org.easymock.tests.DefaultClassInstantiatorTest.object":75,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":180,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":64,"org.easymock.tests2.CaptureTest.testCaptureFromStub":14,"org.easymock.tests.UsageTest.unexpectedCallWithArray":291,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":130,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":70,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":158,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":287,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":90,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":253,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":160,"org.easymock.tests2.UsageConstraintsTest.constraints":183,"org.easymock.samples.ExampleTest.addAndChangeDocument":35,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":129,"org.easymock.tests.CapturesMatcherTest.test":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":93,"org.easymock.tests.UsageStrictMockTest.testVerify":164,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":153,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":26,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":277,"org.easymock.tests2.UsageTest.resumeIfFailure":239,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":99,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":151,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":175}}]
