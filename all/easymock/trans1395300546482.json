[{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,189,190,190,191,192,193,194,195,196,197,198,7,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,8,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,1,2,3,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[256],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[16,17,20,21,334,335,78,83,90,91,156,159,198,203,204,308],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,353,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,354,64,65,355,356,357,66,67,358,68,359,360,361,69,70,71,72,73,74,75,76,362,77,78,79,80,81,363,82,364,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,112,113,114,115,116,117,118,119,120,121,122,123,124,387,125,126,388,389,127,128,129,130,131,132,390,391,133,392,134,135,136,137,138,139,140,141,142,143,144,145,146,4,393,394,395,5,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,147,148,149,150,421,151,152,153,422,423,154,155,156,157,158,159,160,161,162,163,164,424,425,426,427,428,429,430,431,432,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,7,199,200,201,202,203,204,205,206,207,208,433,434,209,210,211,212,435,436,213,214,215,437,438,216,217,218,219,220,221,222,223,224,439,225,440,441,226,227,228,229,442,443,230,231,232,233,444,234,235,236,237,238,239,445,240,241,242,8,243,244,245,246,247,248,249,250,251,252,253,254,255,6,446,447,448,449,256,450,451,257,258,259,260,261,262,263,264,265,266,267,268,452,269,270,453,271,272,273,274,275,454,455,456,457,458,276,459,460,461,462,463,464,465,277,278,279,466,280,1,2,3,281,467,282,283,284,285,286,287,288,289,290,291,292,293,294,468,295,296,297,298,469,470,471,472,473,474,475,476,477,299,478,479,300,480,481,482,483,484,485,486,487,488,301,489,490,491,492,493,302,494,495,496,497,498,499,500,303,501,502,503,504,505,506,304,305,306,307,308,309,310,311,312,507,313,314,315,316,508,317,318,319,509,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[232,233,234,235,236,237,238,239,445,240,248,249,253,254,320,321,322,323,330,331],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,126,131,133,398,405,409,413,414,415,154,155,156,157,158,159,160,161,162,163,164,424,429,430,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,191,192,193,194,195,196,197,198,7,199,200,201,202,203,204,205,206,208,209,211,212,214,216,217,218,219,220,221,222,223,225,227,228,229,230,231,232,233,234,235,236,237,238,239,445,240,241,242,8,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,266,268,269,270,271,272,273,274,275,276,277,278,279,280,1,2,3,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[14,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,65,76,81,86,87,90,112,114,115,116,117,118,119,127,128,129,130,131,132,195,201,264,265,266,267,312],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[510,511,512,513,514,515,467],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[439,446,448,449,453],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"key"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[450,451],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[14,15,16,17,20,21,22,339,342,343,344,345,346,48,55,57,58,61,62,63,354,69,74,362,77,78,363,82,83,89,90,91,151,422,423,154,156,157,158,159,160,161,167,168,169,195,197,198,7,199,203,204,205,206,207,208,433,211,212,213,214,215,219,226,229,443,232,245,275,276,459,283,285,287,288,290,291,295,296,297,298,303,501,304,306,307,308,309,310,314,315,318,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[0,1,2,3],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[387,388,179,189,190,209,435,436,213,215,440,228,443,1,281,467,300,301],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[387],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[344,211],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[516,517,83,90,91,159,308],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[249],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[235,445,248,253],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[66,67,68,318,509],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[387,388,179,189,189,190,190,518,519,209,510,435,436,213,520,215,440,228,443,1,281,467,521,300,301],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"position":"org.easymock.internal.Range:40","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,353,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,354,64,65,355,356,357,66,67,358,68,359,360,361,69,70,71,72,73,74,75,76,362,77,78,79,80,81,363,82,364,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,387,125,126,388,389,127,128,129,130,131,132,390,391,133,392,134,135,136,137,138,139,140,141,142,143,144,145,522,146,4,393,394,395,5,523,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,147,148,149,150,421,151,152,153,422,423,154,155,156,157,158,159,160,161,162,163,164,424,425,426,427,428,429,430,431,432,524,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,7,199,200,201,202,203,204,205,206,207,518,208,433,519,434,209,210,211,510,212,435,436,213,214,520,215,437,438,216,217,218,219,220,221,222,223,224,439,225,440,441,226,227,228,229,442,443,230,231,232,233,444,234,235,236,237,238,239,445,240,241,242,8,243,244,245,246,247,248,249,250,251,252,253,254,255,256,450,451,257,258,259,260,261,262,263,264,265,266,267,268,452,269,270,271,272,273,274,275,454,455,456,457,458,276,459,460,461,462,463,464,465,277,278,279,466,280,1,2,3,281,467,521,282,283,284,285,286,287,288,289,290,291,292,293,294,468,295,296,297,298,469,470,471,525,472,473,474,475,476,477,299,478,479,300,480,481,482,483,484,485,486,487,488,301,489,490,491,492,493,302,494,495,496,497,498,499,500,303,501,502,503,504,505,506,304,305,306,307,308,309,310,311,312,507,313,314,315,316,508,317,318,319,509,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[233],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"position":"org.easymock.internal.MocksControl:190","failures":[21,69,80,83,90,112,113,115,116,117,118,119,154,159,160,7,199,204,214,219,228,233,238,239,240,8,248,249,250,252,275,283,285,287,288,291,292,293,304,308,309,330],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":233,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":14,"org.easymock.tests2.UsageTest.argumentsOrdered":204,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":407,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":199,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":180,"org.easymock.tests2.DelegateToTest.testReturnException":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":128,"org.easymock.tests.MockingTest.testPartialClassMocking":66,"org.easymock.tests.MockClassControlTest.testToString":167,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":468,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":337,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":483,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":23,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":300,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":217,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":386,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":511,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":84,"org.easymock.tests2.UsageTest.wrongArguments":198,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":506,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":149,"org.easymock.samples.ExampleTest.answerVsDelegate":182,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":344,"org.easymock.tests2.UsageConstraintsTest.testNull":235,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":360,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":221,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":172,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":291,"org.easymock.tests2.CaptureTest.testPrimitive":323,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":88,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":42,"org.easymock.tests.UsageTest.moreThanOneArgument":15,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":11,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":428,"org.easymock.tests.UsageTest.argumentsOrdered":21,"org.easymock.tests.UsageVarargTest.varargIntAccepted":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":515,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":207,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":471,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":463,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":177,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":370,"org.easymock.tests.ReplayStateInvalidUsageTest.times":142,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":303,"org.easymock.tests2.DependencyTest.testClassMocking":437,"org.easymock.tests2.AnswerTest.answer":256,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":414,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":263,"org.easymock.tests2.CaptureTest.testAnd":320,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":341,"org.easymock.tests2.UsageTest.strictResetToDefault":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":519,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":10,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":286,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":432,"org.easymock.tests2.DelegateToTest.testDelegate":280,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":38,"org.easymock.tests.LimitationsTest.mockFinalMethod":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":124,"org.easymock.tests2.DependencyTest.testClassMockingSupport":438,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":363,"org.easymock.tests2.CaptureTest.testCapture1_2446744":324,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":439,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":261,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":136,"org.easymock.tests.UsageThrowableTest.throwError":112,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":343,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":524,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":464,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":495,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":373,"org.easymock.samples.PartialClassMockTest.testGetArea":179,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":137,"org.easymock.tests.MockingTest.testInterfaceMocking":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":174,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":484,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":423,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":24,"org.easymock.tests2.UsageTest.niceToStrict":7,"org.easymock.tests2.ThreadingTest.testChangeDefault":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":209,"org.easymock.tests2.MockBuilderTest.testCreateMock":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":491,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":503,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":32,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":287,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":340,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":352,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":55,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":147,"org.easymock.tests.UsageOverloadedMethodTest.overloading":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":488,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":76,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":103,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":79,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":8,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":329,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":353,"org.easymock.tests.MockClassControlTest.testEquals":171,"org.easymock.tests2.EasyMockSupportClassTest.testAll":299,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":126,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":122,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":262,"org.easymock.tests2.CaptureTest.testCaptureAll":321,"org.easymock.tests.MockNameTest.defaultName":354,"org.easymock.tests2.UsageConstraintsTest.testMatches":244,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":12,"org.easymock.samples.ExampleTest.voteForRemovals":186,"org.easymock.tests.UsageVarargTest.allKinds":53,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":123,"org.easymock.samples.BasicClassMockTest.testPrintContent":192,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":118,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":132,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":523,"org.easymock.tests2.UsageConstraintsTest.greaterThan":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":478,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":70,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":229,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":374,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":396,"org.easymock.samples.ExampleTest.voteForRemoval":183,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":442,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":271,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":345,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":525,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":224,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":366,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":54,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":195,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":284,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":127,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":465,"org.easymock.tests2.CaptureTest.testCaptureFirst":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":285,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":206,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":99,"org.easymock.tests2.UsageTest.moreThanOneArgument":197,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":273,"org.easymock.tests2.CaptureTest.testCapture2_2446744":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":415,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":214,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":52,"org.easymock.tests.GenericTest.testBridgedEquals":389,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":62,"org.easymock.tests.UsageExpectAndReturnTest.longType":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":120,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":282,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":41,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":427,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":251,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":9,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":348,"org.easymock.tests.UsageCallCountTest.tooManyCalls":63,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":492,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":505,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":28,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":117,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":314,"org.easymock.tests.MockingTest.testNiceClassMocking":361,"org.easymock.tests.MockingTest.testClassMocking":356,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":56,"org.easymock.tests2.UsageConstraintsTest.testContains":242,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":266,"org.easymock.tests2.UsageConstraintsTest.testFind":234,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":81,"org.easymock.tests.MockTypeTest.fromEasyMockClass":342,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":154,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":269,"org.easymock.tests.UsageExpectAndReturnTest.object":102,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":504,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":290,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":512,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":47,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":153,"org.easymock.tests.UsageTest.exactCallCountByLastCall":22,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":429,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":336,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":467,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":108,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":43,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":75,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":455,"org.easymock.tests.MockClassControlTest.testHashCode":170,"org.easymock.tests2.EasyMockSupportTest.testVerify":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":486,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":430,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":73,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":260,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":334,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":507,"org.easymock.tests.UsageVarargTest.varargCharAccepted":46,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":522,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":420,"org.easymock.tests2.UsageTest.openCallCountByLastCall":200,"org.easymock.tests.DefaultClassInstantiatorTest.object":146,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":293,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":350,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":151,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":487,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":30,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":499,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":454,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":169,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":227,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":372,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":29,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":109,"org.easymock.tests.ReplayStateInvalidCallsTest.times":378,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":347,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":379,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":302,"org.easymock.tests2.UsageTest.resumeIfFailure":205,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":339,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":130,"org.easymock.tests2.StubTest.stubWithReturnValue":312,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":510,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":101,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":252,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":413,"org.easymock.samples.SupportTest.voteForRemovals":194,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":35,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":419,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":450,"org.easymock.tests.UsageExpectAndThrowTest.object":33,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":338,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":249,"org.easymock.tests2.DelegateToTest.testWrongClass":279,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":163,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":376,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":164,"org.easymock.samples.ConstructorCalledMockTest.testTax":189,"org.easymock.tests.UsageStrictMockTest.range":159,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":473,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":289,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":34,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":475,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":144,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":148,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":368,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":426,"org.easymock.tests2.CaptureTest.testCaptureNone":328,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":446,"org.easymock.tests.UsageUnorderedTest.message":83,"org.easymock.tests.UsageVerifyTest.twoReturns":91,"org.easymock.tests.UsageVarargTest.varargByteAccepted":51,"org.easymock.tests2.ThreadingTest.testThreadSafe":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":489,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":60,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":422,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":191,"org.easymock.tests2.CaptureTest.testCapture_2617107":322,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":417,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":87,"org.easymock.tests2.UsageConstraintsTest.any":240,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":141,"org.easymock.tests2.StubTest.stub":311,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":129,"org.easymock.tests.UsageExpectAndThrowTest.longType":26,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":395,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":140,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":307,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests.LimitationsTest.mockNativeMethod":133,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":388,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":498,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":384,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":310,"org.easymock.tests2.NameTest.nameForMocksControl":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":500,"org.easymock.tests2.MockedExceptionTest.testMockedException":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":479,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":19,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":452,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":27,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":68,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":218,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":212,"org.easymock.tests.MockingTest.testNicePartialClassMocking":67,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":223,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":496,"org.easymock.tests2.CaptureTest.testCaptureLast":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":82,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":238,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":319,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":383,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":250,"org.easymock.tests.MockingTest.testTwoMocks":357,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":380,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":509,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":31,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":203,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":254,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":449,"org.easymock.samples.ExampleTest.removeNonExistingDocument":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":502,"org.easymock.tests.UsageStrictMockTest.differentMethods":160,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":138,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":456,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":448,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":393,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":272,"org.easymock.tests2.MockBuilderTest.testCreateMockString":215,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":480,"org.easymock.tests.UsageExpectAndThrowTest.floatType":25,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":477,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":521,"org.easymock.tests.UsageVerifyTest.twoThrows":90,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":301,"org.easymock.samples.ExampleTest.voteAgainstRemoval":184,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":408,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":228,"org.easymock.tests.LimitationsTest.privateConstructor":391,"org.easymock.tests2.UsageConstraintsTest.testNotNull":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":119,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":264,"org.easymock.tests2.UsageTest.defaultResetToNice":202,"org.easymock.samples.ExampleTest.voteAgainstRemovals":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":107,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":497,"org.easymock.tests.UsageVarargTest.differentLength":48,"org.easymock.tests2.CallbackTest.callback":275,"org.easymock.tests2.UsageConstraintsTest.equals":444,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":440,"org.easymock.tests.UsageTest.openCallCountByLastCall":18,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":230,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":86,"org.easymock.tests.UsageCallCountTest.tooFewCalls":58,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":316,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":150,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":447,"org.easymock.tests.UsageThrowableTest.throwCheckedException":116,"org.easymock.tests.MockingTest.testStrictClassMocking":355,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":318,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":501,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":315,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":143,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":317,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":259,"org.easymock.tests.ObjectMethodsTest.testHashCode":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":514,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":274,"org.easymock.tests2.NameTest.nameForNiceMock":297,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":382,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":377,"org.easymock.tests2.DependencyTest.testInterfaceMocking":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":513,"org.easymock.samples.ExampleTest.addDocument":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":494,"org.easymock.tests2.DelegateToTest.testStubDelegate":278,"org.easymock.tests2.AnswerTest.stubAnswer":258,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":157,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":435,"org.easymock.tests.UsageVarargTest.varargLongAccepted":50,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":110,"org.easymock.tests.UsageExpectAndReturnTest.floatType":94,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":281,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":462,"org.easymock.tests.UsageThrowableTest.noUpperLimit":113,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":247,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":231,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":469,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":325,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":93,"org.easymock.tests2.UsageConstraintsTest.testSame":236,"org.easymock.samples.SupportTest.addDocument":193,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":508,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":367,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":481,"org.easymock.tests.GenericTest.testPackageScope":125,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":461,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":359,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":365,"org.easymock.tests2.NameTest.nameForMock":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":520,"org.easymock.tests2.UsageStrictMockTest.differentMethods":309,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":441,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":37,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":421,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":72,"org.easymock.tests2.MockedExceptionTest.testRealException":267,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":346,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":410,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":306,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":85,"org.easymock.tests2.NameTest.nameForStrictMock":296,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":434,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":268,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":222,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":472,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":516,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":394,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":248,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":208,"org.easymock.tests2.UsageStrictMockTest.range":308,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":371,"org.easymock.tests2.UsageConstraintsTest.lessThan":255,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":485,"org.easymock.tests2.CaptureTest.testCaptureRightOne":330,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":6,"org.easymock.tests2.UsageConstraintsTest.testOr":237,"org.easymock.tests.UsageRangeTest.combination":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":219,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests2.MockBuilderTest.testWithConstructor":518,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":482,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":105,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":5,"org.easymock.tests.UsageVarargTest.varargShortAccepted":49,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":61,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":385,"org.easymock.tests2.UsageConstraintsTest.cmpTo":241,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":451,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":400,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":201,"org.easymock.tests2.CaptureTest.testCaptureFromStub":331,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":135,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":433,"org.easymock.tests.UsageTest.unexpectedCallWithArray":16,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":381,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":156,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":59,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":106,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":158,"org.easymock.tests2.UsageConstraintsTest.constraints":232,"org.easymock.samples.ExampleTest.addAndChangeDocument":188,"org.easymock.tests.UsageStrictMockTest.testVerify":162,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":178,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":121,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":175,"org.easymock.tests.LimitationsTest.abstractClass":390,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":98,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":176,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":77,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":517,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":288}}]
