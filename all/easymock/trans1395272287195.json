[{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[1,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[40,41,42,43],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[44,45,46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[73,74,75,76,77,78,79,80,81,82,83,84,40,42,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,70,106,107,71,108,109,110,110,111,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"position":"org.easymock.internal.RecordState:315","failures":[126,127,128,98,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,0,185,1,6,186,187,188,7,8,189,190,191,192,193,194,195,196,2,197,10,198,199,3,200,201,202,73,77,78,79,80,82,84,40,41,42,85,86,203,87,88,89,91,92,94,204,205,206,207,208,209,210,211,212,213,214,215,216,11,217,12,218,219,220,221,222,223,224,13,225,226,227,228,229,230,126,127,128,98,129,99,231,232,233,234,47,235,236,100,101,102,103,19,130,237,238,48,239,240,241,131,242,49,50,243,244,245,246,247,248,31,249,250,251,104,105,70,106,252,107,71,108,109,110,110,111,111,38,112,39,253,254,255,256,257,258,259,260,261,262,263,132,264,265,266,133,134,267,268,269,270,271,272,135,273,274,275,276,277,278,279,280,281,282,113,114,283,284,285,286,287,136,288,289,137,138,290,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,116,291,292,293,294,295,296,297,298,299,5,300,301,302,303,119,52,304,305,306,307,308,309,310,53,311,312,54,313,314,315,120,159,316,55,56,317,160,57,58,318,161,162,163,164,165,166,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,59,60,344,345,346,347,348,122,123,124,349],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[350,351,352],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[353,40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[66,354,355,356,357,358,69],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[172,173,174,175,176,177,178,180,181,182,183,184,6,187,8,189,190,191,193,196,10,198,199,359,3,200,77,79,80,40,41,42,85,86,203,87,88,89,91,94,211,212,213,215,216,11,217,12,218,220,221,222,223,224,13,227,228,229,98,99,232,233,234,47,235,236,100,101,102,103,19,130,237,48,239,240,49,50,244,245,246,31,251,104,105,70,106,252,107,71,108,109,38,112,39,253,254,255,256,257,258,259,260,261,262,263,132,264,265,266,133,134,360,272,273,274,275,276,277,278,279,280,281,282,113,114,283,288,289,137,138,141,142,144,149,154,294,295,296,361,362,119,52,310,53,311,312,54,313,314,120,56,57,58,318,325,326,328,333,338,59,60,122,123,124,363,364,167,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[209,210],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[365,366,367,368,53,55],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[297,325,327,341,342,344],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[369,365,370,371,372,373,233,47,235,238,368,374,51,52,311,54,313,316,375,376,343,59,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[377],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[8,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[213,215,378,216,256,379,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[66,354,355,356,357,358,69],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":6,"org.easymock.tests2.UsageTest.argumentsOrdered":50,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":159,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":182,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":164,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":240,"org.easymock.tests2.StubTest.stubWithReturnValue":126,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":66,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":332,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":3,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":38,"org.easymock.tests2.SerializationTest.testAllMockedMethod":42,"org.easymock.tests2.DelegateToTest.testReturnException":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":162,"org.easymock.tests.MockingTest.testPartialClassMocking":122,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":366,"org.easymock.samples.SupportTest.voteForRemovals":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":29,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":151,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":43,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":101,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":139,"org.easymock.tests.UsageExpectAndThrowTest.object":149,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":229,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":354,"org.easymock.tests2.DelegateToTest.testWrongClass":215,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":297,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":298,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":288,"org.easymock.tests2.UsageTest.wrongArguments":48,"org.easymock.tests.UsageStrictMockTest.range":54,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":25,"org.easymock.samples.ConstructorCalledMockTest.testTax":110,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":321,"org.easymock.samples.ExampleTest.answerVsDelegate":256,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":179,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":104,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":118,"org.easymock.tests2.UsageConstraintsTest.testNull":187,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":79,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":181,"org.easymock.tests2.CaptureTest.testPrimitive":218,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":290,"org.easymock.tests.UsageTest.moreThanOneArgument":316,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":158,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":320,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":203,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":346,"org.easymock.tests2.CaptureTest.testCaptureNone":223,"org.easymock.tests.UsageUnorderedTest.message":52,"org.easymock.tests.UsageVerifyTest.twoReturns":60,"org.easymock.tests.UsageVarargTest.varargByteAccepted":280,"org.easymock.tests2.ThreadingTest.testThreadSafe":208,"org.easymock.tests.UsageTest.argumentsOrdered":58,"org.easymock.tests.UsageVarargTest.varargIntAccepted":275,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":296,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":108,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":267,"org.easymock.tests2.CaptureTest.testCapture_2617107":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":358,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":138,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":78,"org.easymock.tests2.UsageConstraintsTest.any":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":379,"org.easymock.tests2.StubTest.stub":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":271,"org.easymock.tests.UsageExpectAndThrowTest.longType":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":163,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":44,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":301,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":234,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":31,"org.easymock.tests2.SerializationTest.testClass":40,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":19,"org.easymock.tests.LimitationsTest.mockNativeMethod":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":342,"org.easymock.tests2.AnswerTest.answer":245,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":115,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":9,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":207,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":16,"org.easymock.tests2.CaptureTest.testAnd":11,"org.easymock.tests2.UsageTest.strictResetToDefault":237,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":92,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":65,"org.easymock.tests2.NameTest.nameForMocksControl":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":18,"org.easymock.tests2.MockedExceptionTest.testMockedException":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":176,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":160,"org.easymock.tests2.DelegateToTest.testDelegate":216,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":143,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":85,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":80,"org.easymock.tests.MockingTest.testNicePartialClassMocking":123,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":154,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":89,"org.easymock.tests2.CompareToTest.testNotComparable":125,"org.easymock.tests2.CaptureTest.testCaptureLast":222,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":165,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":376,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":71,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":308,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":199,"org.easymock.tests.MockingTest.testTwoMocks":121,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":375,"org.easymock.tests2.CaptureTest.testCapture1_2446744":219,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":323,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":152,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":205,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":147,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":49,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":201,"org.easymock.tests.UsageThrowableTest.throwError":262,"org.easymock.tests.UsageStrictMockTest.differentMethods":313,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":21,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":28,"org.easymock.tests2.ConstraintsToStringTest.andToString":372,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":210,"org.easymock.tests2.MockBuilderTest.testCreateMockString":84,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":348,"org.easymock.tests.UsageExpectAndThrowTest.floatType":141,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":196,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":246,"org.easymock.tests.UsageVerifyTest.twoThrows":59,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":102,"org.easymock.samples.PartialClassMockTest.testGetArea":112,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":5,"org.easymock.tests2.CompareToTest.testLessOrEqual":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":268,"org.easymock.samples.ExampleTest.voteAgainstRemoval":258,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":94,"org.easymock.tests2.UsageTest.niceToStrict":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":140,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":63,"org.easymock.tests2.UsageConstraintsTest.testNotNull":200,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":134,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":350,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":77,"org.easymock.tests2.UsageTest.defaultResetToNice":242,"org.easymock.tests2.MockBuilderTest.testCreateMock":81,"org.easymock.samples.ExampleTest.voteAgainstRemovals":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":338,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":15,"org.easymock.tests2.CallbackTest.callback":251,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":22,"org.easymock.tests.UsageTest.openCallCountByLastCall":317,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":365,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":148,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":177,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":137,"org.easymock.tests.UsageCallCountTest.tooFewCalls":294,"org.easymock.tests.UsageOverloadedMethodTest.overloading":272,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":194,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":167,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":334,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":106,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":193,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":45,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":322,"org.easymock.tests.UsageThrowableTest.throwCheckedException":265,"org.easymock.tests2.EasyMockSupportClassTest.testAll":100,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":114,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":368,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":156,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":306,"org.easymock.tests2.CaptureTest.testCaptureAll":217,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":206,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":107,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":136,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":20,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":302,"org.easymock.tests2.UsageConstraintsTest.testMatches":195,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":252,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":347,"org.easymock.samples.ExampleTest.voteForRemovals":260,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":357,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":212,"org.easymock.tests2.NameTest.nameForNiceMock":170,"org.easymock.tests.UsageVarargTest.allKinds":282,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":343,"org.easymock.tests2.DependencyTest.testInterfaceMocking":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":356,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":307,"org.easymock.samples.BasicClassMockTest.testPrintContent":109,"org.easymock.samples.ExampleTest.addDocument":259,"org.easymock.tests2.DelegateToTest.testStubDelegate":214,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":133,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":231,"org.easymock.tests2.AnswerTest.stubAnswer":247,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":166,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":311,"org.easymock.tests2.UsageConstraintsTest.greaterThan":2,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":284,"org.easymock.tests.UsageVarargTest.varargLongAccepted":279,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":95,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":314,"org.easymock.samples.ExampleTest.voteForRemoval":257,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":209,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":341,"org.easymock.tests.UsageExpectAndReturnTest.floatType":325,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":90,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":99,"org.easymock.tests2.ConstraintsToStringTest.orToString":369,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":111,"org.easymock.tests.UsageThrowableTest.noUpperLimit":263,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":35,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":120,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":130,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":185,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":220,"org.easymock.tests2.SerializationTest.test":41,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":353,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":174,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":324,"org.easymock.tests2.UsageConstraintsTest.testSame":188,"org.easymock.samples.SupportTest.addDocument":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":161,"org.easymock.tests2.CaptureTest.testCaptureFirst":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":175,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":244,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":61,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":330,"org.easymock.tests.GenericTest.testPackageScope":113,"org.easymock.tests2.UsageTest.moreThanOneArgument":238,"org.easymock.tests2.CaptureTest.testCapture2_2446744":226,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":211,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":82,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":34,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":281,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":361,"org.easymock.tests2.NameTest.nameForMock":168,"org.easymock.tests.UsageExpectAndReturnTest.longType":326,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":304,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":335,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":157,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":359,"org.easymock.tests2.UsageStrictMockTest.differentMethods":235,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":68,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":344,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":327,"org.easymock.tests.UsageCallCountTest.tooManyCalls":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":153,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":286,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":293,"org.easymock.tests2.MockedExceptionTest.testRealException":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":331,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":24,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":374,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":144,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":266,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":105,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":292,"org.easymock.tests2.UsageConstraintsTest.testContains":192,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":74,"org.easymock.tests2.NameTest.nameForStrictMock":169,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":98,"org.easymock.tests2.UsageConstraintsTest.testFind":186,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":135,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":352,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":88,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":309,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":250,"org.easymock.tests.UsageExpectAndReturnTest.object":333,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":23,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests2.UsageConstraintsTest.lessThan":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":355,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":30,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":377,"org.easymock.tests.UsageTest.exactCallCountByLastCall":318,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":287,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":173,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":283,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":339,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":273,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":86,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":364,"org.easymock.tests.UsageTest.wrongArguments":56,"org.easymock.tests2.MockBuilderTest.testWithConstructor":64,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":27,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":328,"org.easymock.tests2.EasyMockSupportTest.testVerify":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":363,"org.easymock.tests.UsageVarargTest.varargShortAccepted":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":204,"org.easymock.tests2.UsageConstraintsTest.cmpTo":191,"org.easymock.tests.UsageVarargTest.varargCharAccepted":276,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":232,"org.easymock.tests2.UsageTest.openCallCountByLastCall":241,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":351,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":183,"org.easymock.tests2.CaptureTest.testCaptureFromStub":225,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":299,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":76,"org.easymock.tests.UsageTest.unexpectedCallWithArray":55,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":51,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":146,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":264,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":295,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":17,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":337,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":312,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":93,"org.easymock.tests2.UsageConstraintsTest.constraints":1,"org.easymock.samples.ExampleTest.addAndChangeDocument":261,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":145,"org.easymock.tests2.ConstraintsToStringTest.notToString":370,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":340,"org.easymock.tests.UsageStrictMockTest.testVerify":315,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":39,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":371,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":305,"org.easymock.tests2.UsageTest.resumeIfFailure":243,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":269,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":329,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":117,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":270,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":178}}]
