[{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:69","sourceCode":"final java.util.Stack<org.easymock.IArgumentMatcher> java.util.Stack<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.get()","type":"CtLocalVariableImpl"},"failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[5,343,344,134,251,258,345,259,346,260,261,262,263,264,265,347,266,313,348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[5,15,16,343,344,349,350,42,43,44,45,351,106,352,132,133,134,353,354,355,158,356,162,163,164,165,166,167,168,169,170,357,358,359,360,361,362,253,363,364,254,365,255,366,367,368,369,370,371,372,256,373,374,375,376,377,257,258,259,346,378,260,261,262,263,264,265,266,267,268,270,272,307,308,310,311,312,313,314,379,315,316,317,318,380,381,382,383,339,340,341],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return this.java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[22,384,28,29,30,31,32,33,34,37,38,39,40,41,385,344,386,66,68,69,70,71,72,73,100,103,104,105,123,125,126,129,130,131,161,164,165,166,171,387,388,192,201,205,209,215,216,218,219,220,221,225,226,227,228,229,231,232,233,234,235,259,262,264,269,272,281,296,308,318,319,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"name"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[4,5,7,8,9,10,12,29,30,39,40,41,43,44,45,48,49,51,56,61,69,71,72,76,77,78,79,82,83,99,100,101,102,103,104,111,113,114,115,116,117,118,132,135,136,140,141,143,148,153,158,159,160,161,174,176,177,178,179,180,181,192,200,201,202,203,204,205,206,207,208,209,210,211,213,214,216,217,220,224,228,231,233,234,236,241,246,251,252,254,255,256,257,259,260,262,263,265,267,268,269,270,271,272,273,277,278,282,283,284,285,287,288,290,291,293,294,296,297,299,300,301,302,303,304,307,308,309,310,311,312,314,316,317,318,319,320,321,322,323,324,327,328,329,330,333,334,335,337,338,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[389,390,391,32,33,34,37,38,68,218,219,225,226,392,393,394,395],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,14,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,87,95,96,97,98,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,174,175,176,177,178,179,180,181,187,188,189,190,191,192,193,194,195,196,197,198,199,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,246,247,248,249,250,251,252,253,258,260,261,265,266,396,267,268,269,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,314,315,317,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[397,398,399],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type","org.easymock.MockType.NICE":"type"}},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[1,1,2,2,69,76,78,79,82,113,114,115,116,117,159,160,187,188,189,190,191,199,231,279,280,283,284,285,286,292,294,295,297,298,304,305,306,331],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[360,400,401],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,32,402,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,69,72,73,74,76,78,79,82,95,96,97,98,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,175,176,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,220,221,224,227,230,231,234,235,236,237,238,239,240,241,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,267,268,269,270,271,272,273,274,275,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,309,310,311,312,314,315,317,319,320,321,322,323,325,326,327,328,329,330,333,334,335,336,338,339,340,341,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[396],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[403],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[325,326,327,329,420,333],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[281,282,284,286,287,289,299,304,320,322,330],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[390,421,422,28,29,30,32,40,41,69,71,72,100,103,104,105,161,218,231,233,234,423,392,424,425,426,427],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[428],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[4,5,7,8,9,10,11,12,13,28,29,30,31,32,33,35,36,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,71,72,73,76,77,78,79,82,83,104,105,113,114,115,116,117,118,132,133,135,136,137,138,158,159,160,174,175,176,177,178,179,180,181,182,192,193,194,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,220,221,222,223,224,225,227,228,229,231,232,233,234,235,236,237,241,245,251,252,253,254,255,256,257,259,260,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,327,328,329,330,332,333,334,336,341],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[29,31,36,77,80,81,102,107,108,109,110,111,112,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,174,176,177,178,179,180,181,199,216,223,339,340,341,342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[28,71,72,233,234],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[308,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","typeParameterMap":"typeParameterMap","candidateMethod":"bridgeMethod","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[300],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":282,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":31,"org.easymock.tests2.UsageTest.argumentsOrdered":226,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":210,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":221,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":6,"org.easymock.tests2.DelegateToTest.testReturnException":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":108,"org.easymock.tests.MockingTest.testPartialClassMocking":43,"org.easymock.tests.MockClassControlTest.testToString":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":381,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":138,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":255,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":214,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":78,"org.easymock.tests2.UsageTest.wrongArguments":219,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":419,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":97,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":344,"org.easymock.tests2.UsageConstraintsTest.testNull":284,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":310,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":169,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":209,"org.easymock.tests2.CaptureTest.testPrimitive":323,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":82,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":157,"org.easymock.tests.UsageTest.moreThanOneArgument":32,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":309,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":189,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":182,"org.easymock.tests.UsageTest.argumentsOrdered":38,"org.easymock.tests.UsageVarargTest.varargIntAccepted":19,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":113,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":410,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":117,"org.easymock.tests.ReplayStateInvalidUsageTest.times":91,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":334,"org.easymock.tests2.AnswerTest.answer":241,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":250,"org.easymock.tests2.CaptureTest.testAnd":320,"org.easymock.tests2.UsageTest.strictResetToDefault":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":204,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":186,"org.easymock.tests2.DelegateToTest.testDelegate":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":153,"org.easymock.tests.LimitationsTest.mockFinalMethod":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":122,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":40,"org.easymock.tests2.CaptureTest.testCapture1_2446744":324,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":151,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":248,"org.easymock.tests.UsageThrowableTest.throwError":174,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":85,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":411,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":191,"org.easymock.samples.PartialClassMockTest.testGetArea":5,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":114,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":388,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":139,"org.easymock.tests2.UsageTest.niceToStrict":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":369,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":260,"org.easymock.tests2.MockBuilderTest.testCreateMock":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":375,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":416,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":392,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":147,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":205,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":399,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":95,"org.easymock.tests.UsageOverloadedMethodTest.overloading":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":377,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":102,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":294,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":57,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":400,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":293,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":329,"org.easymock.tests.MockClassControlTest.testEquals":168,"org.easymock.tests2.EasyMockSupportClassTest.testAll":254,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":133,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":393,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":120,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":249,"org.easymock.tests2.CaptureTest.testCaptureAll":321,"org.easymock.tests.MockNameTest.defaultName":384,"org.easymock.tests2.UsageConstraintsTest.testMatches":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":190,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":83,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests.UsageVarargTest.allKinds":27,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":28,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":121,"org.easymock.samples.BasicClassMockTest.testPrintContent":16,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":180,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":112,"org.easymock.tests2.UsageConstraintsTest.greaterThan":297,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":193,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":318,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":362,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":275,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":380,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":313,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":106,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":202,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":107,"org.easymock.tests2.CaptureTest.testCaptureFirst":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":203,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":228,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":105,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":53,"org.easymock.tests2.UsageTest.moreThanOneArgument":218,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":277,"org.easymock.tests2.CaptureTest.testCapture2_2446744":332,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":265,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":26,"org.easymock.tests.GenericTest.testBridgedEquals":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":130,"org.easymock.tests.UsageExpectAndReturnTest.longType":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":118,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":156,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":347,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":302,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":187,"org.easymock.tests.UsageCallCountTest.tooManyCalls":131,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":418,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":143,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":179,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":268,"org.easymock.tests.MockingTest.testNiceClassMocking":351,"org.easymock.tests.MockingTest.testClassMocking":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":124,"org.easymock.tests2.UsageConstraintsTest.testContains":292,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":345,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":341,"org.easymock.tests2.UsageConstraintsTest.testFind":283,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":137,"org.easymock.tests.MockTypeTest.fromEasyMockClass":385,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":66,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":197,"org.easymock.tests.UsageExpectAndReturnTest.object":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":208,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":21,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":173,"org.easymock.tests.UsageTest.exactCallCountByLastCall":39,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":76,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":183,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":391,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":17,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":62,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":101,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests.MockClassControlTest.testHashCode":167,"org.easymock.tests2.EasyMockSupportTest.testVerify":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":371,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":184,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":398,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":99,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":247,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":396,"org.easymock.tests.UsageVarargTest.varargCharAccepted":20,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":230,"org.easymock.tests2.UsageTest.openCallCountByLastCall":222,"org.easymock.tests.DefaultClassInstantiatorTest.object":170,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":211,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":397,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":171,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":422,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":372,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":177,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":166,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":316,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":63,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":425,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":257,"org.easymock.tests2.UsageTest.resumeIfFailure":227,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":110,"org.easymock.tests2.StubTest.stubWithReturnValue":199,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":55,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":303,"org.easymock.tests2.SerializationTest.testAllMockedMethod":253,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":394,"org.easymock.samples.SupportTest.voteForRemovals":4,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":352,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":150,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":242,"org.easymock.tests.UsageExpectAndThrowTest.object":148,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":300,"org.easymock.tests2.DelegateToTest.testWrongClass":337,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":160,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":71,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":149,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":262,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":96,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":389,"org.easymock.tests2.CaptureTest.testCaptureNone":328,"org.easymock.tests.UsageUnorderedTest.message":161,"org.easymock.tests.UsageVerifyTest.twoReturns":30,"org.easymock.tests.UsageVarargTest.varargByteAccepted":25,"org.easymock.tests2.ThreadingTest.testThreadSafe":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":373,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":128,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":387,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":15,"org.easymock.tests2.CaptureTest.testCapture_2617107":322,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":395,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":402,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":81,"org.easymock.tests2.UsageConstraintsTest.any":290,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":90,"org.easymock.tests2.StubTest.stub":198,"org.easymock.tests.UsageExpectAndThrowTest.longType":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":109,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":360,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":89,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":232,"org.easymock.tests2.SerializationTest.testClass":251,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":319,"org.easymock.tests.LimitationsTest.mockNativeMethod":158,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":134,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":413,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":235,"org.easymock.tests2.NameTest.nameForMocksControl":240,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":414,"org.easymock.tests2.MockedExceptionTest.testMockedException":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":365,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":36,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":403,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":142,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":45,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":307,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":263,"org.easymock.tests.MockingTest.testNicePartialClassMocking":44,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":312,"org.easymock.tests2.CompareToTest.testNotComparable":428,"org.easymock.tests2.CaptureTest.testCaptureLast":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":41,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":273,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":287,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":301,"org.easymock.tests.MockingTest.testTwoMocks":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":146,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":225,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":305,"org.easymock.samples.ExampleTest.removeNonExistingDocument":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":415,"org.easymock.tests.UsageStrictMockTest.differentMethods":72,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":87,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":358,"org.easymock.tests2.ConstraintsToStringTest.andToString":426,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":276,"org.easymock.tests2.MockBuilderTest.testCreateMockString":266,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":162,"org.easymock.tests.UsageExpectAndThrowTest.floatType":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":366,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":296,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":244,"org.easymock.tests.UsageVerifyTest.twoThrows":29,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":256,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":75,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":317,"org.easymock.tests.LimitationsTest.privateConstructor":355,"org.easymock.tests2.UsageConstraintsTest.testNotNull":304,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":181,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":339,"org.easymock.tests2.UsageTest.defaultResetToNice":224,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":61,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":412,"org.easymock.tests.UsageVarargTest.differentLength":22,"org.easymock.tests2.CallbackTest.callback":215,"org.easymock.tests.UsageTest.openCallCountByLastCall":35,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":80,"org.easymock.tests.UsageCallCountTest.tooFewCalls":126,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":270,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":98,"org.easymock.tests.UsageThrowableTest.throwCheckedException":178,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":390,"org.easymock.tests.MockingTest.testStrictClassMocking":349,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":77,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":272,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":269,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":92,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":271,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":246,"org.easymock.tests.ObjectMethodsTest.testHashCode":172,"org.easymock.tests2.NameTest.nameForNiceMock":239,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":278,"org.easymock.tests2.DependencyTest.testInterfaceMocking":213,"org.easymock.samples.ExampleTest.addDocument":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":374,"org.easymock.tests2.DelegateToTest.testStubDelegate":336,"org.easymock.tests2.AnswerTest.stubAnswer":245,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":69,"org.easymock.tests.UsageVarargTest.varargLongAccepted":24,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":73,"org.easymock.tests.UsageExpectAndReturnTest.floatType":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":64,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":236,"org.easymock.tests2.ConstraintsToStringTest.orToString":423,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":409,"org.easymock.tests.UsageThrowableTest.noUpperLimit":175,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":103,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":298,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":280,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":382,"org.easymock.tests2.SerializationTest.test":252,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":325,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":401,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":357,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":47,"org.easymock.tests2.UsageConstraintsTest.testSame":285,"org.easymock.samples.SupportTest.addDocument":3,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":367,"org.easymock.tests.GenericTest.testPackageScope":132,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":185,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":408,"org.easymock.tests2.NameTest.nameForMock":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":58,"org.easymock.tests2.UsageStrictMockTest.differentMethods":234,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":379,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":152,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":195,"org.easymock.tests2.MockedExceptionTest.testRealException":342,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":386,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":421,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":79,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":94,"org.easymock.tests2.NameTest.nameForStrictMock":238,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":378,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":196,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":311,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":383,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":299,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":359,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":259,"org.easymock.tests2.UsageStrictMockTest.range":233,"org.easymock.tests2.UsageConstraintsTest.lessThan":306,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":406,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":201,"org.easymock.tests2.CaptureTest.testCaptureRightOne":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":370,"org.easymock.tests2.UsageConstraintsTest.testOr":286,"org.easymock.tests.UsageRangeTest.combination":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":308,"org.easymock.tests.UsageTest.wrongArguments":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":368,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":51,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":59,"org.easymock.tests.UsageVarargTest.varargShortAccepted":23,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":361,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":129,"org.easymock.tests2.UsageConstraintsTest.cmpTo":291,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":243,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":223,"org.easymock.tests2.CaptureTest.testCaptureFromStub":331,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":84,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":346,"org.easymock.tests.UsageTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":68,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":127,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":60,"org.easymock.tests2.CaptureTest.testCapture":420,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":70,"org.easymock.tests2.UsageConstraintsTest.constraints":281,"org.easymock.samples.ExampleTest.addAndChangeDocument":14,"org.easymock.tests2.ConstraintsToStringTest.notToString":424,"org.easymock.tests.UsageStrictMockTest.testVerify":74,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":0,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":119,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":115,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":52,"org.easymock.tests.LimitationsTest.abstractClass":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":116,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":104,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":206}}]
