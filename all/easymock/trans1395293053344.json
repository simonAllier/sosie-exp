[{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.RecordState:262","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:327","failures":[38,39,45,46],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[54,55,56,57,58,59,60,61],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[62,63,64,65,66,67,68,69,70],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,0,1,89,2,3,4,5,6,7,90,91,92,93,94,95,96,97,8,98,99,100,101,9,102,103,104,105,106,107,108,109,110,111,112,113,114,10,115,11,12,13,14,15,16,116,117,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,118,119,120,37,38,39,121,40,122,123,124,125,126,127,128,129,54,41,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,42,160,161,162,163,43,164,165,166,167,168,169,170,44,45,46,171,172,172,173,173,174,175,55,176,177,178,179,180,62,181,63,182,183,184,185,186,187,188,64,189,190,191,47,48,49,50,192,51,193,194,195,196,197,198,199,200,71,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,56,57,58,59,60,61,240,241,65,66,242,243,244,67,68,245,69,246,247,248,249,250,251,252,253,254,70,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,52,280,281,282,283,284,285,53,286,287,288,289,290,291,292,293,294,295,296,297,298,299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[103,300,301,161,302,303],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[304,226,227,305],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[83],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:218","failures":[72,114,172,173,174,306,202,307,226,265,308,309,269,271,274,275,293,310],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[311,295,298,299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:70","failures":[312,313,314,315,74,316,75,76,77,78,79,80,81,82,83,84,85,86,87,88,0,1,89,6,103,104,116,118,119,120,121,40,62,181,63,182,183,184,185,186,187,188,64,189,190,191,200,208,221,240,241,65,66,242,243,244,67,68,245,69,246,247,248,249,250,251,252,253,254,70,255,256,257,258,259,260,261,277,278,317,291,292],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[85,86,97,8,98,104,106,107,116,129,130,131,160,162,164,165,221,223,224,318,319,320,321,303,322,323,281,282,287,288],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[74,80,81,82,83,84,87,88,89,324,325,326,327,328,97,98,100,101,9,104,106,107,109,110,111,112,113,114,10,11,12,13,14,15,16,117,119,120,121,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,42,160,163,43,166,174,175,176,177,178,180,62,181,182,183,186,187,188,64,190,191,49,51,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,221,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,58,240,241,65,66,242,243,244,67,68,245,246,247,248,249,250,251,252,253,254,70,255,256,258,259,260,261,262,264,265,267,268,270,272,273,274,275,276,277,278,52,280,281,283,285,53,286,289,290,293,294,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[329,312,313,314,330,331,315,74,316,75,76,77,78,79,80,81,82,83,84,85,86,332,87,88,0,1,89,2,3,4,5,6,7,73,333,334,335,336,337,338,339,340,341,342,343,344,345,311,346,347,324,348,325,349,350,351,352,90,353,354,355,326,327,91,328,92,93,94,95,96,97,8,98,99,100,101,9,102,356,103,104,105,106,107,108,357,109,110,111,112,72,113,358,114,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,10,115,11,12,13,14,15,16,116,380,381,382,117,383,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,384,385,386,387,388,389,390,391,392,393,394,118,119,120,37,38,39,121,40,122,123,124,125,126,395,396,127,397,398,399,400,401,402,128,129,54,41,130,131,132,403,404,133,134,135,405,136,406,407,408,409,137,138,139,410,411,412,413,414,415,416,417,418,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,42,160,161,162,163,43,164,165,166,167,168,169,170,44,45,46,171,419,420,421,172,173,174,422,175,55,176,177,423,178,424,179,425,180,62,181,63,182,183,184,185,186,187,188,64,189,190,191,47,48,49,50,192,51,193,194,195,196,197,198,199,426,200,306,427,71,201,202,203,428,307,429,430,431,432,433,434,435,436,437,438,439,440,204,205,206,207,208,209,210,211,212,441,213,214,215,442,216,217,218,219,220,443,221,222,223,224,225,226,227,305,228,229,230,231,232,233,234,235,236,237,238,239,444,56,57,58,59,60,61,240,241,65,66,445,242,243,244,67,68,245,69,246,247,248,249,250,251,252,253,254,70,255,256,257,258,259,260,261,446,447,448,449,450,262,451,452,453,454,455,456,263,457,264,458,459,460,265,266,267,461,268,308,309,269,270,462,271,463,464,465,466,467,272,468,469,470,471,472,473,474,475,476,273,477,478,274,479,480,481,482,483,484,485,486,487,275,488,489,490,491,492,276,493,494,495,496,277,278,317,279,52,280,281,282,283,284,285,53,286,287,288,289,290,291,497,292,293,310,498,294,295,296,297,298,299],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[499,116],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[253,500],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[415,501],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[80,81,82,83,84,86,87,88,0,1,89,2,3,4,5,6,7,92,93,94,95,96,97,8,98,99,101,9,102,356,103,104,105,106,107,108,357,109,110,111,112,113,358,361,372,10,115,11,12,13,14,15,16,116,117,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,384,385,386,388,389,391,392,393,394,118,119,120,121,40,122,123,124,125,126,395,396,127,397,398,399,131,134,135,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,42,160,161,162,163,43,164,165,166,167,168,169,170,175,55,176,177,423,178,179,62,181,63,182,183,184,185,186,187,188,64,189,190,191,47,48,49,50,192,51,193,194,195,196,197,198,200,71,202,430,431,432,433,204,205,206,207,208,210,211,214,215,216,217,218,219,220,443,221,222,223,224,225,226,227,305,57,58,59,61,240,241,65,66,242,243,244,67,68,245,246,247,248,249,250,251,252,253,254,70,255,256,258,259,260,261,263,265,266,270,271,277,317,279,52,280,281,282,283,284,285,53,286,287,288,289,290,291,292,293,294,297,298,299],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.AssertionErrorWrapper:32","sourceCode":"return java.lang.AssertionError","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[459],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[6,343,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,44,45,46,51],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[293,502,503,504,505,506,507,508],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[253,500],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[415,509,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":66,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests2.UsageTest.argumentsOrdered":288,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":348,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":284,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":422,"org.easymock.tests2.DelegateToTest.testReturnException":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":3,"org.easymock.tests.MockingTest.testPartialClassMocking":134,"org.easymock.tests.MockClassControlTest.testToString":362,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":429,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":482,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":17,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":274,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":503,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":87,"org.easymock.tests2.UsageTest.wrongArguments":282,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":473,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":169,"org.easymock.samples.ExampleTest.answerVsDelegate":55,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":337,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":407,"org.easymock.tests2.UsageConstraintsTest.testNull":243,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":196,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":237,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":367,"org.easymock.tests2.CaptureTest.testPrimitive":182,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":89,"org.easymock.tests.UsageTest.moreThanOneArgument":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":36,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":124,"org.easymock.tests.UsageTest.argumentsOrdered":165,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":75,"org.easymock.tests.UsageVarargTest.varargIntAccepted":386,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":507,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":263,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":436,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":84,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":320,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":272,"org.easymock.tests.ReplayStateInvalidUsageTest.times":376,"org.easymock.tests2.DependencyTest.testClassMocking":495,"org.easymock.tests2.AnswerTest.answer":294,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":353,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":219,"org.easymock.tests2.CaptureTest.testAnd":62,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":334,"org.easymock.tests2.UsageTest.strictResetToDefault":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":459,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":123,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":111,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":232,"org.easymock.tests2.DelegateToTest.testDelegate":61,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":32,"org.easymock.tests.LimitationsTest.mockFinalMethod":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":96,"org.easymock.tests2.DependencyTest.testClassMockingSupport":496,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":85,"org.easymock.tests2.CaptureTest.testCapture1_2446744":183,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":217,"org.easymock.tests.UsageThrowableTest.throwError":10,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":370,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":336,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":456,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":409,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":494,"org.easymock.samples.PartialClassMockTest.testGetArea":174,"org.easymock.tests.MockingTest.testInterfaceMocking":405,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":81,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":483,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":18,"org.easymock.tests2.UsageTest.niceToStrict":283,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":265,"org.easymock.tests2.MockBuilderTest.testCreateMock":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":490,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":470,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":26,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":302,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":233,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":333,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":46,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":395,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":167,"org.easymock.tests.UsageOverloadedMethodTest.overloading":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":487,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":41,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":151,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":100,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":509,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":249,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":188,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":387,"org.easymock.tests2.EasyMockSupportClassTest.testAll":273,"org.easymock.tests.MockClassControlTest.testEquals":366,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":34,"org.easymock.tests2.CaptureTest.testCaptureAll":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":218,"org.easymock.tests.MockNameTest.defaultName":380,"org.easymock.tests2.UsageConstraintsTest.testMatches":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":125,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":368,"org.easymock.samples.ExampleTest.voteForRemovals":178,"org.easymock.tests.UsageVarargTest.allKinds":118,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":97,"org.easymock.samples.BasicClassMockTest.testPrintContent":421,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":95,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":15,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":7,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":508,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":417,"org.easymock.tests2.UsageConstraintsTest.greaterThan":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":477,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":110,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":203,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":418,"org.easymock.samples.ExampleTest.voteForRemoval":176,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":428,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":205,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":338,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":437,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":199,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":99,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":230,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":2,"org.easymock.tests2.CaptureTest.testCaptureFirst":191,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":231,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":290,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":132,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":147,"org.easymock.tests2.CaptureTest.testCapture2_2446744":190,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":207,"org.easymock.tests2.UsageTest.moreThanOneArgument":281,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":354,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":394,"org.easymock.tests.GenericTest.testBridgedEquals":359,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":401,"org.easymock.tests.UsageExpectAndReturnTest.longType":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":92,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":228,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":35,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":171,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":122,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":38,"org.easymock.tests.UsageCallCountTest.tooManyCalls":402,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":491,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":14,"org.easymock.tests.MockingTest.testNiceClassMocking":408,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":210,"org.easymock.tests.MockingTest.testClassMocking":404,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":396,"org.easymock.tests2.UsageConstraintsTest.testContains":248,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":49,"org.easymock.tests2.UsageConstraintsTest.testFind":242,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":9,"org.easymock.tests.MockTypeTest.fromEasyMockClass":335,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":102,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":292,"org.easymock.tests.UsageExpectAndReturnTest.object":150,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":200,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":504,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":389,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":314,"org.easymock.tests.UsageTest.exactCallCountByLastCall":166,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":76,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":315,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":310,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":384,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":156,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":54,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":447,"org.easymock.tests.MockClassControlTest.testHashCode":365,"org.easymock.tests2.EasyMockSupportTest.testVerify":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":485,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":77,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":128,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":216,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":317,"org.easymock.tests.UsageVarargTest.varargCharAccepted":388,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":410,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":328,"org.easymock.tests2.UsageTest.openCallCountByLastCall":285,"org.easymock.tests.DefaultClassInstantiatorTest.object":411,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":239,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":44,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":486,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":446,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":201,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":364,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":23,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":157,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":276,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":363,"org.easymock.tests2.UsageTest.resumeIfFailure":289,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":73,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":5,"org.easymock.tests2.StubTest.stubWithReturnValue":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":461,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":258,"org.easymock.tests2.SerializationTest.testAllMockedMethod":305,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":90,"org.easymock.samples.SupportTest.voteForRemovals":180,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":303,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":449,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":29,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":304,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":91,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":295,"org.easymock.tests.UsageExpectAndThrowTest.object":27,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":316,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":255,"org.easymock.tests2.DelegateToTest.testWrongClass":59,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":119,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":120,"org.easymock.samples.ConstructorCalledMockTest.testTax":172,"org.easymock.tests.UsageStrictMockTest.range":106,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":439,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":28,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":474,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":164,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":378,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":168,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":300,"org.easymock.tests2.CaptureTest.testCaptureNone":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":139,"org.easymock.tests.UsageUnorderedTest.message":116,"org.easymock.tests.UsageVerifyTest.twoReturns":98,"org.easymock.tests.UsageVarargTest.varargByteAccepted":393,"org.easymock.tests2.ThreadingTest.testThreadSafe":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":488,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":399,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":420,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":330,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":323,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":326,"org.easymock.tests2.UsageConstraintsTest.any":246,"org.easymock.tests2.StubTest.stub":192,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":375,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":4,"org.easymock.tests.UsageExpectAndThrowTest.longType":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":327,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":415,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":374,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":222,"org.easymock.tests2.SerializationTest.testClass":226,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":262,"org.easymock.tests.LimitationsTest.mockNativeMethod":117,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":159,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":114,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":465,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":225,"org.easymock.tests2.NameTest.nameForMocksControl":433,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":467,"org.easymock.tests2.MockedExceptionTest.testMockedException":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":478,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":43,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":497,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":136,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":21,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":268,"org.easymock.tests.MockingTest.testNicePartialClassMocking":135,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":502,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":463,"org.easymock.tests2.CaptureTest.testCaptureLast":186,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":86,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":68,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":215,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":256,"org.easymock.tests.MockingTest.testTwoMocks":133,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":25,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":287,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":260,"org.easymock.samples.ExampleTest.removeNonExistingDocument":424,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":469,"org.easymock.tests.UsageStrictMockTest.differentMethods":107,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":448,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":413,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":206,"org.easymock.tests2.ConstraintsToStringTest.andToString":321,"org.easymock.tests2.MockBuilderTest.testCreateMockString":271,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":479,"org.easymock.tests.UsageExpectAndThrowTest.floatType":19,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":476,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":297,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":498,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":275,"org.easymock.samples.ExampleTest.voteAgainstRemoval":177,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":325,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":202,"org.easymock.tests.LimitationsTest.privateConstructor":382,"org.easymock.tests2.UsageConstraintsTest.testNotNull":259,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":16,"org.easymock.tests2.UsageTest.defaultResetToNice":286,"org.easymock.samples.ExampleTest.voteAgainstRemovals":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":349,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":464,"org.easymock.tests.UsageVarargTest.differentLength":390,"org.easymock.tests2.CallbackTest.callback":279,"org.easymock.tests2.UsageConstraintsTest.equals":445,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":306,"org.easymock.tests.UsageTest.openCallCountByLastCall":163,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":240,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":0,"org.easymock.tests.UsageCallCountTest.tooFewCalls":397,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":170,"org.easymock.tests.UsageThrowableTest.throwCheckedException":13,"org.easymock.tests.MockingTest.testStrictClassMocking":403,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":301,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":40,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":214,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":468,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":211,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":377,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":213,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":299,"org.easymock.tests.ObjectMethodsTest.testHashCode":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":506,"org.easymock.tests2.NameTest.nameForNiceMock":432,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":208,"org.easymock.tests2.DependencyTest.testInterfaceMocking":277,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":505,"org.easymock.samples.ExampleTest.addDocument":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.DelegateToTest.testStubDelegate":58,"org.easymock.tests2.AnswerTest.stubAnswer":298,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":104,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":308,"org.easymock.tests.UsageVarargTest.varargLongAccepted":392,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":324,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":158,"org.easymock.tests.UsageExpectAndReturnTest.floatType":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":293,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":173,"org.easymock.tests2.ConstraintsToStringTest.orToString":318,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":454,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":130,"org.easymock.tests.UsageThrowableTest.noUpperLimit":115,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":254,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":241,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":434,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":184,"org.easymock.tests2.SerializationTest.test":227,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":501,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":141,"org.easymock.tests2.UsageConstraintsTest.testSame":244,"org.easymock.samples.SupportTest.addDocument":425,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":441,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":480,"org.easymock.tests.GenericTest.testPackageScope":113,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":453,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":406,"org.easymock.tests2.NameTest.nameForMock":430,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":152,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":462,"org.easymock.tests2.UsageStrictMockTest.differentMethods":224,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":427,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":31,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":329,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":112,"org.easymock.tests2.MockedExceptionTest.testRealException":50,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":339,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":350,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":88,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":379,"org.easymock.tests2.NameTest.nameForStrictMock":431,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":460,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":291,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":197,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":438,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":499,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":414,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":70,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":264,"org.easymock.tests2.UsageStrictMockTest.range":223,"org.easymock.tests2.UsageConstraintsTest.lessThan":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":450,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":484,"org.easymock.tests2.CaptureTest.testCaptureRightOne":64,"org.easymock.tests2.UsageConstraintsTest.testOr":67,"org.easymock.tests.UsageRangeTest.combination":109,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":194,"org.easymock.tests.UsageTest.wrongArguments":162,"org.easymock.tests2.MockBuilderTest.testWithConstructor":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":481,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":361,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":341,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":416,"org.easymock.tests.UsageVarargTest.varargShortAccepted":391,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":400,"org.easymock.tests2.UsageConstraintsTest.cmpTo":247,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":343,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests2.CaptureTest.testCaptureFromStub":189,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":369,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":458,"org.easymock.tests.UsageTest.unexpectedCallWithArray":161,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":103,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":154,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":105,"org.easymock.tests2.UsageConstraintsTest.constraints":65,"org.easymock.samples.ExampleTest.addAndChangeDocument":179,"org.easymock.tests2.ConstraintsToStringTest.notToString":319,"org.easymock.tests.UsageStrictMockTest.testVerify":357,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":419,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":356,"org.easymock.tests2.CompareToTest.testGreateThan":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":93,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":82,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":146,"org.easymock.tests.LimitationsTest.abstractClass":381,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":83,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":234}}]
