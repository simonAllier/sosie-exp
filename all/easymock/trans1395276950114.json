[{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockInvocationHandler:37","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[5,6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[9,10,11,12,13,14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[15,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[17,18,19,20,21,22],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[23,24,25,26,27,28,29,30,31,32,33,34,17,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[89,90],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[91,92,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[94,95,96,97],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append(((org.easymock.internal.ErrorMessage.getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","matches":"matches","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[116,11,117,14,118,119,71,120,121,122,15,123,124,125,126,127,128,129,130,78,131,132,133,86],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[23,136,137,138,24,139,140,25,27,32,17,44,50,18,141,142,143,144,19,145,146,147,148,149,150,151,152,153,154,155,156,157,20,158,159,160,161,162,163,61,61,62,62,164,165,166,135,167,168,169,170,171,172,173,174,175,176,177],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[178,102,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,63,64,196,197,198,199,200,65,66,201,202,203,204,94,205,206,207,208,209,210,95,211,212,213,214,137,215,67,68,69,70,216,217,218,116,219,220,221,9,10,11,117,12,222,223,224,14,153,225,1,226,2,227,228,229,230,118,231,232,233,119,234,235,134,236,237,238,3,239,240,241,242,243,4,244,245,246,22,247,163,248,249,110,91,250,92,251,252,253,254,255,256,257,258,259,260,71,261,72,73,262,263,264,114,265,266,267,268,269,270,271,272,115,273,274,275,120,121,276,277,278,279,280,281,282,283,122,15,123,124,125,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,168,308,74,309,75,310,311,76,77,312,313,314,315,316,317,318,319,320,321,322,323,126,127,128,129,130,78,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,131,132,356,357,358,359,360,361,362,363,364,133,365,366,367,368,369,370,371,372,373,374,375,16,170,82,83,84,376,377,378,379,380,381,382,383,384,385,386,387,6,7,8,388,389,390,391,392,393,394,395,396,397,398,85,86,399,87,88,400,401,402,403,404,405,406],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[239],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[407,408,409],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[248,384],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[218,219,222,2,227,118,231,233,240],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[248,384],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[410],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[411],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[178,23,179,136,180,181,182,183,184,187,188,189,190,191,192,193,194,195,63,64,196,197,198,199,200,65,66,201,202,203,204,94,205,206,207,208,209,210,95,211,212,213,214,137,138,24,139,215,140,25,27,32,17,44,50,216,217,18,142,144,19,145,146,147,148,150,218,116,219,220,221,9,10,11,117,12,222,223,224,14,153,154,225,155,156,157,20,158,159,160,161,162,1,226,2,227,228,229,230,118,231,232,119,234,235,134,236,237,238,3,239,240,241,242,243,4,244,245,246,22,247,163,248,249,250,92,251,253,254,255,256,257,258,259,260,71,261,72,73,262,263,264,114,265,266,267,268,269,270,272,115,61,62,164,165,166,120,121,276,277,278,279,280,281,282,122,15,123,124,125,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,168,308,74,309,75,310,311,76,77,312,317,318,319,320,321,322,323,126,127,128,129,130,78,169,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,348,349,350,351,352,353,354,355,131,132,361,362,363,364,133,365,366,367,368,369,370,371,372,373,374,375,16,170,171,82,83,84,376,377,378,379,380,381,383,384,387,388,389,390,391,392,393,395,396,412,412,397,398,85,86,399,87,88,400,175,176,177],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[23,179,136,413],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[23,179,136,180,181,182,183,184,187,188,189,190,192,193,194,195,63,64,196,197,198,199,200,65,66,201,202,214,138,24,140,25,27,67,68,69,70,216,217,18,144,19,148,150,414,218,116,219,220,221,9,10,11,117,12,222,223,224,14,153,154,225,155,156,157,158,159,161,1,226,2,227,228,229,230,118,231,232,119,234,235,134,236,237,238,3,239,240,241,242,4,244,245,246,22,247,163,248,250,92,251,253,254,255,256,257,258,259,260,71,261,72,73,262,265,266,267,268,269,270,272,120,121,277,278,279,280,281,282,122,15,123,124,125,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,168,308,74,309,75,310,311,76,77,312,316,415,317,318,319,320,126,127,128,129,130,78,416,169,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,131,132,361,362,363,364,133,365,366,367,368,369,370,372,373,374,375,16,170,171,173,82,83,84,376,377,378,379,380,386,388,389,390,391,392,393,394,395,396,397,398,85,86,399,87,88,400,401,175,176,177],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[218,219,222,2,227,118,231,233,240],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[244],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[178,102,194,63,64,196,197,65,66,201,202,204,205,207,208,210,95,214,138,24,140,25,67,68,69,70,18,142,143,145,146,147,148,150,154,159,162,21,2,238,249,110,259,71,261,72,73,262,135,284,285,167,286,287,308,74,309,75,76,77,312,316,317,318,321,322,323,78,325,346,347,359,360,417,371,418,419,420,82,83,84,382,385,386,387,393,397,85,86,399,87,88,400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[23,136,421,422,137,138,24,139,140,25,27,28,423,29,30,32,34,17,35,36,37,39,40,41,42,44,45,46,47,48,49,50,18,53,142,143,54,424,144,19,145,55,146,56,147,148,58,150,153,154,155,156,157,20,158,425,426,159,160,161,162,427,21,22,247,163,61,62,164,165,166,135,167,168,324,89,428,429,407,90,430,431,432,169,433,434,170,171,172,435,436,173,418,419,420,437,438,439,440,441,174,175,176,177,442],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[27,443,444,445,446,447,448,449],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[314,315,7,8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"position":"org.easymock.internal.MockBuilder:80","failures":[23,18,141,142,143,144,19,145,146,147,148,149,150,20,164,135,167,172],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if (int != int) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[89,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"length":"i","initArgs":"methodArgs","paramTypes":"methodTypes"}},{"position":"org.easymock.Capture:82","failures":[218,219,220,221,9,10,11,12,13,222,223,14],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":227,"org.easymock.tests2.UsageTest.argumentsOrdered":66,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":308,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":211,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":93,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":197,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":114,"org.easymock.tests2.DelegateToTest.testReturnException":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":362,"org.easymock.tests.MockingTest.testPartialClassMocking":175,"org.easymock.tests.MockClassControlTest.testToString":418,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":358,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":38,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":326,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":79,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":444,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":232,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":122,"org.easymock.tests2.UsageTest.wrongArguments":64,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":105,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":281,"org.easymock.samples.ExampleTest.answerVsDelegate":266,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":167,"org.easymock.tests2.UsageConstraintsTest.testNull":229,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":155,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":439,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":95,"org.easymock.tests2.CaptureTest.testPrimitive":220,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":125,"org.easymock.tests.UsageTest.moreThanOneArgument":74,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":345,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":378,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":402,"org.easymock.tests.UsageTest.argumentsOrdered":77,"org.easymock.tests.UsageVarargTest.varargIntAccepted":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":448,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":18,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":19,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":130,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":178,"org.easymock.tests2.AnswerTest.answer":184,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":233,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":183,"org.easymock.tests2.CaptureTest.testAnd":218,"org.easymock.tests2.UsageTest.strictResetToDefault":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":206,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":406,"org.easymock.tests2.DelegateToTest.testDelegate":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":341,"org.easymock.tests.LimitationsTest.mockFinalMethod":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":392,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":346,"org.easymock.tests2.CaptureTest.testCapture1_2446744":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":181,"org.easymock.tests.UsageThrowableTest.throwError":348,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":285,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":380,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":52,"org.easymock.samples.PartialClassMockTest.testGetArea":164,"org.easymock.tests2.CompareToTest.testLessOrEqual":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":274,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":39,"org.easymock.tests2.UsageTest.niceToStrict":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":327,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":144,"org.easymock.tests2.MockBuilderTest.testCreateMock":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":47,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":104,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":335,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":207,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":316,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":279,"org.easymock.tests.UsageOverloadedMethodTest.overloading":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":49,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":384,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":236,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":299,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":408,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":134,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":12,"org.easymock.tests.MockClassControlTest.testEquals":438,"org.easymock.tests2.EasyMockSupportClassTest.testAll":32,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":171,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":343,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":390,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":182,"org.easymock.tests2.CaptureTest.testCaptureAll":116,"org.easymock.tests.MockNameTest.defaultName":325,"org.easymock.tests2.UsageConstraintsTest.testMatches":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":379,"org.easymock.samples.ExampleTest.voteForRemovals":270,"org.easymock.tests.UsageVarargTest.allKinds":16,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":82,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":391,"org.easymock.samples.BasicClassMockTest.testPrintContent":166,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":354,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":111,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":365,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":449,"org.easymock.tests2.UsageConstraintsTest.greaterThan":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":33,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":394,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":162,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":430,"org.easymock.samples.ExampleTest.voteForRemoval":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":427,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":255,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":20,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":168,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":194,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":94,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":361,"org.easymock.tests2.CaptureTest.testCaptureFirst":14,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":205,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":202,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":295,"org.easymock.tests2.UsageTest.moreThanOneArgument":63,"org.easymock.tests2.CaptureTest.testCapture2_2446744":224,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":257,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":148,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":375,"org.easymock.tests.GenericTest.testBridgedEquals":435,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":322,"org.easymock.tests.UsageExpectAndReturnTest.longType":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":388,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":203,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":149,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":344,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":243,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":283,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":342,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":376,"org.easymock.tests.UsageCallCountTest.tooManyCalls":323,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":296,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":353,"org.easymock.tests.MockingTest.testNiceClassMocking":442,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":138,"org.easymock.tests.MockingTest.testClassMocking":441,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":415,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":141,"org.easymock.tests2.UsageConstraintsTest.testContains":235,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":163,"org.easymock.tests2.UsageConstraintsTest.testFind":228,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":278,"org.easymock.tests.MockTypeTest.fromEasyMockClass":284,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":397,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":193,"org.easymock.tests.UsageExpectAndReturnTest.object":298,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":210,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":445,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":370,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":97,"org.easymock.tests.UsageTest.exactCallCountByLastCall":312,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":120,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":403,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":28,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":304,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":366,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":383,"org.easymock.tests.MockClassControlTest.testHashCode":437,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":107,"org.easymock.tests2.EasyMockSupportTest.testVerify":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":41,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":404,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":7,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":381,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":180,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":414,"org.easymock.tests.UsageVarargTest.varargCharAccepted":369,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":260,"org.easymock.tests2.UsageTest.openCallCountByLastCall":198,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":212,"org.easymock.tests.DefaultClassInstantiatorTest.object":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":6,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":106,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":420,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":160,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":332,"org.easymock.tests.CapturesMatcherTest.test":412,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":313,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":50,"org.easymock.tests2.UsageTest.resumeIfFailure":201,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":364,"org.easymock.tests2.StubTest.stubWithReturnValue":217,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":55,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":297,"org.easymock.tests2.SerializationTest.testAllMockedMethod":136,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":356,"org.easymock.samples.SupportTest.voteForRemovals":264,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":434,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":338,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":413,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":357,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":185,"org.easymock.tests.UsageExpectAndThrowTest.object":336,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":241,"org.easymock.tests2.DelegateToTest.testWrongClass":251,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":132,"org.easymock.samples.ConstructorCalledMockTest.testTax":61,"org.easymock.tests.UsageStrictMockTest.range":87,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":337,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":29,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":280,"org.easymock.tests2.CaptureTest.testCaptureNone":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":275,"org.easymock.tests.UsageUnorderedTest.message":78,"org.easymock.tests.UsageVerifyTest.twoReturns":84,"org.easymock.tests.UsageVarargTest.varargByteAccepted":374,"org.easymock.tests2.ThreadingTest.testThreadSafe":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":45,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":320,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":165,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":360,"org.easymock.tests2.CaptureTest.testCapture_2617107":219,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":124,"org.easymock.tests2.UsageConstraintsTest.any":119,"org.easymock.tests2.StubTest.stub":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":315,"org.easymock.tests.UsageExpectAndThrowTest.longType":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":363,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":407,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":261,"org.easymock.tests2.SerializationTest.testClass":23,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":249,"org.easymock.tests.LimitationsTest.mockNativeMethod":169,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":307,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":100,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests2.NameTest.nameForMocksControl":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":101,"org.easymock.tests2.MockedExceptionTest.testMockedException":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":34,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":311,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":153,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":146,"org.easymock.tests.MockingTest.testNicePartialClassMocking":176,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":443,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":98,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":347,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":25,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":231,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":242,"org.easymock.tests.MockingTest.testTwoMocks":174,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":26,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":334,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":245,"org.easymock.samples.ExampleTest.removeNonExistingDocument":271,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":416,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":103,"org.easymock.tests.UsageStrictMockTest.differentMethods":88,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":108,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":428,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":256,"org.easymock.tests2.MockBuilderTest.testCreateMockString":150,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":35,"org.easymock.tests.UsageExpectAndThrowTest.floatType":328,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":31,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":187,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":423,"org.easymock.tests.UsageVerifyTest.twoThrows":83,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":44,"org.easymock.samples.ExampleTest.voteAgainstRemoval":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":273,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":161,"org.easymock.tests.LimitationsTest.privateConstructor":432,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":60,"org.easymock.tests2.UsageConstraintsTest.testNotNull":244,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":355,"org.easymock.tests2.UsageTest.defaultResetToNice":200,"org.easymock.samples.ExampleTest.voteAgainstRemovals":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":303,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":99,"org.easymock.tests.UsageVarargTest.differentLength":371,"org.easymock.tests2.CallbackTest.callback":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":425,"org.easymock.tests.UsageTest.openCallCountByLastCall":310,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":123,"org.easymock.tests.UsageCallCountTest.tooFewCalls":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":139,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":282,"org.easymock.tests.UsageThrowableTest.throwCheckedException":352,"org.easymock.tests.MockingTest.testStrictClassMocking":440,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":140,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":24,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":215,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":447,"org.easymock.tests2.NameTest.nameForNiceMock":69,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":258,"org.easymock.tests2.DependencyTest.testInterfaceMocking":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":446,"org.easymock.samples.ExampleTest.addDocument":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":51,"org.easymock.tests2.DelegateToTest.testStubDelegate":92,"org.easymock.tests2.AnswerTest.stubAnswer":188,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":86,"org.easymock.tests.UsageVarargTest.varargLongAccepted":373,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":400,"org.easymock.tests.UsageExpectAndReturnTest.floatType":290,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":306,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":27,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":62,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":385,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":239,"org.easymock.tests.UsageThrowableTest.noUpperLimit":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":226,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":421,"org.easymock.tests2.SerializationTest.test":179,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":9,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":409,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":89,"org.easymock.tests2.UsageConstraintsTest.testSame":230,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":289,"org.easymock.samples.SupportTest.addDocument":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":36,"org.easymock.tests.GenericTest.testPackageScope":170,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":405,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":112,"org.easymock.tests2.NameTest.nameForMock":67,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":300,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":58,"org.easymock.tests2.UsageStrictMockTest.differentMethods":73,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":426,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":292,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":340,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":396,"org.easymock.tests2.MockedExceptionTest.testRealException":248,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":287,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":15,"org.easymock.tests2.NameTest.nameForStrictMock":68,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":424,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":192,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":156,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":422,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":429,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":80,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":240,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":142,"org.easymock.tests2.UsageStrictMockTest.range":72,"org.easymock.tests2.UsageConstraintsTest.lessThan":246,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":109,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":40,"org.easymock.tests2.CaptureTest.testCaptureRightOne":222,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":410,"org.easymock.tests2.UsageConstraintsTest.testOr":118,"org.easymock.tests.UsageRangeTest.combination":393,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":154,"org.easymock.tests.UsageTest.wrongArguments":75,"org.easymock.tests2.MockBuilderTest.testWithConstructor":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":37,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":293,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":301,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":90,"org.easymock.tests.UsageVarargTest.varargShortAccepted":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":321,"org.easymock.tests2.UsageConstraintsTest.cmpTo":234,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":5,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":199,"org.easymock.tests2.CaptureTest.testCaptureFromStub":223,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":143,"org.easymock.tests.UsageTest.unexpectedCallWithArray":309,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":85,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":319,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":57,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":302,"org.easymock.tests2.CaptureTest.testCapture":13,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":399,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.samples.ExampleTest.addAndChangeDocument":272,"org.easymock.tests.UsageStrictMockTest.testVerify":401,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":115,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":398,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":389,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":10,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":128,"org.easymock.tests.LimitationsTest.abstractClass":431,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":294,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":386,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":129,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":81,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":208,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":367}}]
