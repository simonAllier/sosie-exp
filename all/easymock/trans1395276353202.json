[{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:318","failures":[0,1],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[11,12,13,14,15],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[16,17,18,19],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[20,21,22],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[37,16,38,39,17,18,40,41,42,43,44,45,23,46,47,48,24,25,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,26,3,85,86,87,20,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,28,126,127,128,29,30,129,130,31,131,132,133,32,4,5,134,135,136,137,138,139,11,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,13,33,195,196,197,198,34,35,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,0,227,228,1,229,230,231,232,233,234,235,236,237,238,22,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,36,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,15,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[24,84,20,88,196,34,235,236,22,239,309,269,270,298],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[310,311],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[312,118],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[4,5,6,7],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:633","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[313,314],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[229,230,269],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[17,47,24,25,50,318,319,320,53,59,60,62,63,66,67,68,69,71,72,73,74,75,77,321,78,322,323,324,325,326,327,328,79,81,82,83,26,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,329,330,331,332,27,333,120,121,122,123,124,125,28,126,127,128,29,30,129,130,31,131,132,4,5,136,140,334,335,336,337,141,338,339,340,143,145,146,148,151,341,342,343,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,197,34,35,211,212,344,345,224,225,226,346,0,228,1,229,230,231,232,233,234,237,238,240,250,36,257,258,259,268,270,271,272,274,280,282,283,284,285,286,299,302,303],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[347,348,349],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[121,122],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[350,351,352,353,354],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[60,61,64,65,66,67,72,101,114,273,297,298],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[355],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[20,21,22],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":94,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":233,"org.easymock.tests2.UsageTest.argumentsOrdered":88,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":76,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":3,"org.easymock.tests2.StubTest.stubWithReturnValue":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":115,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":152,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":163,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests2.DelegateToTest.testReturnException":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":252,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":194,"org.easymock.tests.MockingTest.testPartialClassMocking":341,"org.easymock.samples.SupportTest.voteForRemovals":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":310,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":250,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":186,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":7,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":318,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":174,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":16,"org.easymock.tests.UsageExpectAndThrowTest.object":184,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":74,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":112,"org.easymock.tests2.DelegateToTest.testWrongClass":137,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":211,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":212,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":271,"org.easymock.tests2.UsageTest.wrongArguments":84,"org.easymock.tests.UsageStrictMockTest.range":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":243,"org.easymock.samples.ExampleTest.answerVsDelegate":144,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":129,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":334,"org.easymock.tests2.UsageConstraintsTest.testNull":96,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":185,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":331,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":31,"org.easymock.tests2.CaptureTest.testPrimitive":62,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":274,"org.easymock.tests.UsageTest.moreThanOneArgument":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":193,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":242,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":206,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":303,"org.easymock.tests2.CaptureTest.testCaptureNone":67,"org.easymock.tests.UsageUnorderedTest.message":298,"org.easymock.tests.UsageVerifyTest.twoReturns":270,"org.easymock.tests.UsageVarargTest.varargByteAccepted":295,"org.easymock.tests2.ThreadingTest.testThreadSafe":120,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":245,"org.easymock.tests.UsageTest.argumentsOrdered":239,"org.easymock.tests.UsageVarargTest.varargIntAccepted":289,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":220,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":282,"org.easymock.tests2.CaptureTest.testCapture_2617107":61,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":15,"org.easymock.tests2.UsageConstraintsTest.any":102,"org.easymock.tests2.StubTest.stub":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":286,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":253,"org.easymock.tests.UsageExpectAndThrowTest.longType":177,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":347,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":48,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":75,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests.LimitationsTest.mockNativeMethod":346,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":79,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":345,"org.easymock.tests2.AnswerTest.answer":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":173,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":353,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":58,"org.easymock.tests2.CaptureTest.testAnd":59,"org.easymock.tests2.UsageTest.strictResetToDefault":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":356,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":49,"org.easymock.tests2.NameTest.nameForMocksControl":45,"org.easymock.tests2.MockedExceptionTest.testMockedException":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":205,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":128,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":238,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":249,"org.easymock.tests2.DelegateToTest.testDelegate":139,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":343,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":178,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":77,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":332,"org.easymock.tests.MockingTest.testNicePartialClassMocking":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":189,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":324,"org.easymock.tests2.CaptureTest.testCaptureLast":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":255,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":210,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":339,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":308,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":113,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":209,"org.easymock.tests2.CaptureTest.testCapture1_2446744":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":187,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":182,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":117,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":14,"org.easymock.tests.UsageThrowableTest.throwError":0,"org.easymock.tests.UsageStrictMockTest.differentMethods":35,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":265,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":208,"org.easymock.tests.UsageExpectAndThrowTest.floatType":176,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":108,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":39,"org.easymock.tests.UsageVerifyTest.twoThrows":269,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":319,"org.easymock.samples.PartialClassMockTest.testGetArea":340,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":283,"org.easymock.samples.ExampleTest.voteAgainstRemoval":146,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":302,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":301,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":327,"org.easymock.tests2.UsageTest.niceToStrict":26,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":175,"org.easymock.tests2.UsageConstraintsTest.testNotNull":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":232,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":51,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":10,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":330,"org.easymock.tests2.UsageTest.defaultResetToNice":87,"org.easymock.samples.ExampleTest.voteAgainstRemovals":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":169,"org.easymock.tests.UsageVarargTest.differentLength":292,"org.easymock.tests2.CallbackTest.callback":32,"org.easymock.tests2.UsageConstraintsTest.equals":21,"org.easymock.tests.UsageTest.openCallCountByLastCall":237,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":183,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":29,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":91,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":262,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":216,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":241,"org.easymock.tests.UsageCallCountTest.tooFewCalls":218,"org.easymock.tests.UsageOverloadedMethodTest.overloading":225,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":278,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":337,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":165,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":348,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":105,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":244,"org.easymock.tests.UsageThrowableTest.throwCheckedException":229,"org.easymock.tests2.EasyMockSupportClassTest.testAll":50,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":306,"org.easymock.tests2.CaptureTest.testCaptureAll":60,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":57,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":338,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":300,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":336,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":80,"org.easymock.tests.MockNameTest.defaultName":153,"org.easymock.tests2.UsageConstraintsTest.testMatches":107,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":141,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":207,"org.easymock.tests.ObjectMethodsTest.testHashCode":202,"org.easymock.samples.ExampleTest.voteForRemovals":148,"org.easymock.tests2.NameTest.nameForNiceMock":44,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":124,"org.easymock.tests.UsageVarargTest.allKinds":297,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":268,"org.easymock.tests2.DependencyTest.testInterfaceMocking":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":307,"org.easymock.samples.ExampleTest.addDocument":147,"org.easymock.tests2.DelegateToTest.testStubDelegate":136,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":231,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":23,"org.easymock.tests2.AnswerTest.stubAnswer":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":256,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":138,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":197,"org.easymock.tests2.UsageConstraintsTest.greaterThan":109,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":257,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":328,"org.easymock.tests.UsageVarargTest.varargLongAccepted":294,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":199,"org.easymock.samples.ExampleTest.voteForRemoval":145,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":121,"org.easymock.tests.UsageExpectAndReturnTest.floatType":156,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":172,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":266,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":333,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":279,"org.easymock.tests.UsageThrowableTest.noUpperLimit":227,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":110,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":92,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":81,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":64,"org.easymock.tests2.SerializationTest.test":5,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":349,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":126,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":228,"org.easymock.tests2.UsageConstraintsTest.testSame":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":155,"org.easymock.samples.SupportTest.addDocument":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":251,"org.easymock.tests2.CaptureTest.testCaptureFirst":72,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":127,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":90,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":281,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":161,"org.easymock.tests.GenericTest.testPackageScope":344,"org.easymock.tests2.UsageTest.moreThanOneArgument":83,"org.easymock.tests2.CaptureTest.testCapture2_2446744":71,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":123,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":354,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":27,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":296,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":222,"org.easymock.tests2.NameTest.nameForMock":42,"org.easymock.tests.UsageExpectAndReturnTest.longType":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":304,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":166,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":263,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":114,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":204,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":158,"org.easymock.tests.UsageCallCountTest.tooManyCalls":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":259,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":217,"org.easymock.tests2.MockedExceptionTest.testRealException":54,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":267,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":162,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":230,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":335,"org.easymock.tests2.NameTest.nameForStrictMock":43,"org.easymock.tests2.UsageConstraintsTest.testContains":104,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":53,"org.easymock.tests2.UsageConstraintsTest.testFind":95,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":226,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":9,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":323,"org.easymock.tests.MockTypeTest.fromEasyMockClass":264,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":33,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":41,"org.easymock.tests.UsageExpectAndReturnTest.object":164,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":111,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":325,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":329,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":118,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":355,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":130,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":291,"org.easymock.tests.UsageTest.exactCallCountByLastCall":240,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":351,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":28,"org.easymock.tests2.CaptureTest.testCaptureRightOne":69,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":246,"org.easymock.tests2.UsageConstraintsTest.testOr":98,"org.easymock.tests.UsageRangeTest.combination":36,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":321,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":287,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":170,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":277,"org.easymock.tests.UsageTest.wrongArguments":236,"org.easymock.tests2.EasyMockSupportTest.testVerify":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":167,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":315,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":247,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":314,"org.easymock.tests.UsageVarargTest.varargShortAccepted":293,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":275,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":261,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":55,"org.easymock.tests2.UsageConstraintsTest.cmpTo":103,"org.easymock.tests.UsageVarargTest.varargCharAccepted":290,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":38,"org.easymock.tests2.CompareToTest.testLessThan":312,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":46,"org.easymock.tests2.UsageTest.openCallCountByLastCall":85,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":8,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":132,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":260,"org.easymock.tests2.CaptureTest.testCaptureFromStub":70,"org.easymock.tests.UsageTest.unexpectedCallWithArray":235,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":201,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":181,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":168,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":326,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.UsageConstraintsTest.constraints":93,"org.easymock.samples.ExampleTest.addAndChangeDocument":149,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":180,"org.easymock.tests.UsageStrictMockTest.testVerify":200,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":213,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":320,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":316,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":305,"org.easymock.tests2.UsageTest.resumeIfFailure":89,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":65,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":284,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":285,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":280,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":30}}]
