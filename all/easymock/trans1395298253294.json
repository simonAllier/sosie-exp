[{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,54,55,55,56,57,58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[59],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[60,61],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[62],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[63,64,65,66,67,68,69,70],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[71,72,73,74,75,76],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[77,78,79,15,31,32],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[2,80,24,30,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[81,82,83,84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[63,64,65,66,67,68,69,70],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[97,98,99,100,101,102,63,64,65,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,0,1,2,3,139,4,5,140,141,142,81,82,6,7,8,9,143,66,144,145,67,146,68,10,147,13,15,17,18,20,22,148,149,150,151,152,23,24,153,25,26,27,29,31,32,33,154,155,35,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,85,171,87,88,91,172,92,94,95,173,96,36,174,175,176,39,40,41,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,83,84,217,218,219,220,221,222,223,224,225,226,227,228,229,230,48,50,231,232,233,234,235,69,236,237,238,51,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,70,288,289,290,291,54,54,55,55,56,292],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,38,39,40,41,43,48,49,50,51,54,54,55,55,56,57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[150],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:182","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[293,294],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[105,106,108,110,111,295,122,126,85,86,94],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[293],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[293,48,49,50,294],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[98,99,100,102,63,64,65,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,296,133,297,134,135,298,299,138,0,1,2,3,139,4,5,140,141,300,301,142,302,81,82,6,7,8,9,143,66,67,146,68,10,147,11,15,17,18,20,21,22,148,149,151,152,23,153,25,26,27,29,32,35,157,158,159,160,161,162,163,165,166,167,168,303,170,85,171,86,87,88,89,90,91,172,92,94,95,173,96,36,175,176,39,40,41,177,178,179,180,181,182,183,184,185,186,187,188,189,75,304,190,191,305,306,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,307,308,76,216,309,83,84,217,218,219,220,221,225,226,227,228,48,49,232,51,239,240,241,242,243,244,245,246,247,248,249,250,251,252,310,311,312,313,314,315,316,317,318,319,254,255,256,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,320,321,287,70,288,289,322,290,291,54,55,323,56,324,325,292,57,58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[295],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[326,231,327,328],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[329,330],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[293],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[331],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[332,283],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[64,333,65,66,67,146,70],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[10,147,11,334],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[130,135,170,176,186,188,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,237,242,245,247,248,249,250,251,252,255],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[336,85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[61,337,338],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[122,123],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[105,106,108,110,111,295,122,126,85,86,94],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[130,135,154,155,35,156,170,176,182,183,184,185,186,187,188,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,228,237,241,242,245,247,248,249,250,251,252,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[128,339],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":106,"org.easymock.tests2.UsageTest.argumentsOrdered":299,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":188,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":185,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":297,"org.easymock.tests2.StubTest.stubWithReturnValue":170,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":323,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":269,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":125,"org.easymock.tests2.SerializationTest.testAllMockedMethod":11,"org.easymock.tests2.DelegateToTest.testReturnException":98,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":183,"org.easymock.tests.MockingTest.testPartialClassMocking":39,"org.easymock.samples.SupportTest.voteForRemovals":292,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":72,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":293,"org.easymock.tests.MockClassControlTest.testToString":44,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":34,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":334,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":193,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":7,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":144,"org.easymock.tests.UsageExpectAndThrowTest.object":203,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":123,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":141,"org.easymock.tests2.DelegateToTest.testWrongClass":100,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":225,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":226,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":112,"org.easymock.tests2.UsageTest.wrongArguments":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":239,"org.easymock.tests.UsageStrictMockTest.range":83,"org.easymock.samples.ConstructorCalledMockTest.testTax":54,"org.easymock.samples.ExampleTest.answerVsDelegate":70,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":164,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":0,"org.easymock.tests2.UsageConstraintsTest.testNull":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":204,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":25,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":17,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":166,"org.easymock.tests2.CaptureTest.testPrimitive":87,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":243,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":305,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":212,"org.easymock.tests.UsageTest.moreThanOneArgument":189,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":219,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":73,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":224,"org.easymock.tests2.CaptureTest.testCaptureNone":172,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":331,"org.easymock.tests.UsageUnorderedTest.message":244,"org.easymock.tests.UsageVerifyTest.twoReturns":256,"org.easymock.tests.UsageVarargTest.varargByteAccepted":317,"org.easymock.tests2.ThreadingTest.testThreadSafe":148,"org.easymock.tests.UsageTest.argumentsOrdered":306,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":282,"org.easymock.tests.UsageVarargTest.varargIntAccepted":312,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":321,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":57,"org.easymock.tests2.CaptureTest.testCapture_2617107":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":177,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":242,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":16,"org.easymock.tests2.UsageConstraintsTest.any":113,"org.easymock.tests2.StubTest.stub":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":181,"org.easymock.tests.UsageExpectAndThrowTest.longType":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":184,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":302,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests.LimitationsTest.mockNativeMethod":36,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":279,"org.easymock.tests2.AnswerTest.answer":66,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":50,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":295,"org.easymock.tests2.CaptureTest.testAnd":85,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":78,"org.easymock.tests2.UsageTest.strictResetToDefault":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":30,"org.easymock.tests2.MockedExceptionTest.testMockedException":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":218,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":161,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":191,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":286,"org.easymock.tests2.DelegateToTest.testDelegate":102,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":333,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":197,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":41,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":23,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":18,"org.easymock.tests.MockingTest.testNicePartialClassMocking":40,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":208,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":27,"org.easymock.tests2.CompareToTest.testNotComparable":59,"org.easymock.tests2.CaptureTest.testCaptureLast":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":186,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":231,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":5,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":111,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":124,"org.easymock.tests.MockingTest.testTwoMocks":38,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":326,"org.easymock.tests2.CaptureTest.testCapture1_2446744":88,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":80,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":201,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":298,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":127,"org.easymock.tests.UsageThrowableTest.throwError":245,"org.easymock.tests.UsageStrictMockTest.differentMethods":84,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":150,"org.easymock.tests2.MockBuilderTest.testCreateMockString":21,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":221,"org.easymock.tests.UsageExpectAndThrowTest.floatType":195,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":119,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":67,"org.easymock.tests.UsageVerifyTest.twoThrows":255,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":8,"org.easymock.samples.PartialClassMockTest.testGetArea":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":178,"org.easymock.samples.ExampleTest.voteAgainstRemoval":289,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":222,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":194,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":37,"org.easymock.tests2.UsageTest.niceToStrict":133,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":60,"org.easymock.tests2.UsageConstraintsTest.testNotNull":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":252,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":154,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":61,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":15,"org.easymock.tests2.MockBuilderTest.testCreateMock":19,"org.easymock.tests2.UsageTest.defaultResetToNice":136,"org.easymock.samples.ExampleTest.voteAgainstRemovals":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":275,"org.easymock.tests2.CallbackTest.callback":63,"org.easymock.tests.UsageTest.openCallCountByLastCall":190,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":202,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":71,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":162,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":103,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":259,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":241,"org.easymock.tests.UsageOverloadedMethodTest.overloading":175,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":237,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":271,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":3,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":174,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":116,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":92,"org.easymock.tests.UsageThrowableTest.throwCheckedException":249,"org.easymock.tests2.EasyMockSupportClassTest.testAll":6,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":210,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":74,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":77,"org.easymock.tests2.CaptureTest.testCaptureAll":171,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":228,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":2,"org.easymock.tests2.UsageConstraintsTest.testMatches":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":139,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":68,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":220,"org.easymock.samples.ExampleTest.voteForRemovals":290,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":152,"org.easymock.tests.UsageVarargTest.allKinds":319,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":254,"org.easymock.tests2.DependencyTest.testInterfaceMocking":140,"org.easymock.samples.BasicClassMockTest.testPrintContent":58,"org.easymock.samples.ExampleTest.addDocument":322,"org.easymock.tests2.DelegateToTest.testStubDelegate":99,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":251,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":300,"org.easymock.tests2.AnswerTest.stubAnswer":146,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":187,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":216,"org.easymock.tests2.UsageConstraintsTest.greaterThan":120,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":335,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":233,"org.easymock.tests.UsageVarargTest.varargLongAccepted":316,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":33,"org.easymock.samples.ExampleTest.voteForRemoval":288,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":278,"org.easymock.tests.UsageExpectAndReturnTest.floatType":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":22,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":55,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests.UsageThrowableTest.noUpperLimit":246,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":121,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":51,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":104,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":130,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":89,"org.easymock.tests2.SerializationTest.test":147,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":159,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":247,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":261,"org.easymock.tests2.UsageConstraintsTest.testSame":109,"org.easymock.samples.SupportTest.addDocument":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":182,"org.easymock.tests2.CaptureTest.testCaptureFirst":96,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":97,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":160,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":267,"org.easymock.tests.GenericTest.testPackageScope":48,"org.easymock.tests2.UsageTest.moreThanOneArgument":132,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":151,"org.easymock.tests2.CaptureTest.testCapture2_2446744":173,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":285,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":20,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":318,"org.easymock.tests.GenericTest.testBridgedEquals":294,"org.easymock.tests.UsageExpectAndReturnTest.longType":263,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":211,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":280,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":209,"org.easymock.tests2.UsageStrictMockTest.differentMethods":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":217,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":264,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":235,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":281,"org.easymock.tests2.MockedExceptionTest.testRealException":156,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":268,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":198,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":142,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":250,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":240,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":1,"org.easymock.tests2.UsageConstraintsTest.testContains":115,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":35,"org.easymock.tests2.UsageConstraintsTest.testFind":107,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":176,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":338,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":64,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":26,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":307,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":65,"org.easymock.tests.UsageExpectAndReturnTest.object":270,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":122,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":29,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":13,"org.easymock.tests2.UsageStrictMockTest.range":81,"org.easymock.tests2.UsageConstraintsTest.lessThan":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":165,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":314,"org.easymock.tests.UsageTest.exactCallCountByLastCall":192,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":227,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":158,"org.easymock.tests2.CaptureTest.testCaptureRightOne":94,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":283,"org.easymock.tests2.ConstraintsToStringTest.findToString":62,"org.easymock.tests2.UsageConstraintsTest.testOr":110,"org.easymock.tests.UsageRangeTest.combination":232,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":310,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":276,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":24,"org.easymock.tests.UsageTest.wrongArguments":304,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":236,"org.easymock.tests.MockClassControlTest.testHashCode":47,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":43,"org.easymock.tests2.EasyMockSupportTest.testVerify":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":273,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":284,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":330,"org.easymock.tests.UsageVarargTest.varargShortAccepted":315,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":258,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":69,"org.easymock.tests2.UsageConstraintsTest.cmpTo":114,"org.easymock.tests.UsageVarargTest.varargCharAccepted":313,"org.easymock.tests2.CaptureTest.testCaptureMultiple":336,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":145,"org.easymock.tests2.CompareToTest.testLessThan":339,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":301,"org.easymock.tests2.UsageTest.openCallCountByLastCall":134,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":135,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":337,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":168,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":257,"org.easymock.tests2.CaptureTest.testCaptureFromStub":95,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":14,"org.easymock.tests.UsageTest.unexpectedCallWithArray":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":248,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":79,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":76,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":274,"org.easymock.tests2.CaptureTest.testCapture":93,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":31,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":46,"org.easymock.tests2.UsageConstraintsTest.constraints":105,"org.easymock.samples.ExampleTest.addAndChangeDocument":291,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":199,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":213,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":324,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":9,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":45,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":90,"org.easymock.tests2.UsageTest.resumeIfFailure":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":266,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":52,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":180,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":163}}]
