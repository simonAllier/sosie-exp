[{"position":"org.easymock.internal.RecordState:318","failures":[0,1],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[14,15,16,17],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[20],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,0,101,102,1,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,18,19,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,15,16,17,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,2,225,3,4,6,7,8,226,9,11,13],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:203","sourceCode":"return java.io.ObjectInputStream.readObject()","type":"CtReturnImpl"},"failures":[227,20,228],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[229,229,230,230,231,232,233,15,195,234],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[235,236,237,238,239,240,72,79,80,241,112,242,243,244,213],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[245,83,85,99,100,115],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:95","sourceCode":"int = java.lang.Integer.int","type":"CtAssignmentImpl"},"failures":[57,67,246,68,69,71,78,101,112,113,247,154,155,157,159,160,163,166,169,176,213,214,216],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[248,249,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[251],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[161],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[252,253],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"failures":[245,28,30,44,45,83,85,99,100,254,255,115,256],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:190","failures":[238,67,70,72,79,0,101,1,103,104,105,106,257,112,113,139,140,244,258,259,260,156,18,19,161,164,170,171,172,174,189,261,198,200,262,202,203,204,263,213,214,11],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[229,230,264,265,266,232,267,268,269,270,15,195,234,271,272,273,274,275,276,206,277,278,279,280,281,282,283,284,285,207,286,287,288,289,290,208,291,292,220,224,293],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[294,295,56,296,64,65,66,297,107,298,108,299,123,229,229,230,230,132,133,300,301,302,303,144,304,145,146,305,258,306,307,149,259,151,308,152,309,310,248,311,260,312,182,313,314,315,15,17,195,274,206,207,208,218,219,220,221,223,224],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[229,230,264,265,266,232,267,268,269,270,15,195,234,271,272,273,274,275,276,206,277,278,279,280,281,282,283,284,285,207,286,287,288,289,290,208,291,292,220,224,293],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[146,305,307,149,183,15,195,196],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[22,235,236,237,238,316,317,318,319,320,239,321,322,323,240,324,325,72,78,79,80,241,110,112,113,326,327,328,329,330,331,332,333,334,335,336,138,242,243,244,211,213,214],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[337,338],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:52","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[245,339,340,341,342,21,22,235,236,23,24,237,238,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,343,51,52,53,54,55,56,57,58,59,60,344,61,62,63,345,64,65,66,67,68,69,346,347,348,240,349,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,0,101,102,1,103,104,105,106,350,351,352,353,354,297,107,254,355,356,357,358,359,108,360,255,361,362,257,109,241,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,229,230,132,133,134,135,136,137,138,242,139,140,141,142,363,243,244,247,143,300,302,144,304,145,146,305,258,307,147,148,149,259,150,151,308,152,309,310,248,311,260,312,153,154,155,156,157,158,159,160,18,19,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,364,256,365,366,367,368,182,369,183,370,184,185,371,186,187,188,189,190,191,192,193,194,15,16,17,195,196,261,197,198,199,200,262,372,201,202,203,204,205,274,206,207,208,209,263,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,2,225,3,4,5,6,7,8,226,9,11,12,373,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[374],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[375,376,377,378,379,380,381],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[156,158,18,382,175,2,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[383],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[155,156,157,158,159,160,18,19,382,161,170,171,175,176,2,225,3,4,11,12],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[384,385,386],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[337,338],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[64,65,66,108,118,123,302,144,145,146,258,149,150,151,152,187,192,195,274,206,207,208,218,219,220,221,222,223,224],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[21,23,24,25,78,80,110,136,141,142,143,178,211],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[295,387,388,389,390,391,145,392,220,223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.internal.RecordState:85","failures":[245,339,340,341,342,21,22,235,236,23,24,237,238,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,343,51,52,53,54,55,56,393,394,57,58,59,60,344,61,62,63,345,64,65,66,67,246,68,69,346,347,348,323,240,349,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,0,101,102,1,103,104,105,106,350,351,352,353,354,297,107,254,355,356,357,358,359,108,375,395,384,396,397,398,399,252,400,401,402,403,404,360,255,361,362,405,406,407,257,109,241,110,111,112,113,114,408,115,116,409,299,389,390,391,410,411,412,117,118,119,120,121,122,123,124,125,126,127,128,129,130,413,131,229,229,230,230,132,133,134,135,136,137,138,242,139,140,141,142,363,243,244,247,143,300,302,144,304,145,146,305,258,307,147,148,149,259,150,151,308,152,309,310,248,311,260,312,153,154,155,156,157,158,159,160,18,19,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,364,256,365,366,367,368,182,369,183,184,185,371,186,187,188,189,190,191,192,193,194,15,16,17,195,196,261,197,198,199,200,262,372,201,202,203,204,205,414,415,250,416,274,206,207,208,209,263,210,211,212,213,214,215,216,217,417,218,219,220,221,222,223,224,2,225,3,4,5,6,7,8,226,9,11,12,373,13],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[418,419,420],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":156,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":21,"org.easymock.tests2.UsageTest.argumentsOrdered":244,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":203,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":140,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":124,"org.easymock.tests2.DelegateToTest.testReturnException":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":355,"org.easymock.tests.MockingTest.testPartialClassMocking":64,"org.easymock.tests.MockClassControlTest.testToString":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":26,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":206,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":148,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":73,"org.easymock.tests2.UsageTest.wrongArguments":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":361,"org.easymock.samples.ExampleTest.answerVsDelegate":126,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":295,"org.easymock.tests2.UsageConstraintsTest.testNull":158,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":151,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":412,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":202,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":45,"org.easymock.tests.UsageTest.moreThanOneArgument":22,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":340,"org.easymock.tests.UsageTest.argumentsOrdered":238,"org.easymock.tests.UsageVarargTest.varargIntAccepted":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":385,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":117,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":300,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":121,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":330,"org.easymock.tests.ReplayStateInvalidUsageTest.times":400,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":209,"org.easymock.tests2.AnswerTest.answer":178,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":253,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":366,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":248,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":339,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":199,"org.easymock.tests2.DelegateToTest.testDelegate":194,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":358,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":324,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":256,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":384,"org.easymock.tests.UsageThrowableTest.throwError":0,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":388,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":342,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":292,"org.easymock.samples.PartialClassMockTest.testGetArea":123,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":118,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":387,"org.easymock.tests2.UsageTest.niceToStrict":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":281,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":144,"org.easymock.tests2.MockBuilderTest.testCreateMock":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":35,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":327,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":200,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":393,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":360,"org.easymock.tests.UsageOverloadedMethodTest.overloading":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":290,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":165,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":92,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":349,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":164,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":20,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.MockClassControlTest.testEquals":411,"org.easymock.tests2.EasyMockSupportClassTest.testAll":274,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":107,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":43,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":332,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":313,"org.easymock.tests2.CaptureTest.testCaptureAll":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":365,"org.easymock.tests2.UsageConstraintsTest.testMatches":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":341,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":375,"org.easymock.samples.ExampleTest.voteForRemovals":130,"org.easymock.tests.UsageVarargTest.allKinds":55,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":78,"org.easymock.samples.BasicClassMockTest.testPrintContent":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":353,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":105,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":359,"org.easymock.tests2.UsageConstraintsTest.greaterThan":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":275,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":246,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":312,"org.easymock.samples.ExampleTest.voteForRemoval":127,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":371,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":309,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":136,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":56,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":197,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":254,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":198,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":88,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":187,"org.easymock.tests2.UsageTest.moreThanOneArgument":138,"org.easymock.tests2.CaptureTest.testCapture2_2446744":373,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":258,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":54,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":61,"org.easymock.tests.UsageExpectAndReturnTest.longType":84,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":350,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":44,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":306,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":173,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":381,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":245,"org.easymock.tests.UsageCallCountTest.tooManyCalls":62,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":317,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":219,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":394,"org.easymock.tests2.UsageConstraintsTest.testContains":163,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":301,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":182,"org.easymock.tests2.UsageConstraintsTest.testFind":157,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":71,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":184,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":257,"org.easymock.tests.UsageExpectAndReturnTest.object":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":201,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":50,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":407,"org.easymock.tests.UsageTest.exactCallCountByLastCall":25,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":234,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":97,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":46,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":347,"org.easymock.tests.MockClassControlTest.testHashCode":410,"org.easymock.tests2.EasyMockSupportTest.testVerify":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":283,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":329,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":364,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":417,"org.easymock.tests.UsageVarargTest.varargCharAccepted":49,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":210,"org.easymock.tests2.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":419,"org.easymock.tests.DefaultClassInstantiatorTest.object":404,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":204,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":405,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":239,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":284,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":1,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":391,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":311,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":98,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":208,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":331,"org.easymock.tests2.UsageTest.resumeIfFailure":247,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":357,"org.easymock.tests2.StubTest.stubWithReturnValue":217,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":266,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":174,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":90,"org.easymock.tests2.SerializationTest.testAllMockedMethod":17,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":383,"org.easymock.samples.SupportTest.voteForRemovals":135,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":334,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":251,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":38,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":386,"org.easymock.tests.UsageExpectAndThrowTest.object":36,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":171,"org.easymock.tests2.DelegateToTest.testWrongClass":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":115,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":116,"org.easymock.tests.UsageStrictMockTest.range":112,"org.easymock.samples.ConstructorCalledMockTest.testTax":229,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":372,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":218,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":37,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":145,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":402,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":271,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":255,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":316,"org.easymock.tests2.CaptureTest.testCaptureNone":226,"org.easymock.tests.UsageUnorderedTest.message":72,"org.easymock.tests.UsageVerifyTest.twoReturns":80,"org.easymock.tests.UsageVarargTest.varargByteAccepted":53,"org.easymock.tests2.ThreadingTest.testThreadSafe":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":286,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":60,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":132,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":76,"org.easymock.tests2.UsageConstraintsTest.any":161,"org.easymock.tests2.StubTest.stub":216,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":252,"org.easymock.tests.UsageExpectAndThrowTest.longType":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":356,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":227,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":399,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":212,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":190,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests.LimitationsTest.mockNativeMethod":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":100,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":298,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":315,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":215,"org.easymock.tests2.NameTest.nameForMocksControl":416,"org.easymock.tests2.MockedExceptionTest.testMockedException":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":276,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":24,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":30,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":66,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":370,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":149,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":146,"org.easymock.tests.MockingTest.testNicePartialClassMocking":65,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":152,"org.easymock.tests2.CompareToTest.testNotComparable":374,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":325,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":224,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":172,"org.easymock.tests.MockingTest.testTwoMocks":296,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":34,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":243,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":176,"org.easymock.samples.ExampleTest.removeNonExistingDocument":413,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":397,"org.easymock.tests.UsageStrictMockTest.differentMethods":113,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":186,"org.easymock.tests2.ConstraintsToStringTest.andToString":333,"org.easymock.tests2.MockBuilderTest.testCreateMockString":307,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":409,"org.easymock.tests.UsageExpectAndThrowTest.floatType":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":277,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":273,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":179,"org.easymock.tests.UsageVerifyTest.twoThrows":79,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":207,"org.easymock.samples.ExampleTest.voteAgainstRemoval":128,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":260,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":270,"org.easymock.tests2.UsageConstraintsTest.testNotNull":175,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":106,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":367,"org.easymock.tests2.UsageTest.defaultResetToNice":363,"org.easymock.samples.ExampleTest.voteAgainstRemovals":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":96,"org.easymock.tests.UsageVarargTest.differentLength":343,"org.easymock.tests2.CallbackTest.callback":189,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":233,"org.easymock.tests.UsageTest.openCallCountByLastCall":23,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":75,"org.easymock.tests.UsageCallCountTest.tooFewCalls":58,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":221,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":362,"org.easymock.tests.UsageThrowableTest.throwCheckedException":103,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":318,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":223,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":345,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":220,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":401,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":222,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":181,"org.easymock.tests.ObjectMethodsTest.testHashCode":406,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":188,"org.easymock.tests2.NameTest.nameForNiceMock":250,"org.easymock.tests2.DependencyTest.testInterfaceMocking":147,"org.easymock.samples.ExampleTest.addDocument":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":287,"org.easymock.tests2.DelegateToTest.testStubDelegate":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":291,"org.easymock.tests2.AnswerTest.stubAnswer":180,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":110,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":231,"org.easymock.tests.UsageVarargTest.varargLongAccepted":52,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":114,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":99,"org.easymock.tests.UsageExpectAndReturnTest.floatType":83,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":195,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":230,"org.easymock.tests2.ConstraintsToStringTest.orToString":326,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":169,"org.easymock.tests.UsageThrowableTest.noUpperLimit":101,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":154,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":392,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":228,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":337,"org.easymock.tests2.UsageConstraintsTest.testSame":159,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":82,"org.easymock.samples.SupportTest.addDocument":134,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":278,"org.easymock.tests.GenericTest.testPackageScope":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests2.NameTest.nameForMock":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":93,"org.easymock.tests2.UsageStrictMockTest.differentMethods":214,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":69,"org.easymock.tests2.MockedExceptionTest.testRealException":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":319,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":211,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":403,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":74,"org.easymock.tests2.NameTest.nameForStrictMock":415,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":420,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":183,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":308,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":170,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":302,"org.easymock.tests2.UsageStrictMockTest.range":213,"org.easymock.tests2.UsageConstraintsTest.lessThan":177,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":261,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":282,"org.easymock.tests2.UsageConstraintsTest.testOr":160,"org.easymock.tests.UsageRangeTest.combination":67,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":259,"org.easymock.tests.UsageTest.wrongArguments":236,"org.easymock.tests2.MockBuilderTest.testWithConstructor":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":279,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":94,"org.easymock.tests.UsageVarargTest.varargShortAccepted":51,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":338,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":344,"org.easymock.tests2.UsageConstraintsTest.cmpTo":162,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests2.CaptureTest.testCaptureFromStub":12,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":395,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":303,"org.easymock.tests.UsageTest.unexpectedCallWithArray":235,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":241,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":59,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":267,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":95,"org.easymock.tests2.CaptureTest.testCapture":10,"org.easymock.tests2.UsageConstraintsTest.constraints":155,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":111,"org.easymock.samples.ExampleTest.addAndChangeDocument":131,"org.easymock.tests2.ConstraintsToStringTest.notToString":328,"org.easymock.tests.UsageStrictMockTest.testVerify":408,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":122,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":351,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":119,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":120,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":262}}]
