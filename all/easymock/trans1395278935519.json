[{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[22,23,24,25,26],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[41,42,31,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,38,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[63,64,65,66],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[67,68,69],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[70,71,72,73,74,75,76,77,78,79,80,81],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[82],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,82,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,70,131,71,72,73,74,75,76,132,77,79,80,133,81,134,135,136,137,138,139,140,141,142,143,144,145,63,146,27,28,29,30,41,40,147,148,149,150,151,42,152,153,154,155,156,157,158,159,160,161,162,163,164,165,31,166,167,168,169,170,171,172,173,174,175,176,177,22,178,179,180,181,182,43,44,183,184,45,185,46,47,48,49,186,50,51,52,53,187,54,55,56,57,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,58,223,224,225,226,59,227,228,229,230,231,232,233,234,235,236,237,32,238,239,240,241,242,243,244,245,246,247,248,60,249,250,251,252,253,254,255,256,257,258,259,260,261,262,33,62,263,264,265,266,267,268,269,270,271,272,34,35,36,37,38,39,273,24,25,274,275,276,277,278,279,280,281,282,283,284,285,286,26,287,288,289],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[290,291,292,293,224,284],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[294,295,296],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[290,291,292,293,224,284],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[290,291,292,293,224,284],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[148,153,154,22,297,224,225,227,228,236,24,25,284,26],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[294,295,296],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[298,299,300],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[301,302,303,83,84,85,86,87,88,304,89,305,306,307,308,309,310,90,311,312,313,91,92,93,94,95,314,96,97,98,99,100,315,101,102,103,104,105,106,316,107,108,109,82,110,111,112,113,114,115,116,117,317,118,119,120,121,122,123,124,125,126,318,319,320,321,322,127,128,323,324,325,326,327,328,129,329,130,70,131,71,72,73,74,75,76,132,77,79,80,133,81,134,135,136,137,138,139,330,331,140,332,333,141,334,142,335,336,337,143,144,145,63,146,27,28,29,30,338,339,340,341,342,343,344,345,346,347,348,349,41,40,147,148,149,150,151,42,152,153,154,155,156,350,351,157,352,158,159,353,354,355,356,357,160,358,359,360,361,362,363,364,161,162,163,365,164,366,67,68,69,367,368,369,165,31,370,166,167,371,372,373,168,169,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,170,413,414,171,172,173,174,175,176,177,22,178,179,180,181,182,43,44,183,184,45,185,46,47,48,49,186,50,51,52,53,187,54,55,56,57,415,416,417,418,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,419,420,421,208,209,422,210,423,424,425,426,427,428,429,211,64,430,431,432,433,434,435,212,213,214,215,216,436,437,438,439,440,441,442,443,444,445,446,447,448,217,449,450,218,451,452,219,220,221,222,58,223,224,225,226,59,227,228,229,230,453,454,455,456,457,231,232,233,234,235,458,459,460,461,462,294,463,464,465,236,466,467,468,237,32,469,238,239,240,241,242,243,244,245,470,246,247,471,472,473,248,60,474,475,476,61,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,249,250,251,497,252,253,498,254,255,256,257,258,499,259,500,501,502,503,504,505,506,507,260,508,261,262,33,62,263,264,265,266,267,268,269,270,271,272,65,509,66,510,511,512,513,514,515,34,35,36,37,38,39,273,24,25,274,275,276,277,278,279,516,517,518,280,281,282,283,284,285,286,26,287,288,289,519,520,521],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[99,100,102,104,105,316,115,119,70,71,79],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[22,23,24,25,26],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[162],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[522],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[523,99,106,110,121],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[524],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[311,324,525,526,527,528,529],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[27,28,29,30,41,42,31,43,44,183,184,45,185,46,47,48,49,186,50,51,52,53,187,54,55,56,57,447,58,59,32,240,244,245,60,33,62,34,35,36,37,38,39],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[301,83,84,85,86,87,88,89,305,306,307,308,309,310,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,82,110,111,112,113,114,115,116,117,317,118,119,120,121,127,323,325,70,131,71,72,73,74,75,76,132,77,79,133,81,134,135,136,137,138,139,140,142,143,144,145,63,146,29,343,41,40,147,148,149,150,151,42,153,154,155,156,157,352,158,160,161,162,163,164,165,31,370,166,167,371,373,168,169,375,376,377,378,379,380,381,383,384,385,386,387,391,394,404,410,170,171,172,175,176,177,22,178,179,180,181,182,43,44,183,184,45,185,46,47,48,49,186,50,51,52,53,187,54,55,56,57,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,444,446,447,217,219,221,222,58,223,225,226,59,227,228,229,230,454,455,236,237,238,239,240,241,242,243,244,245,246,247,473,248,60,249,250,251,252,253,254,255,256,257,258,260,261,262,33,62,263,268,269,270,271,272,38,273,24,25,276,277,278,279,517,518,280,281,283,284,285,286,26,287,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[99,112,319,328,129,130,135,334,335,41,148,149,150,153,154,155,156,158,376,380,381,384,174,177,22,178,530,418,531,297,219,58,224,225,227,228,229,236,498,24,25,516,517,518,282,284,286,26,287],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[311,324,525,526,527,528,529],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[301,302,303,83,84,85,86,87,88,304,89,305,306,307,308,309,310,90,311,313,91,92,93,94,95,314,96,97,98,99,100,315,101,102,103,104,105,106,316,107,108,109,82,110,111,112,113,114,115,116,117,317,118,119,120,121,122,123,124,125,126,319,320,322,127,128,323,325,326,327,328,129,130,70,131,71,72,73,74,75,76,132,77,79,80,133,81,532,524,533,534,535,134,135,136,137,138,139,330,331,140,332,333,141,334,142,335,336,337,143,536,144,145,63,146,27,28,29,30,338,339,340,341,342,343,344,345,346,347,348,349,41,40,147,148,149,150,151,42,152,153,154,155,156,350,351,157,352,158,159,353,354,355,356,357,160,358,359,360,361,362,363,364,161,162,163,365,164,366,67,68,367,368,369,165,31,370,166,167,371,372,373,168,169,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,170,413,414,171,172,173,174,175,176,177,22,178,179,180,181,182,43,44,183,184,45,185,46,47,48,49,186,50,51,52,53,187,54,55,56,57,415,416,417,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,419,420,421,208,209,422,210,423,424,425,426,427,428,429,211,64,430,431,432,433,434,435,212,213,214,215,216,436,437,438,439,440,441,442,443,444,445,446,447,448,217,449,450,218,451,452,219,220,221,222,58,223,224,225,226,59,227,228,229,230,453,454,455,456,457,231,232,233,234,235,459,460,461,462,294,463,465,236,466,467,468,237,32,469,238,239,240,241,242,243,244,245,470,246,247,471,472,473,248,60,474,475,476,61,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,249,250,251,497,252,253,498,254,255,256,257,258,499,259,500,501,502,503,504,505,506,507,260,508,261,262,33,62,263,264,265,266,267,268,269,270,271,272,65,509,66,510,511,512,513,514,515,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,34,35,36,37,38,39,273,24,25,274,275,276,277,278,279,516,517,518,280,281,282,283,284,285,286,26,287,288,289,519,520,521],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":100,"org.easymock.tests2.UsageTest.argumentsOrdered":154,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":58,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":385,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":483,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":150,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":305,"org.easymock.tests2.DelegateToTest.testReturnException":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":35,"org.easymock.tests.MockingTest.testPartialClassMocking":208,"org.easymock.tests.MockClassControlTest.testToString":500,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":313,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":492,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":394,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":43,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":352,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":525,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":106,"org.easymock.tests2.UsageTest.wrongArguments":148,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":261,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":266,"org.easymock.samples.ExampleTest.answerVsDelegate":84,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":441,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":424,"org.easymock.tests2.UsageConstraintsTest.testNull":102,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":137,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":505,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":384,"org.easymock.tests2.CaptureTest.testPrimitive":72,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":263,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":57,"org.easymock.tests.UsageTest.moreThanOneArgument":223,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":214,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":453,"org.easymock.tests.UsageTest.argumentsOrdered":228,"org.easymock.tests.UsageVarargTest.varargIntAccepted":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":488,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":529,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":126,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":348,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":476,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":272,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":5,"org.easymock.tests.ReplayStateInvalidUsageTest.times":432,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":160,"org.easymock.tests2.DependencyTest.testClassMocking":350,"org.easymock.tests2.AnswerTest.answer":170,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":490,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":125,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":438,"org.easymock.tests2.CaptureTest.testAnd":70,"org.easymock.tests2.UsageTest.strictResetToDefault":40,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":141,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":379,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":457,"org.easymock.tests2.DelegateToTest.testDelegate":164,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":187,"org.easymock.tests.LimitationsTest.mockFinalMethod":508,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":235,"org.easymock.tests2.DependencyTest.testClassMockingSupport":351,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":450,"org.easymock.tests2.CaptureTest.testCapture1_2446744":73,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":331,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":52,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":123,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":428,"org.easymock.tests.UsageThrowableTest.throwError":238,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":440,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":418,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":412,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":8,"org.easymock.samples.PartialClassMockTest.testGetArea":301,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":429,"org.easymock.tests.MockingTest.testInterfaceMocking":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":269,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":520,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":399,"org.easymock.tests2.UsageTest.niceToStrict":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":44,"org.easymock.tests2.ThreadingTest.testChangeDefault":536,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":300,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":127,"org.easymock.tests2.MockBuilderTest.testCreateMock":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":407,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":49,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":290,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":380,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":437,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":468,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":264,"org.easymock.tests.UsageOverloadedMethodTest.overloading":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":403,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":447,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":110,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":473,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":199,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":82,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":295,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":77,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":497,"org.easymock.tests.MockClassControlTest.testEquals":504,"org.easymock.tests2.EasyMockSupportClassTest.testAll":391,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":55,"org.easymock.tests2.CaptureTest.testCaptureAll":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":233,"org.easymock.tests.MockNameTest.defaultName":469,"org.easymock.tests2.UsageConstraintsTest.testMatches":111,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":426,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":215,"org.easymock.samples.ExampleTest.voteForRemovals":88,"org.easymock.tests.UsageVarargTest.allKinds":258,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":234,"org.easymock.samples.BasicClassMockTest.testPrintContent":307,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":244,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":345,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":365,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":464,"org.easymock.tests2.UsageConstraintsTest.greaterThan":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":392,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":220,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":335,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":9,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":465,"org.easymock.samples.ExampleTest.voteForRemoval":85,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":144,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":336,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":442,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":330,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":1,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":41,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":230,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":480,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":377,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":34,"org.easymock.tests2.CaptureTest.testCaptureFirst":81,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":378,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":156,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":195,"org.easymock.tests2.UsageTest.moreThanOneArgument":147,"org.easymock.tests2.CaptureTest.testCapture2_2446744":133,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":491,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":129,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":257,"org.easymock.tests.GenericTest.testBridgedEquals":472,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":517,"org.easymock.tests.UsageExpectAndReturnTest.longType":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":231,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":375,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":56,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":452,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":54,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":416,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":212,"org.easymock.tests.UsageCallCountTest.tooManyCalls":518,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":243,"org.easymock.tests.MockingTest.testNiceClassMocking":425,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":166,"org.easymock.tests.MockingTest.testClassMocking":420,"org.easymock.tests2.UsageConstraintsTest.testContains":109,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":275,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":29,"org.easymock.tests2.UsageConstraintsTest.testFind":101,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":60,"org.easymock.tests.MockTypeTest.fromEasyMockClass":439,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":96,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":282,"org.easymock.tests.UsageExpectAndReturnTest.object":198,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":383,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":526,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":253,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":513,"org.easymock.tests.UsageTest.exactCallCountByLastCall":229,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":454,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":311,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":204,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":249,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":446,"org.easymock.tests.MockClassControlTest.testHashCode":503,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":339,"org.easymock.tests2.EasyMockSupportTest.testVerify":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":401,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":455,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":467,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":444,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":531,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":122,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":159,"org.easymock.tests.UsageVarargTest.varargCharAccepted":252,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":458,"org.easymock.tests2.CaptureTest.testCaptureMultiple":522,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":496,"org.easymock.tests2.UsageTest.openCallCountByLastCall":151,"org.easymock.tests.DefaultClassInstantiatorTest.object":459,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":386,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":298,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":466,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":511,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":402,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":356,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":338,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":502,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":7,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":334,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":46,"org.easymock.tests.ReplayStateInvalidCallsTest.times":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":415,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":14,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":410,"org.easymock.tests2.UsageTest.resumeIfFailure":155,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":436,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":37,"org.easymock.tests2.StubTest.stubWithReturnValue":31,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":324,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":118,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":197,"org.easymock.tests2.SerializationTest.testAllMockedMethod":182,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":489,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":291,"org.easymock.samples.SupportTest.voteForRemovals":310,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":470,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":51,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":495,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":413,"org.easymock.tests.UsageExpectAndThrowTest.object":186,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":66,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":116,"org.easymock.tests2.DelegateToTest.testWrongClass":163,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":11,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":281,"org.easymock.tests.UsageStrictMockTest.range":26,"org.easymock.samples.ConstructorCalledMockTest.testTax":302,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":368,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":50,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":323,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":265,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":292,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":521,"org.easymock.tests2.CaptureTest.testCaptureNone":132,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":524,"org.easymock.tests.UsageUnorderedTest.message":236,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":530,"org.easymock.tests.UsageVerifyTest.twoReturns":25,"org.easymock.tests.UsageVarargTest.varargByteAccepted":256,"org.easymock.tests2.ThreadingTest.testThreadSafe":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":405,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":279,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":514,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":306,"org.easymock.tests2.CaptureTest.testCapture_2617107":71,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":493,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":62,"org.easymock.tests2.UsageConstraintsTest.any":107,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":431,"org.easymock.tests2.StubTest.stub":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":494,"org.easymock.tests.UsageExpectAndThrowTest.longType":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":36,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":294,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":430,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":177,"org.easymock.tests2.SerializationTest.testClass":180,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":343,"org.easymock.tests.LimitationsTest.mockNativeMethod":260,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":471,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":207,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":355,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":19,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":179,"org.easymock.tests2.NameTest.nameForMocksControl":94,"org.easymock.tests2.MockedExceptionTest.testMockedException":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":393,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":59,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":45,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":210,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":314,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":325,"org.easymock.tests.MockingTest.testNicePartialClassMocking":209,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":139,"org.easymock.tests2.CaptureTest.testCaptureLast":76,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":353,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":218,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":169,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":105,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":18,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":117,"org.easymock.tests.MockingTest.testTwoMocks":421,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":15,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":48,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":153,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":120,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":535,"org.easymock.samples.ExampleTest.removeNonExistingDocument":304,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":211,"org.easymock.tests.UsageStrictMockTest.differentMethods":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":340,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":534,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":461,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":145,"org.easymock.tests2.MockBuilderTest.testCreateMockString":130,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":395,"org.easymock.tests.UsageExpectAndThrowTest.floatType":183,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":171,"org.easymock.tests.UsageVerifyTest.twoThrows":24,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":312,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":404,"org.easymock.samples.ExampleTest.voteAgainstRemoval":86,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":519,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":484,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":142,"org.easymock.tests.LimitationsTest.privateConstructor":507,"org.easymock.tests2.UsageConstraintsTest.testNotNull":119,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":245,"org.easymock.tests2.UsageTest.defaultResetToNice":152,"org.easymock.samples.ExampleTest.voteAgainstRemovals":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":203,"org.easymock.tests.UsageVarargTest.differentLength":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":354,"org.easymock.tests2.CallbackTest.callback":158,"org.easymock.tests2.UsageConstraintsTest.equals":315,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":332,"org.easymock.tests.UsageTest.openCallCountByLastCall":226,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":97,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":33,"org.easymock.tests.UsageCallCountTest.tooFewCalls":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":267,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":533,"org.easymock.tests.UsageThrowableTest.throwCheckedException":242,"org.easymock.tests.MockingTest.testStrictClassMocking":419,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":293,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":168,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":358,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":433,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":373,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":173,"org.easymock.tests2.CompareToTest.testGreateOrEqual":523,"org.easymock.tests.ObjectMethodsTest.testHashCode":512,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":528,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":146,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":17,"org.easymock.tests2.NameTest.nameForNiceMock":93,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":12,"org.easymock.tests2.DependencyTest.testInterfaceMocking":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":527,"org.easymock.samples.ExampleTest.addDocument":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.DelegateToTest.testStubDelegate":162,"org.easymock.tests2.AnswerTest.stubAnswer":172,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":285,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":326,"org.easymock.tests.UsageVarargTest.varargLongAccepted":255,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":482,"org.easymock.tests.UsageExpectAndReturnTest.floatType":190,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":90,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":303,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":448,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":114,"org.easymock.tests.UsageThrowableTest.noUpperLimit":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":347,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":98,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":366,"org.easymock.tests2.SerializationTest.test":181,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":74,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":296,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":460,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":189,"org.easymock.tests2.UsageConstraintsTest.testSame":103,"org.easymock.samples.SupportTest.addDocument":309,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":372,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":2,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":396,"org.easymock.tests.GenericTest.testPackageScope":246,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":346,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":423,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":0,"org.easymock.tests2.NameTest.nameForMock":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":200,"org.easymock.tests2.UsageStrictMockTest.differentMethods":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":329,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":333,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":192,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":53,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":510,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":222,"org.easymock.tests2.MockedExceptionTest.testRealException":30,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":487,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":486,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":176,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":262,"org.easymock.tests2.NameTest.nameForStrictMock":92,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":322,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":95,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":299,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":367,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":462,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":115,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":319,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":6,"org.easymock.tests2.UsageConstraintsTest.lessThan":121,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":481,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":400,"org.easymock.tests2.CaptureTest.testCaptureRightOne":79,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":532,"org.easymock.tests2.UsageConstraintsTest.testOr":104,"org.easymock.tests.UsageRangeTest.combination":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageTest.wrongArguments":225,"org.easymock.tests2.MockBuilderTest.testWithConstructor":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":397,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":201,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":463,"org.easymock.tests.UsageVarargTest.varargShortAccepted":254,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":516,"org.easymock.tests2.UsageConstraintsTest.cmpTo":108,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":20,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":414,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":61,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests2.CaptureTest.testCaptureFromStub":80,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":427,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":320,"org.easymock.tests.UsageTest.unexpectedCallWithArray":224,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":16,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":284,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":202,"org.easymock.tests2.CaptureTest.testCapture":78,"org.easymock.tests2.UsageConstraintsTest.constraints":99,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":286,"org.easymock.samples.ExampleTest.addAndChangeDocument":89,"org.easymock.tests.UsageStrictMockTest.testVerify":289,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":308,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":232,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":270,"org.easymock.tests.LimitationsTest.abstractClass":506,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":194,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":271,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":23,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":381}}]
