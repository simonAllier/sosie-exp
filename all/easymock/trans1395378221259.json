[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[93,94],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[96,97,98,99,100,101,102,103,104,105,106,107,8,9,108,109,14,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,15,17,22,146,147,148,149,150,151,152,153,33,37,39,40,154,155,156,42,157,45,158,46,159,47,48,160,49,50,161,162,163,164,165,51,166,167,168,169,170,171,172,173,174,175,176,177,178,52,179,180,95,181,182,183,184,185,186,53,187,188,189,190,191,55,192,193,194,195,93,196,94,197,198,199,200,201,202,203,204,58,205,60,61,63,65,206,66,68,207,208,209,72,73,210,211,212,213,74,214,215,216,217,218,219,220,76,221,78,79,222,223,80,81,224,88,90,91,225,226,227,228],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[168],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[25,61],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[230,106,8,109,111,112,113,114,115,116,117,16,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,65,208,224],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[253],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[254,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[51,171,175,95],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[96,256,25,28,202,57,257,58,59,205,258,60,61,62,63,259,64,260,261],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[253,262,204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[6,264,265,266,9,15,16,17,23,24,37,39,40,267,268,269,270,271,272,66,88,90,91],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[273,274,275],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[254,255],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[276,277,93,94,278,199],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplant":{"position":"org.easymock.EasyMock:2000","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:734","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[96,279,280,281,282,282,283,283,284,285,97,98,286,99,100,287,101,288,289,290,254,291,292,293,294,295,296,297,298,299,102,300,256,301,302,303,103,304,305,306,307,308,230,309,0,310,1,2,311,312,3,4,5,6,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,104,105,106,331,107,332,7,8,9,10,11,108,109,12,13,14,110,333,334,335,336,111,337,112,113,114,115,116,117,338,339,340,341,342,343,344,345,346,347,118,119,348,120,349,350,351,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,15,16,17,352,353,354,355,356,357,18,358,359,360,361,362,363,364,19,20,21,365,366,367,22,146,147,148,149,150,368,231,151,23,24,369,25,26,27,28,29,30,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,370,152,153,371,31,372,252,32,33,34,373,374,375,376,377,378,379,35,380,36,37,38,39,40,41,381,154,155,156,382,42,383,384,43,44,385,255,386,387,388,389,390,391,392,393,253,394,395,396,397,398,399,400,401,402,403,404,405,406,157,45,158,46,159,47,48,160,49,50,161,162,407,408,409,410,411,412,413,163,414,164,165,51,166,415,167,168,169,170,171,172,416,173,174,175,176,177,178,52,179,180,95,181,182,417,183,184,185,186,418,419,420,421,422,53,54,423,424,425,426,427,187,188,189,190,191,428,429,430,431,432,55,56,433,434,435,436,437,192,193,438,194,195,276,277,93,196,94,197,439,198,199,440,441,200,201,202,203,442,262,443,204,444,445,446,447,448,449,450,57,58,59,451,205,258,60,61,452,62,63,64,65,206,66,67,68,69,207,208,209,70,71,72,73,210,453,211,454,455,456,212,457,458,459,460,213,74,214,215,216,217,261,461,218,462,463,75,219,220,76,464,77,221,78,79,222,223,80,81,465,224,82,466,83,84,85,86,87,467,88,89,90,91,92,468,469,470,225,471,472,226,473,474,475,476,477,478,479,480,481,227,482,483,484,485,486,228,487,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[489,490,491,6,9,11,12,13,15,16,17,36,37,39,40,66,67,70,71,83,84,85,86,88,90,91],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[154],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[342,492,493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":166,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":8,"org.easymock.tests2.UsageTest.argumentsOrdered":71,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":253,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":69,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":281,"org.easymock.tests2.DelegateToTest.testReturnException":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":306,"org.easymock.tests.MockingTest.testPartialClassMocking":118,"org.easymock.tests.MockClassControlTest.testToString":19,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":466,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":476,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":232,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":489,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":201,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":172,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":149,"org.easymock.tests2.UsageTest.wrongArguments":67,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":437,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":378,"org.easymock.samples.ExampleTest.answerVsDelegate":286,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":28,"org.easymock.tests2.UsageConstraintsTest.testNull":168,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":350,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":215,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":50,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":367,"org.easymock.tests2.CaptureTest.testPrimitive":194,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":151,"org.easymock.tests.UsageTest.moreThanOneArgument":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":251,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":328,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":290,"org.easymock.tests.UsageVarargTest.varargIntAccepted":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":398,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":141,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":426,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":386,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":145,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":275,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":55,"org.easymock.tests.ReplayStateInvalidUsageTest.times":321,"org.easymock.tests2.DependencyTest.testClassMocking":440,"org.easymock.tests2.AnswerTest.answer":211,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":400,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":450,"org.easymock.tests2.CaptureTest.testAnd":192,"org.easymock.tests2.UsageTest.strictResetToDefault":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":159,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":147,"org.easymock.tests2.DelegateToTest.testDelegate":446,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":247,"org.easymock.tests.LimitationsTest.mockFinalMethod":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":298,"org.easymock.tests2.DependencyTest.testClassMockingSupport":441,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":23,"org.easymock.tests2.CaptureTest.testCapture1_2446744":195,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":448,"org.easymock.tests.UsageThrowableTest.throwError":111,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":315,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":27,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":488,"org.easymock.samples.PartialClassMockTest.testGetArea":96,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":316,"org.easymock.tests.MockingTest.testInterfaceMocking":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":142,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":477,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":44,"org.easymock.tests2.UsageTest.niceToStrict":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":205,"org.easymock.tests2.MockBuilderTest.testCreateMock":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":484,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":434,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":241,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":268,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":47,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":336,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":0,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":376,"org.easymock.tests.UsageOverloadedMethodTest.overloading":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":481,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":177,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":252,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":132,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":104,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":492,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":176,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":94,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":355,"org.easymock.tests2.EasyMockSupportClassTest.testAll":225,"org.easymock.tests.MockClassControlTest.testEquals":366,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":249,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":449,"org.easymock.tests2.CaptureTest.testCaptureAll":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":296,"org.easymock.tests.MockNameTest.defaultName":7,"org.easymock.tests2.UsageConstraintsTest.testMatches":178,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":329,"org.easymock.samples.ExampleTest.voteForRemovals":101,"org.easymock.tests.UsageVarargTest.allKinds":362,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":15,"org.easymock.samples.BasicClassMockTest.testPrintContent":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":297,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":116,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":87,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":445,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":309,"org.easymock.tests2.UsageConstraintsTest.greaterThan":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":146,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":76,"org.easymock.samples.ExampleTest.voteForRemoval":99,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":344,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":464,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":188,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":263,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":29,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":261,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":65,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":325,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":158,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":305,"org.easymock.tests2.CaptureTest.testCaptureFirst":199,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":46,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":73,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":34,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":128,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":190,"org.easymock.tests2.UsageTest.moreThanOneArgument":66,"org.easymock.tests2.CaptureTest.testCapture2_2446744":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":401,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":63,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":361,"org.easymock.tests.GenericTest.testBridgedEquals":301,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":4,"org.easymock.tests.UsageExpectAndReturnTest.longType":124,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":294,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":250,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":259,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":417,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":370,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":326,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":374,"org.easymock.tests.UsageCallCountTest.tooManyCalls":5,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":273,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":436,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":237,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":115,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":78,"org.easymock.tests.MockingTest.testNiceClassMocking":351,"org.easymock.tests.MockingTest.testClassMocking":346,"org.easymock.tests2.UsageConstraintsTest.testContains":175,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":257,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":310,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":163,"org.easymock.tests2.UsageConstraintsTest.testFind":167,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":106,"org.easymock.tests.MockTypeTest.fromEasyMockClass":26,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":460,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":35,"org.easymock.tests.UsageExpectAndReturnTest.object":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":49,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":357,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":384,"org.easymock.tests.UsageTest.exactCallCountByLastCall":14,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":254,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":453,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":137,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":352,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":419,"org.easymock.tests.MockClassControlTest.testHashCode":365,"org.easymock.tests2.EasyMockSupportTest.testVerify":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":479,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":274,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":335,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":371,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":447,"org.easymock.tests.UsageVarargTest.varargCharAccepted":356,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":406,"org.easymock.tests2.UsageTest.openCallCountByLastCall":207,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":162,"org.easymock.tests.DefaultClassInstantiatorTest.object":338,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":334,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":42,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":480,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":239,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":418,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":21,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":219,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":238,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":138,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":373,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":228,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":270,"org.easymock.tests2.UsageTest.resumeIfFailure":72,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":308,"org.easymock.tests2.StubTest.stubWithReturnValue":224,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":130,"org.easymock.tests2.SerializationTest.testAllMockedMethod":442,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":399,"org.easymock.samples.SupportTest.voteForRemovals":97,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":299,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":421,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":244,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":405,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":454,"org.easymock.tests.UsageExpectAndThrowTest.object":242,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":332,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":181,"org.easymock.tests2.DelegateToTest.testWrongClass":444,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":152,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":153,"org.easymock.tests.UsageStrictMockTest.range":39,"org.easymock.samples.ConstructorCalledMockTest.testTax":282,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":410,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":160,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":243,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":468,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":377,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":156,"org.easymock.tests2.CaptureTest.testCaptureNone":196,"org.easymock.tests.UsageUnorderedTest.message":6,"org.easymock.tests.UsageVerifyTest.twoReturns":17,"org.easymock.tests.UsageVarargTest.varargByteAccepted":360,"org.easymock.tests2.ThreadingTest.testThreadSafe":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":482,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":312,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":43,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":279,"org.easymock.tests2.CaptureTest.testCapture_2617107":438,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":403,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":231,"org.easymock.tests2.UsageConstraintsTest.any":173,"org.easymock.tests2.StubTest.stub":465,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndThrowTest.longType":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":307,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":342,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":319,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":89,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":53,"org.easymock.tests2.SerializationTest.testClass":202,"org.easymock.tests.LimitationsTest.mockNativeMethod":103,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":140,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":256,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":430,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":92,"org.easymock.tests2.NameTest.nameForMocksControl":86,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":432,"org.easymock.tests2.MockedExceptionTest.testMockedException":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":472,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":109,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":459,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":120,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":236,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":213,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":61,"org.easymock.tests.MockingTest.testNicePartialClassMocking":119,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":428,"org.easymock.tests2.CaptureTest.testCaptureLast":93,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":24,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":81,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":182,"org.easymock.tests.MockingTest.testTwoMocks":347,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":240,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":70,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":185,"org.easymock.samples.ExampleTest.removeNonExistingDocument":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":433,"org.easymock.tests.UsageStrictMockTest.differentMethods":40,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":420,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":340,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":189,"org.easymock.tests2.ConstraintsToStringTest.andToString":271,"org.easymock.tests2.MockBuilderTest.testCreateMockString":64,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":473,"org.easymock.tests.UsageExpectAndThrowTest.floatType":234,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":470,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":456,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":227,"org.easymock.samples.ExampleTest.voteAgainstRemoval":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":394,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":154,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":220,"org.easymock.tests.LimitationsTest.privateConstructor":303,"org.easymock.tests2.UsageConstraintsTest.testNotNull":184,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":412,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":117,"org.easymock.tests2.UsageTest.defaultResetToNice":209,"org.easymock.samples.ExampleTest.voteAgainstRemovals":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":136,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":429,"org.easymock.tests.UsageVarargTest.differentLength":18,"org.easymock.tests2.CallbackTest.callback":82,"org.easymock.tests2.UsageConstraintsTest.equals":415,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":462,"org.easymock.tests.UsageTest.openCallCountByLastCall":108,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":368,"org.easymock.tests.UsageCallCountTest.tooFewCalls":2,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":379,"org.easymock.tests.UsageThrowableTest.throwCheckedException":114,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":264,"org.easymock.tests.MockingTest.testStrictClassMocking":345,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":80,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":333,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":56,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":79,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":223,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":457,"org.easymock.tests.ObjectMethodsTest.testHashCode":383,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":191,"org.easymock.tests2.NameTest.nameForNiceMock":85,"org.easymock.tests2.DependencyTest.testInterfaceMocking":200,"org.easymock.samples.ExampleTest.addDocument":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":487,"org.easymock.tests2.DelegateToTest.testStubDelegate":204,"org.easymock.tests2.AnswerTest.stubAnswer":212,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":37,"org.easymock.tests.UsageVarargTest.varargLongAccepted":359,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":139,"org.easymock.tests.UsageExpectAndReturnTest.floatType":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":210,"org.easymock.tests2.ConstraintsToStringTest.orToString":267,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":283,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":425,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":180,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":32,"org.easymock.tests.UsageThrowableTest.noUpperLimit":337,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":165,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":408,"org.easymock.tests2.SerializationTest.test":203,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":276,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":493,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":339,"org.easymock.tests2.UsageConstraintsTest.testSame":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":122,"org.easymock.samples.SupportTest.addDocument":285,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":474,"org.easymock.tests.GenericTest.testPackageScope":102,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":388,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":424,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":349,"org.easymock.tests2.NameTest.nameForMock":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":133,"org.easymock.tests2.UsageStrictMockTest.differentMethods":91,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":463,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":125,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":246,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":382,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":148,"org.easymock.tests2.MockedExceptionTest.testRealException":414,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":30,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":396,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":150,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":324,"org.easymock.tests2.NameTest.nameForStrictMock":84,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":451,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":458,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":216,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":409,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":490,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":95,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":341,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":58,"org.easymock.tests2.UsageStrictMockTest.range":90,"org.easymock.tests2.UsageConstraintsTest.lessThan":186,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":392,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":478,"org.easymock.tests2.CaptureTest.testCaptureRightOne":197,"org.easymock.tests2.UsageConstraintsTest.testOr":170,"org.easymock.tests.UsageRangeTest.combination":22,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":74,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":475,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":364,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":126,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":255,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":343,"org.easymock.tests.UsageVarargTest.varargShortAccepted":358,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":3,"org.easymock.tests2.UsageConstraintsTest.cmpTo":174,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":455,"org.easymock.tests2.CompareToTest.testLessThan":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":387,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests2.CaptureTest.testCaptureFromStub":439,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":314,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":59,"org.easymock.tests.UsageTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":135,"org.easymock.tests2.CaptureTest.testCapture":278,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":38,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.samples.ExampleTest.addAndChangeDocument":289,"org.easymock.tests2.ConstraintsToStringTest.notToString":269,"org.easymock.tests.UsageStrictMockTest.testVerify":381,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":284,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":380,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":295,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":143,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":127,"org.easymock.tests.LimitationsTest.abstractClass":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":144,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":33,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":491,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":48,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":353}}]
