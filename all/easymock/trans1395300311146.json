[{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[3,4,5,6,7,8,9,10],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[11,12,13,14],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,11,32,33,34],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[35,36],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[37,38,39,40,41,42,43,21,27,28,31,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[65,66,67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[77,78,79,80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[77,78,79],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[37,46,81,61,62],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,37,38,102,103,104,105,106,65,107,66,108,109,110,111,112,113,114,67,115,116,117,118,119,120,121,122,123,124,125,126,39,127,78,128,129,130,40,41,42,131,132,133,134,135,136,137,138,139,140,43,141,142,143,144,145,146,147,148,149,150,12,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,68,69,169,70,71,72,170,171,73,172,173,174,175,176,177,79,178,179,74,180,181,182,183,75,76,16,184,185,186,187,188,189,190,191,192,193,44,194,195,45,196,197,46,47,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,48,49,50,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,51,52,247,248,53,54,249,250,251,252,253,254,255,256,257,258,55,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,60,284,61,62,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[339,340,4,5,6,341,9,10,342,11],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[343],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[344,345,346],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[344,345,346],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[347,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[64,347,349,350,351,352,353,354],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"failures":[64,77,355,356,357,349,96,100,37,38,65,107,108,109,112,113,114,67,115,116,117,118,124,125,126,127,128,129,130,42,131,132,133,134,135,136,137,138,139,140,43,141,142,23,145,11,12,151,155,162,163,164,166,167,168,68,69,169,70,71,72,170,171,172,173,174,175,176,177,79,178,179,74,180,181,183,75,76,16,184,185,193,196,46,47,200,201,204,245,246,247,248,249,254,55,259,260,261,265,266,284,62,285,287,288,289,290,291,292,295,297,301,304,312,313,317,324,325,326,329,330,331,332,333],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[358],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[282,283,315,316],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[40,359,53],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[37,39,40,41,44,45,46,51,52,53,54,57,60,61,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[77,78,79],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[65,66,67,68,69,70,72,170,73,74,75],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[117],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[68,170],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[360],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[172],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:105","failures":[361,361,362,362,17,82,363,364,83,84,85,86,87,88,365,89,90,91,92,366,64,93,367,77,368,18,369,355,370,371,347,356,357,349,372,373,94,95,96,97,98,99,100,101,37,38,102,374,103,104,105,106,65,107,66,108,109,110,111,112,113,114,67,115,116,117,375,376,377,378,379,118,119,380,381,382,383,384,120,121,122,123,124,125,126,39,127,78,128,129,130,40,41,42,131,132,133,134,135,136,137,138,139,140,43,141,142,143,19,21,22,385,23,24,25,26,340,27,28,31,10,342,386,387,350,388,144,389,390,391,392,393,394,145,146,147,148,149,150,395,11,12,13,396,397,398,399,400,151,152,401,402,403,404,405,406,407,408,409,410,411,360,412,413,414,415,416,417,418,419,352,420,421,422,423,424,425,426,353,354,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,68,69,359,169,70,71,72,170,171,73,172,173,174,175,176,177,79,178,179,74,180,181,182,183,75,76,16,427,428,184,185,186,63,187,188,189,190,191,192,193,44,429,430,431,432,348,433,434,435,436,437,194,195,45,196,197,46,47,198,199,200,201,202,203,204,205,206,207,438,439,440,441,442,80,443,444,445,446,447,208,448,209,210,211,212,48,49,50,213,214,215,216,217,218,219,449,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,51,52,247,248,53,54,249,32,250,251,33,252,253,254,255,256,257,258,450,451,452,453,454,455,456,457,55,259,260,261,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,262,474,475,476,477,478,263,479,264,265,266,480,267,481,482,268,483,484,485,486,487,344,488,489,269,270,271,272,490,273,274,275,276,277,278,279,280,281,282,283,60,284,61,62,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,358,491,492,34,493,494,304,495,305,306,307,308,309,310,496,497,498,499,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[361,361,362,362,17,363,364,366,64,367,77,368,18,355,370,371,347,356,357,349,372,373,94,95,96,19,21,22,385,23,24,25,26,340,27,28,31,10,342,386,387,350,388,389,390,391,392,11,13,406,407,408,409,410,411,360,412,413,414,415,416,417,418,419,352,420,421,422,423,424,425,426,353,354,431,432,348,434,32,33,450,451,452,453,454,457,500,484,485,486,487,344,488,501,489,303,358,491,492,34,493,496,498,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[146,149,464],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[484,485,488],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[17,83,85,86,88,91,366,64,93,367,77,368,355,356,357,349,96,100,37,38,65,107,108,109,112,113,114,67,116,117,118,124,125,126,127,128,129,130,42,131,132,133,134,135,136,137,138,139,140,43,141,142,21,23,25,26,28,10,386,387,350,388,144,389,390,145,149,11,12,151,409,360,420,426,155,158,162,163,164,165,166,167,168,68,69,169,70,71,72,170,171,172,173,174,175,176,177,79,178,179,74,180,181,183,75,76,16,184,185,193,432,348,434,196,46,47,200,201,204,205,206,245,246,247,248,249,55,259,260,261,264,265,266,284,62,285,287,288,289,290,291,292,298,299,300,301,302,491,34,498,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":69,"org.easymock.tests2.UsageTest.argumentsOrdered":41,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":245,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":141,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":468,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":78,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":82,"org.easymock.tests2.DelegateToTest.testReturnException":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":306,"org.easymock.tests.MockingTest.testPartialClassMocking":432,"org.easymock.tests.MockClassControlTest.testToString":452,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":374,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":415,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":225,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":360,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":4,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":171,"org.easymock.tests2.UsageTest.wrongArguments":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":200,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":384,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":257,"org.easymock.samples.ExampleTest.answerVsDelegate":84,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":33,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":436,"org.easymock.tests2.UsageConstraintsTest.testNull":70,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":367,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":457,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":43,"org.easymock.tests2.CaptureTest.testPrimitive":108,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":204,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":244,"org.easymock.tests.UsageTest.moreThanOneArgument":246,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":295,"org.easymock.tests.UsageTest.argumentsOrdered":54,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":213,"org.easymock.tests.UsageVarargTest.varargIntAccepted":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":473,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":8,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":404,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":460,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":302,"org.easymock.tests.ReplayStateInvalidUsageTest.times":444,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":118,"org.easymock.tests2.DependencyTest.testClassMocking":427,"org.easymock.tests2.AnswerTest.answer":145,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":474,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":123,"org.easymock.tests2.CaptureTest.testAnd":65,"org.easymock.tests2.UsageTest.strictResetToDefault":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":136,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":260,"org.easymock.tests2.DelegateToTest.testDelegate":161,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":240,"org.easymock.tests.LimitationsTest.mockFinalMethod":499,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":309,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":224,"org.easymock.tests2.DependencyTest.testClassMockingSupport":428,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":218,"org.easymock.tests2.CaptureTest.testCapture1_2446744":109,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":121,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":439,"org.easymock.tests.UsageThrowableTest.throwError":285,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":251,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":405,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":354,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":440,"org.easymock.tests.MockingTest.testInterfaceMocking":433,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":299,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":312,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":416,"org.easymock.tests2.UsageTest.niceToStrict":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":23,"org.easymock.tests2.MockBuilderTest.testCreateMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":423,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":381,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":234,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":137,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":208,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":255,"org.easymock.tests.UsageOverloadedMethodTest.overloading":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":352,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":191,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":176,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":330,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":175,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":345,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":114,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":490,"org.easymock.tests.MockClassControlTest.testEquals":456,"org.easymock.tests2.EasyMockSupportClassTest.testAll":409,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":122,"org.easymock.tests2.CaptureTest.testCaptureAll":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":222,"org.easymock.tests.MockNameTest.defaultName":269,"org.easymock.tests2.UsageConstraintsTest.testMatches":177,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":296,"org.easymock.samples.ExampleTest.voteForRemovals":88,"org.easymock.tests.UsageVarargTest.allKinds":280,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":223,"org.easymock.samples.BasicClassMockTest.testPrintContent":364,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":291,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":401,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":310,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":501,"org.easymock.tests2.UsageConstraintsTest.greaterThan":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":410,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":259,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":349,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":489,"org.easymock.samples.ExampleTest.voteForRemoval":85,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":163,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":372,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":29,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":252,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":18,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":124,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":303,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":134,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":305,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":156,"org.easymock.tests2.CaptureTest.testCaptureFirst":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":135,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":326,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":165,"org.easymock.tests2.UsageTest.moreThanOneArgument":126,"org.easymock.tests2.CaptureTest.testCapture2_2446744":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":475,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":28,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":279,"org.easymock.tests.GenericTest.testBridgedEquals":493,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":49,"org.easymock.tests.UsageExpectAndReturnTest.longType":322,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":220,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":30,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":243,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":182,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":254,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":315,"org.easymock.tests.UsageCallCountTest.tooManyCalls":50,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":424,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":327,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":230,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":290,"org.easymock.tests.MockingTest.testNiceClassMocking":437,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":387,"org.easymock.tests.MockingTest.testClassMocking":430,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":448,"org.easymock.tests2.UsageConstraintsTest.testContains":174,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":20,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":96,"org.easymock.tests2.UsageConstraintsTest.testFind":169,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":266,"org.easymock.tests.MockTypeTest.fromEasyMockClass":250,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":187,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":194,"org.easymock.tests.UsageExpectAndReturnTest.object":329,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":355,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":5,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":274,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":482,"org.easymock.tests.UsageTest.exactCallCountByLastCall":249,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":494,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":342,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":270,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":335,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":190,"org.easymock.tests.ResultTest.createThrowResultToString":2,"org.easymock.tests.MockClassControlTest.testHashCode":455,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":397,"org.easymock.tests2.EasyMockSupportTest.testVerify":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":418,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":215,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":188,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":120,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":56,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":395,"org.easymock.tests.UsageVarargTest.varargCharAccepted":273,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":500,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":479,"org.easymock.tests2.UsageTest.openCallCountByLastCall":128,"org.easymock.tests.DefaultClassInstantiatorTest.object":484,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":142,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":281,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":267,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":419,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":396,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":454,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":231,"org.easymock.tests.CapturesMatcherTest.test":36,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":336,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":314,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":426,"org.easymock.tests2.UsageTest.resumeIfFailure":42,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":308,"org.easymock.tests2.StubTest.stubWithReturnValue":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":339,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":328,"org.easymock.tests2.SerializationTest.testAllMockedMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":262,"org.easymock.samples.SupportTest.voteForRemovals":91,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":358,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":237,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":263,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":146,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":495,"org.easymock.tests.UsageExpectAndThrowTest.object":235,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":180,"org.easymock.tests2.DelegateToTest.testWrongClass":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":205,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":206,"org.easymock.tests.UsageStrictMockTest.range":46,"org.easymock.samples.ConstructorCalledMockTest.testTax":361,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":393,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":139,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":236,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":25,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":406,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":256,"org.easymock.tests2.CaptureTest.testCaptureNone":113,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":313,"org.easymock.tests.UsageUnorderedTest.message":60,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":58,"org.easymock.tests.UsageVerifyTest.twoReturns":62,"org.easymock.tests.UsageVarargTest.varargByteAccepted":278,"org.easymock.tests2.ThreadingTest.testThreadSafe":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":421,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":212,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":268,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":363,"org.easymock.tests2.CaptureTest.testCapture_2617107":66,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":477,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":203,"org.easymock.tests2.UsageConstraintsTest.any":172,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":443,"org.easymock.tests2.StubTest.stub":154,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":478,"org.easymock.tests.UsageExpectAndThrowTest.longType":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":307,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":344,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":80,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":101,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":151,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests.LimitationsTest.mockNativeMethod":498,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":34,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":338,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":377,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":102,"org.easymock.tests2.NameTest.nameForMocksControl":106,"org.easymock.tests2.MockedExceptionTest.testMockedException":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":411,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":248,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":434,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":229,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":366,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":26,"org.easymock.tests.MockingTest.testNicePartialClassMocking":348,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":368,"org.easymock.tests2.CaptureTest.testCaptureLast":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":3,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":375,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":219,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":390,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":170,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":181,"org.easymock.tests.MockingTest.testTwoMocks":431,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":351,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":233,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":40,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":76,"org.easymock.samples.ExampleTest.removeNonExistingDocument":365,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":441,"org.easymock.tests.UsageStrictMockTest.differentMethods":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":398,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":486,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":164,"org.easymock.tests2.MockBuilderTest.testCreateMockString":31,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":412,"org.easymock.tests.UsageExpectAndThrowTest.floatType":227,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":148,"org.easymock.tests.ResultTest.createReturnResultToString":1,"org.easymock.tests.UsageVerifyTest.twoThrows":61,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":420,"org.easymock.tests.ResultTest.createDelegateResultToString":0,"org.easymock.samples.ExampleTest.voteAgainstRemoval":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":311,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":357,"org.easymock.tests.LimitationsTest.privateConstructor":497,"org.easymock.tests2.UsageConstraintsTest.testNotNull":75,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":292,"org.easymock.tests2.UsageTest.defaultResetToNice":130,"org.easymock.samples.ExampleTest.voteAgainstRemovals":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":334,"org.easymock.tests.UsageVarargTest.differentLength":275,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":376,"org.easymock.tests2.CallbackTest.callback":153,"org.easymock.tests2.UsageConstraintsTest.equals":359,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":370,"org.easymock.tests.UsageTest.openCallCountByLastCall":247,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":202,"org.easymock.tests.UsageCallCountTest.tooFewCalls":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":388,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":258,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":343,"org.easymock.tests.UsageThrowableTest.throwCheckedException":289,"org.easymock.tests.MockingTest.testStrictClassMocking":429,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":389,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":318,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":119,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":350,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":445,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":144,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":150,"org.easymock.tests.ObjectMethodsTest.testHashCode":481,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":7,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":166,"org.easymock.tests2.NameTest.nameForNiceMock":105,"org.easymock.tests2.DependencyTest.testInterfaceMocking":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":6,"org.easymock.samples.ExampleTest.addDocument":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":422,"org.easymock.tests2.DelegateToTest.testStubDelegate":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":353,"org.easymock.tests2.AnswerTest.stubAnswer":149,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":196,"org.easymock.tests.UsageVarargTest.varargLongAccepted":277,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndReturnTest.floatType":321,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":337,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":10,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":362,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":403,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":179,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":192,"org.easymock.tests.UsageThrowableTest.noUpperLimit":286,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":168,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":391,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":110,"org.easymock.tests2.SerializationTest.test":12,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":346,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":485,"org.easymock.tests2.UsageConstraintsTest.testSame":71,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":320,"org.easymock.samples.SupportTest.addDocument":90,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":413,"org.easymock.tests.GenericTest.testPackageScope":491,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":402,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":435,"org.easymock.tests2.NameTest.nameForMock":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":331,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":371,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":239,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":480,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":261,"org.easymock.tests2.MockedExceptionTest.testRealException":97,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":471,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":100,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":447,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":201,"org.easymock.tests2.NameTest.nameForStrictMock":104,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":385,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":77,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":392,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":487,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":74,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":21,"org.easymock.tests2.UsageStrictMockTest.range":37,"org.easymock.tests2.UsageConstraintsTest.lessThan":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":417,"org.easymock.tests2.CaptureTest.testCaptureRightOne":67,"org.easymock.tests2.UsageConstraintsTest.testOr":72,"org.easymock.tests.UsageRangeTest.combination":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":64,"org.easymock.tests.UsageTest.wrongArguments":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":414,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":332,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":488,"org.easymock.tests.UsageVarargTest.varargShortAccepted":276,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":48,"org.easymock.tests2.UsageConstraintsTest.cmpTo":173,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":147,"org.easymock.tests2.CompareToTest.testLessThan":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":461,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":129,"org.easymock.tests2.CaptureTest.testCaptureFromStub":115,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":438,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":22,"org.easymock.tests.UsageTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":211,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":333,"org.easymock.tests2.CaptureTest.testCapture":35,"org.easymock.tests2.UsageConstraintsTest.constraints":68,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":197,"org.easymock.samples.ExampleTest.addAndChangeDocument":89,"org.easymock.tests.UsageStrictMockTest.testVerify":199,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":92,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":221,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":300,"org.easymock.tests.LimitationsTest.abstractClass":496,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":325,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":138,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":81,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":271}}]
