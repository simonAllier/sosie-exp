[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[5,6,7,8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,5,6,35,36,37,38,39,7,8,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[71,72,73,74,75,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[77,77,78,78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,10,11,98,99,27,100,101,102,103,104,105,106,107,108,109,110,111,112,30,113,114,115,116,117,118,0,119,120,121,122,123,124,125,126,127,128,129,130,3,131,132,133,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[77,77,78,78,135,136,137,92,95,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,100,101,102,157,158,159,160,161,162,163,164,165,166,105,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,0,71,196,119,197,72,1,120,121,198,199,122,200,123,201,124,125,202,126,127,203,128,204,205,206,2,56,207,208,129,73,74,130,209,3,210,211,75,212,213,76,214,4,215,216],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[77,78,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,217,218,219,198,220,221,125,127,222,223,224],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[77,77,78,78,135,136,137,92,95,140,141,142,143,145,147,148,149,150,153,155,156,100,101,102,157,158,159,105,167,169,170,174,177,187,193,0,196,119,72,1,120,121,199,122,123,201,124,125,202,126,127,203,128,204,205,206,2,56,129,73,74,130,3,216],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[225,226,227,228,229,22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[45],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[83,13,230,231,232,233,234,19,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,4,215,216,264],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[265,266,225,135,267,226,268,227,228,269,229,270,136,137,271,272,273,274,275,276,277,278,279,9,82,83,84,280,85,87,281,282,88,89,283,141,142,143,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,10,11,305,98,99,306,12,14,15,16,17,18,307,308,230,145,19,20,21,22,23,24,309,310,311,312,313,314,147,148,315,316,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,153,25,26,27,257,317,318,258,259,260,261,262,319,28,29,263,320,321,322,106,323,324,107,108,325,326,327,328,329,330,331,332,333,109,110,334,335,336,337,111,112,338,339,30,340,113,114,341,167,342,343,79,344,169,345,170,174,177,187,193,72,120,121,201,124,125,202,346,126,127,347,348,349,350,351,32,33,34,5,6,35,36,37,38,39,8,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,203,128,352,204,205,206,56,74,131,57,58,59,60,61,62,63,64,65,66,67,69,70,133,353,354,355,356,216],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[80,357,358,359,360],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"argType":"type","paramType":"type"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[65,361,67,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[362,363,364,365,366,367],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.LastControl:92","failures":[34,5,37,38,7,48,57,59,67],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[45,205],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[268,308,368,353,355,369,356],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[265,77,78,266,225,135,267,226,268,227,228,269,229,370,270,136,137,371,372,373,374,271,272,273,375,274,275,376,276,277,278,279,9,81,377,82,83,84,280,85,86,87,281,282,88,89,283,90,91,378,92,379,380,93,94,95,96,97,138,139,140,141,142,381,143,382,383,144,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,384,304,10,11,305,98,99,306,385,386,387,388,389,390,391,12,13,14,15,16,17,18,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,307,408,308,230,409,410,411,145,231,232,233,234,19,235,20,21,22,23,24,412,413,414,415,416,417,418,419,420,421,309,310,311,312,422,313,314,146,147,148,149,150,315,316,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,151,152,153,154,25,26,27,155,156,100,101,102,157,158,159,423,424,368,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,160,161,162,163,164,165,447,166,448,103,449,450,104,105,257,317,318,258,259,260,261,262,451,452,453,454,455,456,457,458,459,460,319,461,462,463,28,464,29,465,263,320,321,322,106,323,324,107,466,108,325,326,327,328,467,468,329,330,331,332,333,109,110,334,335,336,337,469,111,112,470,338,471,339,30,340,113,114,341,167,168,472,473,115,116,117,118,342,474,475,343,79,344,476,477,478,479,169,345,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,0,217,196,119,218,197,72,1,120,219,121,480,198,199,122,221,123,31,201,124,125,202,481,346,126,127,222,347,348,349,350,351,32,33,34,5,482,6,35,36,37,38,39,7,8,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,203,128,352,204,205,206,2,483,56,207,208,129,73,74,130,209,3,484,485,486,487,488,131,132,489,490,491,492,493,210,494,495,496,211,497,498,57,58,59,60,61,62,63,64,65,66,67,68,69,70,499,500,501,502,503,133,134,504,505,506,507,508,509,353,354,355,369,356,4,215,216,264],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[167,168,169,219,198,510,511,512,513,514],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"prefix"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests2.UsageTest.argumentsOrdered":112,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":280,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":326,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":432,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":335,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":267,"org.easymock.tests2.DelegateToTest.testReturnException":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":232,"org.easymock.tests.MockingTest.testPartialClassMocking":141,"org.easymock.tests.MockClassControlTest.testToString":100,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":473,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":181,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":237,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":330,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":510,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":39,"org.easymock.tests2.UsageTest.wrongArguments":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":14,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":508,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":406,"org.easymock.samples.ExampleTest.answerVsDelegate":268,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":95,"org.easymock.tests2.UsageConstraintsTest.testNull":35,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":383,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":204,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":159,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":325,"org.easymock.tests2.CaptureTest.testPrimitive":60,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":18,"org.easymock.tests.UsageTest.moreThanOneArgument":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":256,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":352,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":458,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":451,"org.easymock.tests.UsageTest.argumentsOrdered":89,"org.easymock.tests.UsageVarargTest.varargIntAccepted":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":20,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":0,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":495,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":492,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":24,"org.easymock.tests.ReplayStateInvalidUsageTest.times":400,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":133,"org.easymock.tests2.DependencyTest.testClassMocking":467,"org.easymock.tests2.AnswerTest.answer":342,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":439,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":479,"org.easymock.tests2.CaptureTest.testAnd":57,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":380,"org.easymock.tests2.UsageTest.strictResetToDefault":333,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":457,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":323,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":455,"org.easymock.tests2.DelegateToTest.testDelegate":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":252,"org.easymock.tests.LimitationsTest.mockFinalMethod":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":416,"org.easymock.tests2.DependencyTest.testClassMockingSupport":468,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":90,"org.easymock.tests2.CaptureTest.testCapture1_2446744":61,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":483,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":477,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":394,"org.easymock.tests.UsageThrowableTest.throwError":257,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":94,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":493,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":460,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":195,"org.easymock.samples.PartialClassMockTest.testGetArea":135,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":395,"org.easymock.tests.MockingTest.testInterfaceMocking":381,"org.easymock.tests2.CompareToTest.testLessOrEqual":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":21,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":182,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":238,"org.easymock.tests2.UsageTest.niceToStrict":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":72,"org.easymock.tests2.MockBuilderTest.testCreateMock":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":190,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":505,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":246,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":324,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":374,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":420,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":404,"org.easymock.tests.UsageOverloadedMethodTest.overloading":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":192,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":43,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":295,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":315,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":42,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":66,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":375,"org.easymock.tests2.EasyMockSupportClassTest.testAll":174,"org.easymock.tests.MockClassControlTest.testEquals":158,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":148,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":254,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":414,"org.easymock.tests2.CaptureTest.testCaptureAll":58,"org.easymock.tests.MockNameTest.defaultName":81,"org.easymock.tests2.UsageConstraintsTest.testMatches":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":459,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":392,"org.easymock.samples.ExampleTest.voteForRemovals":229,"org.easymock.tests.UsageVarargTest.allKinds":9,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":82,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":415,"org.easymock.samples.BasicClassMockTest.testPrintContent":137,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":261,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":471,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":235,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":369,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":514,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":447,"org.easymock.tests2.UsageConstraintsTest.greaterThan":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":175,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":461,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":130,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":166,"org.easymock.samples.ExampleTest.voteForRemoval":227,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":209,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":348,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":96,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":496,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":2,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":145,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":332,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":322,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":231,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":509,"org.easymock.tests2.CaptureTest.testCaptureFirst":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":106,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":338,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":291,"org.easymock.tests2.UsageTest.moreThanOneArgument":109,"org.easymock.tests2.CaptureTest.testCapture2_2446744":69,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":440,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":122,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":279,"org.easymock.tests.GenericTest.testBridgedEquals":150,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":313,"org.easymock.tests.UsageExpectAndReturnTest.longType":287,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":412,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":320,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":255,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":51,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":456,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":418,"org.easymock.tests.UsageCallCountTest.tooManyCalls":314,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":507,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":242,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":260,"org.easymock.tests.MockingTest.testNiceClassMocking":144,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":124,"org.easymock.tests.MockingTest.testClassMocking":139,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":421,"org.easymock.tests2.UsageConstraintsTest.testContains":41,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":71,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":216,"org.easymock.tests2.UsageConstraintsTest.testFind":6,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":236,"org.easymock.tests.MockTypeTest.fromEasyMockClass":93,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":29,"org.easymock.tests.UsageExpectAndReturnTest.object":294,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":506,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":511,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":275,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":450,"org.easymock.tests.UsageTest.exactCallCountByLastCall":283,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":452,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":389,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":168,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":271,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":300,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":485,"org.easymock.tests.MockClassControlTest.testHashCode":157,"org.easymock.tests2.EasyMockSupportTest.testVerify":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":184,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":453,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":307,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":476,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":31,"org.easymock.tests.UsageVarargTest.varargCharAccepted":274,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":446,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":445,"org.easymock.tests2.UsageTest.openCallCountByLastCall":336,"org.easymock.tests.DefaultClassInstantiatorTest.object":160,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":327,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":372,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":244,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":258,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":502,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":484,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":102,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":73,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":243,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":417,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":193,"org.easymock.tests2.UsageTest.resumeIfFailure":470,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":92,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":494,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":234,"org.easymock.tests2.StubTest.stubWithReturnValue":263,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":219,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":52,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":293,"org.easymock.tests2.SerializationTest.testAllMockedMethod":170,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":438,"org.easymock.samples.SupportTest.voteForRemovals":225,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":146,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":249,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":444,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":474,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":391,"org.easymock.tests.UsageExpectAndThrowTest.object":247,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":49,"org.easymock.tests2.DelegateToTest.testWrongClass":355,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":25,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":26,"org.easymock.tests.UsageStrictMockTest.range":98,"org.easymock.samples.ConstructorCalledMockTest.testTax":77,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":497,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":466,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":248,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":120,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":171,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":405,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":388,"org.easymock.tests2.CaptureTest.testCaptureNone":65,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":363,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.UsageVerifyTest.twoReturns":84,"org.easymock.tests.UsageVarargTest.varargByteAccepted":278,"org.easymock.tests2.ThreadingTest.testThreadSafe":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":188,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":312,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":136,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":104,"org.easymock.tests2.CaptureTest.testCapture_2617107":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":17,"org.easymock.tests2.UsageConstraintsTest.any":8,"org.easymock.tests2.StubTest.stub":465,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":399,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":233,"org.easymock.tests.UsageExpectAndThrowTest.longType":240,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":164,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":398,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":340,"org.easymock.tests2.SerializationTest.testClass":169,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests.LimitationsTest.mockNativeMethod":153,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":303,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":501,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":76,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":341,"org.easymock.tests2.NameTest.nameForMocksControl":118,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":364,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":503,"org.easymock.tests2.MockedExceptionTest.testMockedException":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":176,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":282,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":464,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":241,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":203,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":121,"org.easymock.tests.MockingTest.testNicePartialClassMocking":142,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":206,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":499,"org.easymock.tests2.CaptureTest.testCaptureLast":64,"org.easymock.tests2.CompareToTest.testCompareEqual":358,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":91,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":127,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":38,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":50,"org.easymock.tests.MockingTest.testTwoMocks":140,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":222,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":245,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":111,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":54,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":367,"org.easymock.samples.ExampleTest.removeNonExistingDocument":370,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":504,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":396,"org.easymock.tests.UsageStrictMockTest.differentMethods":99,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":486,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":162,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":366,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":349,"org.easymock.tests2.MockBuilderTest.testCreateMockString":123,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":178,"org.easymock.tests.UsageExpectAndThrowTest.floatType":239,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":173,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":343,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":472,"org.easymock.tests.UsageVerifyTest.twoThrows":83,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":187,"org.easymock.samples.ExampleTest.voteAgainstRemoval":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":433,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":386,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":74,"org.easymock.tests.LimitationsTest.privateConstructor":152,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":224,"org.easymock.tests2.UsageConstraintsTest.testNotNull":53,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":262,"org.easymock.tests2.UsageTest.defaultResetToNice":469,"org.easymock.samples.ExampleTest.voteAgainstRemovals":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":299,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":500,"org.easymock.tests.UsageVarargTest.differentLength":376,"org.easymock.tests2.CallbackTest.callback":331,"org.easymock.tests2.UsageConstraintsTest.equals":482,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":207,"org.easymock.tests.UsageTest.openCallCountByLastCall":281,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":16,"org.easymock.tests.UsageCallCountTest.tooFewCalls":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":202,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":407,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":365,"org.easymock.tests.UsageThrowableTest.throwCheckedException":259,"org.easymock.tests.MockingTest.testStrictClassMocking":138,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":126,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":134,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":125,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":401,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":346,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":344,"org.easymock.tests.ObjectMethodsTest.testHashCode":449,"org.easymock.tests2.CompareToTest.testGreateOrEqual":359,"org.easymock.tests2.NameTest.nameForNiceMock":117,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":351,"org.easymock.tests2.DependencyTest.testInterfaceMocking":329,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":512,"org.easymock.samples.ExampleTest.addDocument":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":194,"org.easymock.tests2.DelegateToTest.testStubDelegate":354,"org.easymock.tests2.AnswerTest.stubAnswer":79,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":480,"org.easymock.tests.UsageVarargTest.varargLongAccepted":277,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.floatType":286,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":167,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":491,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":409,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":47,"org.easymock.tests.UsageThrowableTest.noUpperLimit":317,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":33,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":210,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":62,"org.easymock.tests2.SerializationTest.test":345,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":161,"org.easymock.tests2.UsageConstraintsTest.testSame":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":285,"org.easymock.samples.SupportTest.addDocument":266,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":481,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":179,"org.easymock.tests.GenericTest.testPackageScope":147,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":490,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":382,"org.easymock.tests2.NameTest.nameForMock":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":296,"org.easymock.tests2.UsageStrictMockTest.differentMethods":114,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":221,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":251,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":448,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":463,"org.easymock.tests2.MockedExceptionTest.testRealException":264,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":435,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":30,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":403,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":15,"org.easymock.tests2.NameTest.nameForStrictMock":116,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":197,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":28,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":205,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":211,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":163,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":48,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":196,"org.easymock.tests2.UsageStrictMockTest.range":113,"org.easymock.tests2.UsageConstraintsTest.lessThan":55,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":212,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":488,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":183,"org.easymock.tests2.CaptureTest.testCaptureRightOne":67,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":362,"org.easymock.tests2.UsageConstraintsTest.testOr":37,"org.easymock.tests.UsageRangeTest.combination":319,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":128,"org.easymock.tests.UsageTest.wrongArguments":87,"org.easymock.tests2.MockBuilderTest.testWithConstructor":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":180,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":297,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":165,"org.easymock.tests.UsageVarargTest.varargShortAccepted":276,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":422,"org.easymock.tests2.UsageConstraintsTest.cmpTo":40,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":475,"org.easymock.tests2.CompareToTest.testLessThan":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":425,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":337,"org.easymock.tests2.CaptureTest.testCaptureFromStub":68,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":393,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":119,"org.easymock.tests.UsageTest.unexpectedCallWithArray":86,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":311,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":220,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":298,"org.easymock.tests2.CaptureTest.testCapture":361,"org.easymock.tests2.UsageConstraintsTest.constraints":34,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":305,"org.easymock.samples.ExampleTest.addAndChangeDocument":270,"org.easymock.tests.UsageStrictMockTest.testVerify":385,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":265,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":413,"org.easymock.tests2.CompareToTest.testGreateThan":357,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":22,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":213,"org.easymock.tests.LimitationsTest.abstractClass":151,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":290,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":23,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":107,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":272}}]
