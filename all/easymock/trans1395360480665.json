[{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[4,5],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:233","failures":[7,8,9,10,11,12,13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,4,38,39,40,41,42,43,5,3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,6,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[304,305,168,306,307,308],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[31,116,122,123,168,171,207,208,309,308,235,238,239,286,310],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[311,286],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[312,158,159,160,313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,314,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,315,316,317,318,34,35,36,37,4,38,39,40,41,42,43,3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,80,6,81,82,83,84,319,85,320,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,321,108,109,322,110,111,323,112,324,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,154,155,156,157,325,326,327,328,158,159,161,162,163,164,165,329,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,213,214,215,219,220,221,330,331,332,222,223,333,224,225,226,227,334,228,229,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,233,234,308,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,355,356,357,358,359,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,300,301,302,303,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[7,9,10,12,17,20,23,24,29,31,32,34,35,36,37,4,38,39,40,41,42,43,3,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,63,64,67,68,69,70,72,73,74,78,80,6,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,119,120,121,124,125,128,130,131,132,133,134,135,136,137,138,139,141,142,143,144,151,157,158,160,169,171,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,201,202,203,204,205,206,208,209,360,361,362,363,364,213,214,215,217,218,219,220,221,222,233,234,236,237,240,252,253,254,255,256,259,260,263,264,265,287,289,290,291,292,293,294,303],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[365,366,367],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[29,74,113,125,169,207,208,240,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[43,47,59,368],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[29,32,33,115,169,172,173,206,207,208,369,234,303],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:105","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[312,313],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[149,151,370],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[14,15,29,35,36,38,39,40,41,45,47,48,50,51,57,58,59,71,157,161,162,163,164,165,169,209,371,372,373,374,375,252,253,254,255,256,257,259,260,263,264,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[376,377,378,379,380],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[31,32,171,172,206,295,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":233,"org.easymock.tests2.UsageTest.argumentsOrdered":123,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":370,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":118,"org.easymock.tests2.StubTest.stubWithReturnValue":157,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":56,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":184,"org.easymock.tests2.SerializationTest.testAllMockedMethod":140,"org.easymock.tests2.DelegateToTest.testReturnException":150,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":196,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":377,"org.easymock.tests.MockingTest.testPartialClassMocking":213,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":305,"org.easymock.samples.SupportTest.voteForRemovals":20,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":312,"org.easymock.tests.MockClassControlTest.testToString":349,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":278,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":266,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":212,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":142,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":75,"org.easymock.tests.UsageExpectAndThrowTest.object":276,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":53,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":24,"org.easymock.tests2.DelegateToTest.testWrongClass":152,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":264,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":265,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":259,"org.easymock.tests2.UsageTest.wrongArguments":116,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests.UsageStrictMockTest.range":171,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":327,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":131,"org.easymock.tests2.UsageConstraintsTest.testNull":39,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":277,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":82,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":354,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":110,"org.easymock.tests2.CaptureTest.testPrimitive":63,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":263,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":345,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":285,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":238,"org.easymock.tests.UsageTest.moreThanOneArgument":234,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":326,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":81,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":163,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":218,"org.easymock.tests2.CaptureTest.testCaptureNone":68,"org.easymock.tests.UsageUnorderedTest.message":286,"org.easymock.tests.UsageVerifyTest.twoReturns":208,"org.easymock.tests.UsageVarargTest.varargByteAccepted":249,"org.easymock.tests2.ThreadingTest.testThreadSafe":90,"org.easymock.tests.UsageTest.argumentsOrdered":239,"org.easymock.tests.UsageVarargTest.varargIntAccepted":243,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":227,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":21,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":252,"org.easymock.tests2.CaptureTest.testCapture_2617107":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":380,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":321,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":362,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":262,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":322,"org.easymock.tests2.UsageConstraintsTest.any":3,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":342,"org.easymock.tests2.StubTest.stub":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":256,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":363,"org.easymock.tests.UsageExpectAndThrowTest.longType":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":197,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":365,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":1,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":341,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":30,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests2.SerializationTest.testClass":138,"org.easymock.tests.ReplayStateInvalidUsageTest.times":343,"org.easymock.tests.LimitationsTest.mockNativeMethod":222,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":34,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":194,"org.easymock.tests2.AnswerTest.answer":74,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":160,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":318,"org.easymock.tests2.CaptureTest.testAnd":60,"org.easymock.tests2.UsageTest.strictResetToDefault":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":320,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":33,"org.easymock.tests2.NameTest.nameForMocksControl":148,"org.easymock.tests2.MockedExceptionTest.testMockedException":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":99,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":237,"org.easymock.tests2.DelegateToTest.testDelegate":154,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":270,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":215,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":80,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":111,"org.easymock.tests.MockingTest.testNicePartialClassMocking":214,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":281,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":378,"org.easymock.tests2.CaptureTest.testCaptureLast":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":199,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":42,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":359,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":54,"org.easymock.tests2.CaptureTest.testCapture1_2446744":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":274,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":122,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":58,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":337,"org.easymock.tests.UsageThrowableTest.throwError":287,"org.easymock.samples.ExampleTest.removeNonExistingDocument":314,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":339,"org.easymock.tests.UsageStrictMockTest.differentMethods":172,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":92,"org.easymock.tests2.MockBuilderTest.testCreateMockString":324,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":347,"org.easymock.tests.UsageExpectAndThrowTest.floatType":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":165,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":49,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":77,"org.easymock.tests.UsageVerifyTest.twoThrows":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":143,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":253,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":361,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":217,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":216,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":267,"org.easymock.tests2.UsageTest.niceToStrict":117,"org.easymock.tests2.UsageConstraintsTest.testNotNull":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":294,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":109,"org.easymock.tests2.MockBuilderTest.testCreateMock":323,"org.easymock.tests2.UsageTest.defaultResetToNice":121,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":190,"org.easymock.tests.UsageVarargTest.differentLength":246,"org.easymock.tests2.CallbackTest.callback":155,"org.easymock.tests.UsageTest.openCallCountByLastCall":236,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":304,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":275,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":100,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":35,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":223,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":261,"org.easymock.tests.UsageCallCountTest.tooFewCalls":225,"org.easymock.tests.UsageOverloadedMethodTest.overloading":220,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":302,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":47,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":186,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":366,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":46,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":328,"org.easymock.tests.UsageThrowableTest.throwCheckedException":291,"org.easymock.tests.MockClassControlTest.testEquals":353,"org.easymock.tests2.EasyMockSupportClassTest.testAll":141,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":317,"org.easymock.tests2.CaptureTest.testCaptureAll":61,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":210,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":136,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":133,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":344,"org.easymock.tests2.UsageConstraintsTest.testMatches":48,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":135,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":79,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":164,"org.easymock.tests2.CompareToTest.testGreateOrEqual":368,"org.easymock.tests.ObjectMethodsTest.testHashCode":331,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":379,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":94,"org.easymock.tests2.NameTest.nameForNiceMock":147,"org.easymock.tests.UsageVarargTest.allKinds":251,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":206,"org.easymock.tests2.DependencyTest.testInterfaceMocking":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":358,"org.easymock.samples.BasicClassMockTest.testPrintContent":22,"org.easymock.samples.ExampleTest.addDocument":11,"org.easymock.tests2.DelegateToTest.testStubDelegate":151,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":293,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":27,"org.easymock.tests2.AnswerTest.stubAnswer":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":200,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":153,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":169,"org.easymock.tests2.UsageConstraintsTest.greaterThan":50,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":202,"org.easymock.tests.UsageVarargTest.varargLongAccepted":248,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":88,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":360,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":91,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":193,"org.easymock.tests.UsageExpectAndReturnTest.floatType":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":319,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":89,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests.UsageThrowableTest.noUpperLimit":288,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":51,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":258,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":36,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":65,"org.easymock.tests2.SerializationTest.test":139,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":97,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":289,"org.easymock.tests2.UsageConstraintsTest.testSame":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":176,"org.easymock.samples.SupportTest.addDocument":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":195,"org.easymock.tests2.CaptureTest.testCaptureFirst":73,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":98,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":340,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":182,"org.easymock.tests.GenericTest.testPackageScope":158,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":93,"org.easymock.tests2.CaptureTest.testCapture2_2446744":72,"org.easymock.tests2.UsageTest.moreThanOneArgument":115,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":250,"org.easymock.tests.GenericTest.testBridgedEquals":313,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":228,"org.easymock.tests2.NameTest.nameForMock":145,"org.easymock.tests.UsageExpectAndReturnTest.longType":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":355,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":187,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":257,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":55,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":282,"org.easymock.tests2.UsageStrictMockTest.differentMethods":32,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":179,"org.easymock.tests.UsageCallCountTest.tooManyCalls":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":280,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":2,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":204,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":224,"org.easymock.tests2.MockedExceptionTest.testRealException":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":271,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":29,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":346,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":292,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":260,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":132,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":333,"org.easymock.tests2.UsageConstraintsTest.testContains":45,"org.easymock.tests2.NameTest.nameForStrictMock":146,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":128,"org.easymock.tests2.UsageConstraintsTest.testFind":38,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":221,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":25,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":83,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":26,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":166,"org.easymock.tests.UsageExpectAndReturnTest.object":185,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":311,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":52,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":108,"org.easymock.tests2.UsageStrictMockTest.range":31,"org.easymock.tests2.UsageConstraintsTest.lessThan":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":103,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":245,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":332,"org.easymock.tests.UsageTest.exactCallCountByLastCall":240,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":96,"org.easymock.tests2.CaptureTest.testCaptureRightOne":70,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":295,"org.easymock.tests2.UsageConstraintsTest.testOr":41,"org.easymock.tests.UsageRangeTest.combination":201,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":191,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":301,"org.easymock.tests.UsageTest.wrongArguments":235,"org.easymock.tests.MockClassControlTest.testHashCode":352,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":348,"org.easymock.tests2.EasyMockSupportTest.testVerify":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":188,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":0,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":296,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":298,"org.easymock.tests.UsageVarargTest.varargShortAccepted":247,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":315,"org.easymock.tests2.UsageConstraintsTest.cmpTo":44,"org.easymock.tests.UsageVarargTest.varargCharAccepted":244,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":76,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":364,"org.easymock.tests2.UsageTest.openCallCountByLastCall":119,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests.DefaultClassInstantiatorTest.object":329,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":106,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":297,"org.easymock.tests2.CaptureTest.testCaptureFromStub":71,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":336,"org.easymock.tests.UsageTest.unexpectedCallWithArray":308,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":330,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":273,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":290,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":168,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":226,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":189,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":351,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":86,"org.easymock.tests2.UsageConstraintsTest.constraints":37,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":170,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":272,"org.easymock.samples.ExampleTest.addAndChangeDocument":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":192,"org.easymock.tests.UsageStrictMockTest.testVerify":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":230,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":16,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":144,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":356,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":66,"org.easymock.tests2.UsageTest.resumeIfFailure":124,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":181,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":255,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":101}}]
