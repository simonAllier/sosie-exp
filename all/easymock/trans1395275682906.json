[{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[5],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[7,8,9,10,11,12,13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,6,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,2,3,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,0,232,233,234,235,236,237,238,239,240,241,242],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[243,7,8,9,10,244,11,245,246,247,248,249,250,12,13,14,15,16,17,18,19,20,251,252,253,254,255,256,257,21,258,259,260,261,262,263,264,265,22,23,24,25,26,27,266,28,29,30,267,268,269,270,271,272,31,273,274,275,276,277,278,279,280,32,281,33,34,282,283,284,285,286,287,35,36,37,38,288,39,289,40,41,6,290,291,42,43,292,44,293,294,295,296,297,298,299,300,301,302,45,303,304,46,305,306,307,308,309,310,311,312,313,47,314,315,316,317,318,48,319,320,49,50,51,52,53,54,55,56,57,321,58,59,60,61,62,63,322,64,65,66,67,68,69,70,71,72,73,74,75,323,76,77,78,79,324,325,326,327,328,329,330,331,80,81,82,83,84,85,86,87,332,88,89,333,334,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,335,2,3,4,109,110,111,336,112,113,337,338,114,339,340,341,115,342,116,343,117,344,345,346,118,347,348,119,120,121,122,123,124,349,350,125,351,352,353,126,127,128,354,355,129,130,131,356,357,358,359,132,133,134,135,136,137,138,1,139,360,140,361,362,363,364,365,366,367,368,369,370,371,372,373,374,141,142,375,143,144,145,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,146,392,393,394,395,396,147,397,398,399,400,148,401,149,150,402,403,151,152,404,405,153,154,406,407,155,408,409,156,410,157,158,159,160,161,162,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,163,164,165,166,167,168,430,169,170,431,432,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,433,434,435,436,437,197,198,438,439,440,441,442,443,444,445,446,447,448,449,450,199,451,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,452,227,228,453,454,229,230,231,455,0,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,232,477,233,234,235,236,237,238,239,240,478,479,480,481,482,483,484,485,486,487,241,242,488],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[20,251,2,489,490,491,492,493,343,345],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[1,139,360,140,361],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[494,495,496],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[251,489,490,491,497,498,343],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[32,283,54,55,56,57,58,59,60,61,62,63,322,64,65,66,67,68,69,70,71,72,73,74,75,323,76,77,78,79,329,331,86,87,332,88,89,333,334,90,91,92,93,94,95,96,125,141,142,375,400,148,161,169,170,431,432,171,172,173,174,175,176,197,198,449],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[256,271],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:233","failures":[243,7,8,9,10,244,11,246,247,248,249,250,12,13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,279,280,32,281,33,34,282,35,36,37,38,288,39,289,40,41,6,290,291,42,43,292,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,322,64,65,66,67,68,69,70,71,72,73,74,75,323,76,77,78,79,325,326,327,328,329,331,80,81,82,83,84,85,86,87,332,88,89,333,334,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,335,2,3,4,109,110,111,336,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,360,140,141,142,375,143,144,145,146,147,398,399,400,148,401,149,150,402,403,151,152,405,153,154,406,407,155,156,157,158,159,160,161,162,411,163,165,166,168,169,170,431,432,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,434,435,197,198,438,439,440,442,443,444,445,446,447,448,449,199,451,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,452,227,228,230,231,0,459,461,462,463,464,466,467,232,233,234,235,236,237,238,239,240],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[248,249,13,14,14,15,15,18,20,24,25,26,27,29,30,45,46,47,48,2,4,337,114,339,115,342,116,117,346,118,348,119,120,122,123,124,349,125,353,126,127,128,355,139,360,140,362,367,156,411,417,229,230,231,0,469,470,471,472],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[118,355],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[361],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[499,500,501,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[14,14,15,15,20,251,26,30,302,303,308,313,319,320,2,345,120,351,353,128],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[483,503,504],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[20,505,489,490,491,497,498,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[329,330],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[2,3,4,506],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:86","sourceCode":"return org.easymock.internal.Results.getMainInterval().expectedCount()","type":"CtReturnImpl"},"failures":[32,33,34,38,288,290,291,325,326,327,328,375,143,144,145,400,148,149,150,152,405,406,407],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[2,3,4,506],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[251,489,490,491,497,498,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":57,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":151,"org.easymock.tests2.UsageTest.argumentsOrdered":291,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":386,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":289,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":243,"org.easymock.tests2.DelegateToTest.testReturnException":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":158,"org.easymock.tests.MockingTest.testPartialClassMocking":230,"org.easymock.tests.MockClassControlTest.testToString":470,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":324,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":308,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":207,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":63,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":169,"org.easymock.tests2.UsageTest.wrongArguments":288,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":263,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":358,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":367,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":457,"org.easymock.tests2.UsageConstraintsTest.testNull":59,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":122,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":475,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":106,"org.easymock.tests2.CaptureTest.testPrimitive":88,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":171,"org.easymock.tests.UsageTest.moreThanOneArgument":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":226,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":235,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":433,"org.easymock.tests.UsageTest.argumentsOrdered":407,"org.easymock.tests.UsageVarargTest.varargIntAccepted":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":172,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":337,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":277,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":295,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":176,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":495,"org.easymock.tests.ReplayStateInvalidUsageTest.times":426,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":21,"org.easymock.tests2.DependencyTest.testClassMocking":264,"org.easymock.tests2.AnswerTest.answer":109,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":392,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":287,"org.easymock.tests2.CaptureTest.testAnd":86,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":364,"org.easymock.tests2.UsageTest.strictResetToDefault":37,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":234,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":101,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":437,"org.easymock.tests2.DelegateToTest.testDelegate":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":222,"org.easymock.tests.LimitationsTest.mockFinalMethod":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":374,"org.easymock.tests2.DependencyTest.testClassMockingSupport":265,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":241,"org.easymock.tests2.CaptureTest.testCapture1_2446744":89,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":220,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":285,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":420,"org.easymock.tests.UsageThrowableTest.throwError":199,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":366,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":487,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":320,"org.easymock.samples.PartialClassMockTest.testGetArea":13,"org.easymock.tests.MockingTest.testInterfaceMocking":455,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":173,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":227,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":417,"org.easymock.tests2.UsageTest.niceToStrict":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":115,"org.easymock.tests2.MockBuilderTest.testCreateMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":216,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":102,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":363,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":138,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":459,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":356,"org.easymock.tests.UsageOverloadedMethodTest.overloading":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":318,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":166,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":68,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":188,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":129,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":503,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":67,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":92,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":441,"org.easymock.tests.MockClassControlTest.testEquals":474,"org.easymock.tests2.EasyMockSupportClassTest.testAll":45,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":224,"org.easymock.tests2.CaptureTest.testCaptureAll":87,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":372,"org.easymock.tests.MockNameTest.defaultName":450,"org.easymock.tests2.UsageConstraintsTest.testMatches":69,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":418,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":236,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests.UsageVarargTest.allKinds":449,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":143,"org.easymock.samples.BasicClassMockTest.testPrintContent":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":373,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":204,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":162,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":493,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":485,"org.easymock.tests2.UsageConstraintsTest.greaterThan":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":303,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":133,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":128,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":486,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":50,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":354,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":368,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":296,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":349,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":411,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":36,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":383,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":99,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":157,"org.easymock.tests2.CaptureTest.testCaptureFirst":96,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":100,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":43,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":184,"org.easymock.tests2.UsageTest.moreThanOneArgument":38,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":52,"org.easymock.tests2.CaptureTest.testCapture2_2446744":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":118,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":448,"org.easymock.tests.GenericTest.testBridgedEquals":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":466,"org.easymock.tests.UsageExpectAndReturnTest.longType":180,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":370,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":225,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":206,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":239,"org.easymock.tests.UsageCallCountTest.tooManyCalls":467,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":496,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":262,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":212,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":203,"org.easymock.tests.MockingTest.testNiceClassMocking":458,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":25,"org.easymock.tests.MockingTest.testClassMocking":454,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":460,"org.easymock.tests2.UsageConstraintsTest.testContains":66,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":18,"org.easymock.tests2.UsageConstraintsTest.testFind":58,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":131,"org.easymock.tests.MockTypeTest.fromEasyMockClass":365,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":398,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":331,"org.easymock.tests.UsageExpectAndReturnTest.object":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":490,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":443,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":415,"org.easymock.tests.UsageTest.exactCallCountByLastCall":155,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":476,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":434,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":251,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":438,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":193,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":165,"org.easymock.tests.MockClassControlTest.testHashCode":473,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":269,"org.easymock.tests2.EasyMockSupportTest.testVerify":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":311,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":494,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":435,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":163,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":137,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":284,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":283,"org.easymock.tests.UsageVarargTest.varargCharAccepted":442,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":478,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":397,"org.easymock.tests2.UsageTest.openCallCountByLastCall":40,"org.easymock.tests.DefaultClassInstantiatorTest.object":479,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":108,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":136,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":413,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":312,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":268,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":472,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":126,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":194,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":238,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":48,"org.easymock.tests2.UsageTest.resumeIfFailure":42,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":362,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":160,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":343,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":186,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":76,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":146,"org.easymock.samples.SupportTest.voteForRemovals":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":271,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":219,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":506,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":147,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":110,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":477,"org.easymock.tests.UsageExpectAndThrowTest.object":217,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":74,"org.easymock.tests2.DelegateToTest.testWrongClass":83,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":141,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":142,"org.easymock.tests.UsageStrictMockTest.range":149,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":298,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":104,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":218,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":116,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":428,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":357,"org.easymock.tests2.CaptureTest.testCaptureNone":91,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":228,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":500,"org.easymock.tests.UsageUnorderedTest.message":375,"org.easymock.tests.UsageVerifyTest.twoReturns":145,"org.easymock.tests.UsageVarargTest.varargByteAccepted":447,"org.easymock.tests2.ThreadingTest.testThreadSafe":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":314,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":464,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":416,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":248,"org.easymock.tests2.CaptureTest.testCapture_2617107":332,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":488,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":395,"org.easymock.tests2.UsageConstraintsTest.any":64,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":425,"org.easymock.tests2.StubTest.stub":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":159,"org.easymock.tests.UsageExpectAndThrowTest.longType":210,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":483,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":424,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":281,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":31,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":156,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":140,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":196,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":255,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":282,"org.easymock.tests2.NameTest.nameForMocksControl":328,"org.easymock.tests2.MockedExceptionTest.testMockedException":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":304,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":154,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":0,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":211,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":117,"org.easymock.tests.MockingTest.testNicePartialClassMocking":231,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":124,"org.easymock.tests2.CompareToTest.testNotComparable":5,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":505,"org.easymock.tests2.CaptureTest.testCaptureLast":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":253,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":242,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":30,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":62,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":75,"org.easymock.tests.MockingTest.testTwoMocks":229,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":267,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":215,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":290,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":78,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":502,"org.easymock.samples.ExampleTest.removeNonExistingDocument":245,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":422,"org.easymock.tests.UsageStrictMockTest.differentMethods":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":259,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":270,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":481,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":51,"org.easymock.tests2.MockBuilderTest.testCreateMockString":348,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":468,"org.easymock.tests.UsageExpectAndThrowTest.floatType":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":305,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":302,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":336,"org.easymock.tests.UsageVerifyTest.twoThrows":144,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":252,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":47,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":387,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":127,"org.easymock.tests.LimitationsTest.privateConstructor":409,"org.easymock.tests2.UsageConstraintsTest.testNotNull":77,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":205,"org.easymock.tests2.UsageTest.defaultResetToNice":6,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":192,"org.easymock.tests.UsageVarargTest.differentLength":444,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":254,"org.easymock.tests2.CallbackTest.callback":35,"org.easymock.tests2.UsageConstraintsTest.equals":321,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":351,"org.easymock.tests.UsageTest.openCallCountByLastCall":153,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":431,"org.easymock.tests.UsageCallCountTest.tooFewCalls":462,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":359,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":501,"org.easymock.tests.UsageThrowableTest.throwCheckedException":202,"org.easymock.tests.MockingTest.testStrictClassMocking":453,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":29,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":198,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":258,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":427,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":28,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":113,"org.easymock.tests.ObjectMethodsTest.testHashCode":414,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":497,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":53,"org.easymock.tests2.NameTest.nameForNiceMock":327,"org.easymock.tests2.DependencyTest.testInterfaceMocking":22,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":491,"org.easymock.samples.ExampleTest.addDocument":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":315,"org.easymock.tests2.DelegateToTest.testStubDelegate":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":319,"org.easymock.tests2.AnswerTest.stubAnswer":112,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":148,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":344,"org.easymock.tests.UsageVarargTest.varargLongAccepted":446,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndReturnTest.floatType":179,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":20,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests.UsageThrowableTest.noUpperLimit":451,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":276,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":55,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":293,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":333,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":504,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":178,"org.easymock.tests2.UsageConstraintsTest.testSame":60,"org.easymock.samples.SupportTest.addDocument":250,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":266,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":306,"org.easymock.tests.GenericTest.testPackageScope":139,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":275,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":456,"org.easymock.tests2.NameTest.nameForMock":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":189,"org.easymock.tests2.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":347,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":352,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":221,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":412,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":135,"org.easymock.tests2.MockedExceptionTest.testRealException":19,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":389,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":429,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":170,"org.easymock.tests2.NameTest.nameForStrictMock":326,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":341,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":329,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":123,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":297,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":482,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":73,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":114,"org.easymock.tests2.UsageStrictMockTest.range":33,"org.easymock.tests2.UsageConstraintsTest.lessThan":79,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":98,"org.easymock.tests2.CaptureTest.testCaptureRightOne":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":310,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":499,"org.easymock.tests2.UsageConstraintsTest.testOr":61,"org.easymock.tests.UsageRangeTest.combination":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":120,"org.easymock.tests.UsageTest.wrongArguments":405,"org.easymock.tests2.MockBuilderTest.testWithConstructor":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":307,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":469,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":377,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":484,"org.easymock.tests.UsageVarargTest.varargShortAccepted":445,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":465,"org.easymock.tests2.UsageConstraintsTest.cmpTo":65,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":379,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests2.CaptureTest.testCaptureFromStub":94,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":419,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":339,"org.easymock.tests.UsageTest.unexpectedCallWithArray":404,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":400,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":463,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":191,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":401,"org.easymock.tests2.UsageConstraintsTest.constraints":56,"org.easymock.samples.ExampleTest.addAndChangeDocument":246,"org.easymock.tests.UsageStrictMockTest.testVerify":403,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":247,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":371,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":174,"org.easymock.tests.LimitationsTest.abstractClass":408,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":175,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":168,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":103}}]
