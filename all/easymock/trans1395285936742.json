[{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[12,13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"answer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[16,17],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[18,19,20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[23,24,25,26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[27,9,28,29],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,1,134,135,136,12,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,14,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,18,19,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,23,305,306,307,308,309,310,24,311,2,312,313,3,314,315,316,317,318,319,320,321,322,323,324,325,326,327,25,328,329,330,331,20,332,333,334,335,26,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,16,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,15,9,28,29,10,11,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,21,22,471,13,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksBehavior:200","failures":[383],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[497,498,483,484,485,486,487,488,489,490,492,499,493,494,495,496],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[215,365,368,369],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[2,500,4,5,6,501,502,8,9,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[346,352,16,503],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:109","sourceCode":"final java.util.Stack<org.easymock.IArgumentMatcher> java.util.Stack<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.get()","type":"CtLocalVariableImpl"},"failures":[339,344,347],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,1,134,135,136,12,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,179,180,181,182,183,184,225,231,233,234,235,236,238,241,243,244,245,246,247,18,19,248,249,250,251,252,253,254,255,256,257,258,259,260,270,271,272,273,274,275,277,278,279,280,281,282,283,285,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,320,321,324,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,16,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,380,381,382,383,384,385,386,392,393,399,400,401,402,403,15,9,28,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,421,422,460,461,467,468,469,470,21,22,471,13,472,479,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[345],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:262","failures":[36,41,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,106,124,130,136,12,139,161,163,164,165,166,167,168,179,180,181,182,183,184,292,299,374,375,376,377,472],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[336,355,358,504],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[174],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[305,308,2,505,316,506,507,508,509,510,511,512,513,11,514,476,481,482],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,1,134,135,136,12,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,179,180,181,182,183,184,225,231,233,234,235,236,237,238,239,240,241,243,244,245,246,247,18,19,248,249,250,251,252,253,254,255,256,257,258,259,260,270,271,272,273,274,275,277,278,279,280,281,282,283,285,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,320,321,324,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,16,364,365,366,367,368,369,370,371,372,373,374,375,376,377,515,516,378,380,381,382,383,384,385,386,392,393,399,400,401,402,403,15,9,28,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,421,422,460,461,467,468,469,470,21,22,471,13,472,479,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","obj":"obj","targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,1,134,135,136,12,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,179,180,181,182,183,184,225,231,233,234,235,236,238,239,241,243,244,245,246,247,18,19,248,249,250,251,252,253,254,255,256,257,258,259,260,270,271,272,273,274,275,277,278,279,280,281,282,283,285,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,320,321,324,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,16,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,380,381,382,383,384,385,386,392,393,399,400,401,402,403,15,9,28,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,421,422,460,461,467,468,469,470,21,22,471,13,472,479,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[44,139,140,163,246,292,304,364,469],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[38,39,42,43,539,127,1,139,140,245,18,295,301,302,21],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[359],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[497,483,484,485,486,487,488,489,490,492,493,494,495,496],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[37,66,70,71,73,76,126,133,138,139,140,246,19,248,294,469,22,471],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[38,540,541,245,542,543],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[174],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[541,544,542,543],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[339],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[110,111,113,187,271,276,306,310,311,312,315,322,324,325,327,384,401,10,433,436,446,452,474,475,476,477,479,480,481],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[174],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":339,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":36,"org.easymock.tests2.UsageTest.argumentsOrdered":302,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":415,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":219,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":297,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":277,"org.easymock.tests2.DelegateToTest.testReturnException":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":180,"org.easymock.tests.MockingTest.testPartialClassMocking":110,"org.easymock.tests.MockClassControlTest.testToString":264,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":418,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":46,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":440,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":436,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":62,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":321,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":538,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":4,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":346,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":134,"org.easymock.tests2.UsageTest.wrongArguments":295,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":466,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":235,"org.easymock.samples.ExampleTest.answerVsDelegate":279,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":53,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":115,"org.easymock.tests2.UsageConstraintsTest.testNull":342,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":325,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":414,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":269,"org.easymock.tests2.CaptureTest.testPrimitive":486,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":137,"org.easymock.tests.UsageTest.moreThanOneArgument":37,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":81,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":33,"org.easymock.tests.UsageTest.argumentsOrdered":43,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":256,"org.easymock.tests.UsageVarargTest.varargIntAccepted":84,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":270,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":23,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":425,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":397,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":274,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":522,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":460,"org.easymock.tests.ReplayStateInvalidUsageTest.times":197,"org.easymock.tests2.DependencyTest.testClassMocking":318,"org.easymock.tests2.AnswerTest.answer":364,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":373,"org.easymock.tests2.CaptureTest.testAnd":483,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":50,"org.easymock.tests2.UsageTest.strictResetToDefault":293,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":20,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":32,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":409,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":119,"org.easymock.tests2.DelegateToTest.testDelegate":15,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":260,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":521,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":77,"org.easymock.tests.LimitationsTest.mockFinalMethod":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":173,"org.easymock.tests2.DependencyTest.testClassMockingSupport":319,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":131,"org.easymock.tests2.CaptureTest.testCapture1_2446744":487,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":328,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":371,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":191,"org.easymock.tests.UsageThrowableTest.throwError":161,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":52,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":398,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":35,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":454,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":525,"org.easymock.samples.PartialClassMockTest.testGetArea":276,"org.easymock.tests.MockingTest.testInterfaceMocking":112,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":192,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":271,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":441,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":63,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":242,"org.easymock.tests2.UsageTest.niceToStrict":296,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":210,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":310,"org.easymock.tests2.MockBuilderTest.testCreateMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":449,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":463,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":542,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":71,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":410,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":49,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":61,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":95,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":233,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":510,"org.easymock.tests.UsageOverloadedMethodTest.overloading":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":445,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":124,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":352,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":152,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":128,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":351,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":492,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":85,"org.easymock.tests2.EasyMockSupportClassTest.testAll":433,"org.easymock.tests.MockClassControlTest.testEquals":268,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":176,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":79,"org.easymock.tests2.CaptureTest.testCaptureAll":484,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":171,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":372,"org.easymock.tests.MockNameTest.defaultName":104,"org.easymock.tests2.UsageConstraintsTest.testMatches":353,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":34,"org.easymock.samples.ExampleTest.voteForRemovals":283,"org.easymock.tests.UsageVarargTest.allKinds":93,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":172,"org.easymock.samples.BasicClassMockTest.testPrintContent":289,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":167,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":467,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":403,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":8,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":208,"org.easymock.tests2.UsageConstraintsTest.greaterThan":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":118,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":334,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":526,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":209,"org.easymock.samples.ExampleTest.voteForRemoval":280,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":335,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":382,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":54,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":25,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":518,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":94,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":292,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":407,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":179,"org.easymock.tests2.CaptureTest.testCaptureFirst":496,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":408,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":304,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":127,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":148,"org.easymock.tests2.CaptureTest.testCapture2_2446744":495,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":384,"org.easymock.tests2.UsageTest.moreThanOneArgument":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":227,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":315,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":92,"org.easymock.tests.GenericTest.testBridgedEquals":178,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":511,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":508,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":102,"org.easymock.tests.UsageExpectAndReturnTest.longType":144,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":405,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":169,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":80,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":255,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":57,"org.easymock.tests.UsageCallCountTest.tooManyCalls":103,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":450,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":465,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":166,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":475,"org.easymock.tests.MockingTest.testNiceClassMocking":116,"org.easymock.tests.MockingTest.testClassMocking":108,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":96,"org.easymock.tests2.UsageConstraintsTest.testContains":350,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":376,"org.easymock.tests2.UsageConstraintsTest.testFind":341,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":130,"org.easymock.tests.MockTypeTest.fromEasyMockClass":51,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":243,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":380,"org.easymock.tests.UsageExpectAndReturnTest.object":151,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":329,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":413,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":5,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":87,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":240,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":512,"org.easymock.tests.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":214,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":45,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":157,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":82,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":123,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":388,"org.easymock.tests.MockClassControlTest.testHashCode":267,"org.easymock.tests2.EasyMockSupportTest.testVerify":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":443,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":258,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":121,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":60,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":370,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":473,"org.easymock.tests.UsageVarargTest.varargCharAccepted":86,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":515,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":201,"org.easymock.tests2.CaptureTest.testCaptureMultiple":498,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":232,"org.easymock.tests2.UsageTest.openCallCountByLastCall":298,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":416,"org.easymock.tests.DefaultClassInstantiatorTest.object":202,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":59,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":238,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":539,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":444,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":69,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":387,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":524,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":266,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":332,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":68,"org.easymock.tests.CapturesMatcherTest.test":497,"org.easymock.tests.ReplayStateInvalidCallsTest.times":530,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":158,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":56,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":531,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":452,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":265,"org.easymock.tests2.UsageTest.resumeIfFailure":303,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":48,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":182,"org.easymock.tests2.StubTest.stubWithReturnValue":472,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":150,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":361,"org.easymock.tests2.SerializationTest.testAllMockedMethod":29,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":225,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":543,"org.easymock.samples.SupportTest.voteForRemovals":291,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":174,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":390,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":74,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":27,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":231,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":365,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":47,"org.easymock.tests.UsageExpectAndThrowTest.object":72,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":358,"org.easymock.tests2.DelegateToTest.testWrongClass":402,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":528,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":250,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":251,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.samples.ConstructorCalledMockTest.testTax":286,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":428,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":412,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":474,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":509,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":73,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":430,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":234,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":540,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":520,"org.easymock.tests2.CaptureTest.testCaptureNone":491,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":254,"org.easymock.tests.UsageUnorderedTest.message":1,"org.easymock.tests.UsageVerifyTest.twoReturns":140,"org.easymock.tests.UsageVarargTest.varargByteAccepted":91,"org.easymock.tests2.ThreadingTest.testThreadSafe":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":447,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":100,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":241,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":288,"org.easymock.tests2.CaptureTest.testCapture_2617107":485,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":229,"org.easymock.tests2.UsageConstraintsTest.any":348,"org.easymock.tests2.StubTest.stub":13,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":181,"org.easymock.tests.UsageExpectAndThrowTest.longType":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":230,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":206,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":195,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":470,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":392,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests.LimitationsTest.mockNativeMethod":187,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":160,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":457,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":536,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":471,"org.easymock.tests2.NameTest.nameForMocksControl":422,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":459,"org.easymock.tests2.MockedExceptionTest.testMockedException":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":435,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":113,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":66,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":379,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":322,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":312,"org.easymock.tests.MockingTest.testNicePartialClassMocking":111,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":500,"org.easymock.tests2.CaptureTest.testCaptureLast":490,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":455,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":132,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":535,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":481,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":345,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":359,"org.easymock.tests.MockingTest.testTwoMocks":109,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":532,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":70,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":301,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":363,"org.easymock.samples.ExampleTest.removeNonExistingDocument":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":462,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":193,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":389,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":204,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":383,"org.easymock.tests2.MockBuilderTest.testCreateMockString":317,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":437,"org.easymock.tests.UsageExpectAndThrowTest.floatType":64,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":432,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":404,"org.easymock.tests.UsageVerifyTest.twoThrows":139,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":446,"org.easymock.samples.ExampleTest.voteAgainstRemoval":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":220,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":252,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":333,"org.easymock.tests.LimitationsTest.privateConstructor":186,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":507,"org.easymock.tests2.UsageConstraintsTest.testNotNull":362,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":168,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":374,"org.easymock.tests2.UsageTest.defaultResetToNice":300,"org.easymock.samples.ExampleTest.voteAgainstRemovals":278,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":221,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":456,"org.easymock.tests.UsageVarargTest.differentLength":88,"org.easymock.tests2.CallbackTest.callback":386,"org.easymock.tests2.UsageConstraintsTest.equals":340,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":544,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":330,"org.easymock.tests.UsageTest.openCallCountByLastCall":40,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":136,"org.easymock.tests.UsageCallCountTest.tooFewCalls":98,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":477,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":236,"org.easymock.tests.UsageThrowableTest.throwCheckedException":165,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":541,"org.easymock.tests.MockingTest.testStrictClassMocking":107,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":480,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":476,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":461,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":198,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":479,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":369,"org.easymock.tests2.CompareToTest.testGreateOrEqual":503,"org.easymock.tests.ObjectMethodsTest.testHashCode":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":501,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":534,"org.easymock.tests2.NameTest.nameForNiceMock":421,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":385,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":529,"org.easymock.tests2.DependencyTest.testInterfaceMocking":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":6,"org.easymock.samples.ExampleTest.addDocument":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":453,"org.easymock.tests2.DelegateToTest.testStubDelegate":401,"org.easymock.tests2.AnswerTest.stubAnswer":368,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":246,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":313,"org.easymock.tests.UsageVarargTest.varargLongAccepted":90,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":159,"org.easymock.tests.UsageExpectAndReturnTest.floatType":143,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":10,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":287,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":396,"org.easymock.tests.UsageThrowableTest.noUpperLimit":162,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":125,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":337,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":423,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":488,"org.easymock.tests2.SerializationTest.test":28,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":203,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":142,"org.easymock.tests2.UsageConstraintsTest.testSame":343,"org.easymock.samples.SupportTest.addDocument":290,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":478,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":519,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":438,"org.easymock.tests.GenericTest.testPackageScope":175,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":213,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":395,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":114,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":517,"org.easymock.tests2.NameTest.nameForMock":419,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":153,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":316,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":331,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":145,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":76,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":237,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":120,"org.easymock.tests2.MockedExceptionTest.testRealException":377,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":223,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":30,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":135,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":200,"org.easymock.tests2.NameTest.nameForStrictMock":420,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":514,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":378,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":326,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":427,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":0,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":205,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":357,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":306,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":523,"org.easymock.tests2.UsageConstraintsTest.lessThan":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":391,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":406,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":217,"org.easymock.tests2.CaptureTest.testCaptureRightOne":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":442,"org.easymock.tests2.UsageConstraintsTest.testOr":344,"org.easymock.tests.UsageRangeTest.combination":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":323,"org.easymock.tests.UsageTest.wrongArguments":39,"org.easymock.tests2.MockBuilderTest.testWithConstructor":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":439,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":211,"org.easymock.tests.UsageVarargTest.varargShortAccepted":89,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":207,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":101,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":537,"org.easymock.tests2.UsageConstraintsTest.cmpTo":349,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":366,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":527,"org.easymock.tests2.CompareToTest.testLessThan":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":212,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":299,"org.easymock.tests2.CaptureTest.testCaptureFromStub":494,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":190,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":307,"org.easymock.tests.UsageTest.unexpectedCallWithArray":38,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":533,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":245,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":99,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":505,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":155,"org.easymock.tests2.CaptureTest.testCapture":499,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":247,"org.easymock.tests2.UsageConstraintsTest.constraints":338,"org.easymock.samples.ExampleTest.addAndChangeDocument":285,"org.easymock.tests.UsageStrictMockTest.testVerify":249,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":275,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":244,"org.easymock.tests2.CompareToTest.testGreateThan":504,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":170,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":489,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":272,"org.easymock.tests.LimitationsTest.abstractClass":185,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":147,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":411,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":83}}]
