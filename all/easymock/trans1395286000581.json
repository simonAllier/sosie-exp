[{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[17,18,19,4,20,5,6,7,8,9,10,21,11,13,14,22,15,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,3,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:114","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>(java.util.Set<org.easymock.internal.MethodSerializationWrapper>.size())","type":"CtAssignmentImpl"},"failures":[71],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[72],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[73,74],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[75],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[4,5,13,26,27,29,31,32,34,43,48],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[76,71,77,78,79,80,81,82,83,84,75,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,4,20,6,7,10,21,11,13,14,22,15,120,121,122,123,124,125,23,126,127,128,24,25,26,27,28,29,30,31,32,33,35,36,37,3,38,39,40,41,42,43,44,45,47,48,49,50,129,130,131,132,133,134,135,136,51,137,138,139,140,141,142,143,144,144,145,145,146,147,148,149,52,150,151,152,153,54,55,58,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,59,60,61,62,63,179,180,181,182,183,184,185,186,65,66,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,70,202,203,204,205,206],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[207,208,209,210,211,76,212,213,214,215,216,217,71,77,218,219,220,221,222,78,223,224,225,79,226,227,228,80,81,17,229,18,82,83,84,230,75,231,85,86,87,232,233,88,89,234,235,236,237,238,239,240,90,91,92,93,94,95,96,97,98,99,100,101,241,242,102,103,104,105,243,106,107,108,244,109,245,246,247,248,249,110,250,251,111,252,253,254,255,256,257,258,259,260,112,261,262,263,264,265,113,266,267,268,269,270,271,272,273,114,274,275,115,276,277,278,116,279,117,280,118,281,282,283,119,284,285,19,4,20,5,6,7,8,9,10,21,11,13,14,22,15,120,121,122,123,124,125,286,287,23,288,289,290,126,127,128,291,292,24,25,26,27,293,28,29,30,31,32,33,34,35,36,37,3,38,39,40,41,42,43,44,45,46,47,48,49,50,294,295,129,296,297,298,299,300,301,130,302,303,304,305,306,307,308,309,131,310,311,312,132,133,134,135,136,313,314,51,315,137,138,316,317,139,318,140,319,141,142,320,143,321,322,323,144,145,146,324,325,147,148,149,52,53,150,151,152,326,327,328,329,153,54,55,56,57,58,330,331,332,333,334,335,336,337,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,338,174,175,339,340,176,177,341,342,178,343,344,345,346,347,348,349,350,351,352,353,354,59,60,61,62,63,64,355,356,73,357,358,359,74,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,179,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,180,401,181,182,183,184,185,186,65,66,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,187,427,428,429,430,431,432,433,434,435,436,437,67,438,439,440,441,442,443,444,445,446,447,448,449,68,450,188,451,189,452,453,454,455,456,457,458,459,460,190,461,191,192,193,194,195,196,462,463,464,465,466,197,467,468,469,470,471,472,473,474,475,476,198,199,200,201,477,478,69,70,479,202,203,480,481,482,483,484,204,205,485,206,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[107,244,204,205,206],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[494,23,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[71,77,218,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[308,131,412],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[76,71,77,78,225,79,80,81,82,83,84,75,231,85,86,88,89,90,91,92,93,94,95,96,98,99,100,101,242,273,114,116,117,118,4,20,10,21,13,15,121,124,127,27,29,31,32,48,130,309,131,310,312,132,133,134,136,314,51,315,137,138,316,317,139,318,140,319,141,142,320,143,322,323,324,325,52,150,151,152,54,55,56,57,58,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,59,60,61,62,63,64,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,180,401,181,182,183,184,185,186,65,66,434,435,436,437,67,438,439,440,441,443,444,446,447,448,449,68,451,190,461,191,192,193,194,195,196,462,464,465,478,70,479,202,203,480],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[73,74],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[450,452],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[27,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[71,77,218,219,220,221,222,78,225,79,226,80,17,18,82,83,84,230,75,231,85,86,87,232,233,88,89,242,103,104,107,108,109,273,114,274,116,279,4,20,5,6,7,8,9,10,21,11,13,14,22,15,120,121,122,123,124,125,286,23,290,127,24,25,26,27,28,29,30,31,32,33,35,36,37,3,38,39,40,41,42,43,44,45,46,47,48,49,50,294,295,129,296,309,131,310,312,132,133,134,135,136,314,51,315,137,138,316,140,319,141,142,320,143,322,52,53,150,151,152,326,327,328,329,54,55,56,57,58,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,338,174,175,340,176,177,341,342,178,348,349,350,351,353,354,59,60,61,62,63,64,367,179,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399,180,401,181,182,183,184,185,186,65,66,434,435,436,437,67,438,439,440,441,443,444,446,447,448,449,68,188,451,190,461,191,192,193,194,195,196,462,464,465,197,472,473,474,475,476,198,200,201,478,69,70,479,202,203,480,204,205,206],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[496,497,40,498,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[208,209,211,213,214,217,298,299,301,303,304,307],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[424],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[76,71,77,78,225,79,80,81,82,83,84,75,231,85,86,88,89,90,91,92,93,94,95,96,98,99,100,101,242,273,114,116,117,118,4,20,10,21,13,15,121,124,127,27,29,31,32,48,130,309,131,310,312,132,133,134,136,314,51,315,137,138,316,317,139,318,140,319,141,142,320,143,322,323,324,325,52,150,151,152,54,55,56,57,58,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,59,60,61,62,63,64,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,180,401,181,182,183,184,185,186,65,66,434,435,436,437,67,438,439,440,441,443,444,446,447,448,449,68,451,190,461,191,192,193,194,195,196,462,464,465,478,70,479,202,203,480],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:332","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","value":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[356,73,357,358,74,361],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[85,86,25,26,28,30,31,37,39,42,49,137,138,152,176,177,403,190,198,202,203,490,491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[78,225,79,17,229,18,319],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[76,77,218,78,225,79,226,80,81,17,18,82,83,84,230,75,231,85,86,232,233,88,89,90,91,92,93,94,95,96,98,99,100,101,241,242,102,105,106,110,273,114,4,20,5,6,7,8,9,10,21,11,13,14,22,15,120,121,122,123,124,125,23,128,24,25,26,27,28,29,30,31,32,33,35,36,37,3,38,39,40,41,42,43,44,45,46,47,48,49,50,294,295,129,296,130,309,131,310,312],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":27,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":174,"org.easymock.tests2.UsageTest.argumentsOrdered":233,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":100,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":412,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":231,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":318,"org.easymock.tests2.DelegateToTest.testReturnException":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":435,"org.easymock.tests.MockingTest.testPartialClassMocking":204,"org.easymock.tests.MockClassControlTest.testToString":455,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":268,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":255,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":378,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":81,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":54,"org.easymock.tests2.UsageTest.wrongArguments":230,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":328,"org.easymock.samples.ExampleTest.answerVsDelegate":319,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":335,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":487,"org.easymock.tests2.UsageConstraintsTest.testNull":29,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":123,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":99,"org.easymock.tests2.CaptureTest.testPrimitive":6,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":397,"org.easymock.tests.UsageTest.moreThanOneArgument":175,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":194,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":489,"org.easymock.tests.UsageTest.argumentsOrdered":342,"org.easymock.tests.UsageVarargTest.varargIntAccepted":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":59,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":274,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":306,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":63,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":76,"org.easymock.tests.ReplayStateInvalidUsageTest.times":371,"org.easymock.tests2.DependencyTest.testClassMocking":227,"org.easymock.tests2.AnswerTest.answer":78,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":419,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":222,"org.easymock.tests2.CaptureTest.testAnd":4,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":332,"org.easymock.tests2.UsageTest.strictResetToDefault":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":277,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":94,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":200,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":493,"org.easymock.tests2.DelegateToTest.testDelegate":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":393,"org.easymock.tests.LimitationsTest.mockFinalMethod":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":476,"org.easymock.tests2.DependencyTest.testClassMockingSupport":228,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":398,"org.easymock.tests2.CaptureTest.testCapture1_2446744":7,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":391,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":220,"org.easymock.tests.UsageThrowableTest.throwError":180,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":365,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":334,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":471,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":307,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":267,"org.easymock.samples.PartialClassMockTest.testGetArea":146,"org.easymock.tests.MockingTest.testInterfaceMocking":485,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":60,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":148,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":433,"org.easymock.tests2.UsageTest.niceToStrict":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":116,"org.easymock.tests2.MockBuilderTest.testCreateMock":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":214,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":496,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":387,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":95,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":331,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":470,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":326,"org.easymock.tests.UsageOverloadedMethodTest.overloading":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":265,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":465,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":165,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":150,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":3,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":11,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":442,"org.easymock.tests.MockClassControlTest.testEquals":459,"org.easymock.tests2.EasyMockSupportClassTest.testAll":110,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":451,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":395,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":474,"org.easymock.tests2.CaptureTest.testCaptureAll":20,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":72,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":221,"org.easymock.tests.MockNameTest.defaultName":362,"org.easymock.tests2.UsageConstraintsTest.testMatches":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":195,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":363,"org.easymock.samples.ExampleTest.voteForRemovals":143,"org.easymock.tests.UsageVarargTest.allKinds":68,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":475,"org.easymock.samples.BasicClassMockTest.testPrintContent":325,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":185,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":438,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":303,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":311,"org.easymock.tests2.UsageConstraintsTest.greaterThan":41,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":199,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":128,"org.easymock.samples.ExampleTest.voteForRemoval":141,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":361,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":133,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":291,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":336,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":286,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":82,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":338,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":92,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":434,"org.easymock.tests2.CaptureTest.testCaptureFirst":15,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":93,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":89,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":161,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":135,"org.easymock.tests2.CaptureTest.testCapture2_2446744":22,"org.easymock.tests2.UsageTest.moreThanOneArgument":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":420,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":119,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":449,"org.easymock.tests.GenericTest.testBridgedEquals":452,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":353,"org.easymock.tests.UsageExpectAndReturnTest.longType":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":472,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":90,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":396,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":153,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":46,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":344,"org.easymock.tests.UsageCallCountTest.tooManyCalls":354,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":216,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":383,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":184,"org.easymock.tests.MockingTest.testNiceClassMocking":488,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":103,"org.easymock.tests.MockingTest.testClassMocking":483,"org.easymock.tests2.UsageConstraintsTest.testContains":37,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":347,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":129,"org.easymock.tests2.UsageConstraintsTest.testFind":28,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":152,"org.easymock.tests.MockTypeTest.fromEasyMockClass":333,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":477,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":18,"org.easymock.tests.UsageExpectAndReturnTest.object":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":98,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":444,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":431,"org.easymock.tests.UsageTest.exactCallCountByLastCall":178,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":490,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":426,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":245,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":439,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":170,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":464,"org.easymock.tests.ResultTest.createThrowResultToString":2,"org.easymock.tests.MockClassControlTest.testHashCode":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":298,"org.easymock.tests2.EasyMockSupportTest.testVerify":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":258,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":491,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":469,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":462,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":219,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":19,"org.easymock.tests.UsageVarargTest.varargCharAccepted":443,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":355,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":425,"org.easymock.tests2.UsageTest.openCallCountByLastCall":85,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":101,"org.easymock.tests.DefaultClassInstantiatorTest.object":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":468,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":429,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":210,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":297,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":457,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":126,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":384,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":343,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":113,"org.easymock.tests2.UsageTest.resumeIfFailure":88,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":437,"org.easymock.tests2.StubTest.stubWithReturnValue":114,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":280,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":163,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":47,"org.easymock.tests2.SerializationTest.testAllMockedMethod":218,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":418,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":497,"org.easymock.samples.SupportTest.voteForRemovals":139,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":450,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":390,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":424,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":223,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":427,"org.easymock.tests.UsageExpectAndThrowTest.object":388,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":44,"org.easymock.tests2.DelegateToTest.testWrongClass":310,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":65,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":66,"org.easymock.samples.ConstructorCalledMockTest.testTax":144,"org.easymock.tests.UsageStrictMockTest.range":202,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":239,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":97,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":102,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":389,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":247,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":341,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":327,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":149,"org.easymock.tests2.CaptureTest.testCaptureNone":21,"org.easymock.tests.UsageUnorderedTest.message":64,"org.easymock.tests.UsageVerifyTest.twoReturns":191,"org.easymock.tests.UsageVarargTest.varargByteAccepted":448,"org.easymock.tests2.ThreadingTest.testThreadSafe":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":261,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":351,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":432,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":324,"org.easymock.tests2.CaptureTest.testCapture_2617107":5,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":57,"org.easymock.tests2.UsageConstraintsTest.any":35,"org.easymock.tests2.StubTest.stub":273,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":370,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndThrowTest.longType":381,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":359,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":369,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":315,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests2.SerializationTest.testClass":71,"org.easymock.tests.LimitationsTest.mockNativeMethod":179,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":189,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":173,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":209,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":316,"org.easymock.tests2.NameTest.nameForMocksControl":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":211,"org.easymock.tests2.MockedExceptionTest.testMockedException":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":251,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":206,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":382,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":120,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":118,"org.easymock.tests.MockingTest.testNicePartialClassMocking":205,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":125,"org.easymock.tests2.CompareToTest.testCompareEqual":494,"org.easymock.tests2.CaptureTest.testCaptureLast":10,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":207,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":399,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":108,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":32,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":45,"org.easymock.tests.MockingTest.testTwoMocks":484,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":244,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":386,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":232,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":49,"org.easymock.samples.ExampleTest.removeNonExistingDocument":321,"org.easymock.tests.UsageStrictMockTest.differentMethods":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":213,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":299,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":357,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":134,"org.easymock.tests2.MockBuilderTest.testCreateMockString":285,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":252,"org.easymock.tests.UsageExpectAndThrowTest.floatType":380,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":249,"org.easymock.tests.ResultTest.createReturnResultToString":1,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":225,"org.easymock.tests.UsageVerifyTest.twoThrows":461,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":246,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":112,"org.easymock.tests.ResultTest.createDelegateResultToString":0,"org.easymock.samples.ExampleTest.voteAgainstRemoval":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":413,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":147,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":127,"org.easymock.tests.LimitationsTest.privateConstructor":376,"org.easymock.tests2.UsageConstraintsTest.testNotNull":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":186,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":294,"org.easymock.tests2.UsageTest.defaultResetToNice":87,"org.easymock.samples.ExampleTest.voteAgainstRemovals":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":169,"org.easymock.tests.UsageVarargTest.differentLength":445,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":208,"org.easymock.tests2.CallbackTest.callback":242,"org.easymock.tests2.UsageConstraintsTest.equals":293,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":499,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":288,"org.easymock.tests.UsageTest.openCallCountByLastCall":176,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":56,"org.easymock.tests.UsageCallCountTest.tooFewCalls":349,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":105,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":329,"org.easymock.tests.UsageThrowableTest.throwCheckedException":183,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":498,"org.easymock.tests.MockingTest.testStrictClassMocking":482,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":107,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":53,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":212,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":372,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":106,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":226,"org.easymock.tests.ObjectMethodsTest.testHashCode":430,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":136,"org.easymock.tests2.NameTest.nameForNiceMock":271,"org.easymock.tests2.DependencyTest.testInterfaceMocking":80,"org.easymock.samples.ExampleTest.addDocument":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":262,"org.easymock.tests2.DelegateToTest.testStubDelegate":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":266,"org.easymock.tests2.AnswerTest.stubAnswer":79,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":70,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":281,"org.easymock.tests.UsageVarargTest.varargLongAccepted":447,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":172,"org.easymock.tests.UsageExpectAndReturnTest.floatType":156,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":109,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":145,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":466,"org.easymock.tests.UsageThrowableTest.noUpperLimit":401,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":42,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":305,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":25,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":234,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":8,"org.easymock.tests2.SerializationTest.test":77,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":155,"org.easymock.tests2.UsageConstraintsTest.testSame":30,"org.easymock.samples.SupportTest.addDocument":317,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":243,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":253,"org.easymock.tests.GenericTest.testPackageScope":188,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":304,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":486,"org.easymock.tests2.NameTest.nameForMock":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":166,"org.easymock.tests2.UsageStrictMockTest.differentMethods":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":284,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":289,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":158,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":392,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":428,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":201,"org.easymock.tests2.MockedExceptionTest.testRealException":296,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":415,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":55,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":374,"org.easymock.tests2.NameTest.nameForStrictMock":270,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":278,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":17,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":124,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":238,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":43,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":358,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":115,"org.easymock.tests2.UsageStrictMockTest.range":137,"org.easymock.tests2.UsageConstraintsTest.lessThan":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":91,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":257,"org.easymock.tests2.UsageConstraintsTest.testOr":31,"org.easymock.tests.UsageRangeTest.combination":198,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":121,"org.easymock.tests.UsageTest.wrongArguments":340,"org.easymock.tests2.MockBuilderTest.testWithConstructor":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":254,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":167,"org.easymock.tests.UsageVarargTest.varargShortAccepted":446,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":74,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":352,"org.easymock.tests2.UsageConstraintsTest.cmpTo":36,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":224,"org.easymock.tests2.CompareToTest.testLessThan":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":405,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":86,"org.easymock.tests2.CaptureTest.testCaptureFromStub":14,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":364,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":276,"org.easymock.tests.UsageTest.unexpectedCallWithArray":339,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":69,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":350,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":168,"org.easymock.tests2.CaptureTest.testCapture":12,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":479,"org.easymock.tests2.UsageConstraintsTest.constraints":26,"org.easymock.samples.ExampleTest.addAndChangeDocument":322,"org.easymock.tests.UsageStrictMockTest.testVerify":481,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":323,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":473,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":61,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":160,"org.easymock.tests.LimitationsTest.abstractClass":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":62,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":96}}]
