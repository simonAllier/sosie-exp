[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:130","sourceCode":"return (((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName()))) && ((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","type":"CtReturnImpl"},"failures":[79],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[80,80,81,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,100,79,6,101,102,103,104,86,105,106,107,108,109,110,111,112,113,114,115,11,12,13,14,15,16,17,18,19,116,117,20,21,118,22,23,24,119,25,26,27,28,29,30,31,32,33,34,120,121,35,36,37,38,39,122,123,40,41,124,42,43,44,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,45,168,169,170,171,172,173,174,175,176,177,178,179,46,47,180,181,48,49,50,51,52,53,182,183,96,184,185,186,187,188,189,54,190,82,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,191,72,73,74,75,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[192,193],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:230","sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[194],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[195,196,197],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[198,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:358","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[146],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[199],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[141],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[198],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[151],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[200,201,61,202,203,204,62,63,64,205,206,65,66,67,68,70,71],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[207,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[195,196,197],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[209,100,210,79,211],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[212,213,214],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[215],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[180,216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[217],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[218,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","key":"defaultValue"}},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[220,221,222,223,224,86,120,225,121,42,43,44,96,72,73,74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[141,142],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[226],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":141,"org.easymock.tests2.UsageTest.argumentsOrdered":99,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":104,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":192,"org.easymock.tests2.StubTest.stubWithReturnValue":191,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":21,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":160,"org.easymock.tests.MockingTest.testPartialClassMocking":11,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":94,"org.easymock.samples.SupportTest.voteForRemovals":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":209,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":206,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":214,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":76,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":220,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":47,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":158,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":40,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":41,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":39,"org.easymock.tests2.UsageTest.wrongArguments":97,"org.easymock.samples.ConstructorCalledMockTest.testTax":80,"org.easymock.tests.UsageStrictMockTest.range":43,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":132,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":218,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":65,"org.easymock.tests2.UsageConstraintsTest.testNull":143,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":51,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":134,"org.easymock.tests2.CaptureTest.testPrimitive":172,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":123,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":89,"org.easymock.tests.UsageTest.moreThanOneArgument":86,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":57,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":217,"org.easymock.tests2.CaptureTest.testCaptureNone":175,"org.easymock.tests.UsageUnorderedTest.message":224,"org.easymock.tests.UsageVerifyTest.twoReturns":121,"org.easymock.tests2.ThreadingTest.testThreadSafe":165,"org.easymock.tests.UsageTest.argumentsOrdered":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":30,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":95,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":207,"org.easymock.tests2.UsageConstraintsTest.any":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":34,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":195,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":164,"org.easymock.tests2.SerializationTest.testClass":180,"org.easymock.tests.LimitationsTest.mockNativeMethod":6,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":169,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":79,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":29,"org.easymock.tests2.AnswerTest.answer":190,"org.easymock.tests2.CaptureTest.testAnd":170,"org.easymock.tests2.UsageTest.strictResetToDefault":183,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":8,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":129,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":13,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":55,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":12,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":60,"org.easymock.tests2.CaptureTest.testCaptureLast":174,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":71,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":146,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":159,"org.easymock.tests2.CaptureTest.testCapture1_2446744":173,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":201,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":14,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":98,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":162,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":212,"org.easymock.tests.UsageThrowableTest.throwError":109,"org.easymock.tests.UsageStrictMockTest.differentMethods":44,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":167,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":154,"org.easymock.tests.UsageVerifyTest.twoThrows":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":77,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":31,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":63,"org.easymock.tests2.UsageTest.niceToStrict":184,"org.easymock.tests2.ThreadingTest.testChangeDefault":200,"org.easymock.tests2.UsageConstraintsTest.testNotNull":161,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":115,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":50,"org.easymock.tests2.UsageTest.defaultResetToNice":187,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":25,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":202,"org.easymock.tests.UsageTest.openCallCountByLastCall":105,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":92,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":130,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":138,"org.easymock.tests.UsageOverloadedMethodTest.overloading":102,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":68,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":22,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":101,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":196,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":151,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":176,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":219,"org.easymock.tests.UsageThrowableTest.throwCheckedException":112,"org.easymock.tests2.EasyMockSupportClassTest.testAll":75,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":210,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":93,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":84,"org.easymock.tests2.CaptureTest.testCaptureAll":171,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":70,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.testMatches":153,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":10,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":168,"org.easymock.tests2.DependencyTest.testInterfaceMocking":46,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":120,"org.easymock.tests2.DelegateToTest.testStubDelegate":48,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":114,"org.easymock.tests2.AnswerTest.stubAnswer":82,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":42,"org.easymock.tests2.UsageConstraintsTest.greaterThan":155,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":36,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":64,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":205,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":166,"org.easymock.tests.UsageExpectAndReturnTest.floatType":16,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":28,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":208,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":81,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":156,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":139,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":182,"org.easymock.tests2.SerializationTest.test":181,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":216,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":127,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":15,"org.easymock.tests2.UsageConstraintsTest.testSame":144,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":193,"org.easymock.tests2.CaptureTest.testCaptureFirst":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":128,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":117,"org.easymock.tests.GenericTest.testPackageScope":100,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":45,"org.easymock.tests2.UsageTest.moreThanOneArgument":96,"org.easymock.tests2.CaptureTest.testCapture2_2446744":178,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":53,"org.easymock.tests.GenericTest.testBridgedEquals":211,"org.easymock.tests.UsageExpectAndReturnTest.longType":17,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":23,"org.easymock.tests2.UsageStrictMockTest.differentMethods":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":7,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":18,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":20,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":194,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":122,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":66,"org.easymock.tests2.UsageConstraintsTest.testContains":150,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":137,"org.easymock.tests2.UsageConstraintsTest.testFind":142,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":103,"org.easymock.tests.MockTypeTest.fromEasyMockClass":215,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":59,"org.easymock.tests.UsageExpectAndReturnTest.object":118,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":221,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":61,"org.easymock.tests.ErrorMessageTest.testGetters":222,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":49,"org.easymock.tests2.UsageStrictMockTest.range":73,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":199,"org.easymock.tests2.UsageConstraintsTest.lessThan":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":133,"org.easymock.tests.UsageTest.exactCallCountByLastCall":107,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":108,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":126,"org.easymock.tests2.CaptureTest.testCaptureRightOne":177,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":85,"org.easymock.tests2.UsageConstraintsTest.testOr":145,"org.easymock.tests.UsageRangeTest.combination":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":56,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":26,"org.easymock.tests.UsageTest.wrongArguments":88,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":19,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":24,"org.easymock.tests2.UsageConstraintsTest.cmpTo":149,"org.easymock.tests2.UsageTest.openCallCountByLastCall":185,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":186,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":136,"org.easymock.tests.UsageTest.unexpectedCallWithArray":87,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":91,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":119,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":62,"org.easymock.tests2.UsageConstraintsTest.constraints":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":78,"org.easymock.tests2.UsageTest.resumeIfFailure":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":32,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":198,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":33,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":124,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":131}}]
