[{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:108","sourceCode":"if (org.easymock.TestSubject != null) {\n    org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field);\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[50,51,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[4,53,54,55,56,57,58,59,60],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[37,61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[62,63,64,65,66,4,53,67,68,69,54,55,70,56,71,72,73,74,75,76,5,77,78,57,79,80,81,82,83,84,85,86,87,88,89,14,58,90,59,91,92,93,94,95,96,97,60,98,99,100,101,16,102,103,104,105,106,107,108,109,110,37,39,111,112,113,114,115,116,117,118,119,120],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[121,122,123,124,125,113],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[126,127,128],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[129],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[130,131,132,133,134,135,136,137,138,139],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[7,10,11,17,30,31,32,33,35,36,37,39,41,49],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[140,141],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[50,51,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[142],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"prefix"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[143,144,145,146,147,148,149,150,151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[152,153,154,155,156,157,158,159,160,161,1,162,163,164,165,166,126,62,167,168,63,2,169,3,170,171,64,65,66,4,53,172,67,68,69,54,55,70,56,71,72,73,74,75,76,5,77,78,57,79,80,81,82,83,84,85,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,86,201,202,203,204,205,206,87,207,208,209,210,211,212,6,213,214,7,8,9,215,216,217,10,11,12,13,218,219,220,221,222,223,224,225,226,227,88,228,89,14,130,229,230,58,90,59,91,92,93,94,95,96,97,60,98,99,100,231,232,233,140,15,234,101,16,17,18,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,19,265,266,267,268,269,270,136,271,272,137,20,21,273,22,274,275,276,277,278,279,280,281,282,138,139,283,284,23,285,286,287,24,25,288,289,26,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,102,103,104,105,106,310,107,108,109,311,312,313,314,315,27,316,317,318,319,110,143,144,145,28,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,121,122,350,351,352,353,354,355,123,356,357,358,359,360,361,124,362,363,364,365,366,367,368,141,369,370,371,372,373,374,375,376,377,125,378,379,380,381,382,29,383,30,31,384,385,32,33,34,386,387,388,389,390,391,392,393,394,395,396,35,36,397,146,398,399,400,401,402,403,404,405,37,406,407,408,409,410,38,411,39,111,40,41,42,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,147,443,148,444,445,446,447,448,449,450,451,149,150,452,151,453,454,455,456,457,458,459,460,461,462,463,464,465,43,44,45,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,47,112,113,491,492,493,494,495,496,497,498,499,114,115,0,500,501,502,503,116,117,118,119,120],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:110","sourceCode":"return ((org.easymock.internal.Invocation.(getMockAndMethodName()) + \"(\") + org.easymock.internal.ArgumentToString.(org.easymock.internal.ArgumentToString.argumentsToString(java.lang.Object[]))) + \")\"","type":"CtReturnImpl"},"failures":[7,10,11,17,18,22,371,30,31,32,33,35,36,37,39,41,42,46,47],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[152,153,154,155,157,158,159,161,1,162,163,164,165,166,62,63,2,169,3,65,66,4,53,67,68,69,54,55,70,71,72,73,74,75,76,5,77,78,57,79,80,81,82,83,84,85,176,179,189,195,198,199,200,86,201,87,6,213,214,7,8,9,215,216,217,10,11,12,13,218,219,220,221,223,224,225,227,88,89,14,130,229,230,58,90,59,91,92,93,94,95,96,97,60,98,99,100,231,232,233,140,15,234,101,16,17,18,235,236,239,240,241,244,245,247,248,249,250,256,263,19,268,269,270,271,20,21,22,274,275,138,284,23,285,286,287,24,25,288,289,26,290,291,292,293,293,294,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,102,103,104,105,106,107,108,109,311,312,314,315,27,316,317,318,319,110,28,320,321,322,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,121,122,350,351,352,353,354,355,123,356,357,358,359,360,361,124,362,363,364,365,366,367,368,141,370,371,375,376,377,125,378,380,29,383,30,31,384,385,32,33,34,389,390,392,396,35,36,400,401,402,405,37,38,411,39,111,40,41,42,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,453,454,455,456,457,458,459,460,461,462,463,464,465,43,44,45,466,467,468,469,470,471,472,473,475,112,113,491,492,493,494,495,496,497,498,499,114,115,500,501,116,117,118,119,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[130,229,230,504],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[505,506,507,508,51,52],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[4,53,68,54,55,56,57,83,58,59,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[509,510,30,39,511,512],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[68,56,57,83],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,503],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":53,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests2.UsageTest.argumentsOrdered":11,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":443,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":9,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":309,"org.easymock.tests2.DelegateToTest.testReturnException":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":497,"org.easymock.tests.MockingTest.testPartialClassMocking":389,"org.easymock.tests.MockClassControlTest.testToString":468,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":246,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":183,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":414,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":179,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":131,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":116,"org.easymock.tests2.UsageTest.wrongArguments":7,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":455,"org.easymock.samples.ExampleTest.answerVsDelegate":299,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":488,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":394,"org.easymock.tests2.UsageConstraintsTest.testNull":68,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":163,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":473,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":26,"org.easymock.tests2.CaptureTest.testPrimitive":91,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":120,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":433,"org.easymock.tests.UsageTest.moreThanOneArgument":383,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":377,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":406,"org.easymock.tests.UsageTest.argumentsOrdered":33,"org.easymock.tests.UsageVarargTest.varargIntAccepted":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":142,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":263,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":261,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":278,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":106,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":87,"org.easymock.tests.ReplayStateInvalidUsageTest.times":346,"org.easymock.tests2.DependencyTest.testClassMocking":242,"org.easymock.tests2.AnswerTest.answer":236,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":449,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":221,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":485,"org.easymock.tests2.CaptureTest.testAnd":58,"org.easymock.tests2.UsageTest.strictResetToDefault":213,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":63,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":266,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":287,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":321,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":410,"org.easymock.tests2.DelegateToTest.testDelegate":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":429,"org.easymock.tests.LimitationsTest.mockFinalMethod":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":495,"org.easymock.tests2.DependencyTest.testClassMockingSupport":243,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":379,"org.easymock.tests2.CaptureTest.testCapture1_2446744":92,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":219,"org.easymock.tests.UsageThrowableTest.throwError":330,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":340,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":487,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":47,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":197,"org.easymock.samples.PartialClassMockTest.testGetArea":308,"org.easymock.tests.MockingTest.testInterfaceMocking":391,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":103,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":415,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":184,"org.easymock.tests2.UsageTest.niceToStrict":8,"org.easymock.tests2.ThreadingTest.testChangeDefault":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":50,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":268,"org.easymock.tests2.MockBuilderTest.testCreateMock":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":209,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":509,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":423,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":24,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":484,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":374,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":460,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":453,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":506,"org.easymock.tests.UsageOverloadedMethodTest.overloading":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":194,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":141,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":75,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":457,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":358,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":74,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":97,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":313,"org.easymock.tests.MockClassControlTest.testEquals":472,"org.easymock.tests2.EasyMockSupportClassTest.testAll":176,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":431,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":493,"org.easymock.tests2.CaptureTest.testCaptureAll":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":220,"org.easymock.tests.MockNameTest.defaultName":310,"org.easymock.tests2.UsageConstraintsTest.testMatches":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":125,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":338,"org.easymock.samples.ExampleTest.voteForRemovals":303,"org.easymock.tests.UsageVarargTest.allKinds":110,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":396,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":494,"org.easymock.samples.BasicClassMockTest.testPrintContent":307,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":336,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":115,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":258,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":481,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":135,"org.easymock.tests2.UsageConstraintsTest.greaterThan":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":320,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":3,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":482,"org.easymock.samples.ExampleTest.voteForRemoval":300,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":170,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":199,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":489,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":279,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":166,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":405,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":285,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":496,"org.easymock.tests2.CaptureTest.testCaptureFirst":100,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":286,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":13,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":355,"org.easymock.tests2.CaptureTest.testCapture2_2446744":99,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":86,"org.easymock.tests2.UsageTest.moreThanOneArgument":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":450,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":21,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":319,"org.easymock.tests.GenericTest.testBridgedEquals":503,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":507,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":44,"org.easymock.tests.UsageExpectAndReturnTest.longType":351,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":491,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":432,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":81,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":382,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":430,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":375,"org.easymock.tests.UsageCallCountTest.tooManyCalls":45,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":419,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":335,"org.easymock.tests.MockingTest.testNiceClassMocking":395,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":153,"org.easymock.tests.MockingTest.testClassMocking":387,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":461,"org.easymock.tests2.UsageConstraintsTest.testContains":73,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":233,"org.easymock.tests2.UsageConstraintsTest.testFind":67,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":459,"org.easymock.tests.MockTypeTest.fromEasyMockClass":486,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":38,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":89,"org.easymock.tests.UsageExpectAndReturnTest.object":357,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":132,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":315,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":402,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":508,"org.easymock.tests.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":407,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":397,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":139,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":109,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":362,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":368,"org.easymock.tests.MockClassControlTest.testHashCode":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":252,"org.easymock.tests2.EasyMockSupportTest.testVerify":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":186,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":408,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":366,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":373,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":218,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":64,"org.easymock.tests.UsageVarargTest.varargCharAccepted":314,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":474,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":151,"org.easymock.tests2.UsageTest.openCallCountByLastCall":215,"org.easymock.tests.DefaultClassInstantiatorTest.object":475,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":51,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":372,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":400,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":333,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":205,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":251,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":470,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":2,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":420,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":363,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":323,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":195,"org.easymock.tests2.UsageTest.resumeIfFailure":12,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":483,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":499,"org.easymock.tests2.StubTest.stubWithReturnValue":275,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":82,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":356,"org.easymock.tests2.SerializationTest.testAllMockedMethod":230,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":448,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":510,"org.easymock.samples.SupportTest.voteForRemovals":296,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":426,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":504,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":452,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":237,"org.easymock.tests.UsageExpectAndThrowTest.object":424,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":398,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":79,"org.easymock.tests2.DelegateToTest.testWrongClass":225,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":112,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":113,"org.easymock.tests.UsageStrictMockTest.range":41,"org.easymock.samples.ConstructorCalledMockTest.testTax":293,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":281,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":288,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":152,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":505,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":425,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":173,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":454,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":511,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":145,"org.easymock.tests2.CaptureTest.testCaptureNone":96,"org.easymock.tests.UsageUnorderedTest.message":37,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":46,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests.UsageVarargTest.varargByteAccepted":318,"org.easymock.tests2.ThreadingTest.testThreadSafe":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":190,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":465,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":403,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":306,"org.easymock.tests2.CaptureTest.testCapture_2617107":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":149,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":119,"org.easymock.tests2.UsageConstraintsTest.any":71,"org.easymock.tests2.StubTest.stub":274,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":345,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":498,"org.easymock.tests.UsageExpectAndThrowTest.longType":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":150,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":479,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":344,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":16,"org.easymock.tests2.SerializationTest.testClass":130,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":256,"org.easymock.tests.LimitationsTest.mockNativeMethod":328,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":502,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":365,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":204,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":235,"org.easymock.tests2.NameTest.nameForMocksControl":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":206,"org.easymock.tests2.MockedExceptionTest.testMockedException":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":178,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":385,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":418,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":392,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":228,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":161,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":271,"org.easymock.tests.MockingTest.testNicePartialClassMocking":390,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":165,"org.easymock.tests2.CaptureTest.testCaptureLast":95,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":202,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":380,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":159,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":55,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":80,"org.easymock.tests.MockingTest.testTwoMocks":388,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":160,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":422,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":84,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":128,"org.easymock.samples.ExampleTest.removeNonExistingDocument":304,"org.easymock.tests.UsageStrictMockTest.differentMethods":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":208,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":253,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":477,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":200,"org.easymock.tests2.MockBuilderTest.testCreateMockString":22,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":466,"org.easymock.tests.UsageExpectAndThrowTest.floatType":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":180,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":175,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":239,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":283,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":189,"org.easymock.samples.ExampleTest.voteAgainstRemoval":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":148,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":143,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":169,"org.easymock.tests.LimitationsTest.privateConstructor":327,"org.easymock.tests2.UsageConstraintsTest.testNotNull":83,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":231,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":337,"org.easymock.tests2.UsageTest.defaultResetToNice":217,"org.easymock.samples.ExampleTest.voteAgainstRemovals":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":124,"org.easymock.tests.UsageVarargTest.differentLength":27,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":203,"org.easymock.tests2.CallbackTest.callback":14,"org.easymock.tests2.UsageConstraintsTest.equals":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":167,"org.easymock.tests.UsageTest.openCallCountByLastCall":384,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":118,"org.easymock.tests.UsageCallCountTest.tooFewCalls":463,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":456,"org.easymock.tests.UsageThrowableTest.throwCheckedException":334,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":512,"org.easymock.tests.MockingTest.testStrictClassMocking":386,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":158,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":207,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":347,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":157,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":241,"org.easymock.tests.ObjectMethodsTest.testHashCode":401,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":201,"org.easymock.tests2.NameTest.nameForNiceMock":249,"org.easymock.tests2.DependencyTest.testInterfaceMocking":244,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":133,"org.easymock.samples.ExampleTest.addDocument":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":196,"org.easymock.tests2.DelegateToTest.testStubDelegate":224,"org.easymock.tests2.AnswerTest.stubAnswer":240,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":111,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":272,"org.easymock.tests.UsageVarargTest.varargLongAccepted":317,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":147,"org.easymock.tests.UsageExpectAndReturnTest.floatType":350,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":364,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":138,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":294,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":260,"org.easymock.tests.UsageThrowableTest.noUpperLimit":331,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":66,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":276,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":93,"org.easymock.tests2.SerializationTest.test":229,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":122,"org.easymock.tests2.UsageConstraintsTest.testSame":69,"org.easymock.samples.SupportTest.addDocument":295,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":156,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":181,"org.easymock.tests.GenericTest.testPackageScope":500,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":259,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":393,"org.easymock.tests2.NameTest.nameForMock":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":359,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":273,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":168,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":428,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":399,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":322,"org.easymock.tests2.MockedExceptionTest.testRealException":140,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":445,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":101,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":117,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":349,"org.easymock.tests2.NameTest.nameForStrictMock":248,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":267,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":52,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":88,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":164,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":280,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":478,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":57,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":61,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":19,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests2.UsageConstraintsTest.lessThan":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":442,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":134,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":185,"org.easymock.tests2.CaptureTest.testCaptureRightOne":60,"org.easymock.tests2.UsageConstraintsTest.testOr":54,"org.easymock.tests.UsageRangeTest.combination":28,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":1,"org.easymock.tests.UsageTest.wrongArguments":31,"org.easymock.tests2.MockBuilderTest.testWithConstructor":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":182,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":467,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":360,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":480,"org.easymock.tests.UsageVarargTest.varargShortAccepted":316,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":43,"org.easymock.tests2.UsageConstraintsTest.cmpTo":72,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":216,"org.easymock.tests2.CaptureTest.testCaptureFromStub":98,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":339,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":265,"org.easymock.tests.UsageTest.unexpectedCallWithArray":30,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":464,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":129,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":361,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":40,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.samples.ExampleTest.addAndChangeDocument":305,"org.easymock.tests.UsageStrictMockTest.testVerify":413,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":297,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":411,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":492,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":94,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":104,"org.easymock.tests.LimitationsTest.abstractClass":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":105,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":25,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":311}}]
