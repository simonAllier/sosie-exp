[{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:643","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,7,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,9,11,12,13,14,15,16,17,18,305,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,80,81,82,85,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,131,132,136,137,138,147,148,149,151,152,153,154,155,156,306,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,203,204,205,206,207,218,219,220,307,308,221,223,224,225,226,227,228,309,310,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,299,301,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[31,36,48],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:262","failures":[110,117,123,124,125,126,154,192,193,194,195,196,197,204,207,220,229,230,231,232,236,260,261,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,288,289,290,291,292,293,296,297,298,302],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[90,311,312,313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:60","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockRule:38","sourceCode":"return new org.easymock.internal.EasyMockStatement(org.junit.runners.model.Statement , java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[314],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[315,316,317],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[318],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[319,296,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[320],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[30,37,43,55,321],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.ConstructorArgs:77","failures":[322,314],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type","org.easymock.MockType.NICE":"type"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[56,58,60,61,62,65,66,67,68],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[323,324,325,326,123,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[89,327],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[328,329],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[7,7,8,8,22,28,29,32,33,34,35,41,43,44,46,47,53,54,55,67,154,158,159,160,161,162,166,206,330,331,332,333,334,251,252,253,254,255,256,258,259,262,263,264],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[78,90,123,124,125,126,132,146,147,148,149,150,151,335,336,252,337],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":31,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":232,"org.easymock.tests2.UsageTest.argumentsOrdered":120,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":195,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":115,"org.easymock.tests2.StubTest.stubWithReturnValue":154,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":52,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":181,"org.easymock.tests2.SerializationTest.testAllMockedMethod":137,"org.easymock.tests2.DelegateToTest.testReturnException":147,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":193,"org.easymock.tests.MockingTest.testPartialClassMocking":212,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":318,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":324,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":277,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":265,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":211,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":139,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":71,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":312,"org.easymock.tests.UsageExpectAndThrowTest.object":275,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":49,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":17,"org.easymock.tests2.DelegateToTest.testWrongClass":149,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":263,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":264,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":258,"org.easymock.tests2.UsageTest.wrongArguments":113,"org.easymock.samples.ConstructorCalledMockTest.testTax":7,"org.easymock.tests.UsageStrictMockTest.range":168,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":128,"org.easymock.tests2.UsageConstraintsTest.testNull":33,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":276,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":79,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":310,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":107,"org.easymock.tests2.CaptureTest.testPrimitive":59,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":262,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":284,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":237,"org.easymock.tests.UsageTest.moreThanOneArgument":233,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":217,"org.easymock.tests2.CaptureTest.testCaptureNone":64,"org.easymock.tests.UsageUnorderedTest.message":285,"org.easymock.tests.UsageVerifyTest.twoReturns":205,"org.easymock.tests.UsageVarargTest.varargByteAccepted":248,"org.easymock.tests2.ThreadingTest.testThreadSafe":87,"org.easymock.tests.UsageTest.argumentsOrdered":238,"org.easymock.tests.UsageVarargTest.varargIntAccepted":242,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":226,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":251,"org.easymock.tests2.CaptureTest.testCapture_2617107":58,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":261,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":326,"org.easymock.tests2.UsageConstraintsTest.any":39,"org.easymock.tests2.StubTest.stub":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":231,"org.easymock.tests.UsageExpectAndThrowTest.longType":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":194,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":315,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":23,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests2.SerializationTest.testClass":135,"org.easymock.tests.LimitationsTest.mockNativeMethod":221,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":27,"org.easymock.tests2.AnswerTest.answer":70,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":191,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":38,"org.easymock.tests2.CaptureTest.testAnd":56,"org.easymock.tests2.UsageTest.strictResetToDefault":111,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":26,"org.easymock.tests2.NameTest.nameForMocksControl":145,"org.easymock.tests2.MockedExceptionTest.testMockedException":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":159,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":96,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":236,"org.easymock.tests2.DelegateToTest.testDelegate":151,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":305,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":269,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":214,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":76,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":108,"org.easymock.tests.MockingTest.testNicePartialClassMocking":213,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":280,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":81,"org.easymock.tests2.CaptureTest.testCaptureLast":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":209,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":36,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":134,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":208,"org.easymock.tests2.CaptureTest.testCapture1_2446744":60,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":320,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":278,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":273,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":54,"org.easymock.tests.UsageThrowableTest.throwError":286,"org.easymock.tests.UsageStrictMockTest.differentMethods":169,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":329,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":89,"org.easymock.tests.UsageExpectAndThrowTest.floatType":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":162,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":45,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":73,"org.easymock.tests.UsageVerifyTest.twoThrows":204,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":140,"org.easymock.samples.PartialClassMockTest.testGetArea":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":252,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":215,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":266,"org.easymock.tests2.UsageTest.niceToStrict":114,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":322,"org.easymock.tests2.UsageConstraintsTest.testNotNull":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":293,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":314,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":106,"org.easymock.tests2.UsageTest.defaultResetToNice":118,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":187,"org.easymock.tests.UsageVarargTest.differentLength":245,"org.easymock.tests2.CallbackTest.callback":152,"org.easymock.tests.UsageTest.openCallCountByLastCall":235,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":274,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":97,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":298,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":260,"org.easymock.tests.UsageCallCountTest.tooFewCalls":224,"org.easymock.tests.UsageOverloadedMethodTest.overloading":219,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":302,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":43,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":218,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":131,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":183,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":316,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":42,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":65,"org.easymock.tests.UsageThrowableTest.throwCheckedException":290,"org.easymock.tests.MockClassControlTest.testEquals":309,"org.easymock.tests2.EasyMockSupportClassTest.testAll":138,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":156,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":282,"org.easymock.tests2.CaptureTest.testCaptureAll":57,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":207,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":130,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":327,"org.easymock.tests2.UsageConstraintsTest.testMatches":44,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":132,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":161,"org.easymock.tests2.CompareToTest.testGreateOrEqual":321,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":91,"org.easymock.tests2.NameTest.nameForNiceMock":144,"org.easymock.tests.UsageVarargTest.allKinds":250,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":203,"org.easymock.tests2.DependencyTest.testInterfaceMocking":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":337,"org.easymock.samples.BasicClassMockTest.testPrintContent":15,"org.easymock.samples.ExampleTest.addDocument":4,"org.easymock.tests2.DelegateToTest.testStubDelegate":148,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":292,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":20,"org.easymock.tests2.AnswerTest.stubAnswer":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":197,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":150,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":166,"org.easymock.tests2.UsageConstraintsTest.greaterThan":46,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":199,"org.easymock.tests.UsageVarargTest.varargLongAccepted":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":85,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":88,"org.easymock.tests.UsageExpectAndReturnTest.floatType":174,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":190,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":86,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":8,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageThrowableTest.noUpperLimit":287,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":47,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":257,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":29,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":110,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":61,"org.easymock.tests2.SerializationTest.test":136,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":317,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":94,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":288,"org.easymock.tests2.UsageConstraintsTest.testSame":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":173,"org.easymock.samples.SupportTest.addDocument":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":192,"org.easymock.tests2.CaptureTest.testCaptureFirst":69,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":95,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":179,"org.easymock.tests.GenericTest.testPackageScope":155,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":90,"org.easymock.tests2.CaptureTest.testCapture2_2446744":68,"org.easymock.tests2.UsageTest.moreThanOneArgument":112,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":249,"org.easymock.tests.GenericTest.testBridgedEquals":306,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":227,"org.easymock.tests2.NameTest.nameForMock":142,"org.easymock.tests.UsageExpectAndReturnTest.longType":175,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":184,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":256,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":51,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":281,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":176,"org.easymock.tests.UsageCallCountTest.tooManyCalls":228,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":279,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":307,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":201,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":223,"org.easymock.tests2.MockedExceptionTest.testRealException":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":270,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":259,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":129,"org.easymock.tests2.UsageConstraintsTest.testContains":41,"org.easymock.tests2.NameTest.nameForStrictMock":143,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":125,"org.easymock.tests2.UsageConstraintsTest.testFind":32,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":220,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":80,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":19,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests.UsageExpectAndReturnTest.object":182,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":82,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":105,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":55,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":100,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":244,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":308,"org.easymock.tests.UsageTest.exactCallCountByLastCall":239,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":93,"org.easymock.tests2.CaptureTest.testCaptureRightOne":66,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":328,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":311,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":294,"org.easymock.tests2.UsageConstraintsTest.testOr":35,"org.easymock.tests.UsageRangeTest.combination":198,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":240,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":77,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":188,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":301,"org.easymock.tests.UsageTest.wrongArguments":234,"org.easymock.tests2.EasyMockSupportTest.testVerify":104,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":185,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":295,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":299,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":297,"org.easymock.tests.UsageVarargTest.varargShortAccepted":246,"org.easymock.tests2.UsageConstraintsTest.cmpTo":40,"org.easymock.tests.UsageVarargTest.varargCharAccepted":243,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":319,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":21,"org.easymock.tests2.UsageTest.openCallCountByLastCall":116,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":103,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":296,"org.easymock.tests2.CaptureTest.testCaptureFromStub":67,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":289,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":165,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":225,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":186,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":83,"org.easymock.tests2.UsageConstraintsTest.constraints":30,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":271,"org.easymock.samples.ExampleTest.addAndChangeDocument":6,"org.easymock.tests.UsageStrictMockTest.testVerify":171,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":189,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":229,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":141,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":164,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":62,"org.easymock.tests2.UsageTest.resumeIfFailure":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":253,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":178,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":254,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":241,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":98}}]
