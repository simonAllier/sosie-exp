[{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[0,9,10,1,11,2,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,3,4,5,27,28,29,30,31,32,33,34,35,36,8,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,123,124,124,125,126,6,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,7,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[94,253],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[15,254,255,256,257,258,259,260,261,262,263,264,265,100,266],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[53,267],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[0,12,91,99,147,176,177,230,241],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cl":"cl","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,8,37,38,39,40,41,42,43,44,45,46,47,268,48,49,50,51,52,53,54,55,56,57,58,269,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,87,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,125,126,127,128,129,131,132,133,134,135,142,143,144,147,148,149,152,153,154,155,162,165,170,171,174,175,177,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,226,227,228,229,230,237,238,239,241,242,243,244,245,246,247,248,249,250,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[15,16,270,271],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","method":"bridgeMethod"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[15,16,270,271],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[159,160,161],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[272],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,11,2,273,274,12,275,13,14,276,15,16,270,18,19,20,21,22,3,4,5,277,278,279,280,27,28,29,30,31,32,33,34,35,36,8,37,38,39,40,41,42,43,44,45,46,47,268,48,49,50,51,281,52,53,282,283,56,284,57,58,269,59,60,285,286,61,62,63,64,65,66,67,81,82,83,84,86,87,88,90,287,288,289,290,91,92,93,291,94,292,95,96,97,293,294,98,99,100,102,103,106,107,108,109,110,111,112,113,114,115,295,116,296,117,118,119,120,126,6,127,128,297,129,298,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,299,300,301,147,302,148,149,303,304,305,306,307,308,150,152,153,154,155,309,310,311,312,313,314,315,316,317,318,319,320,321,162,7,322,163,164,165,323,170,171,172,173,174,175,176,177,178,179,180,181,182,324,325,326,327,328,183,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,344,345,228,229,346,347,230,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,348,349,252,350,351,352,353,354,355,356,357,358,359,360,361,362,363],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[85,87,364],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":30,"org.easymock.tests2.UsageTest.argumentsOrdered":294,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":226,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":364,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":292,"org.easymock.tests2.StubTest.stubWithReturnValue":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":262,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":194,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":48,"org.easymock.tests2.SerializationTest.testAllMockedMethod":270,"org.easymock.tests2.DelegateToTest.testReturnException":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":137,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":145,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":265,"org.easymock.tests.MockingTest.testPartialClassMocking":249,"org.easymock.samples.SupportTest.voteForRemovals":125,"org.easymock.tests.MockClassControlTest.testToString":358,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":166,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":218,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":271,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":206,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":24,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":146,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":9,"org.easymock.tests.UsageExpectAndThrowTest.object":216,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":46,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":255,"org.easymock.tests2.DelegateToTest.testWrongClass":88,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":237,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":238,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":36,"org.easymock.tests2.UsageTest.wrongArguments":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":170,"org.easymock.samples.ConstructorCalledMockTest.testTax":123,"org.easymock.tests.UsageStrictMockTest.range":148,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":307,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":76,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":101,"org.easymock.tests2.UsageConstraintsTest.testNull":32,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":217,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":113,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":363,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":78,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":54,"org.easymock.tests2.CaptureTest.testPrimitive":59,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":174,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":346,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":320,"org.easymock.tests.UsageTest.moreThanOneArgument":227,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":306,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":180,"org.easymock.tests2.CaptureTest.testCaptureNone":62,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":169,"org.easymock.tests.UsageUnorderedTest.message":205,"org.easymock.tests.UsageVerifyTest.twoReturns":177,"org.easymock.tests.UsageVarargTest.varargByteAccepted":338,"org.easymock.tests2.ThreadingTest.testThreadSafe":18,"org.easymock.tests.UsageTest.argumentsOrdered":347,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":231,"org.easymock.tests.UsageVarargTest.varargIntAccepted":332,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":352,"org.easymock.tests2.CaptureTest.testCapture_2617107":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":131,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":173,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":282,"org.easymock.tests2.UsageConstraintsTest.any":8,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":317,"org.easymock.tests2.StubTest.stub":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":135,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":161,"org.easymock.tests.UsageExpectAndThrowTest.longType":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":138,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":316,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":275,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":68,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests.ReplayStateInvalidUsageTest.times":318,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":17,"org.easymock.tests.LimitationsTest.mockNativeMethod":162,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":204,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":184,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":290,"org.easymock.tests2.CaptureTest.testAnd":57,"org.easymock.tests2.UsageTest.strictResetToDefault":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":296,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":276,"org.easymock.tests2.NameTest.nameForMocksControl":280,"org.easymock.tests2.MockedExceptionTest.testMockedException":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":154,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":235,"org.easymock.tests2.DelegateToTest.testDelegate":90,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":251,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":210,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":110,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":55,"org.easymock.tests.MockingTest.testNicePartialClassMocking":250,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":221,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":254,"org.easymock.tests2.CaptureTest.testCaptureLast":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":140,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":236,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":328,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":47,"org.easymock.tests2.CaptureTest.testCapture1_2446744":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":214,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":293,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":50,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":312,"org.easymock.tests.UsageThrowableTest.throwError":239,"org.easymock.samples.ExampleTest.removeNonExistingDocument":298,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":314,"org.easymock.tests.UsageStrictMockTest.differentMethods":149,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":20,"org.easymock.tests2.MockBuilderTest.testCreateMockString":284,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":356,"org.easymock.tests.UsageExpectAndThrowTest.floatType":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":182,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":42,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":1,"org.easymock.tests.UsageVerifyTest.twoThrows":176,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":25,"org.easymock.samples.PartialClassMockTest.testGetArea":122,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":132,"org.easymock.samples.ExampleTest.voteAgainstRemoval":128,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":167,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":168,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":207,"org.easymock.tests2.UsageTest.niceToStrict":94,"org.easymock.tests2.UsageConstraintsTest.testNotNull":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":246,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":81,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":53,"org.easymock.tests2.MockBuilderTest.testCreateMock":283,"org.easymock.tests2.UsageTest.defaultResetToNice":97,"org.easymock.samples.ExampleTest.voteAgainstRemovals":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":200,"org.easymock.tests.UsageVarargTest.differentLength":335,"org.easymock.tests2.CallbackTest.callback":5,"org.easymock.tests.UsageTest.openCallCountByLastCall":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":215,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":74,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":158,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":172,"org.easymock.tests.UsageCallCountTest.tooFewCalls":350,"org.easymock.tests.UsageOverloadedMethodTest.overloading":143,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":40,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":164,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":104,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":142,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":272,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":39,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":308,"org.easymock.tests.UsageThrowableTest.throwCheckedException":243,"org.easymock.tests.MockClassControlTest.testEquals":362,"org.easymock.tests2.EasyMockSupportClassTest.testAll":23,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":329,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":289,"org.easymock.tests2.CaptureTest.testCaptureAll":58,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":248,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":103,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":319,"org.easymock.tests2.UsageConstraintsTest.testMatches":41,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":105,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":2,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":181,"org.easymock.tests.ObjectMethodsTest.testHashCode":342,"org.easymock.samples.ExampleTest.voteForRemovals":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":259,"org.easymock.tests2.NameTest.nameForNiceMock":279,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":22,"org.easymock.tests.UsageVarargTest.allKinds":340,"org.easymock.tests2.DependencyTest.testInterfaceMocking":120,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":327,"org.easymock.samples.ExampleTest.addDocument":297,"org.easymock.tests2.DelegateToTest.testStubDelegate":87,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":245,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":273,"org.easymock.tests2.AnswerTest.stubAnswer":11,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":141,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":261,"org.easymock.tests2.UsageConstraintsTest.greaterThan":43,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":153,"org.easymock.tests.UsageVarargTest.varargLongAccepted":337,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":119,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":303,"org.easymock.samples.ExampleTest.voteForRemoval":127,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":19,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":203,"org.easymock.tests.UsageExpectAndReturnTest.floatType":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":100,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":124,"org.easymock.tests.UsageThrowableTest.noUpperLimit":240,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":44,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":91,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":28,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":150,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":285,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":71,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":241,"org.easymock.tests2.UsageConstraintsTest.testSame":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":136,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":85,"org.easymock.tests2.CaptureTest.testCaptureFirst":67,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":72,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":99,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":315,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":192,"org.easymock.tests.GenericTest.testPackageScope":183,"org.easymock.tests2.UsageTest.moreThanOneArgument":93,"org.easymock.tests2.CaptureTest.testCapture2_2446744":66,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":21,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":234,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":56,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":339,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":354,"org.easymock.tests2.NameTest.nameForMock":277,"org.easymock.tests.UsageExpectAndReturnTest.longType":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":324,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":69,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":267,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":197,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":268,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":151,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":222,"org.easymock.tests2.UsageStrictMockTest.differentMethods":14,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":178,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":189,"org.easymock.tests.UsageCallCountTest.tooManyCalls":355,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":220,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":155,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":252,"org.easymock.tests2.MockedExceptionTest.testRealException":84,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":193,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":211,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":321,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":102,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":349,"org.easymock.tests2.NameTest.nameForStrictMock":278,"org.easymock.tests2.UsageConstraintsTest.testContains":38,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":83,"org.easymock.tests2.UsageConstraintsTest.testFind":31,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":144,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":3,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":114,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":299,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":4,"org.easymock.tests.UsageExpectAndReturnTest.object":195,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":45,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":116,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":52,"org.easymock.tests2.UsageStrictMockTest.range":13,"org.easymock.tests2.UsageConstraintsTest.lessThan":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":77,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":334,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":256,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":343,"org.easymock.tests.UsageTest.exactCallCountByLastCall":230,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":247,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":258,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":70,"org.easymock.tests2.CaptureTest.testCaptureRightOne":64,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":232,"org.easymock.tests2.UsageConstraintsTest.testOr":34,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":266,"org.easymock.tests.UsageRangeTest.combination":152,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":330,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":111,"org.easymock.tests.UsageTest.wrongArguments":345,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":163,"org.easymock.tests.MockClassControlTest.testHashCode":361,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":357,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":198,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":233,"org.easymock.tests.UsageVarargTest.varargShortAccepted":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":7,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":157,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":353,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":287,"org.easymock.tests2.UsageConstraintsTest.cmpTo":37,"org.easymock.tests.UsageVarargTest.varargCharAccepted":333,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":10,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":274,"org.easymock.tests2.UsageTest.openCallCountByLastCall":95,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":96,"org.easymock.tests.DefaultClassInstantiatorTest.object":309,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":80,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":156,"org.easymock.tests2.CaptureTest.testCaptureFromStub":65,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":311,"org.easymock.tests.UsageTest.unexpectedCallWithArray":344,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":341,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":213,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":242,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":351,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":199,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":360,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":302,"org.easymock.tests2.UsageConstraintsTest.constraints":29,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":117,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":212,"org.easymock.samples.ExampleTest.addAndChangeDocument":130,"org.easymock.tests.UsageStrictMockTest.testVerify":304,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":202,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":159,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":359,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":325,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":286,"org.easymock.tests2.UsageTest.resumeIfFailure":98,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":134,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":75}}]
