[{"position":"org.easymock.internal.RecordState:173","failures":[0],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[37],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Null:35","failures":[62,63,64,65],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:354","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[66],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[38,39,40,41,42,44,45,46,47,50,51,52,53,55,56,57,58,61],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,62,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,37,173,174,175,176,177,178,179,180,181,182,183,63,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,64,199,200,201,202,203,204,205,206,207,208,209,210,211,0,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,172,258,259,260,261,173,262,263,174,264,175,265,266,267,178,268,269,270,271,14,272,273,274,275,276,277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[242,243,244,278,279,280,281,282,283,284,285,245,246,286,247,287,288,248,289,290,291,292,293,294,295,296,249,297,298,250,251,252,299,253,254,154,300,300,301,301,255,256,302,257,303,172,258,304,37,305,259,260,1,261,173,306,307,262,263,174,264,175,265,308,266,309,310,267,176,177,178,311,268,312,313,269,314,315,316,317,318,319,8,271,320,321,322,323,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,272,273,274,275,276,277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[300,301,324,325,326,327,328,309],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[329,1,330,331,332,333,334,8,320,321],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[335,336,337,338,109,339,340,341,342,137,343,312,313,269,344],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[345,346,347,348,349,67,68,350,351,69,70,71,72,73,352,335,336,337,353,354,355,74,75,356,357,76,358,77,78,79,80,359,81,82,83,84,360,85,86,87,88,62,244,98,102,338,280,281,282,283,103,361,362,363,364,365,366,367,368,369,370,371,104,105,372,373,106,107,108,109,374,110,111,112,113,114,115,375,376,116,377,117,118,119,120,378,121,122,123,124,379,125,126,127,128,129,130,131,132,133,134,135,136,380,381,382,383,384,245,286,339,340,341,342,137,343,248,385,386,387,388,389,390,138,140,141,142,143,144,145,147,148,391,392,393,394,395,396,397,398,399,149,150,151,152,153,154,155,156,157,158,159,160,300,300,301,301,161,162,163,164,400,165,166,167,168,401,169,170,402,171,257,172,37,305,259,260,261,173,262,403,404,263,174,405,264,175,265,308,266,267,176,177,178,179,180,181,182,183,63,184,185,186,187,406,188,407,189,190,191,192,193,194,195,196,197,198,64,199,200,201,202,203,408,409,410,204,205,411,412,413,414,312,313,269,344,206,207,208,209,210,65,415,211,416,417,418,0,419,420,212,8,421,320,213,214,215,216,422,217,218,423,424,219,220,221,14,17,27,33,425,222,224,225,226,227,228,426,229,272,273,274,275,427,276,277,428,230,231,232,233,234,235,236,237,238,239,429,240,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[430,431,329,325,326,432,433,321,274,277,434],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[345,346,347,348,349,67,68,350,351,69,70,71,72,73,468,352,469,242,470,471,472,473,243,474,475,335,336,337,353,354,355,74,75,356,357,76,358,77,78,79,80,359,81,82,83,84,360,85,86,87,88,89,90,91,476,92,93,477,94,95,96,97,62,244,478,479,98,99,480,100,481,482,101,483,102,338,278,279,280,281,282,484,283,485,486,284,103,361,362,363,364,365,366,367,368,369,370,371,104,105,372,373,487,106,107,108,109,374,110,111,112,113,114,115,375,376,116,377,117,118,119,120,378,121,122,123,124,379,125,126,127,128,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,129,130,131,132,133,134,135,136,380,381,382,383,384,285,245,246,286,247,339,340,341,342,137,343,287,288,248,289,457,458,459,460,461,488,462,463,464,465,466,467,290,291,292,293,294,295,296,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,385,505,506,507,508,509,386,510,387,388,389,390,511,512,513,514,515,249,138,139,140,141,142,143,144,145,146,147,148,391,392,393,394,395,396,397,398,399,297,298,250,251,252,299,253,254,149,150,151,152,153,38,154,39,155,156,157,158,516,159,517,160,300,301,255,256,518,161,162,163,164,400,165,166,167,168,401,169,170,402,171,257,172,258,304,37,305,259,260,324,1,261,173,262,519,520,403,404,263,174,405,264,175,265,308,521,266,309,310,267,176,177,178,311,268,179,180,181,182,522,183,63,184,185,186,187,406,188,407,189,190,191,192,193,194,195,196,197,198,64,199,200,201,202,523,203,408,409,410,204,205,411,412,413,414,312,313,269,344,206,270,207,208,524,209,210,65,415,211,40,41,42,43,44,416,45,46,47,48,49,50,417,418,0,419,420,212,8,421,271,320,321,213,214,215,216,422,217,218,423,424,219,220,221,525,36,526,527,528,529,322,530,531,323,532,533,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,51,52,53,54,55,425,56,57,58,59,60,61,222,223,224,225,226,227,228,426,229,534,272,273,274,275,535,427,276,277,434,428,230,231,232,233,234,235,236,237,238,239,429,240,241],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[68,536,537,538,372,373,106,111,112,113,141,143,144,539,540,66,541,542,543,164,224,226,227],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[460],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[8,421,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","threadSafe":"state","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[181,182,63,185,186,406,196,200,428,231,239],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[374,426],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[302],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[544],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":182,"org.easymock.tests2.UsageTest.argumentsOrdered":170,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":499,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":166,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":39,"org.easymock.tests2.DelegateToTest.testReturnException":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":340,"org.easymock.tests.MockingTest.testPartialClassMocking":281,"org.easymock.tests.MockClassControlTest.testToString":250,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":36,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":507,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":21,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":74,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":404,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":456,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":330,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":187,"org.easymock.tests2.UsageTest.wrongArguments":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":107,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":61,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":389,"org.easymock.samples.ExampleTest.answerVsDelegate":156,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":243,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":486,"org.easymock.tests2.UsageConstraintsTest.testNull":63,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":264,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":219,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":254,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":314,"org.easymock.tests2.CaptureTest.testPrimitive":232,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":110,"org.easymock.tests.UsageTest.moreThanOneArgument":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":88,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":347,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":395,"org.easymock.tests.UsageTest.argumentsOrdered":72,"org.easymock.tests.UsageVarargTest.varargIntAccepted":91,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":543,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":504,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":149,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":257,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":531,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":49,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":491,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":153,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":440,"org.easymock.tests.ReplayStateInvalidUsageTest.times":464,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":425,"org.easymock.tests2.DependencyTest.testClassMocking":519,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":328,"org.easymock.tests2.AnswerTest.answer":203,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":505,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":414,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":471,"org.easymock.tests2.CaptureTest.testAnd":428,"org.easymock.tests2.UsageTest.strictResetToDefault":163,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":431,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":362,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":399,"org.easymock.tests2.DelegateToTest.testDelegate":212,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":439,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":360,"org.easymock.tests.LimitationsTest.mockFinalMethod":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":384,"org.easymock.tests2.DependencyTest.testClassMockingSupport":520,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":372,"org.easymock.tests2.CaptureTest.testCapture1_2446744":233,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":521,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":83,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":412,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":459,"org.easymock.tests.UsageThrowableTest.throwError":129,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":473,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":50,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":349,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":327,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":35,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":443,"org.easymock.samples.PartialClassMockTest.testGetArea":154,"org.easymock.tests.MockingTest.testInterfaceMocking":484,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":460,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":392,"org.easymock.tests2.UsageTest.niceToStrict":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":75,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":249,"org.easymock.tests2.ThreadingTest.testChangeDefault":524,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":489,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":7,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":37,"org.easymock.tests2.MockBuilderTest.testCreateMock":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":30,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":58,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":540,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":80,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":217,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":470,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":355,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":478,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":387,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":4,"org.easymock.tests.UsageOverloadedMethodTest.overloading":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":26,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":191,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":367,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":121,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":371,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":190,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":238,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":476,"org.easymock.tests2.EasyMockSupportClassTest.testAll":14,"org.easymock.tests.MockClassControlTest.testEquals":253,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":246,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":86,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":413,"org.easymock.tests2.CaptureTest.testCaptureAll":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":382,"org.easymock.tests.MockNameTest.defaultName":483,"org.easymock.tests2.UsageConstraintsTest.testMatches":192,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":457,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":348,"org.easymock.samples.ExampleTest.voteForRemovals":159,"org.easymock.tests.UsageVarargTest.allKinds":62,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":111,"org.easymock.samples.BasicClassMockTest.testPrintContent":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":383,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":135,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":222,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":420,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":343,"org.easymock.tests2.UsageConstraintsTest.greaterThan":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":15,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":361,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":178,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":444,"org.easymock.samples.ExampleTest.voteForRemoval":157,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":296,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":209,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":311,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":306,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":474,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":308,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":436,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":162,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":244,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":496,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":215,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":339,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":417,"org.easymock.tests2.CaptureTest.testCaptureFirst":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":495,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":216,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":118,"org.easymock.tests2.UsageTest.moreThanOneArgument":164,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":65,"org.easymock.tests2.CaptureTest.testCapture2_2446744":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":506,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":173,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":97,"org.easymock.tests.GenericTest.testBridgedEquals":247,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":482,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":2,"org.easymock.tests.UsageExpectAndReturnTest.longType":376,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":380,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":87,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":307,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":394,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":85,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":345,"org.easymock.tests.UsageCallCountTest.tooManyCalls":101,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":31,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":358,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":134,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":273,"org.easymock.tests.MockingTest.testNiceClassMocking":284,"org.easymock.tests.MockingTest.testClassMocking":279,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":479,"org.easymock.tests2.UsageConstraintsTest.testContains":189,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":303,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":269,"org.easymock.tests2.UsageConstraintsTest.testFind":183,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":105,"org.easymock.tests.MockTypeTest.fromEasyMockClass":472,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":207,"org.easymock.tests.UsageExpectAndReturnTest.object":378,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":266,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":424,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":93,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":331,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":514,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":6,"org.easymock.tests.UsageTest.exactCallCountByLastCall":73,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":494,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":468,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":396,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":321,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":125,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":89,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":41,"org.easymock.tests.MockClassControlTest.testHashCode":299,"org.easymock.tests2.EasyMockSupportTest.testVerify":525,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":24,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":397,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":411,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":534,"org.easymock.tests.UsageVarargTest.varargCharAccepted":92,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":510,"org.easymock.tests2.UsageTest.openCallCountByLastCall":167,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":9,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":221,"org.easymock.tests.DefaultClassInstantiatorTest.object":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":353,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":512,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":538,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":25,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":132,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":54,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":40,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":442,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":176,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":252,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":77,"org.easymock.tests.CapturesMatcherTest.test":544,"org.easymock.tests.ReplayStateInvalidCallsTest.times":448,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":335,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":449,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":541,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":33,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":251,"org.easymock.tests2.UsageTest.resumeIfFailure":402,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":242,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":530,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":342,"org.easymock.tests2.StubTest.stubWithReturnValue":229,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":329,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":120,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":199,"org.easymock.tests2.SerializationTest.testAllMockedMethod":271,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":385,"org.easymock.samples.SupportTest.voteForRemovals":161,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":285,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":82,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":386,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":408,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":469,"org.easymock.tests.UsageExpectAndThrowTest.object":359,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":197,"org.easymock.tests2.DelegateToTest.testWrongClass":419,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":446,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":147,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":148,"org.easymock.tests.UsageStrictMockTest.range":143,"org.easymock.samples.ConstructorCalledMockTest.testTax":300,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":532,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":423,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":272,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":81,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":259,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":11,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":71,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":388,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":438,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":393,"org.easymock.tests2.CaptureTest.testCaptureNone":237,"org.easymock.tests.UsageUnorderedTest.message":106,"org.easymock.tests.UsageVerifyTest.twoReturns":113,"org.easymock.tests.UsageVarargTest.varargByteAccepted":96,"org.easymock.tests2.ThreadingTest.testThreadSafe":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":28,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":100,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":515,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":255,"org.easymock.tests2.CaptureTest.testCapture_2617107":231,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":508,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":374,"org.easymock.tests2.UsageConstraintsTest.any":188,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":463,"org.easymock.tests2.StubTest.stub":426,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":509,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":341,"org.easymock.tests.UsageExpectAndThrowTest.longType":357,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":294,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":462,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":225,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":416,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests.LimitationsTest.mockNativeMethod":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":128,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":286,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":53,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":318,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":454,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":228,"org.easymock.tests2.NameTest.nameForMocksControl":529,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":55,"org.easymock.tests2.MockedExceptionTest.testMockedException":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":16,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":70,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":76,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":270,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":283,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":263,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":260,"org.easymock.tests.MockingTest.testNicePartialClassMocking":282,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":51,"org.easymock.tests2.CaptureTest.testCaptureLast":236,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":373,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":453,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":186,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":277,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":198,"org.easymock.tests.MockingTest.testTwoMocks":280,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":450,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":79,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":169,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":201,"org.easymock.samples.ExampleTest.removeNonExistingDocument":517,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":461,"org.easymock.tests.UsageStrictMockTest.differentMethods":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":57,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":42,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":523,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":292,"org.easymock.tests2.ConstraintsToStringTest.andToString":542,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":210,"org.easymock.tests2.MockBuilderTest.testCreateMockString":262,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":18,"org.easymock.tests.UsageExpectAndThrowTest.floatType":356,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":13,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":410,"org.easymock.tests.UsageVerifyTest.twoThrows":112,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":27,"org.easymock.samples.ExampleTest.voteAgainstRemoval":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":500,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":391,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":177,"org.easymock.tests.LimitationsTest.privateConstructor":288,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":433,"org.easymock.tests2.UsageConstraintsTest.testNotNull":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":136,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":312,"org.easymock.tests2.UsageTest.defaultResetToNice":401,"org.easymock.samples.ExampleTest.voteAgainstRemovals":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":501,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":379,"org.easymock.tests.UsageVarargTest.differentLength":477,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":52,"org.easymock.tests2.CallbackTest.callback":211,"org.easymock.tests2.UsageConstraintsTest.equals":522,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":309,"org.easymock.tests.UsageTest.openCallCountByLastCall":69,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":109,"org.easymock.tests.UsageCallCountTest.tooFewCalls":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":275,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":390,"org.easymock.tests.UsageThrowableTest.throwCheckedException":133,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":536,"org.easymock.tests.MockingTest.testStrictClassMocking":278,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":276,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":338,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":56,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":274,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":465,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":427,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":205,"org.easymock.tests.ObjectMethodsTest.testHashCode":513,"org.easymock.tests2.NameTest.nameForNiceMock":528,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":452,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":415,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":447,"org.easymock.tests2.DependencyTest.testInterfaceMocking":403,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":332,"org.easymock.samples.ExampleTest.addDocument":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":34,"org.easymock.tests2.DelegateToTest.testStubDelegate":0,"org.easymock.tests2.AnswerTest.stubAnswer":204,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":141,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":324,"org.easymock.tests.UsageVarargTest.varargLongAccepted":95,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":498,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":127,"org.easymock.tests.UsageExpectAndReturnTest.floatType":375,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":320,"org.easymock.tests2.ConstraintsToStringTest.orToString":539,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":301,"org.easymock.tests.UsageThrowableTest.noUpperLimit":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":48,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":195,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":180,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":322,"org.easymock.tests2.SerializationTest.test":421,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":234,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":291,"org.easymock.tests2.UsageConstraintsTest.testSame":184,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":115,"org.easymock.samples.SupportTest.addDocument":518,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":535,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":437,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":19,"org.easymock.tests.GenericTest.testPackageScope":245,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":493,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":47,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":485,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":435,"org.easymock.tests2.NameTest.nameForMock":526,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":122,"org.easymock.tests2.UsageStrictMockTest.differentMethods":227,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":326,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":116,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":84,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":511,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":363,"org.easymock.tests2.MockedExceptionTest.testRealException":344,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":533,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":503,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":537,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":502,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":224,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":467,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":108,"org.easymock.tests2.NameTest.nameForStrictMock":527,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":10,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":175,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":323,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":196,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":293,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":172,"org.easymock.tests2.UsageStrictMockTest.range":226,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":441,"org.easymock.tests2.UsageConstraintsTest.lessThan":202,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":44,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":497,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":23,"org.easymock.tests2.CaptureTest.testCaptureRightOne":239,"org.easymock.tests2.UsageConstraintsTest.testOr":185,"org.easymock.tests.UsageRangeTest.combination":103,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":174,"org.easymock.tests.UsageTest.wrongArguments":351,"org.easymock.tests2.MockBuilderTest.testWithConstructor":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":20,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":490,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":123,"org.easymock.tests.UsageVarargTest.varargShortAccepted":94,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":295,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":481,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":455,"org.easymock.tests2.UsageConstraintsTest.cmpTo":407,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":409,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":492,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":168,"org.easymock.tests2.CaptureTest.testCaptureFromStub":429,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":458,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":258,"org.easymock.tests.UsageTest.unexpectedCallWithArray":350,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":451,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":480,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":325,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":124,"org.easymock.tests2.UsageConstraintsTest.constraints":181,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":142,"org.easymock.samples.ExampleTest.addAndChangeDocument":160,"org.easymock.tests2.ConstraintsToStringTest.notToString":66,"org.easymock.tests.UsageStrictMockTest.testVerify":146,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":38,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":381,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":151,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":117,"org.easymock.tests.LimitationsTest.abstractClass":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":152,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":218}}]
