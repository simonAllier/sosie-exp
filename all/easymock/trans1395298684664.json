[{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[17,18,19,20,21,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[24,25,26,27,28],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:97","sourceCode":"if ((org.easymock.internal.Result == null) && (boolean)) {\n    org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType()));\n} ","type":"CtIfImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[17,18,19,57,58,22,59,23,60],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[61,62,63,64,65,66],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[82,83,84,85,86,87,88,0,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[103,67,68,69,71,104,72,105,106,74,75,76,107,108,109,110,78,111,112,79,80,81,113,114,115,116],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[62,63,64,65,66],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[117,118,119,120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[122],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[123,124,125],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[126],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[127,59,128,129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"length":"i","clazz":"primitiveType"}},{"position":"org.easymock.internal.Range:83","failures":[103,67,68,69,130,131,71,104,132,72,105,133,134,135,136,106,74,137,138,75,76,139,10,140,141,110,142,78,111,143,144,145,146,147,112,79,148,149,80,81,150,151,152,113,114,115,116,153,154,155,156,157,158,159,160,16],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[161,140],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,61,162,163,164,165,73,166,167,34,35,36,37,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,77,38,39,188,43,189,45,46,47,48,49,50,190,191,12,13,192,54,55,56,193],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[194,195,196,197,198,199,200,201,202,203,204,205],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[25,206],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[207,208,209,210,211,212,213,61,62,63,64,214,65,66,215,216,217,218,219,220,221,222,223,224,225,226,180,181,182,183,184,185,186,187,58,22,227,59,129,228,229,230,231,232,233,49,234,117,235,236,237,238,50,51,23,52,60,190,118,239,191,12,13,14,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,55,264,265,266,56,119,267,268,269,120,270,271,272,273,274,275,276],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[277,278,71,73,279,280],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[260],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[84,281,282,283,284,285,286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[58,22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[214,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[103,72,105,78,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[17,18,19,288,57,58,22,59,23,60],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageTest.argumentsOrdered":81,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":91,"org.easymock.tests2.StubTest.stubWithReturnValue":16,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":23,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":204,"org.easymock.tests2.SerializationTest.testAllMockedMethod":129,"org.easymock.tests2.DelegateToTest.testReturnException":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":7,"org.easymock.tests.MockingTest.testPartialClassMocking":210,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":280,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":216,"org.easymock.tests.MockClassControlTest.testToString":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":99,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":120,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":127,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":244,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":121,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":107,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":126,"org.easymock.tests2.DelegateToTest.testWrongClass":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":17,"org.easymock.tests2.UsageTest.wrongArguments":79,"org.easymock.samples.ConstructorCalledMockTest.testTax":274,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":203,"org.easymock.tests.UsageStrictMockTest.range":72,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":36,"org.easymock.samples.ExampleTest.answerVsDelegate":286,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":43,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":228,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":222,"org.easymock.tests2.UsageConstraintsTest.testNull":143,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":261,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":51,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":187,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":240,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":75,"org.easymock.tests.UsageTest.moreThanOneArgument":106,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":178,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":35,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":277,"org.easymock.tests2.CaptureTest.testCaptureNone":159,"org.easymock.tests.UsageUnorderedTest.message":69,"org.easymock.tests.UsageVerifyTest.twoReturns":68,"org.easymock.tests.UsageTest.argumentsOrdered":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":253,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":96,"org.easymock.tests2.CaptureTest.testCapture_2617107":154,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":100,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":50,"org.easymock.tests2.UsageConstraintsTest.any":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":84,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":175,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":101,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":214,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":174,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":142,"org.easymock.tests2.SerializationTest.testClass":59,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":38,"org.easymock.tests.LimitationsTest.mockNativeMethod":225,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":39,"org.easymock.tests.ReplayStateInvalidUsageTest.times":176,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":219,"org.easymock.tests2.AnswerTest.answer":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":97,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":201,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":56,"org.easymock.tests2.NameTest.nameForMocksControl":116,"org.easymock.tests2.MockedExceptionTest.testMockedException":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":41,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":138,"org.easymock.tests2.DelegateToTest.testDelegate":285,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":212,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":259,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":211,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":263,"org.easymock.tests.LimitationsTest.mockFinalMethod":226,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":199,"org.easymock.tests2.CompareToTest.testCompareEqual":26,"org.easymock.tests2.CaptureTest.testCaptureLast":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":10,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":33,"org.easymock.tests.MockingTest.testTwoMocks":209,"org.easymock.tests2.CaptureTest.testCapture1_2446744":155,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":46,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":80,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":123,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":170,"org.easymock.samples.ExampleTest.removeNonExistingDocument":193,"org.easymock.tests.UsageStrictMockTest.differentMethods":105,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":172,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":196,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":63,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":198,"org.easymock.tests2.MockBuilderTest.testCreateMockString":191,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":245,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":145,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":227,"org.easymock.tests.UsageVerifyTest.twoThrows":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":252,"org.easymock.samples.PartialClassMockTest.testGetArea":276,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":171,"org.easymock.tests2.CompareToTest.testLessOrEqual":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":92,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":248,"org.easymock.tests2.UsageTest.niceToStrict":53,"org.easymock.tests.LimitationsTest.privateConstructor":224,"org.easymock.tests2.ThreadingTest.testChangeDefault":124,"org.easymock.tests2.UsageConstraintsTest.testNotNull":146,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":82,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":238,"org.easymock.tests2.UsageTest.defaultResetToNice":54,"org.easymock.tests2.MockBuilderTest.testCreateMock":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":255,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":200,"org.easymock.tests2.CallbackTest.callback":141,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":202,"org.easymock.tests.UsageTest.openCallCountByLastCall":137,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":279,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":2,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":257,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":231,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":122,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":37,"org.easymock.tests2.EasyMockSupportClassTest.testAll":242,"org.easymock.tests.MockClassControlTest.testEquals":186,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":218,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":278,"org.easymock.tests.MockingTest.testStrictClassMocking":207,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":31,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":47,"org.easymock.tests2.CaptureTest.testCaptureAll":153,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":232,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":230,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":177,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":168,"org.easymock.tests2.CompareToTest.testGreateOrEqual":27,"org.easymock.tests.ObjectMethodsTest.testHashCode":163,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":20,"org.easymock.tests2.NameTest.nameForNiceMock":115,"org.easymock.tests.UsageVarargTest.allKinds":130,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":19,"org.easymock.samples.BasicClassMockTest.testPrintContent":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":254,"org.easymock.tests2.DelegateToTest.testStubDelegate":140,"org.easymock.tests2.AnswerTest.stubAnswer":152,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":11,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":104,"org.easymock.tests2.UsageConstraintsTest.greaterThan":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":57,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":90,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":66,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":269,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":58,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":55,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":275,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":215,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":147,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":270,"org.easymock.tests2.SerializationTest.test":128,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":156,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":60,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":0,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":62,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":40,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":6,"org.easymock.tests2.CaptureTest.testCaptureFirst":160,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":88,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":150,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":77,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":246,"org.easymock.tests.GenericTest.testPackageScope":217,"org.easymock.tests2.UsageTest.moreThanOneArgument":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":98,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":86,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":197,"org.easymock.tests.GenericTest.testBridgedEquals":220,"org.easymock.tests2.NameTest.nameForMock":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":29,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":188,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":239,"org.easymock.tests2.UsageStrictMockTest.differentMethods":111,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":256,"org.easymock.tests2.MockedExceptionTest.testRealException":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":94,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":134,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":179,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":229,"org.easymock.tests.MockingTest.testNiceClassMocking":213,"org.easymock.tests.MockingTest.testClassMocking":208,"org.easymock.tests2.NameTest.nameForStrictMock":114,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":166,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":14,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":131,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":237,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":192,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":262,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":271,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":64,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":264,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":117,"org.easymock.tests2.UsageStrictMockTest.range":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":18,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":164,"org.easymock.tests.UsageTest.exactCallCountByLastCall":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":87,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":249,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":22,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":260,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":281,"org.easymock.tests.UsageTest.wrongArguments":74,"org.easymock.tests2.MockBuilderTest.testWithConstructor":234,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":195,"org.easymock.tests.MockClassControlTest.testHashCode":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":247,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":181,"org.easymock.tests2.EasyMockSupportTest.testVerify":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":250,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":65,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":45,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":167,"org.easymock.tests2.CompareToTest.testLessThan":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":102,"org.easymock.tests2.UsageTest.openCallCountByLastCall":148,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":149,"org.easymock.tests.DefaultClassInstantiatorTest.object":61,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":169,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":235,"org.easymock.tests.UsageTest.unexpectedCallWithArray":73,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":162,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":251,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":71,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":194,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":119,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":132,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":184,"org.easymock.tests.UsageStrictMockTest.testVerify":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":3,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":258,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":183,"org.easymock.tests2.CompareToTest.testGreateThan":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":30,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":157,"org.easymock.tests.LimitationsTest.abstractClass":223,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":221,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":109}}]
