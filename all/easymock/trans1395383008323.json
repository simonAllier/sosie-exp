[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl() : org.easymock.EasyMockSupport.createStrictControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"qualifier":"qualifier","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[62,63,64,65,66,67,68],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[69],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,31,32,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,2,3,4,5,6,7,8,9,10,11,13,14,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,34,35,179],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:29","sourceCode":"new org.easymock.internal.matchers.Null()","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[73,74,75,76,180,77,78,181,182,183,184,185,186,187,188,189,190,191,192,79,193,194,195,196,80,197,81,83,198,199,200,201,202,203,204,84,205,206,207,208,209,210,211,85,86,212,87,213,88,89,214,90,91,92,93,94,215,216,217,218,219,220,221,21,222,223,224,22,23,225,24,226,227,25,228,229,230,231,232,95,96,97,98,99,233,100,234,101,102,103,104,105,106,107,108,109,110,235,111,236,237,238,112,113,114,115,116,239,240,241,242,243,26,244,245,246,27,28,247,29,248,249,30,250,251,252,253,254,118,119,255,256,257,258,259,120,121,260,122,123,31,32,124,261,262,263,264,265,134,135,266,136,137,138,139,140,141,142,143,267,144,145,146,147,148,149,150,151,152,153,155,156,157,158,268,43,269,270,271,272,273,1,2,3,4,5,6,7,8,9,10,11,12,13,14,274,275,276,277,278,159,279,160,280,281,282,283,284,161,285,162,286,287,163,288,289,164,165,290,291,292,166,167,293,294,295,296,297,168,298,299,300,301,169,302,303,170,304,305,306,171,307,308,309,310,172,173,174,311,312,313,314,175,176,177,178,34,35,179],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[315],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[316,317,196,205,210,211,89,233,111,31,32,318,140,150,290,291,34,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[79,205,206,211,88,214,90,91,92,93,94,100,115,240,241,242,243,26,244,245,246,27,28,247,29,248,249,30,250,251,252,253,254,320,287,291,173],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[321,322,323,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[117,239,325,326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[138,327,151,156],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"substring"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[217,328],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[141,1,3,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[71,330,331,36,37,332,72,73,74,75,76,180,77,78,316,317,186,187,188,79,194,196,80,197,81,333,82,83,199,334,84,205,206,207,209,210,211,85,86,212,87,213,88,89,214,90,91,92,93,94,215,216,217,218,219,220,221,21,222,223,224,22,23,225,24,226,227,25,228,229,230,231,232,95,96,97,98,99,233,100,234,101,102,103,104,105,335,106,107,108,109,110,15,111,236,237,238,112,113,114,115,116,117,240,241,242,243,26,244,245,246,27,28,247,29,248,249,30,250,251,252,253,254,118,119,336,337,320,255,120,121,260,122,123,31,32,124,261,125,126,127,128,338,129,130,339,340,131,132,133,341,264,134,135,266,136,137,138,139,140,141,142,327,143,267,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,43,269,270,271,272,273,55,1,2,3,4,5,6,7,8,9,10,11,13,14,274,342,275,276,277,278,159,279,160,343,161,344,345,162,287,163,288,289,164,165,290,291,292,166,167,293,294,295,296,297,168,298,299,300,301,169,302,303,170,304,305,346,171,328,347,307,308,348,349,309,310,172,173,174,311,312,313,314,175,176,177,178,34,35,179,350,351,352,353],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[71,354,355,329,356,275,357,358,161,62,359,360,361,362,295,63,363,364,171,351,352],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[110,113],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[365,366,159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[71,330,331,36,37,332,72,73,74,75,76,180,77,78,186,187,188,79,196,80,197,81,333,82,83,199,334,84,205,206,207,209,210,211,85,86,212,87,88,89,214,90,91,92,93,94,215,216,217,218,219,220,221,21,222,223,224,22,23,225,24,226,227,25,228,229,230,231,232,95,96,97,98,99,233,100,234,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,240,241,242,243,26,244,245,246,27,28,247,29,248,249,30,250,251,252,253,254,118,119,336,337,320,121,260,122,123,31,32,124,125,126,127,128,338,129,130,340,131,132,133,341,264,134,135,266,136,137,138,139,140,141,142,143,267,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,43,269,270,271,272,273,55,1,2,3,4,5,6,7,8,9,10,11,13,14,274,342,275,276,277,278,159,279,160,161,344,345,287,163,288,289,164,165,290,291,166,167,294,295,296,297,168,298,299,300,301,169,302,303,170,304,305,171,347,307,308,348,349,309,310,173,174,176,177,178,34,35,179,350,351,352,353],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[83,367,368,208,209,85,86,100,234,260,31,289,166,167,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":136,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":206,"org.easymock.tests2.UsageTest.argumentsOrdered":167,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":365,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":165,"org.easymock.tests2.StubTest.stubWithReturnValue":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":62,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":23,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":36,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":155,"org.easymock.tests2.SerializationTest.testAllMockedMethod":277,"org.easymock.tests2.DelegateToTest.testReturnException":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":190,"org.easymock.tests.MockingTest.testPartialClassMocking":215,"org.easymock.samples.SupportTest.voteForRemovals":72,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":329,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":248,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":240,"org.easymock.tests.UsageExpectAndThrowTest.object":247,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":342,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":152,"org.easymock.tests2.DelegateToTest.testWrongClass":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":64,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":119,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":142,"org.easymock.tests2.UsageTest.wrongArguments":289,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":112,"org.easymock.samples.ConstructorCalledMockTest.testTax":354,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":61,"org.easymock.tests.UsageStrictMockTest.range":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":258,"org.easymock.samples.ExampleTest.answerVsDelegate":74,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":347,"org.easymock.tests2.UsageConstraintsTest.testNull":138,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":303,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":29,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":344,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":131,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":254,"org.easymock.tests.UsageTest.moreThanOneArgument":207,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":85,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":202,"org.easymock.tests2.CaptureTest.testCaptureNone":9,"org.easymock.tests.UsageUnorderedTest.message":83,"org.easymock.tests.UsageVerifyTest.twoReturns":234,"org.easymock.tests.UsageVarargTest.varargByteAccepted":108,"org.easymock.tests2.ThreadingTest.testThreadSafe":269,"org.easymock.tests.UsageTest.argumentsOrdered":86,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":18,"org.easymock.tests.UsageVarargTest.varargIntAccepted":103,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":81,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":95,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":115,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":285,"org.easymock.tests2.UsageConstraintsTest.any":143,"org.easymock.tests2.StubTest.stub":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":99,"org.easymock.tests.UsageExpectAndThrowTest.longType":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":191,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":178,"org.easymock.tests2.SerializationTest.testClass":275,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":43,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":55,"org.easymock.tests.LimitationsTest.mockNativeMethod":188,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":356,"org.easymock.tests2.AnswerTest.answer":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":232,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":283,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":52,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":163,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":358,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":306,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":179,"org.easymock.tests2.NameTest.nameForMocksControl":314,"org.easymock.tests2.MockedExceptionTest.testMockedException":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":338,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":237,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":211,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":20,"org.easymock.tests2.DelegateToTest.testDelegate":160,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":217,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":26,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":301,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":345,"org.easymock.tests.MockingTest.testNicePartialClassMocking":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":250,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":304,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":50,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":239,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":310,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":141,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":185,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":117,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":218,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":249,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":27,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":166,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":157,"org.easymock.tests.UsageThrowableTest.throwError":88,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":57,"org.easymock.tests.UsageStrictMockTest.differentMethods":32,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":40,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":271,"org.easymock.tests2.MockBuilderTest.testCreateMockString":286,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":49,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":15,"org.easymock.tests.UsageExpectAndThrowTest.floatType":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":204,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":148,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":297,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":363,"org.easymock.tests.UsageVerifyTest.twoThrows":100,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":352,"org.easymock.samples.PartialClassMockTest.testGetArea":71,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":96,"org.easymock.samples.ExampleTest.voteAgainstRemoval":76,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":241,"org.easymock.tests2.UsageTest.niceToStrict":164,"org.easymock.tests2.UsageConstraintsTest.testNotNull":156,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":262,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":94,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":161,"org.easymock.tests2.MockBuilderTest.testCreateMock":361,"org.easymock.tests2.UsageTest.defaultResetToNice":292,"org.easymock.samples.ExampleTest.voteAgainstRemovals":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":228,"org.easymock.tests.UsageVarargTest.differentLength":335,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":51,"org.easymock.tests2.CallbackTest.callback":174,"org.easymock.tests2.UsageConstraintsTest.equals":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":364,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":58,"org.easymock.tests.UsageTest.openCallCountByLastCall":210,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":28,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":129,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":134,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":323,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":194,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":114,"org.easymock.tests.UsageCallCountTest.tooFewCalls":80,"org.easymock.tests.UsageOverloadedMethodTest.overloading":84,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":320,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":348,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":24,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":145,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":10,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":259,"org.easymock.tests.UsageThrowableTest.throwCheckedException":91,"org.easymock.tests2.EasyMockSupportClassTest.testAll":350,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":187,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":282,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":183,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":309,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":213,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":56,"org.easymock.tests2.UsageConstraintsTest.testMatches":147,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":349,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":203,"org.easymock.tests.ObjectMethodsTest.testHashCode":17,"org.easymock.samples.ExampleTest.voteForRemovals":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":67,"org.easymock.tests2.NameTest.nameForNiceMock":313,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":273,"org.easymock.tests.UsageVarargTest.allKinds":110,"org.easymock.tests2.DependencyTest.testInterfaceMocking":274,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":66,"org.easymock.samples.BasicClassMockTest.testPrintContent":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":184,"org.easymock.samples.ExampleTest.addDocument":180,"org.easymock.tests2.DelegateToTest.testStubDelegate":159,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":93,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":175,"org.easymock.tests2.AnswerTest.stubAnswer":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":45,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":122,"org.easymock.tests2.UsageConstraintsTest.greaterThan":149,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":359,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":236,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":328,"org.easymock.tests.UsageVarargTest.varargLongAccepted":107,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":124,"org.easymock.samples.ExampleTest.voteForRemoval":75,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":270,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":231,"org.easymock.tests.UsageExpectAndReturnTest.floatType":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":295,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":355,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests.UsageThrowableTest.noUpperLimit":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":47,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":150,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":287,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":199,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":135,"org.easymock.tests2.SerializationTest.test":276,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":127,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":219,"org.easymock.tests2.UsageConstraintsTest.testSame":139,"org.easymock.samples.SupportTest.addDocument":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":189,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":366,"org.easymock.tests2.CaptureTest.testCaptureFirst":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":128,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":294,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests.GenericTest.testPackageScope":186,"org.easymock.tests2.UsageTest.moreThanOneArgument":288,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":272,"org.easymock.tests2.CaptureTest.testCapture2_2446744":13,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":162,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":46,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":333,"org.easymock.tests2.NameTest.nameForMock":311,"org.easymock.tests.UsageExpectAndReturnTest.longType":221,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":253,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":226,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":154,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":362,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":251,"org.easymock.tests2.UsageStrictMockTest.differentMethods":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":21,"org.easymock.tests.UsageCallCountTest.tooManyCalls":82,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":30,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":238,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":196,"org.easymock.tests2.MockedExceptionTest.testRealException":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":60,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":69,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":177,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":113,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":307,"org.easymock.tests2.NameTest.nameForStrictMock":312,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":195,"org.easymock.tests2.UsageConstraintsTest.testContains":144,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":264,"org.easymock.tests2.UsageConstraintsTest.testFind":137,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":205,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":299,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":170,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":300,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":120,"org.easymock.tests.UsageExpectAndReturnTest.object":225,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":151,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":305,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":343,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":59,"org.easymock.tests2.UsageStrictMockTest.range":34,"org.easymock.tests2.UsageConstraintsTest.lessThan":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":340,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":65,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":42,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":315,"org.easymock.tests.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":33,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":126,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":316,"org.easymock.tests2.UsageConstraintsTest.testOr":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":63,"org.easymock.tests.UsageRangeTest.combination":111,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":229,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":101,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":169,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":337,"org.easymock.tests.UsageTest.wrongArguments":209,"org.easymock.tests2.MockBuilderTest.testWithConstructor":357,"org.easymock.tests.MockClassControlTest.testHashCode":16,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":39,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":235,"org.easymock.tests2.EasyMockSupportTest.testVerify":341,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":227,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":336,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":322,"org.easymock.tests.UsageVarargTest.varargShortAccepted":106,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":280,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":268,"org.easymock.tests2.UsageConstraintsTest.cmpTo":267,"org.easymock.tests.UsageVarargTest.varargCharAccepted":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":324,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":176,"org.easymock.tests2.UsageTest.openCallCountByLastCall":290,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":291,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":133,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":321,"org.easymock.tests2.CaptureTest.testCaptureFromStub":12,"org.easymock.tests.UsageTest.unexpectedCallWithArray":208,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":368,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":246,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":260,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":90,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":53,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":38,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":25,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":346,"org.easymock.tests2.UsageConstraintsTest.constraints":266,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":245,"org.easymock.samples.ExampleTest.addAndChangeDocument":78,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageStrictMockTest.testVerify":261,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":230,"org.easymock.tests2.ConstraintsToStringTest.containsToString":70,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":353,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":182,"org.easymock.tests2.UsageTest.resumeIfFailure":293,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":223,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":98,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":130}}]
