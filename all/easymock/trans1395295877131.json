[{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[6,7,8,9,10],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[11],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:196","sourceCode":"java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"args":"args","mockClass":"mockClass","cstr":"cstr"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[32,33,34],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[35,36],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[37,38,39,40,41,42,43,44,45,46,47,32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[48,49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[50,51],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"position":"org.easymock.ConstructorArgs:54","failures":[37,38,40,41,42,43,52,44,45,46,53,54,55,56,57,32,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[13,14,15,16,18,21,22,23,24,25,26,30],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[42,83,84,85,86,87,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"i","java.lang.Integer.MAX_VALUE":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,32,64,74,80,101,102,103],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:85","failures":[37,37,38,38,88,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,48,122,89,123,31,90,91,124,13,14,15,16,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,93,94,96,181,97,98,182,99,100,45,183,184,53,185,186,187,54,188,189,190,191,192,32,33,34,193,61,64,74,80,194,195,17,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,11,211,212,213,214,215,216,217,218,219,49,220,221,12,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,2,243,244,245,246,247,248,249,250,18,251,252,253,254,255,256,257,258,259,260,261,262,263,264,19,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,3,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,21,22,23,24,25,26,367,368,30,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[13,14,15,16,18,21,22,23,24,25,26,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[136,138,146,207,208,210,211,212,389,12,226],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[390],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[210,389,12,226],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[392],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[32,33,34,393],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[37,38,88,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,48,122,89,394,123,39,395,31,90,91,124,396,92,13,14,15,16,125,126,127,128,129,130,131,397,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,398,399,400,401,402,150,403,404,405,406,407,408,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,93,40,94,95,41,409,96,181,97,42,98,410,43,182,99,44,100,45,46,47,183,184,53,185,411,186,187,54,55,412,413,414,415,416,417,418,188,50,51,189,190,191,192,32,33,34,419,420,421,422,423,193,424,425,426,427,428,429,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,194,195,17,430,196,197,198,431,199,200,201,202,203,204,205,206,207,208,432,209,210,11,211,212,213,389,214,215,216,217,218,219,49,220,221,12,222,223,224,225,226,227,228,433,434,229,230,231,435,232,233,436,234,235,437,236,237,438,439,440,238,239,441,240,442,443,444,241,242,2,243,244,245,246,247,248,249,250,18,251,252,253,254,255,256,257,258,259,260,261,262,263,264,19,265,266,267,268,269,270,271,272,273,274,445,446,447,448,449,450,451,452,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,3,302,303,304,305,306,307,101,453,454,455,456,102,457,458,459,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,460,461,462,463,464,465,466,20,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,324,325,326,483,327,328,329,484,485,486,330,6,7,8,487,9,488,10,489,331,332,333,490,334,335,336,337,338,339,340,341,491,492,493,494,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,35,365,366,103,36,495,496,497,21,22,23,24,25,26,498,499,367,500,501,502,503,27,28,29,368,30,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[136,138,146,212],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[159,173],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[129,245,504,344,345],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[55],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[163,175],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[491,492,493],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:189","failures":[89,31,125,128,129,130,150,151,152,153,154,155,158,159,160,163,164,165,167,170,172,173,175,176,93,181,97,98,99,100,193,207,241,2,244,245,246,275,276,277,278,279,300,3,302,305,306,307,308,309,310,311,342,344,345],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:74","sourceCode":"java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[212],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":208,"org.easymock.tests2.UsageTest.argumentsOrdered":165,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":300,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":178,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":469,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":160,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":104,"org.easymock.tests2.DelegateToTest.testReturnException":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":22,"org.easymock.tests.MockingTest.testPartialClassMocking":238,"org.easymock.tests.MockClassControlTest.testToString":314,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":397,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":68,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":280,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":83,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":213,"org.easymock.tests2.UsageTest.wrongArguments":158,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":249,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":408,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":310,"org.easymock.samples.ExampleTest.answerVsDelegate":108,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":102,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":443,"org.easymock.tests2.UsageConstraintsTest.testNull":210,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":121,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":177,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":319,"org.easymock.tests2.CaptureTest.testPrimitive":139,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":299,"org.easymock.tests.UsageTest.moreThanOneArgument":301,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":356,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":445,"org.easymock.tests.UsageTest.argumentsOrdered":306,"org.easymock.tests.UsageVarargTest.varargIntAccepted":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":359,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":87,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":428,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":414,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":363,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests.ReplayStateInvalidUsageTest.times":263,"org.easymock.tests2.DependencyTest.testClassMocking":433,"org.easymock.tests2.AnswerTest.answer":188,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":154,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":454,"org.easymock.tests2.CaptureTest.testAnd":136,"org.easymock.tests2.UsageTest.strictResetToDefault":156,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":355,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":322,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":449,"org.easymock.tests2.DelegateToTest.testDelegate":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":295,"org.easymock.tests.LimitationsTest.mockFinalMethod":500,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":279,"org.easymock.tests2.DependencyTest.testClassMockingSupport":434,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":450,"org.easymock.tests2.CaptureTest.testCapture1_2446744":140,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":293,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":152,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":257,"org.easymock.tests.UsageThrowableTest.throwError":346,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":456,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":494,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":429,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":358,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":82,"org.easymock.samples.PartialClassMockTest.testGetArea":88,"org.easymock.tests.MockingTest.testInterfaceMocking":441,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":360,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":502,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":485,"org.easymock.tests2.UsageTest.niceToStrict":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":96,"org.easymock.tests2.MockBuilderTest.testCreateMock":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":405,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":289,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":173,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":453,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":493,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":308,"org.easymock.tests.UsageOverloadedMethodTest.overloading":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":79,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":218,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":235,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":380,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":217,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":145,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":490,"org.easymock.tests2.EasyMockSupportClassTest.testAll":61,"org.easymock.tests.MockClassControlTest.testEquals":318,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":366,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":153,"org.easymock.tests2.CaptureTest.testCaptureAll":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":277,"org.easymock.tests.MockNameTest.defaultName":489,"org.easymock.tests2.UsageConstraintsTest.testMatches":219,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":357,"org.easymock.samples.ExampleTest.voteForRemovals":112,"org.easymock.tests.UsageVarargTest.allKinds":341,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":343,"org.easymock.samples.BasicClassMockTest.testPrintContent":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":278,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":352,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":125,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":26,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":488,"org.easymock.tests2.UsageConstraintsTest.greaterThan":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":62,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":321,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":124,"org.easymock.samples.ExampleTest.voteForRemoval":109,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":10,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":396,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":201,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":457,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":89,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":364,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":170,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":21,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":430,"org.easymock.tests2.CaptureTest.testCaptureFirst":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":171,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":167,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":376,"org.easymock.tests2.UsageTest.moreThanOneArgument":157,"org.easymock.tests2.CaptureTest.testCapture2_2446744":148,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":477,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":99,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":340,"org.easymock.tests.GenericTest.testBridgedEquals":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":273,"org.easymock.tests.UsageExpectAndReturnTest.longType":372,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":275,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":298,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":459,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":224,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":296,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":354,"org.easymock.tests.UsageCallCountTest.tooManyCalls":274,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":377,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":285,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":351,"org.easymock.tests.MockingTest.testNiceClassMocking":444,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":184,"org.easymock.tests.MockingTest.testClassMocking":439,"org.easymock.tests2.UsageConstraintsTest.testContains":216,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":267,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":15,"org.easymock.tests2.UsageConstraintsTest.testFind":209,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":326,"org.easymock.tests.MockTypeTest.fromEasyMockClass":455,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":232,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":241,"org.easymock.tests.UsageExpectAndReturnTest.object":379,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":84,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":335,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":329,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":391,"org.easymock.tests.UsageTest.exactCallCountByLastCall":307,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":495,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":446,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":385,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":331,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":234,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":420,"org.easymock.tests.MockClassControlTest.testHashCode":317,"org.easymock.tests2.EasyMockSupportTest.testVerify":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":71,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":447,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":492,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":233,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":151,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":192,"org.easymock.tests.UsageVarargTest.varargCharAccepted":334,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":486,"org.easymock.tests2.CaptureTest.testCaptureMultiple":392,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":482,"org.easymock.tests2.UsageTest.openCallCountByLastCall":161,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":179,"org.easymock.tests.DefaultClassInstantiatorTest.object":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":491,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":72,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":287,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":349,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":401,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":419,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":90,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":316,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":286,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":386,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":80,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":315,"org.easymock.tests2.UsageTest.resumeIfFailure":166,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":101,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":24,"org.easymock.tests2.StubTest.stubWithReturnValue":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":42,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":225,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":378,"org.easymock.tests2.SerializationTest.testAllMockedMethod":34,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":475,"org.easymock.samples.SupportTest.voteForRemovals":116,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":35,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":422,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":292,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":393,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":481,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":50,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":497,"org.easymock.tests.UsageExpectAndThrowTest.object":290,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":222,"org.easymock.tests2.DelegateToTest.testWrongClass":198,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":253,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":254,"org.easymock.samples.ConstructorCalledMockTest.testTax":37,"org.easymock.tests.UsageStrictMockTest.range":245,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":417,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":175,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":183,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":291,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":97,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":58,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":305,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":309,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":503,"org.easymock.tests2.CaptureTest.testCaptureNone":144,"org.easymock.tests.UsageUnorderedTest.message":342,"org.easymock.tests.UsageVerifyTest.twoReturns":345,"org.easymock.tests.UsageVarargTest.varargByteAccepted":339,"org.easymock.tests2.ThreadingTest.testThreadSafe":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":75,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":271,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":484,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":105,"org.easymock.tests2.CaptureTest.testCapture_2617107":138,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":251,"org.easymock.tests2.UsageConstraintsTest.any":214,"org.easymock.tests2.StubTest.stub":195,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":23,"org.easymock.tests.UsageExpectAndThrowTest.longType":283,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":487,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":261,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":128,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":193,"org.easymock.tests.LimitationsTest.mockNativeMethod":367,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":388,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":103,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":400,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":131,"org.easymock.tests2.NameTest.nameForMocksControl":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":402,"org.easymock.tests2.MockedExceptionTest.testMockedException":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":63,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":304,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":435,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":240,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":284,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":118,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":98,"org.easymock.tests.MockingTest.testNicePartialClassMocking":239,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":122,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":398,"org.easymock.tests2.CaptureTest.testCaptureLast":143,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":451,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":54,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":212,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":223,"org.easymock.tests.MockingTest.testTwoMocks":440,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":288,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":164,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":227,"org.easymock.samples.ExampleTest.removeNonExistingDocument":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":404,"org.easymock.tests.UsageStrictMockTest.differentMethods":246,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":259,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":421,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":7,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":202,"org.easymock.tests2.MockBuilderTest.testCreateMockString":100,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":65,"org.easymock.tests.UsageExpectAndThrowTest.floatType":282,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":60,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":189,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":47,"org.easymock.tests.UsageVerifyTest.twoThrows":344,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":74,"org.easymock.samples.ExampleTest.voteAgainstRemoval":110,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":470,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests.LimitationsTest.privateConstructor":499,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":57,"org.easymock.tests2.UsageConstraintsTest.testNotNull":226,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":353,"org.easymock.tests2.UsageTest.defaultResetToNice":163,"org.easymock.samples.ExampleTest.voteAgainstRemovals":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":384,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":399,"org.easymock.tests.UsageVarargTest.differentLength":336,"org.easymock.tests2.CallbackTest.callback":194,"org.easymock.tests2.UsageConstraintsTest.equals":432,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":39,"org.easymock.tests.UsageTest.openCallCountByLastCall":303,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":18,"org.easymock.tests.UsageCallCountTest.tooFewCalls":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":185,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":311,"org.easymock.tests.UsageThrowableTest.throwCheckedException":350,"org.easymock.tests.MockingTest.testStrictClassMocking":438,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":30,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":403,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":53,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":186,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":191,"org.easymock.tests.ObjectMethodsTest.testHashCode":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":86,"org.easymock.tests2.NameTest.nameForNiceMock":134,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":204,"org.easymock.tests2.DependencyTest.testInterfaceMocking":229,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":85,"org.easymock.samples.ExampleTest.addDocument":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":81,"org.easymock.tests2.DelegateToTest.testStubDelegate":197,"org.easymock.tests2.AnswerTest.stubAnswer":190,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":243,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":410,"org.easymock.tests.UsageVarargTest.varargLongAccepted":338,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":387,"org.easymock.tests.UsageExpectAndReturnTest.floatType":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":45,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":38,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":427,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":221,"org.easymock.tests.UsageThrowableTest.noUpperLimit":347,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":206,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":412,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":141,"org.easymock.tests2.SerializationTest.test":33,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":6,"org.easymock.tests2.UsageConstraintsTest.testSame":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":370,"org.easymock.samples.SupportTest.addDocument":115,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":411,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":66,"org.easymock.tests.GenericTest.testPackageScope":365,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":426,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":442,"org.easymock.tests2.NameTest.nameForMock":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":381,"org.easymock.tests2.UsageStrictMockTest.differentMethods":130,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":44,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":395,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":373,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":294,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":483,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":323,"org.easymock.tests2.MockedExceptionTest.testRealException":16,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":472,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":127,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":250,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":265,"org.easymock.tests2.NameTest.nameForStrictMock":133,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":409,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":48,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":416,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":8,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":12,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":94,"org.easymock.tests2.UsageStrictMockTest.range":129,"org.easymock.tests2.UsageConstraintsTest.lessThan":228,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":169,"org.easymock.tests2.CaptureTest.testCaptureRightOne":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":70,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":390,"org.easymock.tests2.UsageConstraintsTest.testOr":211,"org.easymock.tests.UsageRangeTest.combination":320,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":119,"org.easymock.tests.UsageTest.wrongArguments":302,"org.easymock.tests2.MockBuilderTest.testWithConstructor":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":67,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":382,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":9,"org.easymock.tests.UsageVarargTest.varargShortAccepted":337,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":272,"org.easymock.tests2.UsageConstraintsTest.cmpTo":215,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":463,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":162,"org.easymock.tests2.CaptureTest.testCaptureFromStub":147,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":256,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":95,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":270,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":52,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":383,"org.easymock.tests2.UsageConstraintsTest.constraints":207,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":244,"org.easymock.samples.ExampleTest.addAndChangeDocument":114,"org.easymock.tests.UsageStrictMockTest.testVerify":248,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":117,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":276,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":142,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":361,"org.easymock.tests.LimitationsTest.abstractClass":498,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":375,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":362,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":504,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":174,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":332}}]
