[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[15,16,7,17,18,19,20,21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[24],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[31,32,33,34,35,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[39,40,41,42,43,44,45],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[47,48,49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[50,51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:200","sourceCode":"throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[11],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[4,55,56,24,57],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[58,59],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[60,60,61,61,62,63,64,15,16,7,9,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,37,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,23,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,4,55,56,24,57,146,147,148,149,150,151,152,153,154,155,156,2,157,158,159,160,3,161,162,163],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[164,31,32,39,33,34,165,35,166,167,62,63,64,168,169,170,171,172,173,15,174,175,176,7,8,9,65,66,67,68,177,69,70,178,179,180,181,182,183,184,185,186,187,188,77,78,189,79,80,81,82,83,86,88,91,92,93,190,191,192,193,194,40,41,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,58,59,215,216,217,218,219,95,100,101,102,103,104,108,220,221,222,38,223,224,225,226,227,114,117,127,133,228,229,230,231,47,232,233,234,235,236,237,48,49,238,239,240,29,241,242,243,136,244,1,245,246,247,248,249,250,251,55,56,252,253,254,255,256,257,258,259,260,261,262,263,264,265,14,266,267,268,44,269,270,271,272,273,274,275,276,148,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,153,154,155,2,157,158,159,160,3,161,162,163,30,295,296,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[178,179,180,181,187,300,301,208,302,303,304,305,209,210,306,211,58,59,307,308],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[91,92,93,309,310,311,312,313,314,315,316,317,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[318],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":208,"org.easymock.tests2.UsageTest.argumentsOrdered":226,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":314,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":223,"org.easymock.tests2.StubTest.stubWithReturnValue":310,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":22,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":217,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":167,"org.easymock.tests2.SerializationTest.testAllMockedMethod":9,"org.easymock.tests2.DelegateToTest.testReturnException":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":312,"org.easymock.tests.MockingTest.testPartialClassMocking":153,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":26,"org.easymock.samples.SupportTest.voteForRemovals":31,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":4,"org.easymock.tests.MockClassControlTest.testToString":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":121,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":10,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":117,"org.easymock.tests.UsageExpectAndThrowTest.object":275,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":59,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":17,"org.easymock.tests2.DelegateToTest.testWrongClass":41,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":210,"org.easymock.tests2.UsageTest.wrongArguments":222,"org.easymock.samples.ConstructorCalledMockTest.testTax":60,"org.easymock.tests.UsageStrictMockTest.range":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":230,"org.easymock.samples.ExampleTest.answerVsDelegate":39,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":65,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":145,"org.easymock.tests2.UsageConstraintsTest.testNull":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":79,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":204,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":102,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":162,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":71,"org.easymock.tests2.CaptureTest.testPrimitive":181,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":296,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":111,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":229,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":189,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":0,"org.easymock.tests2.CaptureTest.testCaptureNone":185,"org.easymock.tests.UsageVerifyTest.twoReturns":232,"org.easymock.tests.UsageVarargTest.varargByteAccepted":292,"org.easymock.tests.UsageTest.argumentsOrdered":297,"org.easymock.tests.UsageVarargTest.varargIntAccepted":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":128,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":248,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":63,"org.easymock.tests2.CaptureTest.testCapture_2617107":180,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":282,"org.easymock.tests2.UsageConstraintsTest.any":211,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":101,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":313,"org.easymock.tests.UsageExpectAndThrowTest.longType":273,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":140,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":263,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":175,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":190,"org.easymock.tests.ReplayStateInvalidUsageTest.times":265,"org.easymock.tests.LimitationsTest.mockNativeMethod":148,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":171,"org.easymock.tests2.AnswerTest.answer":218,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":24,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":194,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":75,"org.easymock.tests2.CaptureTest.testAnd":178,"org.easymock.tests2.UsageTest.strictResetToDefault":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":86,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":176,"org.easymock.tests2.MockedExceptionTest.testMockedException":92,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":116,"org.easymock.tests2.DelegateToTest.testDelegate":43,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":155,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":77,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":103,"org.easymock.tests.MockingTest.testNicePartialClassMocking":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":276,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":81,"org.easymock.tests.LimitationsTest.mockFinalMethod":149,"org.easymock.tests2.CaptureTest.testCaptureLast":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":315,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":233,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":209,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":281,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":215,"org.easymock.tests.MockingTest.testTwoMocks":152,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":299,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":192,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":225,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":308,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":259,"org.easymock.tests.UsageThrowableTest.throwError":234,"org.easymock.samples.ExampleTest.removeNonExistingDocument":166,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":261,"org.easymock.tests.UsageStrictMockTest.differentMethods":54,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":138,"org.easymock.tests2.MockBuilderTest.testCreateMockString":108,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":2,"org.easymock.tests.UsageExpectAndThrowTest.floatType":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":118,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":113,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":219,"org.easymock.tests.UsageVerifyTest.twoThrows":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":127,"org.easymock.samples.PartialClassMockTest.testGetArea":62,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":260,"org.easymock.samples.ExampleTest.voteAgainstRemoval":34,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests2.UsageTest.niceToStrict":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":122,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":143,"org.easymock.tests.LimitationsTest.privateConstructor":147,"org.easymock.tests2.UsageConstraintsTest.testNotNull":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":239,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":91,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":100,"org.easymock.tests2.UsageTest.defaultResetToNice":224,"org.easymock.tests2.MockBuilderTest.testCreateMock":104,"org.easymock.samples.ExampleTest.voteAgainstRemovals":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":130,"org.easymock.tests2.UsageConstraintsTest.equals":46,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":84,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":25,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":12,"org.easymock.tests.UsageOverloadedMethodTest.overloading":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":132,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":269,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":283,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":68,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":213,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":5,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":186,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":231,"org.easymock.tests.UsageThrowableTest.throwCheckedException":48,"org.easymock.tests2.EasyMockSupportClassTest.testAll":114,"org.easymock.tests.MockClassControlTest.testEquals":161,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":56,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":28,"org.easymock.tests.MockingTest.testStrictClassMocking":150,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":193,"org.easymock.tests2.CaptureTest.testCaptureAll":179,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":317,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":69,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":67,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":14,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":177,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":257,"org.easymock.tests.ObjectMethodsTest.testHashCode":1,"org.easymock.samples.ExampleTest.voteForRemovals":35,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":170,"org.easymock.tests.UsageVarargTest.allKinds":294,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":52,"org.easymock.tests2.DependencyTest.testInterfaceMocking":172,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":280,"org.easymock.samples.BasicClassMockTest.testPrintContent":64,"org.easymock.samples.ExampleTest.addDocument":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":134,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":316,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":115,"org.easymock.tests.UsageVarargTest.varargLongAccepted":291,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":37,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":242,"org.easymock.samples.ExampleTest.voteForRemoval":33,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":142,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":89,"org.easymock.tests.UsageExpectAndReturnTest.floatType":252,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":106,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":15,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":61,"org.easymock.tests.UsageThrowableTest.noUpperLimit":235,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":220,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":163,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":109,"org.easymock.tests2.SerializationTest.test":8,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":182,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":13,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":197,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":137,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":236,"org.easymock.tests2.UsageConstraintsTest.testSame":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":112,"org.easymock.samples.SupportTest.addDocument":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":311,"org.easymock.tests2.CaptureTest.testCaptureFirst":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":198,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":227,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":119,"org.easymock.tests.GenericTest.testPackageScope":55,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":169,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":105,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":293,"org.easymock.tests.GenericTest.testBridgedEquals":57,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":250,"org.easymock.tests.UsageExpectAndReturnTest.longType":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":277,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":195,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":107,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":216,"org.easymock.tests2.UsageStrictMockTest.differentMethods":51,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":85,"org.easymock.tests.UsageCallCountTest.tooManyCalls":251,"org.easymock.tests2.MockedExceptionTest.testRealException":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":274,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":49,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":66,"org.easymock.tests.MockingTest.testNiceClassMocking":156,"org.easymock.tests.MockingTest.testClassMocking":151,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":246,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":96,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":93,"org.easymock.tests2.UsageConstraintsTest.testFind":302,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":80,"org.easymock.tests.UsageExpectAndReturnTest.object":255,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":110,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":58,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":83,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":97,"org.easymock.tests2.UsageStrictMockTest.range":50,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":203,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":18,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":245,"org.easymock.tests.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":94,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":123,"org.easymock.tests2.CaptureTest.testCaptureRightOne":187,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":11,"org.easymock.tests2.UsageConstraintsTest.testOr":305,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":16,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":78,"org.easymock.tests.UsageTest.wrongArguments":295,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":44,"org.easymock.tests.MockClassControlTest.testHashCode":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":120,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":254,"org.easymock.tests2.EasyMockSupportTest.testVerify":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":124,"org.easymock.tests.UsageVarargTest.varargShortAccepted":290,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":268,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":141,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":249,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":191,"org.easymock.tests2.UsageConstraintsTest.cmpTo":212,"org.easymock.tests.UsageVarargTest.varargCharAccepted":288,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":174,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":206,"org.easymock.tests.DefaultClassInstantiatorTest.object":136,"org.easymock.tests2.CaptureTest.testCaptureFromStub":300,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":258,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":98,"org.easymock.tests.UsageTest.unexpectedCallWithArray":30,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":237,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":76,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":29,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":247,"org.easymock.tests2.UsageConstraintsTest.constraints":301,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":241,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":87,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":160,"org.easymock.tests.UsageStrictMockTest.testVerify":243,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":168,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":133,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":278,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":183,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":36,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":144,"org.easymock.tests.LimitationsTest.abstractClass":146,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":201}}]
