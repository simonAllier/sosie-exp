[{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[27,14,28,29,30,15,16,31,32,17,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,18,111,19,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,20,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,191,192,192,193,194,195,196,197,198,199,200,201,202,203,204,205,21,206,207,208,209,210,22,23,211,212,213,214,24,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,25,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,26,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,1,2,3,4,5,6,7,8,328,9,10,11,12,13,329,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[331,332,333,203,215,216,334,217,218,219,220,221,222,223,237,240,241,335,245,246,247,325],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[259],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[336,298],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[337,27,14,28,30,31,32,17,38,68,338,71,18,111,19,112,164,20,167,168,169,170,21,207,208,209,210,212,213,24,339,340,341,336,342,343,344,240,242,267,271,272,275,279,290,26,292,293,294,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[27,14,28,15,16,17,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,67,69,70,71,345,346,347,348,349,350,351,352,353,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,354,355,356,110,18,111,19,112,113,114,115,116,117,118,119,120,121,122,123,124,125,131,138,139,357,358,359,360,361,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,20,168,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,333,362,363,364,188,190,191,191,192,192,193,194,195,196,198,200,203,21,206,207,209,22,23,211,214,24,216,217,219,220,222,224,225,226,227,228,229,230,231,232,233,234,235,236,238,240,241,242,243,244,245,246,247,248,25,365,366,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,367,284,285,286,368,287,288,289,26,293,294,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,1,2,4,5,8,328,9,10,11,12,13,329,330],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockRunner:38","sourceCode":"return new org.easymock.internal.EasyMockStatement(org.junit.runners.BlockJUnit4ClassRunner.methodInvoker(org.junit.runners.model.FrameworkMethod, java.lang.Object) , java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[204,205,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[325,326,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[28,101,103,104,18,111,19,20,169,170,207,280,281,282,283,26,294,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[28,81,87,93,97,99,385,354,112,122,134,144,150,156,160,162,200,207,257,258,279,287,296,310,313,322,2,8,328,13,329,330],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[28,30,31,32,18,111,19,112,166,20,168,169,207,208,212,213,280,281,282,283,26,293,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[29,386,387,166,388,342],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[346,347,352,353],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[18,168,169,293,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[389],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[331,332,60,110,390,123,124,125,186,187,333,188,191,191,192,192,201,202,203,215,391,216,334,217,218,219,220,221,222,392,223,224,225,226,227,229,230,231,232,234,235,236,237,238,239,240,241,242,393,244,245,246,247,256,264,325,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:205","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[331,332,394,333,203,215,216,334,395,217,218,219,220,221,222,223,237,240,241,335,245,246,247,262],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[14,28,30,15,16,31,32,17,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,57,67,69,70,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,108,109,110,18,111,19,112,113,114,120,121,122,123,124,125,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,20,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,193,194,195,196,197,198,200,201,202,203,204,205,21,206,207,208,209,210,22,23,212,213,24,217,219,220,224,225,226,227,228,229,230,231,232,233,234,235,236,238,241,243,244,245,246,247,248,25,253,254,255,256,257,258,259,260,261,264,266,267,268,269,270,271,272,274,275,276,277,278,279,284,285,286,287,289,291,26,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,1,2,3,4,5,6,7,8,328,9,10,12,13,329,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[391,392],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[14,16,46,47,53,54,55,56,57,58,70,111,122,139,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,173,175,176,177,178,179,180,21,23,262,263,264,265,289],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[337,27,28,29,30,15,31,32,33,34,39,68,69,70,338,71,72,386,396,387,397,398,399,400,356,18,111,19,112,113,165,166,20,168,169,170,171,206,207,208,210,212,213,339,388,340,401,341,402,403,336,342,343,344,215,232,233,241,242,268,272,275,280,291,26,292,293,294,295,296,299,313],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":299,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":14,"org.easymock.tests2.UsageTest.argumentsOrdered":213,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":381,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":210,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":205,"org.easymock.tests2.DelegateToTest.testReturnException":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":54,"org.easymock.tests.MockingTest.testPartialClassMocking":123,"org.easymock.tests.MockClassControlTest.testToString":61,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":349,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":335,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":144,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":245,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":324,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":44,"org.easymock.tests2.UsageTest.wrongArguments":208,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":142,"org.easymock.samples.ExampleTest.answerVsDelegate":194,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":332,"org.easymock.tests2.UsageConstraintsTest.testNull":301,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":234,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":66,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":275,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":48,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":163,"org.easymock.tests.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":117,"org.easymock.tests.UsageTest.argumentsOrdered":32,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":357,"org.easymock.tests.UsageVarargTest.varargIntAccepted":35,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":181,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":215,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":218,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":185,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":341,"org.easymock.tests.ReplayStateInvalidUsageTest.times":134,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":243,"org.easymock.tests2.AnswerTest.answer":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":252,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":116,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":270,"org.easymock.tests2.DelegateToTest.testDelegate":287,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":57,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":77,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":337,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":250,"org.easymock.tests.UsageThrowableTest.throwError":173,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":128,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":119,"org.easymock.samples.PartialClassMockTest.testGetArea":203,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":182,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":145,"org.easymock.tests2.UsageTest.niceToStrict":209,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":217,"org.easymock.tests2.MockBuilderTest.testCreateMock":221,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":375,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":388,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":153,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":271,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":101,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":140,"org.easymock.tests.UsageOverloadedMethodTest.overloading":121,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":70,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":310,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":92,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":309,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.MockClassControlTest.testEquals":65,"org.easymock.tests2.EasyMockSupportClassTest.testAll":244,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":187,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":403,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":161,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":251,"org.easymock.tests2.UsageConstraintsTest.testMatches":311,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":118,"org.easymock.samples.ExampleTest.voteForRemovals":198,"org.easymock.tests.UsageVarargTest.allKinds":43,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":76,"org.easymock.samples.BasicClassMockTest.testPrintContent":202,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":179,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":58,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":382,"org.easymock.tests2.UsageConstraintsTest.greaterThan":313,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":50,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":242,"org.easymock.samples.ExampleTest.voteForRemoval":195,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":237,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":188,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":268,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":53,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":269,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":24,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":72,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":88,"org.easymock.tests2.CaptureTest.testCapture2_2446744":12,"org.easymock.tests2.UsageTest.moreThanOneArgument":207,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":260,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":222,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":108,"org.easymock.tests.UsageExpectAndReturnTest.longType":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":73,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":266,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":392,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":162,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":318,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":356,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":115,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":346,"org.easymock.tests.UsageCallCountTest.tooManyCalls":109,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":396,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":103,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":225,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":391,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":102,"org.easymock.tests2.UsageConstraintsTest.testContains":308,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":264,"org.easymock.tests2.UsageConstraintsTest.testFind":300,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":122,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":330,"org.easymock.tests.UsageExpectAndReturnTest.object":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":274,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":37,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":80,"org.easymock.tests.UsageTest.exactCallCountByLastCall":17,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":138,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":348,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":358,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":399,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":97,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":33,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":69,"org.easymock.tests.MockClassControlTest.testHashCode":64,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":378,"org.easymock.tests2.EasyMockSupportTest.testVerify":278,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":401,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":359,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":67,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":249,"org.easymock.tests.UsageVarargTest.varargCharAccepted":36,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":291,"org.easymock.tests2.UsageTest.openCallCountByLastCall":22,"org.easymock.tests.DefaultClassInstantiatorTest.object":172,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":351,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":78,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":400,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":151,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":176,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":377,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":63,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":240,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":150,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":98,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":345,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":402,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":247,"org.easymock.tests2.UsageTest.resumeIfFailure":214,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":56,"org.easymock.tests2.StubTest.stubWithReturnValue":289,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":90,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":319,"org.easymock.tests2.SerializationTest.testAllMockedMethod":327,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":354,"org.easymock.samples.SupportTest.voteForRemovals":190,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":342,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":156,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":355,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":365,"org.easymock.tests.UsageExpectAndThrowTest.object":154,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":350,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":316,"org.easymock.tests2.DelegateToTest.testWrongClass":286,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":113,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":114,"org.easymock.samples.ConstructorCalledMockTest.testTax":191,"org.easymock.tests.UsageStrictMockTest.range":168,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":273,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":155,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":219,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":136,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":141,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":386,"org.easymock.tests2.CaptureTest.testCaptureNone":328,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":364,"org.easymock.tests.UsageUnorderedTest.message":112,"org.easymock.tests.UsageVerifyTest.twoReturns":19,"org.easymock.tests.UsageVarargTest.varargByteAccepted":41,"org.easymock.tests2.ThreadingTest.testThreadSafe":257,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":106,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":201,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":47,"org.easymock.tests2.UsageConstraintsTest.any":306,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":133,"org.easymock.tests2.StubTest.stub":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":347,"org.easymock.tests.UsageExpectAndThrowTest.longType":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":55,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":132,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":248,"org.easymock.tests2.SerializationTest.testClass":325,"org.easymock.tests.LimitationsTest.mockNativeMethod":110,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":100,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":333,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":371,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":295,"org.easymock.tests2.NameTest.nameForMocksControl":283,"org.easymock.tests2.MockedExceptionTest.testMockedException":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":372,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":148,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":125,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":231,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":220,"org.easymock.tests.MockingTest.testNicePartialClassMocking":124,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":236,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":369,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":27,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":230,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":304,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":317,"org.easymock.tests.MockingTest.testTwoMocks":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":152,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":212,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":321,"org.easymock.samples.ExampleTest.removeNonExistingDocument":199,"org.easymock.tests.UsageStrictMockTest.differentMethods":169,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":379,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":259,"org.easymock.tests2.ConstraintsToStringTest.andToString":336,"org.easymock.tests2.MockBuilderTest.testCreateMockString":223,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":59,"org.easymock.tests.UsageExpectAndThrowTest.floatType":146,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":312,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":253,"org.easymock.tests.UsageVerifyTest.twoThrows":111,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":246,"org.easymock.samples.ExampleTest.voteAgainstRemoval":196,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":362,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":241,"org.easymock.tests2.UsageConstraintsTest.testNotNull":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":180,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":262,"org.easymock.tests2.UsageTest.defaultResetToNice":211,"org.easymock.samples.ExampleTest.voteAgainstRemovals":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":96,"org.easymock.tests.UsageVarargTest.differentLength":38,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":370,"org.easymock.tests2.CallbackTest.callback":279,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":397,"org.easymock.tests.UsageTest.openCallCountByLastCall":15,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":46,"org.easymock.tests.UsageCallCountTest.tooFewCalls":104,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":143,"org.easymock.tests.UsageThrowableTest.throwCheckedException":177,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":387,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":139,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":229,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":373,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":135,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":228,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":255,"org.easymock.tests.ObjectMethodsTest.testHashCode":79,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":261,"org.easymock.tests2.NameTest.nameForNiceMock":282,"org.easymock.tests2.DependencyTest.testInterfaceMocking":323,"org.easymock.samples.ExampleTest.addDocument":197,"org.easymock.tests2.DelegateToTest.testStubDelegate":285,"org.easymock.tests2.AnswerTest.stubAnswer":254,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":20,"org.easymock.tests.UsageVarargTest.varargLongAccepted":40,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":99,"org.easymock.tests.UsageExpectAndReturnTest.floatType":83,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":256,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":192,"org.easymock.tests2.ConstraintsToStringTest.orToString":339,"org.easymock.tests.UsageThrowableTest.noUpperLimit":174,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":314,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":297,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests2.SerializationTest.test":326,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":82,"org.easymock.tests2.UsageConstraintsTest.testSame":302,"org.easymock.samples.SupportTest.addDocument":189,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":131,"org.easymock.tests.GenericTest.testPackageScope":186,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":383,"org.easymock.tests2.NameTest.nameForMock":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":93,"org.easymock.tests2.UsageStrictMockTest.differentMethods":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":158,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":52,"org.easymock.tests2.MockedExceptionTest.testRealException":265,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":398,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":26,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":137,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":45,"org.easymock.tests2.NameTest.nameForStrictMock":281,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":395,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":329,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":235,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":315,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":216,"org.easymock.tests2.UsageStrictMockTest.range":293,"org.easymock.tests2.UsageConstraintsTest.lessThan":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":380,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":267,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":303,"org.easymock.tests.UsageRangeTest.combination":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":232,"org.easymock.tests.UsageTest.wrongArguments":30,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":60,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":94,"org.easymock.tests.UsageVarargTest.varargShortAccepted":39,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":107,"org.easymock.tests2.UsageConstraintsTest.cmpTo":307,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":366,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":23,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":127,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":334,"org.easymock.tests.UsageTest.unexpectedCallWithArray":29,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":166,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":105,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":95,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests2.UsageConstraintsTest.constraints":298,"org.easymock.samples.ExampleTest.addAndChangeDocument":200,"org.easymock.tests2.ConstraintsToStringTest.notToString":340,"org.easymock.tests.UsageStrictMockTest.testVerify":171,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":204,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":74,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":393,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":183,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":184,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":71,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":34,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":272}}]
