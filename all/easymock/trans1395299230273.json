[{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[1,2,3,4,5,6],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,9,10,11,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,12,13,83,14,15,16,17,18,19,84,85,86,87,88,89,90,91,92,93,94,95,20,96,97,98,21,99,100,1,101,102,103,104,105,106,107,108,109,110,22,111,23,24,25,26,27,28,112,113,114,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,115,116,117,118,119,120,121,122,123,124,125,126,127,9,10,11,128,49,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,50,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,51,172,4,173,174,52,175,176,177,178,179,180,181,53,54,55,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,56,57,58,59,208,60,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,61,288,289,290,291,292,293,62,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[308,309,310],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[63,64,65,66,67,311,312,68,313,69,70,71,72,73,74,75,76,77,78,79,80,314,81,82,12,13,83,14,15,16,17,18,19,315,316,317,84,85,318,86,87,319,320,321,322,323,324,325,7,326,327,328,329,330,331,332,333,88,334,335,336,337,338,89,339,90,91,92,93,94,95,20,96,340,97,98,21,99,100,1,101,102,103,104,105,106,107,108,109,110,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,8,364,22,111,23,24,25,26,27,28,112,113,365,366,114,367,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,115,116,117,368,118,119,120,121,122,123,124,125,126,127,9,10,11,128,49,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,50,146,147,148,369,370,371,372,373,374,375,376,377,378,379,149,150,151,308,380,381,382,383,384,385,309,386,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,51,172,4,173,174,52,175,176,177,178,179,180,181,53,54,55,182,183,387,388,389,390,391,184,185,186,187,188,189,190,392,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,56,57,58,59,208,60,393,394,209,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,210,211,212,213,410,411,412,413,414,415,416,214,215,216,217,218,219,417,418,419,420,220,421,422,423,221,222,223,224,225,226,227,228,229,230,231,424,232,425,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,426,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,427,428,429,430,431,280,281,432,433,434,435,436,282,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,283,284,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,285,286,490,287,61,288,289,290,291,292,293,62,294,295,296,297,298,299,491,300,301,492,493,302,303,304,305,306,307],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[79,81,82,12,20,98,99,100,101,102,103,104,105,107,22,24,25,26,27,28,112,115,116,117,118,119,121,122,123,124,125,137,139,142,175,176,391,185,187,188,190,191,193,195,196,197,199,200,201,202,203,204,207,394,396,405,225,226,227,228,229,230,231,233,234,235,236,238,239,242,243,244,251,255,257,260,261,263,266,269,272,273,274,275,276,277,442,450,287,288,291,292,295,296],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:163","failures":[389,390,401,437,451],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[1,2,3,4,5,6],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[424,445,448,494,301,492,495,496,497,498,499,500,501],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[389,390,401,424,437,440,445,448,502,451,503,494,504,301,492],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[505,506,507,508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[275,277,299,300],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(this.java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[56,398,408,282,443,469],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[260],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[175,426,295],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:78","sourceCode":"final java.lang.reflect.Method[] java.lang.reflect.Method[] = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getAllDeclaredMethods(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[509],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[510,511,512],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:266","sourceCode":"return ","type":"CtReturnImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,56,57,58,59,60,61,62],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,12,13,83,14,15,16,17,18,19,88,89,90,91,92,93,94,95,20,96,340,97,98,21,99,100,1,101,102,103,104,105,106,107,108,109,110,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,8,364,22,111,23,24,25,26,27,28,112,114,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,115,116,117,118,119,120,121,122,123,124,125,126,127,9,10,11,128,49,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,50,146,147,148,371,372,373,375,149,150,151,380,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,51,172,4,173,174,52,175,176,177,178,179,180,181,53,54,55,182,183,387,388,389,389,390,390,391,184,185,186,187,188,189,190,392,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,56,57,58,59,208,60,393,394,209,395,396,397,398,400,403,404,405,406,210,211,212,213,214,215,216,217,218,219,417,418,419,220,421,422,221,222,223,224,225,226,227,228,229,230,231,424,232,425,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,438,442,443,444,446,449,450,452,283,466,469,479,485,285,286,490,287,61,288,289,290,291,292,293,62,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[341,345],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[442,513],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[384,514,515],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[252,270,273,516],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[517,424,232,425],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[321,250],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[64,67,311,79,80,315,84,85,318,86,87,95,20,96,99,1,101,102,103,104,105,107,348,349,350,112,113,120,134,136,137,140,141,142,144,146,147,148,51,172,4,173,175,176,177,394,403,406,408,210,211,212,213,417,418,421,422,225,227,228,229,230,231,234,236,238,239,241,242,254,269,280,281,282,438,439,444,446,449,450,452,283,284,287,61,289,290,291,292,295,296,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[12,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[20,96,99,1,102,103,104,107,112,120,140,141,142,518,519,520,379,51,4,173,175,176,177,394,404,406,225,228,229,230,234,238,239,242,254,269,438,449,450,452,287,61,290,291,292,295,296,297,298],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":255,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":51,"org.easymock.tests2.UsageTest.argumentsOrdered":296,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":328,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":292,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":184,"org.easymock.tests2.DelegateToTest.testReturnException":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":15,"org.easymock.tests.MockingTest.testPartialClassMocking":372,"org.easymock.tests.MockClassControlTest.testToString":348,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":409,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":68,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":29,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":496,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":261,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":81,"org.easymock.tests2.UsageTest.wrongArguments":290,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":462,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":180,"org.easymock.samples.ExampleTest.answerVsDelegate":186,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":318,"org.easymock.tests2.UsageConstraintsTest.testNull":257,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":377,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":395,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":242,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":353,"org.easymock.tests2.CaptureTest.testPrimitive":197,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":83,"org.easymock.tests.UsageTest.moreThanOneArgument":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":48,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":131,"org.easymock.tests.UsageTest.argumentsOrdered":176,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":69,"org.easymock.tests.UsageVarargTest.varargIntAccepted":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":74,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":435,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":412,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":78,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":283,"org.easymock.tests.ReplayStateInvalidUsageTest.times":362,"org.easymock.tests2.DependencyTest.testClassMocking":488,"org.easymock.tests2.AnswerTest.answer":302,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":224,"org.easymock.tests2.CaptureTest.testAnd":194,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":317,"org.easymock.tests2.UsageTest.strictResetToDefault":288,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":440,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":237,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":73,"org.easymock.tests2.DelegateToTest.testDelegate":251,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":44,"org.easymock.tests.LimitationsTest.mockFinalMethod":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":94,"org.easymock.tests2.DependencyTest.testClassMockingSupport":489,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":79,"org.easymock.tests2.CaptureTest.testCapture1_2446744":198,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":42,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":222,"org.easymock.tests.UsageThrowableTest.throwError":22,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":356,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":85,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":436,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":379,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":133,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":487,"org.easymock.samples.PartialClassMockTest.testGetArea":391,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":357,"org.easymock.tests.MockingTest.testInterfaceMocking":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":75,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":474,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":30,"org.easymock.tests2.UsageTest.niceToStrict":291,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":311,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":442,"org.easymock.tests2.MockBuilderTest.testCreateMock":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":459,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":38,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":5,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":238,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":316,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":178,"org.easymock.tests.UsageOverloadedMethodTest.overloading":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":478,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":50,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":163,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":97,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":514,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":266,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":203,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":368,"org.easymock.tests2.EasyMockSupportClassTest.testAll":466,"org.easymock.tests.MockClassControlTest.testEquals":352,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":343,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":92,"org.easymock.tests2.CaptureTest.testCaptureAll":195,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":223,"org.easymock.tests.MockNameTest.defaultName":113,"org.easymock.tests2.UsageConstraintsTest.testMatches":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":132,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":354,"org.easymock.samples.ExampleTest.voteForRemovals":190,"org.easymock.tests.UsageVarargTest.allKinds":125,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":95,"org.easymock.samples.BasicClassMockTest.testPrintContent":388,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":93,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":27,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":225,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":19,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":501,"org.easymock.tests2.UsageConstraintsTest.greaterThan":270,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":467,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":108,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":406,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":386,"org.easymock.samples.ExampleTest.voteForRemoval":187,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":407,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":215,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":86,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":413,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":398,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":340,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":235,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":14,"org.easymock.tests2.CaptureTest.testCaptureFirst":207,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":236,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":159,"org.easymock.tests2.CaptureTest.testCapture2_2446744":206,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":217,"org.easymock.tests2.UsageTest.moreThanOneArgument":289,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":335,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":124,"org.easymock.tests.GenericTest.testBridgedEquals":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":141,"org.easymock.tests.UsageExpectAndReturnTest.longType":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":90,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":233,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":513,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":47,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":182,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":129,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":10,"org.easymock.tests.UsageCallCountTest.tooManyCalls":142,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":34,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":26,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":417,"org.easymock.tests.MockingTest.testNiceClassMocking":378,"org.easymock.tests.MockingTest.testClassMocking":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":135,"org.easymock.tests2.UsageConstraintsTest.testContains":265,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":58,"org.easymock.tests2.UsageConstraintsTest.testFind":256,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":21,"org.easymock.tests.MockTypeTest.fromEasyMockClass":84,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":99,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":300,"org.easymock.tests.UsageExpectAndReturnTest.object":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":400,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":497,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":119,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":66,"org.easymock.tests.UsageTest.exactCallCountByLastCall":177,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":70,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":492,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":168,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":115,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":145,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":428,"org.easymock.tests.MockClassControlTest.testHashCode":351,"org.easymock.tests2.EasyMockSupportTest.testVerify":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":476,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":71,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":143,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":54,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":518,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":221,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":490,"org.easymock.tests.UsageVarargTest.varargCharAccepted":118,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":308,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":339,"org.easymock.tests2.UsageTest.openCallCountByLastCall":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":511,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":244,"org.easymock.tests.DefaultClassInstantiatorTest.object":380,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":53,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":64,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":519,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":477,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":427,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":404,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":350,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":35,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":485,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":349,"org.easymock.tests2.UsageTest.resumeIfFailure":297,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":315,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":17,"org.easymock.tests2.StubTest.stubWithReturnValue":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":445,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":161,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":276,"org.easymock.tests2.SerializationTest.testAllMockedMethod":425,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":88,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":504,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":6,"org.easymock.samples.SupportTest.voteForRemovals":193,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":341,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":41,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":517,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":89,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":303,"org.easymock.tests.UsageExpectAndThrowTest.object":39,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":313,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":273,"org.easymock.tests2.DelegateToTest.testWrongClass":249,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":126,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":127,"org.easymock.samples.ConstructorCalledMockTest.testTax":389,"org.easymock.tests.UsageStrictMockTest.range":103,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":415,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":219,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":509,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":463,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":175,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":8,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":179,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":151,"org.easymock.tests2.CaptureTest.testCaptureNone":202,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":506,"org.easymock.tests.UsageUnorderedTest.message":112,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":520,"org.easymock.tests.UsageVerifyTest.twoReturns":96,"org.easymock.tests.UsageVarargTest.varargByteAccepted":123,"org.easymock.tests2.ThreadingTest.testThreadSafe":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":480,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":139,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":387,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":67,"org.easymock.tests2.CaptureTest.testCapture_2617107":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":314,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":337,"org.easymock.tests2.UsageConstraintsTest.any":263,"org.easymock.tests2.StubTest.stub":208,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":361,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":11,"org.easymock.tests.UsageExpectAndThrowTest.longType":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":338,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":384,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":360,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":228,"org.easymock.tests2.SerializationTest.testClass":424,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":280,"org.easymock.tests.LimitationsTest.mockNativeMethod":114,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":171,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":344,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":455,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":231,"org.easymock.tests2.NameTest.nameForMocksControl":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":457,"org.easymock.tests2.MockedExceptionTest.testMockedException":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":468,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":52,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":491,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":33,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":375,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":393,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":446,"org.easymock.tests.MockingTest.testNicePartialClassMocking":373,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":397,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":495,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":453,"org.easymock.tests2.CaptureTest.testCaptureLast":201,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":80,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":422,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":260,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":274,"org.easymock.tests.MockingTest.testTwoMocks":371,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":37,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":295,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":278,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":508,"org.easymock.samples.ExampleTest.removeNonExistingDocument":392,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":458,"org.easymock.tests.UsageStrictMockTest.differentMethods":104,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":429,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":382,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":216,"org.easymock.tests2.MockBuilderTest.testCreateMockString":452,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":470,"org.easymock.tests.UsageExpectAndThrowTest.floatType":31,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":465,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":305,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":493,"org.easymock.tests.UsageVerifyTest.twoThrows":20,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":479,"org.easymock.samples.ExampleTest.voteAgainstRemoval":188,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":405,"org.easymock.tests.LimitationsTest.privateConstructor":366,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":0,"org.easymock.tests2.UsageConstraintsTest.testNotNull":277,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":28,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":56,"org.easymock.tests2.UsageTest.defaultResetToNice":294,"org.easymock.samples.ExampleTest.voteAgainstRemovals":185,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":330,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":454,"org.easymock.tests.UsageVarargTest.differentLength":120,"org.easymock.tests2.CallbackTest.callback":287,"org.easymock.tests2.UsageConstraintsTest.equals":426,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":401,"org.easymock.tests.UsageTest.openCallCountByLastCall":174,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":252,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":12,"org.easymock.tests.UsageCallCountTest.tooFewCalls":137,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":419,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":181,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":507,"org.easymock.tests.UsageThrowableTest.throwCheckedException":25,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests.MockingTest.testStrictClassMocking":369,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":421,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":49,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":418,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":284,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":220,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":307,"org.easymock.tests.ObjectMethodsTest.testHashCode":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":500,"org.easymock.tests2.NameTest.nameForNiceMock":212,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":218,"org.easymock.tests2.DependencyTest.testInterfaceMocking":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":498,"org.easymock.samples.ExampleTest.addDocument":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":486,"org.easymock.tests2.DelegateToTest.testStubDelegate":248,"org.easymock.tests2.AnswerTest.stubAnswer":306,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":101,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":447,"org.easymock.tests.UsageVarargTest.varargLongAccepted":122,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":170,"org.easymock.tests.UsageExpectAndReturnTest.floatType":154,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":301,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":434,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":146,"org.easymock.tests.UsageThrowableTest.noUpperLimit":111,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":271,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":253,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":410,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":199,"org.easymock.tests2.SerializationTest.test":232,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":515,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":153,"org.easymock.tests2.UsageConstraintsTest.testSame":258,"org.easymock.samples.SupportTest.addDocument":192,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":310,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":420,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":471,"org.easymock.tests.GenericTest.testPackageScope":342,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":433,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":376,"org.easymock.tests2.NameTest.nameForMock":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":451,"org.easymock.tests2.UsageStrictMockTest.differentMethods":230,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":402,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":43,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":110,"org.easymock.tests2.MockedExceptionTest.testRealException":59,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":494,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":82,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":364,"org.easymock.tests2.NameTest.nameForStrictMock":211,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":441,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":512,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":299,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":414,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":272,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":383,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":438,"org.easymock.tests2.UsageStrictMockTest.range":229,"org.easymock.tests2.UsageConstraintsTest.lessThan":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":431,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":499,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":475,"org.easymock.tests2.CaptureTest.testCaptureRightOne":204,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":505,"org.easymock.tests2.UsageConstraintsTest.testOr":259,"org.easymock.tests.UsageRangeTest.combination":107,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":394,"org.easymock.tests.UsageTest.wrongArguments":173,"org.easymock.tests2.MockBuilderTest.testWithConstructor":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":472,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":320,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":385,"org.easymock.tests.UsageVarargTest.varargShortAccepted":121,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":140,"org.easymock.tests2.UsageConstraintsTest.cmpTo":264,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":322,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":62,"org.easymock.tests2.CaptureTest.testCaptureFromStub":205,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":355,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":439,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":138,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":502,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":166,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":102,"org.easymock.tests2.UsageConstraintsTest.constraints":254,"org.easymock.samples.ExampleTest.addAndChangeDocument":191,"org.easymock.tests.UsageStrictMockTest.testVerify":106,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":183,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":100,"org.easymock.tests2.CompareToTest.testGreateThan":516,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":91,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":76,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":158,"org.easymock.tests.LimitationsTest.abstractClass":365,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":77,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":239}}]
