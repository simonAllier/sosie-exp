[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[3,4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[7,8,9],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[46,47,48,49,50,0,51,19,52,53,54,55,56,57,58,43,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[3,61,32,34,4,62,5,40,63,6,64],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && ((((java.lang.String)(java.lang.Object)).indexOf(java.lang.String)) >= 0)","type":"CtReturnImpl"},"failures":[3,35,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[65],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[66,67],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[65],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[68,69,70,71,72,73],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[10,11,12,13,14,74,46,68,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,47,113,48,49,114,115,116,117,118,15,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,16,17,136,137,18,50,0,51,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,1,2,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,71,19,200,201,52,53,202,20,21,203,204,205,206,207,208,209,210,22,23,24,25,26,211,212,213,214,215,216,217,218,219,220,221,27,27,28,28,222,223,224,225,226,227,54,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,29,30,3,61,31,32,33,34,4,261,262,263,35,264,36,37,265,38,39,5,266,267,268,269,40,41,42,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,67,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,55,56,57,58,311,312,313,314,315,316,317,43,318,319,59,60,320,44,321,322,323,324,325,326,327,328,63,329,6,330,331,332,333,334,335,336,64,45,337,338],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[339,340,341],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[46,70,342,343,344,345,135,50,0,51,19,201,52,346,72,347,348,349,350,54,43,319,59],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[85,89,90,92,95,142,146,147,149,152,351,201,52,352,353,354,319,59],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[61,34],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[128,355,215,290,292,356,293],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[230,253,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[357],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"suffix","key":"suffix"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[358,294,295,296],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[169,359,360],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[361,362,363,364,340,341,365],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[3,4,63,6,64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[266],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[10,11,12,13,120,121,122,123,124,125,126,16,138,139,140,141,142,143,146,147,149,150,151,153,154,155,156,157,177,19,201,52,20,21,22,23,24,25,26,212,214,216,217,219,225,239,240,242,243,245,247,248,249,250,251,252,253,254,256,258,259,260,286,291,297,311,312,313,314,43,319,59,322,323,324,325,326,327,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[361,366,362,363,364,367,368,294,297,365],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":61,"org.easymock.tests2.UsageTest.argumentsOrdered":235,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":174,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":230,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":361,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":269,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":147,"org.easymock.tests2.SerializationTest.testAllMockedMethod":296,"org.easymock.tests2.DelegateToTest.testReturnException":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":172,"org.easymock.tests.MockingTest.testPartialClassMocking":120,"org.easymock.samples.SupportTest.voteForRemovals":225,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":73,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":65,"org.easymock.tests.MockClassControlTest.testToString":205,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":357,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":93,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":358,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.object":91,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":266,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":248,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":362,"org.easymock.tests2.DelegateToTest.testWrongClass":292,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":20,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":21,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":261,"org.easymock.tests2.UsageTest.wrongArguments":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":16,"org.easymock.tests.UsageStrictMockTest.range":201,"org.easymock.samples.ConstructorCalledMockTest.testTax":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":193,"org.easymock.samples.ExampleTest.answerVsDelegate":215,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":305,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":322,"org.easymock.tests2.UsageConstraintsTest.testNull":32,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":92,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":307,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":242,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":210,"org.easymock.tests2.CaptureTest.testPrimitive":330,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":18,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":78,"org.easymock.tests.UsageTest.moreThanOneArgument":46,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":100,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":188,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":251,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":192,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":12,"org.easymock.tests2.CaptureTest.testCaptureNone":335,"org.easymock.tests.UsageUnorderedTest.message":135,"org.easymock.tests.UsageVerifyTest.twoReturns":51,"org.easymock.tests.UsageVarargTest.varargByteAccepted":109,"org.easymock.tests2.ThreadingTest.testThreadSafe":284,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":352,"org.easymock.tests.UsageTest.argumentsOrdered":79,"org.easymock.tests.UsageVarargTest.varargIntAccepted":103,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":115,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":222,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":22,"org.easymock.tests2.CaptureTest.testCapture_2617107":6,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":341,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":238,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":137,"org.easymock.tests2.UsageConstraintsTest.any":262,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":355,"org.easymock.tests2.StubTest.stub":320,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":26,"org.easymock.tests.UsageExpectAndThrowTest.longType":84,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":173,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":7,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":184,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":318,"org.easymock.tests2.SerializationTest.testClass":294,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":289,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":315,"org.easymock.tests.LimitationsTest.mockNativeMethod":177,"org.easymock.tests.ReplayStateInvalidUsageTest.times":186,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":359,"org.easymock.tests2.AnswerTest.answer":270,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":157,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":277,"org.easymock.tests2.CaptureTest.testAnd":63,"org.easymock.tests2.UsageTest.strictResetToDefault":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":257,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":60,"org.easymock.tests2.NameTest.nameForMocksControl":58,"org.easymock.tests2.MockedExceptionTest.testMockedException":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":302,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":125,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":77,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":354,"org.easymock.tests2.DelegateToTest.testDelegate":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":85,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":122,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":249,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":243,"org.easymock.tests.MockingTest.testNicePartialClassMocking":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":96,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":339,"org.easymock.tests2.CaptureTest.testCaptureLast":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":175,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":345,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":328,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":168,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":344,"org.easymock.tests2.CaptureTest.testCapture1_2446744":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":138,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":89,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":234,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":41,"org.easymock.tests.UsageThrowableTest.throwError":158,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":180,"org.easymock.samples.ExampleTest.removeNonExistingDocument":220,"org.easymock.tests.UsageStrictMockTest.differentMethods":52,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":182,"org.easymock.tests2.ConstraintsToStringTest.andToString":349,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":67,"org.easymock.tests2.MockBuilderTest.testCreateMockString":246,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":203,"org.easymock.tests.UsageExpectAndThrowTest.floatType":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":14,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":265,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":271,"org.easymock.tests.UsageVerifyTest.twoThrows":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":313,"org.easymock.samples.PartialClassMockTest.testGetArea":212,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":23,"org.easymock.samples.ExampleTest.voteAgainstRemoval":217,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":259,"org.easymock.tests2.UsageTest.niceToStrict":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":82,"org.easymock.tests2.UsageConstraintsTest.testNotNull":40,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":278,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":163,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":240,"org.easymock.tests2.MockBuilderTest.testCreateMock":244,"org.easymock.tests2.UsageTest.defaultResetToNice":233,"org.easymock.samples.ExampleTest.voteAgainstRemovals":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":153,"org.easymock.tests.UsageVarargTest.differentLength":106,"org.easymock.tests2.CallbackTest.callback":288,"org.easymock.tests.UsageTest.openCallCountByLastCall":76,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":90,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":72,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":303,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":29,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":136,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":191,"org.easymock.tests.UsageCallCountTest.tooFewCalls":49,"org.easymock.tests.UsageOverloadedMethodTest.overloading":133,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":36,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":129,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":325,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":149,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":264,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":8,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":194,"org.easymock.tests.UsageThrowableTest.throwCheckedException":1,"org.easymock.tests2.EasyMockSupportClassTest.testAll":311,"org.easymock.tests.MockClassControlTest.testEquals":209,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":170,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":98,"org.easymock.tests2.CaptureTest.testCaptureAll":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":166,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":327,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":119,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":324,"org.easymock.tests2.UsageConstraintsTest.testMatches":37,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":326,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":273,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":13,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":178,"org.easymock.tests.ObjectMethodsTest.testHashCode":196,"org.easymock.samples.ExampleTest.voteForRemovals":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":340,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":287,"org.easymock.tests2.NameTest.nameForNiceMock":57,"org.easymock.tests.UsageVarargTest.allKinds":111,"org.easymock.tests2.DependencyTest.testInterfaceMocking":247,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":50,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":364,"org.easymock.samples.BasicClassMockTest.testPrintContent":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":167,"org.easymock.samples.ExampleTest.addDocument":218,"org.easymock.tests2.DelegateToTest.testStubDelegate":291,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":162,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":316,"org.easymock.tests2.AnswerTest.stubAnswer":272,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":176,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":368,"org.easymock.tests2.UsageConstraintsTest.greaterThan":38,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":124,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":260,"org.easymock.tests.UsageVarargTest.varargLongAccepted":108,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":53,"org.easymock.samples.ExampleTest.voteForRemoval":216,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":66,"org.easymock.tests.UsageExpectAndReturnTest.floatType":140,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":156,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":255,"org.easymock.tests2.ConstraintsToStringTest.orToString":346,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":28,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":39,"org.easymock.tests.UsageThrowableTest.noUpperLimit":159,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":226,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":30,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":112,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":332,"org.easymock.tests2.SerializationTest.test":295,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":366,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":300,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":160,"org.easymock.tests2.UsageConstraintsTest.testSame":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":139,"org.easymock.samples.SupportTest.addDocument":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":171,"org.easymock.tests2.CaptureTest.testCaptureFirst":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":301,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":237,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":131,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":183,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":145,"org.easymock.tests.GenericTest.testPackageScope":169,"org.easymock.tests2.CaptureTest.testCapture2_2446744":337,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":286,"org.easymock.tests2.UsageTest.moreThanOneArgument":54,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":353,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":245,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":110,"org.easymock.tests.GenericTest.testBridgedEquals":360,"org.easymock.tests2.NameTest.nameForMock":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":117,"org.easymock.tests.UsageExpectAndReturnTest.longType":141,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":150,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":268,"org.easymock.tests2.UsageStrictMockTest.differentMethods":59,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":10,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":142,"org.easymock.tests.UsageCallCountTest.tooManyCalls":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":95,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":126,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":48,"org.easymock.tests2.MockedExceptionTest.testRealException":281,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":146,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":86,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":2,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":323,"org.easymock.tests2.NameTest.nameForStrictMock":56,"org.easymock.tests2.UsageConstraintsTest.testContains":35,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":113,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":280,"org.easymock.tests2.UsageConstraintsTest.testFind":31,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":134,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":282,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":253,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":283,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":198,"org.easymock.tests.UsageExpectAndReturnTest.object":148,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":5,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":256,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":239,"org.easymock.tests2.UsageStrictMockTest.range":319,"org.easymock.tests2.UsageConstraintsTest.lessThan":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":363,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":105,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":197,"org.easymock.tests.UsageTest.exactCallCountByLastCall":80,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":351,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":299,"org.easymock.tests2.CaptureTest.testCaptureRightOne":64,"org.easymock.tests2.UsageConstraintsTest.testOr":34,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":365,"org.easymock.tests.UsageRangeTest.combination":123,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":250,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":101,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":154,"org.easymock.tests.UsageTest.wrongArguments":75,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":128,"org.easymock.tests.MockClassControlTest.testHashCode":208,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":204,"org.easymock.tests2.EasyMockSupportTest.testVerify":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":151,"org.easymock.tests.UsageVarargTest.varargShortAccepted":107,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":274,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":116,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":321,"org.easymock.tests2.UsageConstraintsTest.cmpTo":263,"org.easymock.tests.UsageVarargTest.varargCharAccepted":104,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":317,"org.easymock.tests2.UsageTest.openCallCountByLastCall":231,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":232,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":309,"org.easymock.tests.DefaultClassInstantiatorTest.object":190,"org.easymock.tests2.CaptureTest.testCaptureFromStub":45,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":179,"org.easymock.tests.UsageTest.unexpectedCallWithArray":68,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":195,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":88,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":161,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":114,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":152,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":258,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":207,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":200,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.samples.ExampleTest.addAndChangeDocument":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":87,"org.easymock.tests2.ConstraintsToStringTest.notToString":347,"org.easymock.tests.UsageStrictMockTest.testVerify":202,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":155,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":211,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":314,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":206,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":165,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":333,"org.easymock.tests2.UsageTest.resumeIfFailure":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":24,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":25,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":304,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":102}}]
