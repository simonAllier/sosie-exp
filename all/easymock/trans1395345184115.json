[{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:61","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"length":"i","clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[37,38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,23,24,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,25,26,75,76,77,78,79,80,81,82,83,84,85,86,87,27,88,89,90,91,28,29,6,7,8,92,93,94,95,9,10,96,11,97,98,12,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,37,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,13,14,161,162,15,163,16,17,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,18,180,181,182,183,184,185,186,187,188,3,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,1,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,5,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,19,20,21,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,22,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,38,459,460,4,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[438],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[289,292],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[6,8,11,13,14,15,16,17,165,175,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1832","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[174],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[484],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[42,43,46,54,56,57,58,73,25,75,77,78,79,80,81,82,83,85,87,27,91,28,6,7,8,92,93,94,95,9,96,11,97,98,12,99,101,102,104,116,118,140,37,141,143,158,159,160,13,14,162,15,163,16,17,164,166,167,168,169,170,171,172,173,174,175,176,177,179,18,180,181,187,189,190,191,196,202,203,208,209,210,211,212,213,214,215,217,218,220,254,255,256,257,258,259,260,261,266,268,270,271,272,273,274,275,276,278,279,280,281,282,283,300,301,302,303,305,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,352,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,389,396,397,404,19,20,21,405,407,408,420,421,422,423,424,425,426,430,431,433,471,475,476,477,478,479,480,481,482,483],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.MocksControl:131","failures":[106],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[485],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,23,24,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,25,26,75,76,77,78,79,80,81,82,83,84,85,86,87,27,88,90,91,28,6,7,8,92,93,94,95,9,10,96,11,97,98,12,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,37,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,13,14,161,162,15,163,16,17,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,18,180,181,182,183,184,185,186,187,188,3,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,1,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,5,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,19,20,21,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,22,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,38,459,460,4,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[166],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[82,200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:409","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[188,190,191,455],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[175,176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[469],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[323,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[486,386],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[487],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[57,90,101,119,120,121,122,139,140,37,141,142,143,258,289,292,402],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[39,40,41,42,43,44,45,46,48,23,24,49,50,51,52,53,54,55,56,57,58,64,73,74,25,75,76,77,78,79,80,81,82,83,84,85,86,87,27,88,90,91,28,6,7,8,92,93,94,95,9,10,96,11,97,98,12,99,100,101,102,103,104,105,107,110,111,112,113,116,118,119,120,121,122,128,135,136,137,138,140,37,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,13,14,162,15,163,16,17,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,18,180,181,187,189,190,191,192,193,196,197,198,199,201,202,203,208,209,210,211,212,213,214,215,216,217,218,219,220,224,227,237,243,250,251,252,253,254,255,256,257,258,259,260,261,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,300,301,302,303,304,305,316,317,318,319,320,321,322,324,325,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,359,361,362,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,389,396,397,399,400,401,402,403,404,19,20,21,405,406,407,408,409,410,411,413,414,415,416,417,418,419,22,420,421,422,423,424,425,426,430,431,433,488,488,445,471,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":14,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":475,"org.easymock.tests2.UsageTest.argumentsOrdered":218,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":38,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":213,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":49,"org.easymock.tests2.DelegateToTest.testReturnException":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":301,"org.easymock.tests.MockingTest.testPartialClassMocking":430,"org.easymock.tests.MockClassControlTest.testToString":439,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":182,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":231,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":366,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":74,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":404,"org.easymock.tests2.UsageTest.wrongArguments":211,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":252,"org.easymock.samples.ExampleTest.answerVsDelegate":42,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":311,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":435,"org.easymock.tests2.UsageConstraintsTest.testNull":15,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":102,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":444,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":153,"org.easymock.tests2.CaptureTest.testPrimitive":92,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":405,"org.easymock.tests.UsageTest.moreThanOneArgument":476,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":385,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":424,"org.easymock.tests.UsageTest.argumentsOrdered":482,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":391,"org.easymock.tests.UsageVarargTest.varargIntAccepted":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":257,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":133,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":451,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":261,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":64,"org.easymock.tests.ReplayStateInvalidUsageTest.times":355,"org.easymock.tests2.DependencyTest.testClassMocking":71,"org.easymock.tests2.AnswerTest.answer":187,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":464,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":138,"org.easymock.tests2.CaptureTest.testAnd":6,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":308,"org.easymock.tests2.UsageTest.strictResetToDefault":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":423,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":148,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":395,"org.easymock.tests2.DelegateToTest.testDelegate":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":381,"org.easymock.tests.LimitationsTest.mockFinalMethod":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":403,"org.easymock.tests2.DependencyTest.testClassMockingSupport":72,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":265,"org.easymock.tests2.CaptureTest.testCapture1_2446744":93,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":136,"org.easymock.tests.UsageThrowableTest.throwError":268,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":350,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":310,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":426,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":245,"org.easymock.samples.PartialClassMockTest.testGetArea":50,"org.easymock.tests.MockingTest.testInterfaceMocking":432,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":258,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":248,"org.easymock.tests2.UsageTest.niceToStrict":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":232,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":196,"org.easymock.tests2.MockBuilderTest.testCreateMock":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":67,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":375,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":149,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":307,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":448,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":250,"org.easymock.tests.UsageOverloadedMethodTest.overloading":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":242,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":170,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":362,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":339,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":169,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":96,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":412,"org.easymock.tests.MockClassControlTest.testEquals":443,"org.easymock.tests2.EasyMockSupportClassTest.testAll":224,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":325,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":383,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":401,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":137,"org.easymock.tests2.CaptureTest.testCaptureAll":7,"org.easymock.tests.MockNameTest.defaultName":398,"org.easymock.tests2.UsageConstraintsTest.testMatches":171,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":425,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":348,"org.easymock.samples.ExampleTest.voteForRemovals":46,"org.easymock.tests.UsageVarargTest.allKinds":22,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":402,"org.easymock.samples.BasicClassMockTest.testPrintContent":52,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":274,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":75,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":305,"org.easymock.tests2.UsageConstraintsTest.greaterThan":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":225,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":472,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":113,"org.easymock.samples.ExampleTest.voteForRemoval":43,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":293,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":114,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":55,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":312,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":105,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":445,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":208,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":146,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":300,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":139,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":455,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":147,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":220,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":335,"org.easymock.tests2.CaptureTest.testCapture2_2446744":98,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":57,"org.easymock.tests2.UsageTest.moreThanOneArgument":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":465,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":202,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":419,"org.easymock.tests.GenericTest.testBridgedEquals":327,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":321,"org.easymock.tests.UsageExpectAndReturnTest.longType":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":399,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":144,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":384,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":178,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":246,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":382,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":422,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":286,"org.easymock.tests.UsageCallCountTest.tooManyCalls":322,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":241,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":336,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":69,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":371,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":273,"org.easymock.tests.MockingTest.testNiceClassMocking":436,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":87,"org.easymock.tests.MockingTest.testClassMocking":428,"org.easymock.tests2.UsageConstraintsTest.testContains":168,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":315,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":121,"org.easymock.tests2.UsageConstraintsTest.testFind":162,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":408,"org.easymock.tests.MockTypeTest.fromEasyMockClass":309,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":118,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests.UsageExpectAndReturnTest.object":338,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":152,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":414,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":297,"org.easymock.tests.UsageTest.exactCallCountByLastCall":483,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":0,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":392,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":26,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":409,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":361,"org.easymock.tests.MockClassControlTest.testHashCode":442,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":124,"org.easymock.tests2.EasyMockSupportTest.testVerify":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":234,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":393,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":447,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":135,"org.easymock.tests.UsageVarargTest.varargCharAccepted":413,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":470,"org.easymock.tests2.UsageTest.openCallCountByLastCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":155,"org.easymock.tests.DefaultClassInstantiatorTest.object":288,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":446,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":235,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":373,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":62,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":123,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":441,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":111,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":372,"org.easymock.tests.CapturesMatcherTest.test":488,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":345,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":285,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":243,"org.easymock.tests2.UsageTest.resumeIfFailure":219,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":303,"org.easymock.tests2.StubTest.stubWithReturnValue":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":34,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":337,"org.easymock.tests2.SerializationTest.testAllMockedMethod":84,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":463,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":484,"org.easymock.samples.SupportTest.voteForRemovals":40,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":323,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":378,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":469,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":188,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":264,"org.easymock.tests.UsageExpectAndThrowTest.object":376,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":176,"org.easymock.tests2.DelegateToTest.testWrongClass":141,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":420,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":421,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.tests.UsageStrictMockTest.range":281,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":206,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":151,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":377,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":198,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":221,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":251,"org.easymock.tests2.CaptureTest.testCaptureNone":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":249,"org.easymock.tests.UsageUnorderedTest.message":386,"org.easymock.tests.UsageVerifyTest.twoReturns":256,"org.easymock.tests.UsageVarargTest.varargByteAccepted":418,"org.easymock.tests2.ThreadingTest.testThreadSafe":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":238,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":319,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":51,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":298,"org.easymock.tests2.CaptureTest.testCapture_2617107":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":21,"org.easymock.tests2.UsageConstraintsTest.any":166,"org.easymock.tests2.StubTest.stub":157,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":354,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":302,"org.easymock.tests.UsageExpectAndThrowTest.longType":369,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":1,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":5,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":78,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests2.SerializationTest.testClass":82,"org.easymock.tests.LimitationsTest.mockNativeMethod":389,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":326,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":61,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":81,"org.easymock.tests2.NameTest.nameForMocksControl":186,"org.easymock.tests2.MockedExceptionTest.testMockedException":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":226,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":480,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":433,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":117,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":370,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":99,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":199,"org.easymock.tests.MockingTest.testNicePartialClassMocking":431,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":104,"org.easymock.tests2.CaptureTest.testCaptureLast":9,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":266,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":28,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":17,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":177,"org.easymock.tests.MockingTest.testTwoMocks":429,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":374,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":217,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":180,"org.easymock.samples.ExampleTest.removeNonExistingDocument":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":66,"org.easymock.tests.UsageStrictMockTest.differentMethods":282,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":125,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":290,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":56,"org.easymock.tests2.MockBuilderTest.testCreateMockString":203,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":228,"org.easymock.tests.UsageExpectAndThrowTest.floatType":368,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":223,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":189,"org.easymock.tests.UsageVerifyTest.twoThrows":255,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":237,"org.easymock.samples.ExampleTest.voteAgainstRemoval":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":459,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":247,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":112,"org.easymock.tests.LimitationsTest.privateConstructor":388,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":31,"org.easymock.tests2.UsageConstraintsTest.testNotNull":18,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":119,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":275,"org.easymock.tests2.UsageTest.defaultResetToNice":216,"org.easymock.samples.ExampleTest.voteAgainstRemovals":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":343,"org.easymock.tests.UsageVarargTest.differentLength":415,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":60,"org.easymock.tests2.CallbackTest.callback":85,"org.easymock.tests2.UsageConstraintsTest.equals":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":108,"org.easymock.tests.UsageTest.openCallCountByLastCall":479,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":487,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":20,"org.easymock.tests.UsageCallCountTest.tooFewCalls":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":253,"org.easymock.tests.UsageThrowableTest.throwCheckedException":272,"org.easymock.tests.MockingTest.testStrictClassMocking":427,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":397,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":91,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":65,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":356,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":90,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":191,"org.easymock.tests.ObjectMethodsTest.testHashCode":296,"org.easymock.tests2.NameTest.nameForNiceMock":185,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":58,"org.easymock.tests2.DependencyTest.testInterfaceMocking":73,"org.easymock.samples.ExampleTest.addDocument":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":239,"org.easymock.tests2.DelegateToTest.testStubDelegate":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":244,"org.easymock.tests2.AnswerTest.stubAnswer":190,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":279,"org.easymock.tests.UsageVarargTest.varargLongAccepted":417,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.floatType":330,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":346,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":25,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":174,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":132,"org.easymock.tests.UsageThrowableTest.noUpperLimit":269,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":363,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":160,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":204,"org.easymock.tests2.SerializationTest.test":83,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":94,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":289,"org.easymock.tests2.UsageConstraintsTest.testSame":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":329,"org.easymock.samples.SupportTest.addDocument":39,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":89,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":229,"org.easymock.tests.GenericTest.testPackageScope":324,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":131,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":434,"org.easymock.tests2.NameTest.nameForMock":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":340,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":36,"org.easymock.tests2.UsageStrictMockTest.differentMethods":80,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":332,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":380,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":294,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":474,"org.easymock.tests2.MockedExceptionTest.testRealException":122,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":4,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":19,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":358,"org.easymock.tests2.NameTest.nameForStrictMock":184,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":195,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":116,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":205,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":486,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":175,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":291,"org.easymock.tests.ErrorMessageTest.testGetters":485,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":193,"org.easymock.tests2.UsageStrictMockTest.range":79,"org.easymock.tests2.UsageConstraintsTest.lessThan":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":145,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":233,"org.easymock.tests2.UsageConstraintsTest.testOr":16,"org.easymock.tests.UsageRangeTest.combination":471,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":100,"org.easymock.tests.UsageTest.wrongArguments":478,"org.easymock.tests2.MockBuilderTest.testWithConstructor":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":230,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":438,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":341,"org.easymock.tests.UsageVarargTest.varargShortAccepted":416,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":292,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":320,"org.easymock.tests2.UsageConstraintsTest.cmpTo":167,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":452,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":215,"org.easymock.tests2.CaptureTest.testCaptureFromStub":97,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":349,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":194,"org.easymock.tests.UsageTest.unexpectedCallWithArray":477,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":278,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":318,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":342,"org.easymock.tests2.UsageConstraintsTest.constraints":13,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.samples.ExampleTest.addAndChangeDocument":48,"org.easymock.tests.UsageStrictMockTest.testVerify":284,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":53,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":400,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":259,"org.easymock.tests.LimitationsTest.abstractClass":387,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":260,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":150}}]
