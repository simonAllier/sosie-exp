[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,0,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[32,33,34],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[138,507,508,509,510,511,512,513,175,177,178,267,514,515,516,517,365,366,411,412,414,415,441,442,443,457,458],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,363],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[352,356],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[42,518,519,520,521,522,523,524],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[48,320],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[41,219,220,221,222,321,322,323,324,325,326,347,401,402,403,408,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[70],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[525,526,527],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,0,41,42,43,528,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,529,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,530,224,225,531,226,227,228,229,532,230,231,232,233,234,533,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,534,276,277,278,279,280,281,535,282,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,536,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[18,19,20,21,28,29,46,47,49,50,51,52,53,54,55,56,65,66,70,71],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[32,33,34,537],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[41,136,143,259,261,262,263,264,265,266,325,343,364,369,426,442,447,454,455,456,475,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1385","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[508,512,514,515,366,411],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[538,539,540],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[56,407],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[541,18,20,21,22,23,24,25,27,542,28,29,31],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.RecordState:315","failures":[41,136,143,219,220,221,222,261,265,266,321,322,323,324,325,326,364,369,408,426,447,474,475,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[138,175,177,178,267,543,544,545,546,365,412,414,415,441,442,443],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1647","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:39","sourceCode":"try {\n    com.google.dexmaker.stock.ProxyBuilder<T> com.google.dexmaker.stock.ProxyBuilder<T> = com.google.dexmaker.stock.ProxyBuilder.com.google.dexmaker.stock.ProxyBuilder.forClass(java.lang.Class<T>).handler(org.easymock.internal.AndroidClassProxyFactory.MockHandler);\n    if (org.easymock.ConstructorArgs != null) {\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n    } else {\n        try {\n            org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n            java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n            java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n            com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n        } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n            throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n        }\n    }\n    return com.google.dexmaker.stock.ProxyBuilder<T>.build();\n} catch (java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,40,0,41,42,44,45,46,47,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,79,80,81,82,84,85,86,88,91,92,93,99,114,117,127,133,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,158,161,162,163,164,167,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,212,219,220,221,222,223,224,227,228,229,230,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,276,307,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,364,365,366,367,368,369,370,371,372,373,374,375,376,377,381,382,384,388,389,390,391,392,393,394,395,396,397,398,399,400,407,408,409,410,411,412,413,414,415,416,417,419,420,423,424,425,426,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,449,450,458,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,501,502,503],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:315","failures":[41,136,143,219,220,221,222,261,265,266,321,322,323,324,325,326,364,369,408,426,447,474,475,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:60","failures":[43,81,86,87,547,548,530,531,532,549,533],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[542],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:221","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[32,33,34],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[550],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":47,"org.easymock.tests2.UsageTest.argumentsOrdered":146,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":364,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":350,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":141,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":2,"org.easymock.tests2.DelegateToTest.testReturnException":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":322,"org.easymock.tests.MockingTest.testPartialClassMocking":381,"org.easymock.tests.MockClassControlTest.testToString":329,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":197,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":405,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":477,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":117,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":543,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":183,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":304,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":519,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":472,"org.easymock.tests2.UsageTest.wrongArguments":139,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":105,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":394,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":273,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":386,"org.easymock.tests2.UsageConstraintsTest.testNull":50,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":153,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":193,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":334,"org.easymock.tests2.CaptureTest.testPrimitive":21,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":476,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":496,"org.easymock.tests.UsageTest.moreThanOneArgument":365,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":337,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":427,"org.easymock.tests.UsageTest.argumentsOrdered":371,"org.easymock.tests.UsageVarargTest.varargIntAccepted":311,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":355,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":396,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":523,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":223,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":75,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":217,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":400,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":288,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":539,"org.easymock.tests.ReplayStateInvalidUsageTest.times":468,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests2.DependencyTest.testClassMocking":180,"org.easymock.tests2.AnswerTest.answer":88,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":206,"org.easymock.tests2.CaptureTest.testAnd":18,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":270,"org.easymock.tests2.UsageTest.strictResetToDefault":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":531,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":161,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":336,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":188,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":431,"org.easymock.tests2.DelegateToTest.testDelegate":40,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":287,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":492,"org.easymock.tests.LimitationsTest.mockFinalMethod":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":377,"org.easymock.tests2.DependencyTest.testClassMockingSupport":181,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":457,"org.easymock.tests2.CaptureTest.testCapture1_2446744":22,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":490,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":204,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":462,"org.easymock.tests.UsageThrowableTest.throwError":259,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":272,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":536,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":339,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":547,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":135,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":291,"org.easymock.samples.PartialClassMockTest.testGetArea":1,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":463,"org.easymock.tests.MockingTest.testInterfaceMocking":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":397,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":452,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":505,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":478,"org.easymock.tests2.UsageTest.niceToStrict":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":122,"org.easymock.tests2.ThreadingTest.testChangeDefault":168,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":527,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":227,"org.easymock.tests2.MockBuilderTest.testCreateMock":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":130,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":102,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":508,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":486,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":189,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":269,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":456,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":432,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":392,"org.easymock.tests.UsageOverloadedMethodTest.overloading":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":126,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":447,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":60,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":424,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":250,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":59,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":27,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":312,"org.easymock.tests2.EasyMockSupportClassTest.testAll":114,"org.easymock.tests.MockClassControlTest.testEquals":333,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":420,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":494,"org.easymock.tests2.CaptureTest.testCaptureAll":19,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":375,"org.easymock.tests.MockNameTest.defaultName":506,"org.easymock.tests2.UsageConstraintsTest.testMatches":61,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":338,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":320,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":441,"org.easymock.samples.BasicClassMockTest.testPrintContent":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":376,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":265,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":173,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":326,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":535,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":524,"org.easymock.tests2.UsageConstraintsTest.greaterThan":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":115,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":389,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":164,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":292,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":282,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":165,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":274,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":529,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":156,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":284,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":423,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":136,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":186,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":321,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":35,"org.easymock.tests2.CaptureTest.testCaptureFirst":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":187,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":246,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":171,"org.easymock.tests2.UsageTest.moreThanOneArgument":138,"org.easymock.tests2.CaptureTest.testCapture2_2446744":30,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":358,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":319,"org.easymock.tests.GenericTest.testBridgedEquals":422,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":439,"org.easymock.tests.UsageExpectAndReturnTest.longType":242,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":373,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":495,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":499,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":68,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":493,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":335,"org.easymock.tests.UsageCallCountTest.tooManyCalls":440,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":540,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":104,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":482,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":264,"org.easymock.tests.MockingTest.testNiceClassMocking":387,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":80,"org.easymock.tests.MockingTest.testClassMocking":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":433,"org.easymock.tests2.UsageConstraintsTest.testContains":58,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":221,"org.easymock.tests2.UsageConstraintsTest.testFind":49,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":426,"org.easymock.tests.MockTypeTest.fromEasyMockClass":271,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":409,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":238,"org.easymock.tests.UsageExpectAndReturnTest.object":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":520,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":314,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":503,"org.easymock.tests.UsageTest.exactCallCountByLastCall":372,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":428,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":404,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":255,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":309,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":208,"org.easymock.tests.MockClassControlTest.testHashCode":332,"org.easymock.tests2.EasyMockSupportTest.testVerify":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":124,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":538,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":429,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":455,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":444,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":203,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":149,"org.easymock.tests.UsageVarargTest.varargCharAccepted":313,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":534,"org.easymock.tests2.CaptureTest.testCaptureMultiple":541,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":363,"org.easymock.tests2.UsageTest.openCallCountByLastCall":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":525,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":195,"org.easymock.tests.DefaultClassInstantiatorTest.object":276,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":454,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":501,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":517,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":262,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":97,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":207,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":162,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":290,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":483,"org.easymock.tests.CapturesMatcherTest.test":550,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":256,"org.easymock.tests.ReplayStateInvalidCallsTest.times":296,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":401,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":297,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":133,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":330,"org.easymock.tests2.UsageTest.resumeIfFailure":147,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":268,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":324,"org.easymock.tests2.StubTest.stubWithReturnValue":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":532,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":248,"org.easymock.tests2.SerializationTest.testAllMockedMethod":34,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":356,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":512,"org.easymock.samples.SupportTest.voteForRemovals":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":418,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":489,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":537,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":362,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":89,"org.easymock.tests.UsageExpectAndThrowTest.object":487,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":406,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":66,"org.easymock.tests2.DelegateToTest.testWrongClass":38,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":497,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":294,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":498,"org.easymock.tests.UsageStrictMockTest.range":414,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":77,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":488,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":229,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":111,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":393,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":514,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":286,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":453,"org.easymock.tests2.CaptureTest.testCaptureNone":26,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":107,"org.easymock.tests.UsageUnorderedTest.message":267,"org.easymock.tests.UsageVerifyTest.twoReturns":443,"org.easymock.tests.UsageVarargTest.varargByteAccepted":318,"org.easymock.tests2.ThreadingTest.testThreadSafe":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":128,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":437,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":504,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":13,"org.easymock.tests2.CaptureTest.testCapture_2617107":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":459,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":360,"org.easymock.tests2.UsageConstraintsTest.any":56,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":467,"org.easymock.tests2.StubTest.stub":0,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":403,"org.easymock.tests.UsageExpectAndThrowTest.longType":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":361,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":280,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":466,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":176,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":212,"org.easymock.tests.LimitationsTest.mockNativeMethod":307,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":421,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":258,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":96,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":302,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":179,"org.easymock.tests2.NameTest.nameForMocksControl":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":98,"org.easymock.tests2.MockedExceptionTest.testMockedException":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":116,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":369,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":481,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":384,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":237,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":230,"org.easymock.tests.MockingTest.testNicePartialClassMocking":382,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":518,"org.easymock.tests2.CaptureTest.testCaptureLast":25,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":458,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":53,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":86,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":301,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":67,"org.easymock.tests.MockingTest.testTwoMocks":380,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":298,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":485,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":145,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":71,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":110,"org.easymock.samples.ExampleTest.removeNonExistingDocument":9,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":464,"org.easymock.tests.UsageStrictMockTest.differentMethods":415,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":101,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":209,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":109,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":278,"org.easymock.tests2.ConstraintsToStringTest.andToString":511,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":170,"org.easymock.tests2.MockBuilderTest.testCreateMockString":235,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":327,"org.easymock.tests.UsageExpectAndThrowTest.floatType":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":118,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":113,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":528,"org.easymock.tests.UsageVerifyTest.twoThrows":442,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":127,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":351,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":163,"org.easymock.tests.LimitationsTest.privateConstructor":306,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":548,"org.easymock.tests2.UsageConstraintsTest.testNotNull":70,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":266,"org.easymock.tests2.UsageTest.defaultResetToNice":144,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":352,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":95,"org.easymock.tests.UsageVarargTest.differentLength":315,"org.easymock.tests2.CallbackTest.callback":202,"org.easymock.tests2.UsageConstraintsTest.equals":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":159,"org.easymock.tests.UsageTest.openCallCountByLastCall":368,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":474,"org.easymock.tests.UsageCallCountTest.tooFewCalls":435,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":395,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":108,"org.easymock.tests.UsageThrowableTest.throwCheckedException":263,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":515,"org.easymock.tests.MockingTest.testStrictClassMocking":378,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":408,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":100,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":81,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":469,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":84,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":93,"org.easymock.tests.ObjectMethodsTest.testHashCode":502,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":522,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":172,"org.easymock.tests2.NameTest.nameForNiceMock":200,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":300,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":295,"org.easymock.tests2.DependencyTest.testInterfaceMocking":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":521,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":134,"org.easymock.tests2.DelegateToTest.testStubDelegate":37,"org.easymock.tests2.AnswerTest.stubAnswer":92,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":412,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":231,"org.easymock.tests.UsageVarargTest.varargLongAccepted":317,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":349,"org.easymock.tests.UsageExpectAndReturnTest.floatType":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":42,"org.easymock.tests2.ConstraintsToStringTest.orToString":507,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":448,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":64,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":216,"org.easymock.tests.UsageThrowableTest.noUpperLimit":260,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":45,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":73,"org.easymock.tests2.SerializationTest.test":33,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":23,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":277,"org.easymock.tests2.UsageConstraintsTest.testSame":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":240,"org.easymock.samples.SupportTest.addDocument":11,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":83,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":285,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":119,"org.easymock.tests.GenericTest.testPackageScope":419,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":215,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":385,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":283,"org.easymock.tests2.NameTest.nameForMock":198,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":251,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":533,"org.easymock.tests2.UsageStrictMockTest.differentMethods":178,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":160,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":243,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":491,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":500,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":391,"org.easymock.tests2.MockedExceptionTest.testRealException":222,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":275,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":354,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":516,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":353,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":473,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":471,"org.easymock.tests2.NameTest.nameForStrictMock":199,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":226,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":526,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":236,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":154,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":76,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":544,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":65,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":279,"org.easymock.tests.ErrorMessageTest.testGetters":545,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":224,"org.easymock.tests2.UsageStrictMockTest.range":177,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":289,"org.easymock.tests2.UsageConstraintsTest.lessThan":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":211,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":123,"org.easymock.tests2.CaptureTest.testCaptureRightOne":28,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":106,"org.easymock.tests2.UsageConstraintsTest.testOr":52,"org.easymock.tests.UsageRangeTest.combination":388,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":151,"org.easymock.tests.UsageTest.wrongArguments":367,"org.easymock.tests2.MockBuilderTest.testWithConstructor":530,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":120,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":341,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":281,"org.easymock.tests.UsageVarargTest.varargShortAccepted":316,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":438,"org.easymock.tests2.UsageConstraintsTest.cmpTo":57,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":303,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":90,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":343,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":143,"org.easymock.tests2.CaptureTest.testCaptureFromStub":29,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":461,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":225,"org.easymock.tests.UsageTest.unexpectedCallWithArray":366,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":299,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":436,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":549,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":253,"org.easymock.tests2.CaptureTest.testCapture":542,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":413,"org.easymock.tests2.UsageConstraintsTest.constraints":46,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests2.ConstraintsToStringTest.notToString":509,"org.easymock.tests.UsageStrictMockTest.testVerify":417,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":15,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":410,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":374,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":245,"org.easymock.tests.LimitationsTest.abstractClass":305,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":399,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":546,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":190,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":310}}]
