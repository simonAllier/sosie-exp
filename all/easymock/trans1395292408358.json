[{"position":"org.easymock.internal.RecordState:136","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[0,35,36,37,38,39,40,41,42,43,44,45,46,47,23,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[64,15],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[21,65,66,67,68,34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[35,40,41,42,46,47,48,69,52,53,55,56,57,58],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[70,71,72,73,74,75,76,0,77,35,36,78,37,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,39,122,123,124,125,126,127,128,129,130,2,3,131,132,4,5,6,7,133,134,135,136,8,137,9,10,138,11,12,139,140,141,142,143,13,14,15,144,145,146,147,148,149,150,43,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,46,169,170,23,171,48,49,172,173,174,175,176,177,178,24,25,179,180,26,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,65,66,213,214,215,216,217,218,67,219,220,221,222,223,224,68,225,226,227,228,27,28,29,30,31,32,229,230,231,232,233,234,235,236,237,238,239,240,241,51,52,53,242,243,244,54,245,246,247,33,34,248],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[249,250,16,16,17,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[35,40,41,42,46,47,48,69,52,53,55,56,57,58],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[101,251,252,151,253,254,255,256,257,179,258,259,260,261,262,263,264],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[265,266],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[93,267,97,249,268,269,270,271,250,272,273,274,275,16,17],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[276,277,47,278,279,55],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[93,267,280,281,282,283,284,97,270,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cstr":"classConstructor"}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"o","myArgument":"o"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[115,117],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[70,71,72,74,0,35,36,37,79,285,80,81,82,83,286,287,84,85,86,87,89,288,90,91,92,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,289,115,116,117,118,290,119,120,121,39,122,124,125,291,292,126,128,2,3,131,132,4,5,6,7,133,134,135,136,8,137,9,10,138,11,12,139,140,141,142,143,13,14,15,144,293,145,146,294,147,295,296,297,298,299,148,149,150,300,43,151,301,152,153,154,158,160,161,163,166,168,302,23,48,49,24,25,26,303,201,202,203,204,205,207,208,209,210,211,212,65,66,213,214,215,216,217,218,67,219,220,221,222,223,224,68,225,226,227,228,27,258,28,29,30,31,32,229,239,304,240,241,51,53,305,242,243,244,54,245,246,247,33,34,306],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[292,307,308,304,241],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[120,125,207,52,244,246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[309,310,311,312,313,314,70,71,72,315,316,73,74,75,317,76,0,77,35,36,78,318,319,320,321,322,37,323,324,325,326,327,328,79,285,80,81,82,83,286,287,84,85,86,87,88,89,288,90,91,92,93,267,94,95,329,96,97,98,99,100,101,102,103,104,105,106,107,108,330,331,38,332,109,110,111,112,289,113,114,115,116,117,118,1,290,119,120,121,39,40,122,123,124,125,291,41,42,292,126,333,127,128,129,334,130,2,3,131,132,335,4,5,6,7,133,134,336,135,136,8,137,9,10,138,11,12,139,140,141,142,143,13,14,15,337,338,339,340,341,144,293,145,146,294,147,342,343,295,249,344,345,296,297,298,346,347,348,299,349,350,148,351,149,150,271,352,300,353,354,355,356,357,358,43,359,360,361,362,363,364,251,252,151,253,365,366,367,301,368,369,152,370,371,372,373,374,375,376,377,378,153,379,380,381,382,383,154,384,385,155,156,157,158,159,160,161,162,163,386,164,16,16,17,17,165,166,167,168,387,44,388,389,45,390,391,392,393,394,395,396,397,46,398,399,400,401,402,403,404,307,405,406,407,408,409,410,411,18,19,20,21,22,254,255,256,265,302,169,412,266,413,414,415,416,417,418,419,420,421,170,47,23,171,48,49,172,422,423,424,425,426,427,173,174,175,176,428,177,178,429,430,431,432,433,434,435,257,436,437,438,439,440,441,442,443,444,308,445,446,447,448,449,450,24,25,179,180,26,303,451,452,453,454,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,455,456,201,457,50,458,459,460,202,203,461,204,462,463,464,205,206,207,208,209,210,211,212,65,66,213,214,215,216,217,218,67,219,220,221,222,223,224,68,225,226,227,228,27,258,465,466,467,468,469,470,471,472,28,29,30,31,32,229,230,231,473,232,233,474,234,235,236,237,238,239,304,240,241,51,52,53,475,305,242,243,244,54,55,56,245,246,57,58,247,476,477,478,479,59,60,480,481,61,482,483,484,62,33,34,485,486,487,488,489,306,490,248,259,260,261,262,263,264],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[80,85,387,389],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[101,251,252,151,253,254,255,256,257,179,258,259,260,261,262,263,264],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[109,111,112,289,113,114,115,117,491,118,1,119],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[123,138,294,404],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[109,111,118,131,132,5,7,133,336,139,13],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[492,276,493,494,495,496,0,35,36,39,46,23,48,49,279,497,69,51,52,53,54,59,60,486,489,306,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:772","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[134],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[37,43,155,167],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"position":"org.easymock.internal.RecordState:217","failures":[309,310,311,312,70,71,72,315,316,73,74,75,317,76,0,77,35,36,78,37,79,285,80,81,82,83,286,287,84,85,86,87,88,89,288,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,289,113,114,115,116,117,118,1,290,119,120,121,39,40,122,123,124,125,291,41,42,292,126,333,127,128,129,334,130,498,2,3,131,132,4,5,6,7,133,134,336,135,136,8,137,9,10,138,11,12,139,140,141,142,143,13,14,15,338,339,340,341,144,293,145,146,294,147,342,295,345,296,297,298,348,299,148,351,149,150,352,300,353,43,251,252,151,253,301,152,153,154,155,156,157,158,159,160,161,162,163,386,164,16,16,17,17,165,166,167,168,44,388,389,391,46,398,399,400,401,402,403,404,307,405,406,407,408,409,410,411,18,19,20,21,22,254,255,256,302,169,412,413,414,415,416,417,418,419,420,421,170,47,23,171,48,49,172,422,423,424,425,426,427,173,174,175,176,428,177,178,444,449,24,25,179,180,26,303,451,452,453,454,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,460,202,203,204,205,206,207,208,209,210,211,212,65,66,213,214,215,216,217,218,67,219,220,221,222,223,224,68,225,226,227,228,27,258,466,468,469,470,471,472,28,29,30,31,32,229,230,231,232,233,474,234,235,236,237,238,239,304,240,241,51,52,53,475,305,242,243,244,54,55,56,245,246,57,58,247,476,477,478,479,59,60,33,34,485,486,487,488,489,306,490,248,259,260,261,262,263,264],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[101,257,259,260,261,262,263,264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[392,396],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[495,131],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[70,71,0,35,36,91,93,102,103,104,105,106,107,108,128,144,293,145,146,294,147,295,296,297,298,299,148,149,150,300,301,152,153,154,158,160,161,163,166,168,18,19,20,21,23,48,49,24,201,202,203,204,65,66,213,214,215,216,67,219,221,222,223,68,225,226,227,228,28,29,30,31,32,239,304,240,241,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[499,134,9,15],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[109,110,111,112,289,113,114,115,116,117,118,1,290,119,500],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[501,109,111,112,289,113,114,115,117,491,118,1,119],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[93,267,280,281,282,283,284,97,270,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":132,"org.easymock.tests2.UsageTest.argumentsOrdered":42,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":244,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":438,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":123,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":167,"org.easymock.tests2.DelegateToTest.testReturnException":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":260,"org.easymock.tests.MockingTest.testPartialClassMocking":202,"org.easymock.tests.MockClassControlTest.testToString":415,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":337,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":181,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":152,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":71,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":280,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":134,"org.easymock.tests2.UsageTest.wrongArguments":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":24,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":478,"org.easymock.samples.ExampleTest.answerVsDelegate":159,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":483,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":463,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":146,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":85,"org.easymock.tests2.CaptureTest.testPrimitive":112,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":26,"org.easymock.tests.UsageTest.moreThanOneArgument":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":200,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":20,"org.easymock.tests.UsageTest.argumentsOrdered":58,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":303,"org.easymock.tests.UsageVarargTest.varargIntAccepted":231,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":28,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":348,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":363,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":32,"org.easymock.tests.ReplayStateInvalidUsageTest.times":405,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":37,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":63,"org.easymock.tests2.DependencyTest.testClassMocking":313,"org.easymock.tests2.AnswerTest.answer":72,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":312,"org.easymock.tests2.CaptureTest.testAnd":109,"org.easymock.tests2.UsageTest.strictResetToDefault":121,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":82,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":240,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":454,"org.easymock.tests2.DelegateToTest.testDelegate":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":196,"org.easymock.tests.LimitationsTest.mockFinalMethod":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":472,"org.easymock.tests2.DependencyTest.testClassMockingSupport":314,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":59,"org.easymock.tests2.CaptureTest.testCapture1_2446744":289,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":310,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":400,"org.easymock.tests.UsageThrowableTest.throwError":205,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":482,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":22,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":385,"org.easymock.samples.PartialClassMockTest.testGetArea":168,"org.easymock.tests.MockingTest.testInterfaceMocking":461,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":29,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":424,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":390,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":182,"org.easymock.tests2.UsageTest.niceToStrict":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":148,"org.easymock.tests2.MockBuilderTest.testCreateMock":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":325,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":190,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":276,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":83,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":426,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":476,"org.easymock.tests.UsageOverloadedMethodTest.overloading":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":383,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":488,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":9,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":221,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":305,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":137,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":117,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":473,"org.easymock.tests.MockClassControlTest.testEquals":419,"org.easymock.tests2.EasyMockSupportClassTest.testAll":301,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":470,"org.easymock.tests2.CaptureTest.testCaptureAll":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":311,"org.easymock.tests.MockNameTest.defaultName":50,"org.easymock.tests2.UsageConstraintsTest.testMatches":10,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":398,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":21,"org.easymock.samples.ExampleTest.voteForRemovals":163,"org.easymock.tests.UsageVarargTest.allKinds":238,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":471,"org.easymock.samples.BasicClassMockTest.testPrintContent":157,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":211,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":264,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":334,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":360,"org.easymock.tests2.UsageConstraintsTest.greaterThan":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":304,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":298,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":397,"org.easymock.samples.ExampleTest.voteForRemoval":160,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":288,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":346,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":342,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":120,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":248,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":80,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":259,"org.easymock.tests2.CaptureTest.testCaptureFirst":119,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":81,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":126,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":218,"org.easymock.tests2.UsageTest.moreThanOneArgument":39,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":91,"org.easymock.tests2.CaptureTest.testCapture2_2446744":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":445,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":300,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":237,"org.easymock.tests.GenericTest.testBridgedEquals":266,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":177,"org.easymock.tests.UsageExpectAndReturnTest.longType":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":468,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":79,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":199,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":475,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":142,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":18,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":255,"org.easymock.tests.UsageCallCountTest.tooManyCalls":178,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":327,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":186,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":210,"org.easymock.tests.MockingTest.testNiceClassMocking":464,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":103,"org.easymock.tests.MockingTest.testClassMocking":459,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":427,"org.easymock.tests2.UsageConstraintsTest.testContains":8,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":151,"org.easymock.tests2.UsageConstraintsTest.testFind":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":243,"org.easymock.tests.MockTypeTest.fromEasyMockClass":61,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":421,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":96,"org.easymock.tests.UsageExpectAndReturnTest.object":220,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":84,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":281,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":389,"org.easymock.tests.UsageTest.exactCallCountByLastCall":247,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":451,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":267,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":225,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":229,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":487,"org.easymock.tests.MockClassControlTest.testHashCode":418,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":355,"org.easymock.tests2.EasyMockSupportTest.testVerify":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":376,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":452,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":485,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":309,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":498,"org.easymock.tests.UsageVarargTest.varargCharAccepted":232,"org.easymock.tests2.CaptureTest.testCaptureMultiple":501,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":450,"org.easymock.tests2.UsageTest.openCallCountByLastCall":124,"org.easymock.tests.DefaultClassInstantiatorTest.object":391,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":87,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":409,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":44,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":377,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":354,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":417,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":187,"org.easymock.tests.CapturesMatcherTest.test":500,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":226,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":254,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":494,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":154,"org.easymock.tests2.UsageTest.resumeIfFailure":292,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":262,"org.easymock.tests2.StubTest.stubWithReturnValue":101,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":270,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":219,"org.easymock.tests2.SerializationTest.testAllMockedMethod":99,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":444,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":275,"org.easymock.samples.SupportTest.voteForRemovals":166,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":277,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":265,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":357,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":193,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":449,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":315,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":467,"org.easymock.tests.UsageExpectAndThrowTest.object":191,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":140,"org.easymock.tests2.DelegateToTest.testWrongClass":129,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":33,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":34,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests.UsageStrictMockTest.range":48,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":38,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":287,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":102,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":192,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":149,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":407,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":477,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":278,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":425,"org.easymock.tests2.CaptureTest.testCaptureNone":116,"org.easymock.tests.UsageUnorderedTest.message":46,"org.easymock.tests.UsageVerifyTest.twoReturns":53,"org.easymock.tests.UsageVarargTest.varargByteAccepted":236,"org.easymock.tests2.ThreadingTest.testThreadSafe":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":379,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":176,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":156,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":45,"org.easymock.tests2.CaptureTest.testCapture_2617107":111,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":447,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":180,"org.easymock.tests2.UsageConstraintsTest.any":135,"org.easymock.tests2.StubTest.stub":100,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":307,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":448,"org.easymock.tests.UsageExpectAndThrowTest.longType":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":261,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":395,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":404,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":77,"org.easymock.tests2.SerializationTest.testClass":97,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":43,"org.easymock.tests.LimitationsTest.mockNativeMethod":201,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":412,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":228,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":320,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":78,"org.easymock.tests2.NameTest.nameForMocksControl":341,"org.easymock.tests2.MockedExceptionTest.testMockedException":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":369,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":185,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":204,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":329,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":144,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":150,"org.easymock.tests.MockingTest.testNicePartialClassMocking":203,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":147,"org.easymock.tests2.CaptureTest.testCaptureLast":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":318,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":60,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":133,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":108,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":141,"org.easymock.tests.MockingTest.testTwoMocks":460,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":189,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":14,"org.easymock.samples.ExampleTest.removeNonExistingDocument":386,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":402,"org.easymock.tests.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":356,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":393,"org.easymock.tests2.ConstraintsToStringTest.andToString":495,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":90,"org.easymock.tests2.MockBuilderTest.testCreateMockString":353,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":413,"org.easymock.tests.UsageExpectAndThrowTest.floatType":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":370,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":73,"org.easymock.tests.UsageVerifyTest.twoThrows":52,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":153,"org.easymock.samples.ExampleTest.voteAgainstRemoval":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":423,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":297,"org.easymock.tests.LimitationsTest.privateConstructor":456,"org.easymock.tests2.UsageConstraintsTest.testNotNull":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":212,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":251,"org.easymock.tests2.UsageTest.defaultResetToNice":291,"org.easymock.samples.ExampleTest.voteAgainstRemovals":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":68,"org.easymock.tests.UsageVarargTest.differentLength":474,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":319,"org.easymock.tests2.CallbackTest.callback":94,"org.easymock.tests2.UsageConstraintsTest.equals":335,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":249,"org.easymock.tests.UsageTest.openCallCountByLastCall":245,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":179,"org.easymock.tests.UsageCallCountTest.tooFewCalls":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":105,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":479,"org.easymock.tests.UsageThrowableTest.throwCheckedException":209,"org.easymock.tests.MockingTest.testStrictClassMocking":458,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":279,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":107,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":258,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":323,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":406,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":106,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":75,"org.easymock.tests2.CompareToTest.testGreateOrEqual":499,"org.easymock.tests.ObjectMethodsTest.testHashCode":388,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":92,"org.easymock.tests2.NameTest.nameForNiceMock":340,"org.easymock.tests2.DependencyTest.testInterfaceMocking":70,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":282,"org.easymock.samples.ExampleTest.addDocument":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.DelegateToTest.testStubDelegate":128,"org.easymock.tests2.AnswerTest.stubAnswer":74,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":23,"org.easymock.tests.UsageVarargTest.varargLongAccepted":235,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndReturnTest.floatType":213,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":227,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":93,"org.easymock.tests2.ConstraintsToStringTest.orToString":492,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":489,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":12,"org.easymock.tests.UsageThrowableTest.noUpperLimit":206,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":362,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":3,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":330,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":113,"org.easymock.tests2.SerializationTest.test":98,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":392,"org.easymock.tests2.UsageConstraintsTest.testSame":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":66,"org.easymock.samples.SupportTest.addDocument":165,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":371,"org.easymock.tests.GenericTest.testPackageScope":302,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":361,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":462,"org.easymock.tests2.NameTest.nameForMock":338,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":222,"org.easymock.tests2.UsageStrictMockTest.differentMethods":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":272,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":344,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":215,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":195,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":387,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":241,"org.easymock.tests2.MockedExceptionTest.testRealException":253,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":332,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":497,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":441,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":408,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":25,"org.easymock.tests2.NameTest.nameForStrictMock":339,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":350,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":95,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":294,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":331,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":394,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":139,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":299,"org.easymock.tests2.UsageStrictMockTest.range":35,"org.easymock.tests2.UsageConstraintsTest.lessThan":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":436,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":283,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":285,"org.easymock.tests2.CaptureTest.testCaptureRightOne":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":375,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":239,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":293,"org.easymock.tests.UsageTest.wrongArguments":56,"org.easymock.tests2.MockBuilderTest.testWithConstructor":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":372,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":223,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":396,"org.easymock.tests.UsageVarargTest.varargShortAccepted":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":428,"org.easymock.tests2.UsageConstraintsTest.cmpTo":136,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":316,"org.easymock.tests2.CompareToTest.testLessThan":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":432,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":125,"org.easymock.tests2.CaptureTest.testCaptureFromStub":1,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":399,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":349,"org.easymock.tests.UsageTest.unexpectedCallWithArray":55,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":47,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":175,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":224,"org.easymock.tests2.CaptureTest.testCapture":491,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.tests2.UsageConstraintsTest.constraints":131,"org.easymock.samples.ExampleTest.addAndChangeDocument":164,"org.easymock.tests2.ConstraintsToStringTest.notToString":493,"org.easymock.tests.UsageStrictMockTest.testVerify":422,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":155,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":469,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":30,"org.easymock.tests.LimitationsTest.abstractClass":455,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":31,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":286}}]
