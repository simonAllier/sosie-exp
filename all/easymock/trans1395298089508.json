[{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,2,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[28,29,30,31,32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[33,6,7,8,9,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,10,96,11,12,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,28,187,29,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,13,14,213,214,215,216,217,15,16,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,2,18,313,19,20,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,30,31,348,32,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,21,5,22,448,449,23,24,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,25,26,27,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[77,78,79,80,304,352,353,354,355,356,357,371],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[295,299],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[440,473,481,483,484,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[171,172,489,200,490,491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[492,46,56,57,493],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[143,167,494],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[43,78,79,98,101,103,105,106,109,112,115,116,119,126,127,159,160,162,163,164,167,169,170,173,174,175,181,184,263,294,295,296,297,298,299,301,324,325,326,327,328,329,330,331,333,334,336,345,346,347,351,443,444,445,446,474,475],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.Range:36","failures":[33,6,7,8,9,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,10,96,11,12,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,495,496,497,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,28,187,29,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,13,14,213,214,215,216,217,15,16,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,498,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,2,18,313,19,20,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,30,31,348,32,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,21,5,22,448,449,23,24,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,25,26,27,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[309,310,368,369],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[148],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[246,252,259,260,266,338,353,375,381,388,389,442,465],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[41,43,77,78,79,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,159,160,162,163,164,165,167,168,169,170,171,172,173,174,175,181,182,183,184,28,187,194,196,197,199,200,201,202,204,206,207,208,210,499,500,263,294,295,296,297,298,299,301,324,326,327,328,329,330,331,332,333,334,335,336,345,346,347,30,31,32,351,358,363,443,444,445,446,471,474,475,477,479,479,480,480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","this":"this"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[11,501,19,26,27],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[0,1,188,2,18,3,4,352,5,22,448,449,23,24,450,451,452,453,454,455,456,457],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[11,12,14,15,16,502,498,2,19,20,503,504,437,5,22,23,24,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[10,11,12,160,162,164,170,173,2,18,19,20,315,5],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[307],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[342,343,429],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[234,236,237,238,453,482],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[492,45,46,47,48,49,50,51,52,53,54,505,55,56,57,58,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[420],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[34,36,41,42,45,46,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,70,77,78,79,80,81,87,10,11,12,101,104,114,120,123,130,131,132,133,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,167,171,172,173,176,177,178,179,180,181,182,183,184,186,28,187,188,189,192,193,196,200,202,204,208,211,212,13,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,302,303,304,305,306,307,308,309,310,18,19,20,316,317,318,319,320,321,322,323,333,335,337,338,339,340,341,343,30,31,32,352,353,354,355,356,357,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,406,429,435,437,438,439,440,441,442,445,447,21,448,449,450,451,453,454,456,458,459,460,25,26,27,473,477,479,479,480,480,481,482,483,484,486,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[204,358],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[506],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":133,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":447,"org.easymock.tests2.UsageTest.argumentsOrdered":16,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":423,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":214,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":476,"org.easymock.tests2.DelegateToTest.testReturnException":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":353,"org.easymock.tests.MockingTest.testPartialClassMocking":30,"org.easymock.tests.MockClassControlTest.testToString":326,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":33,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":108,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":104,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":243,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":17,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":193,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":140,"org.easymock.tests2.UsageTest.wrongArguments":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":302,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":241,"org.easymock.samples.ExampleTest.answerVsDelegate":482,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":363,"org.easymock.tests2.UsageConstraintsTest.testNull":136,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":350,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":162,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":229,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":331,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":499,"org.easymock.tests2.CaptureTest.testPrimitive":48,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":306,"org.easymock.tests.UsageTest.moreThanOneArgument":21,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":262,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":161,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":339,"org.easymock.tests.UsageTest.argumentsOrdered":24,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":267,"org.easymock.tests.UsageVarargTest.varargIntAccepted":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":438,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":194,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":92,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":442,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":70,"org.easymock.tests.ReplayStateInvalidUsageTest.times":289,"org.easymock.tests2.DependencyTest.testClassMocking":190,"org.easymock.tests2.AnswerTest.answer":59,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":430,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":40,"org.easymock.tests2.CaptureTest.testAnd":45,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":360,"org.easymock.tests2.UsageTest.strictResetToDefault":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":170,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":224,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":276,"org.easymock.tests2.DelegateToTest.testDelegate":238,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":271,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":258,"org.easymock.tests.LimitationsTest.mockFinalMethod":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":356,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":465,"org.easymock.tests2.DependencyTest.testClassMockingSupport":191,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":342,"org.easymock.tests2.CaptureTest.testCapture1_2446744":49,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":166,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":38,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":283,"org.easymock.tests.UsageThrowableTest.throwError":316,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":362,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":498,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":122,"org.easymock.samples.PartialClassMockTest.testGetArea":477,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":284,"org.easymock.tests.MockingTest.testInterfaceMocking":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":439,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":265,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":109,"org.easymock.tests2.UsageTest.niceToStrict":213,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":200,"org.easymock.tests2.MockBuilderTest.testCreateMock":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":117,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":73,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":252,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":225,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":359,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":369,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":404,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":239,"org.easymock.tests.UsageOverloadedMethodTest.overloading":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":113,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":454,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":146,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":458,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":383,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":145,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":54,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":395,"org.easymock.tests2.EasyMockSupportClassTest.testAll":101,"org.easymock.tests.MockClassControlTest.testEquals":330,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":260,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":490,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":463,"org.easymock.tests2.CaptureTest.testCaptureAll":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":39,"org.easymock.tests.MockNameTest.defaultName":366,"org.easymock.tests2.UsageConstraintsTest.testMatches":147,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":340,"org.easymock.samples.ExampleTest.voteForRemovals":486,"org.easymock.tests.UsageVarargTest.allKinds":403,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":25,"org.easymock.samples.BasicClassMockTest.testPrintContent":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":464,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":322,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":89,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":357,"org.easymock.tests2.UsageConstraintsTest.greaterThan":149,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":275,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":173,"org.easymock.samples.ExampleTest.voteForRemoval":483,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":301,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":177,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":174,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":364,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":497,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":165,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":211,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":263,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":222,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":352,"org.easymock.tests2.CaptureTest.testCaptureFirst":58,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":223,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":219,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":457,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":379,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":179,"org.easymock.tests2.UsageTest.moreThanOneArgument":13,"org.easymock.tests2.CaptureTest.testCapture2_2446744":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":431,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":208,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":402,"org.easymock.tests.GenericTest.testBridgedEquals":336,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":411,"org.easymock.tests.UsageExpectAndReturnTest.longType":375,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":461,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":220,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":261,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":154,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":259,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":309,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":337,"org.easymock.tests.UsageCallCountTest.tooManyCalls":412,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":380,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":321,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":182,"org.easymock.tests.MockingTest.testNiceClassMocking":351,"org.easymock.tests.MockingTest.testClassMocking":346,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":489,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":405,"org.easymock.tests2.UsageConstraintsTest.testContains":144,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":79,"org.easymock.tests2.UsageConstraintsTest.testFind":135,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":460,"org.easymock.tests.MockTypeTest.fromEasyMockClass":361,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":36,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":311,"org.easymock.tests.UsageExpectAndReturnTest.object":382,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":228,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":397,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":469,"org.easymock.tests.UsageTest.exactCallCountByLastCall":450,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":268,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":124,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":388,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":83,"org.easymock.tests.MockClassControlTest.testHashCode":329,"org.easymock.tests2.EasyMockSupportTest.testVerify":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":111,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":269,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":451,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":368,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":503,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":37,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":44,"org.easymock.tests.UsageVarargTest.varargCharAccepted":396,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":293,"org.easymock.tests2.CaptureTest.testCaptureMultiple":492,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":436,"org.easymock.tests2.UsageTest.openCallCountByLastCall":215,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":231,"org.easymock.tests.DefaultClassInstantiatorTest.object":294,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":367,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":467,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":250,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":500,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":68,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":171,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":249,"org.easymock.tests.CapturesMatcherTest.test":493,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":389,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":120,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":327,"org.easymock.tests2.UsageTest.resumeIfFailure":218,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":495,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":355,"org.easymock.tests2.StubTest.stubWithReturnValue":189,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":203,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":155,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":381,"org.easymock.tests2.SerializationTest.testAllMockedMethod":43,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":429,"org.easymock.samples.SupportTest.voteForRemovals":473,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":255,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":435,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":60,"org.easymock.tests.UsageExpectAndThrowTest.object":253,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":280,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":152,"org.easymock.tests2.DelegateToTest.testWrongClass":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":273,"org.easymock.samples.ConstructorCalledMockTest.testTax":479,"org.easymock.tests.UsageStrictMockTest.range":19,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":128,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":254,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":98,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":23,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests2.CaptureTest.testCaptureNone":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":266,"org.easymock.tests.UsageUnorderedTest.message":437,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":502,"org.easymock.tests.UsageVerifyTest.twoReturns":27,"org.easymock.tests.UsageVarargTest.varargByteAccepted":401,"org.easymock.tests2.ThreadingTest.testThreadSafe":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":115,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":409,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":474,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":470,"org.easymock.tests2.CaptureTest.testCapture_2617107":47,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":433,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":305,"org.easymock.tests2.UsageConstraintsTest.any":142,"org.easymock.tests2.StubTest.stub":188,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndThrowTest.longType":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":354,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":298,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":287,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":96,"org.easymock.tests2.SerializationTest.testClass":41,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":87,"org.easymock.tests.LimitationsTest.mockNativeMethod":445,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":391,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":335,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":491,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":67,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.tests2.NameTest.nameForMocksControl":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":69,"org.easymock.tests2.MockedExceptionTest.testMockedException":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":103,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":449,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":35,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":32,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":247,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":159,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":204,"org.easymock.tests.MockingTest.testNicePartialClassMocking":31,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":164,"org.easymock.tests2.CompareToTest.testCompareEqual":494,"org.easymock.tests2.CaptureTest.testCaptureLast":52,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":65,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":343,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":187,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":139,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":153,"org.easymock.tests.MockingTest.testTwoMocks":347,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":372,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":251,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":157,"org.easymock.samples.ExampleTest.removeNonExistingDocument":487,"org.easymock.tests.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":72,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":285,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":84,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":296,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":178,"org.easymock.tests2.MockBuilderTest.testCreateMockString":210,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":105,"org.easymock.tests.UsageExpectAndThrowTest.floatType":245,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":100,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":62,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":125,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":114,"org.easymock.samples.ExampleTest.voteAgainstRemoval":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":264,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":172,"org.easymock.tests.LimitationsTest.privateConstructor":444,"org.easymock.tests2.UsageConstraintsTest.testNotNull":156,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":77,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":323,"org.easymock.tests2.UsageTest.defaultResetToNice":217,"org.easymock.samples.ExampleTest.voteAgainstRemovals":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":387,"org.easymock.tests.UsageVarargTest.differentLength":398,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":66,"org.easymock.tests2.CallbackTest.callback":81,"org.easymock.tests2.UsageConstraintsTest.equals":134,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":168,"org.easymock.tests.UsageTest.openCallCountByLastCall":448,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":304,"org.easymock.tests.UsageCallCountTest.tooFewCalls":407,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":242,"org.easymock.tests.UsageThrowableTest.throwCheckedException":320,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests.MockingTest.testStrictClassMocking":345,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":28,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":371,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":71,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":290,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":186,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":64,"org.easymock.tests.ObjectMethodsTest.testHashCode":468,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":180,"org.easymock.tests2.NameTest.nameForNiceMock":8,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.samples.ExampleTest.addDocument":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":121,"org.easymock.tests2.DelegateToTest.testStubDelegate":235,"org.easymock.tests2.AnswerTest.stubAnswer":63,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":18,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":205,"org.easymock.tests.UsageVarargTest.varargLongAccepted":400,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":390,"org.easymock.tests.UsageExpectAndReturnTest.floatType":374,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":123,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":480,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":455,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":91,"org.easymock.tests.UsageThrowableTest.noUpperLimit":317,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":131,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":126,"org.easymock.tests2.SerializationTest.test":42,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":50,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":295,"org.easymock.tests2.UsageConstraintsTest.testSame":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":373,"org.easymock.samples.SupportTest.addDocument":472,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":185,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":106,"org.easymock.tests.GenericTest.testPackageScope":333,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":90,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":349,"org.easymock.tests2.NameTest.nameForMock":6,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":384,"org.easymock.tests2.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":209,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":169,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":376,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":257,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":466,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":277,"org.easymock.tests2.MockedExceptionTest.testRealException":80,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":426,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":292,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":303,"org.easymock.tests2.NameTest.nameForStrictMock":7,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":199,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":163,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":127,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":151,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":297,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":196,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests2.UsageConstraintsTest.lessThan":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":110,"org.easymock.tests2.CaptureTest.testCaptureRightOne":55,"org.easymock.tests2.UsageConstraintsTest.testOr":138,"org.easymock.tests.UsageRangeTest.combination":274,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":160,"org.easymock.tests.UsageTest.wrongArguments":22,"org.easymock.tests2.MockBuilderTest.testWithConstructor":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":107,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":385,"org.easymock.tests.UsageVarargTest.varargShortAccepted":399,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":299,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":410,"org.easymock.tests2.UsageConstraintsTest.cmpTo":143,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":216,"org.easymock.tests2.CaptureTest.testCaptureFromStub":56,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":282,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":197,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":408,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":506,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":386,"org.easymock.tests2.CaptureTest.testCapture":505,"org.easymock.tests2.UsageConstraintsTest.constraints":132,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":313,"org.easymock.samples.ExampleTest.addAndChangeDocument":488,"org.easymock.tests.UsageStrictMockTest.testVerify":315,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":478,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":312,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":462,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":440,"org.easymock.tests.LimitationsTest.abstractClass":443,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":378,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":441,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":501,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":226}}]
