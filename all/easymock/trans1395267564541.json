[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[26,27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[30,31,31,32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,0,1,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,8,102,9,2,3,4,5,103,104,105,106,107,108,6,7,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,10,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,11,151,152,153,154,155,12,13,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,14,15,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,26,324,325,27,326,327,28,29,328,329,330,331,332,333,334,335,16,17,336,337,18,19,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,20,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,21,22,459,460,461,462,463,464,465,466,467,468,469,470,471,23,472,473,24,25,474,475,476,477,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[48,98,100,479,480,481,482,483,244],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[11,12,13,14,484,485,16,17,18,19,20,21,22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[417,422,448],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[132,133,134,135,148,154,187,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,325,334,337,360,361,363,365,367,368,369,370,371,372,380,431,432,452,453,454,455,456,457,21],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[177,179,233,323,324],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[486,58,75,81],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[60,74,91,101,8,9,112,123,125,148,11,151,152,12,13,156,157,162,196,200,201,204,239,242,14,15,487,488,489,485,330,334,16,17,18,19,338,20,411,21,22,465,466,467,470,23,473,24,25],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[11,12,13,14,327,485,16,17,18,19,20,21,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[82],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[55,57,58,59,60,61,63,64,65,66,0,1,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,2,3,4,5,103,104,105,106,107,108,6,7,109,110,119,122,130,163,169,241,242,20,359,362,363,365,416,417,429,430,431,432,433,438,439,440,441,442,456,457,468,469,23,472],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[342,399],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[176,178,391],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[490,491,492,493,16,23],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[2,4,5,103,104,105,106,108,494,6,7,110],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[107],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[30,31,31,32,32,42,43,47,89,495,91,92,95,96,97,99,101,8,496,9,111,112,114,115,116,117,119,122,123,124,125,134,188,189,190,191,193,194,497,498,499,211,214,224,230,244,246,292,293,294,296,317,320,339,374,375,376,418,427],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:58","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[244,245,246,500],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[340],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[501,3,109,110,502],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[99,317],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[234,235],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[48,98,100,479,480,481,482,483,244],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[308,393,397],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[244,245,246,500],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":61,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":334,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":205,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":391,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":152,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":41,"org.easymock.tests2.DelegateToTest.testReturnException":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":453,"org.easymock.tests.MockingTest.testPartialClassMocking":293,"org.easymock.tests.MockClassControlTest.testToString":419,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":50,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":218,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":214,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":247,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":161,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":479,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":429,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":436,"org.easymock.samples.ExampleTest.answerVsDelegate":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":320,"org.easymock.tests2.UsageConstraintsTest.testNull":64,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":298,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":114,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":424,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":204,"org.easymock.tests2.CaptureTest.testPrimitive":5,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":433,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":266,"org.easymock.tests.UsageTest.moreThanOneArgument":335,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":314,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":340,"org.easymock.tests.UsageVarargTest.varargIntAccepted":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":438,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":483,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":146,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":442,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":169,"org.easymock.tests.ReplayStateInvalidUsageTest.times":308,"org.easymock.tests2.DependencyTest.testClassMocking":158,"org.easymock.tests2.AnswerTest.answer":233,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":88,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":332,"org.easymock.tests2.DelegateToTest.testDelegate":181,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":344,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":262,"org.easymock.tests.LimitationsTest.mockFinalMethod":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":456,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":349,"org.easymock.tests2.DependencyTest.testClassMockingSupport":159,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":28,"org.easymock.tests2.CaptureTest.testCapture1_2446744":103,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":86,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":302,"org.easymock.tests.UsageThrowableTest.throwError":365,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":319,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":488,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":232,"org.easymock.samples.PartialClassMockTest.testGetArea":30,"org.easymock.tests.MockingTest.testInterfaceMocking":295,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":303,"org.easymock.tests2.CompareToTest.testLessOrEqual":486,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":439,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":477,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":451,"org.easymock.tests2.UsageTest.niceToStrict":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":95,"org.easymock.tests2.MockBuilderTest.testCreateMock":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":227,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":172,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":490,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":256,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":200,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":459,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":434,"org.easymock.tests.UsageOverloadedMethodTest.overloading":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":229,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":72,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":281,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":378,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":71,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":108,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":408,"org.easymock.tests.MockClassControlTest.testEquals":423,"org.easymock.tests2.EasyMockSupportClassTest.testAll":211,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":264,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":497,"org.easymock.tests2.CaptureTest.testCaptureAll":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":347,"org.easymock.tests.MockNameTest.defaultName":364,"org.easymock.tests2.UsageConstraintsTest.testMatches":73,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":315,"org.easymock.samples.ExampleTest.voteForRemovals":38,"org.easymock.tests.UsageVarargTest.allKinds":416,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":458,"org.easymock.samples.BasicClassMockTest.testPrintContent":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":348,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":371,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":457,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":143,"org.easymock.tests2.UsageConstraintsTest.greaterThan":75,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":212,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":331,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":125,"org.easymock.samples.ExampleTest.voteForRemoval":35,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":358,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":129,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":126,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":321,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":117,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":148,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":339,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":197,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":452,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":176,"org.easymock.tests2.CaptureTest.testCaptureFirst":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":198,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":277,"org.easymock.tests2.UsageTest.moreThanOneArgument":150,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":130,"org.easymock.tests2.CaptureTest.testCapture2_2446744":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":399,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":8,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":415,"org.easymock.tests.GenericTest.testBridgedEquals":377,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":466,"org.easymock.tests.UsageExpectAndReturnTest.longType":273,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":345,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":496,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":265,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":80,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":329,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":312,"org.easymock.tests.UsageCallCountTest.tooManyCalls":467,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":228,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":174,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":252,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":370,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":189,"org.easymock.tests.MockingTest.testNiceClassMocking":299,"org.easymock.tests.MockingTest.testClassMocking":291,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":495,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":460,"org.easymock.tests2.UsageConstraintsTest.testContains":70,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":134,"org.easymock.tests2.UsageConstraintsTest.testFind":63,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":380,"org.easymock.tests.MockTypeTest.fromEasyMockClass":318,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":470,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":57,"org.easymock.tests.UsageExpectAndReturnTest.object":280,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":480,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":410,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":449,"org.easymock.tests.UsageTest.exactCallCountByLastCall":338,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":443,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":341,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":48,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":405,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":286,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":324,"org.easymock.tests.MockClassControlTest.testHashCode":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":137,"org.easymock.tests2.EasyMockSupportTest.testVerify":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":221,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":342,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":360,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":489,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":85,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":163,"org.easymock.tests.UsageVarargTest.varargCharAccepted":409,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":350,"org.easymock.tests2.CaptureTest.testCaptureMultiple":501,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":404,"org.easymock.tests2.UsageTest.openCallCountByLastCall":153,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":206,"org.easymock.tests.DefaultClassInstantiatorTest.object":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":359,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":447,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":368,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":167,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":136,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":421,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":253,"org.easymock.tests.CapturesMatcherTest.test":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":267,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":230,"org.easymock.tests2.UsageTest.resumeIfFailure":156,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":455,"org.easymock.tests2.StubTest.stubWithReturnValue":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":98,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":81,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":279,"org.easymock.tests2.SerializationTest.testAllMockedMethod":246,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":397,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":491,"org.easymock.samples.SupportTest.voteForRemovals":46,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":373,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":259,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":500,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":403,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":234,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":445,"org.easymock.tests.UsageExpectAndThrowTest.object":257,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":78,"org.easymock.tests2.DelegateToTest.testWrongClass":179,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":468,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":469,"org.easymock.samples.ConstructorCalledMockTest.testTax":31,"org.easymock.tests.UsageStrictMockTest.range":24,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":184,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":188,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":258,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":97,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":208,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":435,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":492,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":478,"org.easymock.tests2.CaptureTest.testCaptureNone":107,"org.easymock.tests.UsageUnorderedTest.message":20,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":487,"org.easymock.tests.UsageVerifyTest.twoReturns":22,"org.easymock.tests.UsageVarargTest.varargByteAccepted":414,"org.easymock.tests2.ThreadingTest.testThreadSafe":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":225,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":464,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":450,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":42,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":401,"org.easymock.tests2.UsageConstraintsTest.any":68,"org.easymock.tests2.StubTest.stub":186,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":307,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndThrowTest.longType":250,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":355,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":306,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":242,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests2.SerializationTest.testClass":244,"org.easymock.tests.LimitationsTest.mockNativeMethod":427,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":289,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":376,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":499,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":166,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":243,"org.easymock.tests2.NameTest.nameForMocksControl":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":168,"org.easymock.tests2.MockedExceptionTest.testMockedException":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":213,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":337,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":251,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":296,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":111,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":99,"org.easymock.tests.MockingTest.testNicePartialClassMocking":294,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":116,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":164,"org.easymock.tests2.CaptureTest.testCaptureLast":106,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":29,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":194,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":79,"org.easymock.tests.MockingTest.testTwoMocks":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":255,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":83,"org.easymock.samples.ExampleTest.removeNonExistingDocument":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":171,"org.easymock.tests.UsageStrictMockTest.differentMethods":25,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":304,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":138,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":353,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":10,"org.easymock.tests2.MockBuilderTest.testCreateMockString":9,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":215,"org.easymock.tests.UsageExpectAndThrowTest.floatType":249,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":210,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":236,"org.easymock.tests.UsageVerifyTest.twoThrows":21,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":49,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":224,"org.easymock.samples.ExampleTest.voteAgainstRemoval":36,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":392,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":124,"org.easymock.tests.LimitationsTest.privateConstructor":426,"org.easymock.tests2.UsageConstraintsTest.testNotNull":82,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":132,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":372,"org.easymock.tests2.UsageTest.defaultResetToNice":155,"org.easymock.samples.ExampleTest.voteAgainstRemovals":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":285,"org.easymock.tests.UsageVarargTest.differentLength":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":165,"org.easymock.tests2.CallbackTest.callback":162,"org.easymock.tests2.UsageConstraintsTest.equals":62,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":120,"org.easymock.tests.UsageTest.openCallCountByLastCall":336,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":431,"org.easymock.tests.UsageCallCountTest.tooFewCalls":462,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":437,"org.easymock.tests.UsageThrowableTest.throwCheckedException":369,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":493,"org.easymock.tests.MockingTest.testStrictClassMocking":290,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":193,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":363,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":190,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":170,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":309,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":192,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":238,"org.easymock.tests.ObjectMethodsTest.testHashCode":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":482,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":131,"org.easymock.tests2.NameTest.nameForNiceMock":53,"org.easymock.tests2.DependencyTest.testInterfaceMocking":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":481,"org.easymock.samples.ExampleTest.addDocument":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":226,"org.easymock.tests2.DelegateToTest.testStubDelegate":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":231,"org.easymock.tests2.AnswerTest.stubAnswer":237,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":472,"org.easymock.tests.UsageVarargTest.varargLongAccepted":413,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndReturnTest.floatType":272,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":288,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":47,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":145,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":27,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":76,"org.easymock.tests.UsageThrowableTest.noUpperLimit":366,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":59,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":182,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":104,"org.easymock.tests2.SerializationTest.test":245,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":352,"org.easymock.tests2.UsageConstraintsTest.testSame":65,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":271,"org.easymock.samples.SupportTest.addDocument":45,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":216,"org.easymock.tests.GenericTest.testPackageScope":374,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":144,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":297,"org.easymock.tests2.NameTest.nameForMock":51,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":282,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":102,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":121,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":274,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":261,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":446,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":333,"org.easymock.tests2.MockedExceptionTest.testRealException":135,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":185,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":394,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":430,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":311,"org.easymock.tests2.NameTest.nameForStrictMock":52,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":94,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":115,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":183,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":77,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":354,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":91,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":196,"org.easymock.tests2.CaptureTest.testCaptureRightOne":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":220,"org.easymock.tests2.UsageConstraintsTest.testOr":66,"org.easymock.tests.UsageRangeTest.combination":330,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":112,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests2.MockBuilderTest.testWithConstructor":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":217,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":382,"org.easymock.tests.UsageVarargTest.varargShortAccepted":412,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":356,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":465,"org.easymock.tests2.UsageConstraintsTest.cmpTo":69,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":384,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":154,"org.easymock.tests2.CaptureTest.testCaptureFromStub":7,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":301,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":92,"org.easymock.tests.UsageTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":463,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":284,"org.easymock.tests2.CaptureTest.testCapture":494,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":473,"org.easymock.tests2.UsageConstraintsTest.constraints":60,"org.easymock.samples.ExampleTest.addAndChangeDocument":40,"org.easymock.tests.UsageStrictMockTest.testVerify":475,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":44,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":471,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":346,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":105,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":498,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":440,"org.easymock.tests.LimitationsTest.abstractClass":425,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":441,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":201}}]
