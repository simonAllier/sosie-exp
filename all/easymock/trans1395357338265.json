[{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[98,99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return this.java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,38,122,123,124,125,126,127,128,129,130,131,132,45,133,46,47,134,135,136,137,138,139,140,141,142,143,144,52,54,145,146,147,148,149,150,151,152,153,154,59,67,70,73,155,156,75,157,76,77,158],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"name"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[159,160],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[161,162],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[163,164,165],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[166,167,168,169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,170,171,9,172,173,174,175,108,109,176,177,114,178,179,180,181,182,183,184,185,14,15,16,17,18,19,20,21,22,186,187,23,24,188,25,26,27,189,28,29,30,31,32,33,34,35,36,37,115,117,38,39,40,41,42,190,191,43,44,129,45,46,47,192,193,194,195,196,197,198,199,200,138,201,202,203,139,204,205,206,140,207,208,209,210,211,141,212,213,214,215,216,217,218,219,220,221,99,222,223,142,224,225,226,227,228,229,230,231,232,143,233,234,159,48,235,144,84,85,87,88,91,236,92,94,96,97,49,50,163,164,51,52,53,54,55,56,146,237,147,149,238,239,240,153,154,57,241,168,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,242,75,76,77,78,79,80,81],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[194],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[212,217,226],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[243,163,164,165],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[244],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[245,109,111,112,113,115,116,117,132,45,46,47,147,148,151,152,246,247,248,249,75,76,77],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[163,164,165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[250,251,252,253,254,255],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs","constructor":"constructor"}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[256],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[257,108,116,258,146,242],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":212,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":108,"org.easymock.tests2.UsageTest.argumentsOrdered":152,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":207,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":150,"org.easymock.tests2.StubTest.stubWithReturnValue":242,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":229,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":24,"org.easymock.tests2.SerializationTest.testAllMockedMethod":165,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":244,"org.easymock.tests.MockingTest.testPartialClassMocking":14,"org.easymock.samples.SupportTest.voteForRemovals":4,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":161,"org.easymock.tests.MockClassControlTest.testToString":119,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":175,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":243,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":79,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":167,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":245,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":227,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":50,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":43,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":44,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":42,"org.easymock.tests2.UsageTest.wrongArguments":148,"org.easymock.samples.ConstructorCalledMockTest.testTax":250,"org.easymock.tests.UsageStrictMockTest.range":46,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":205,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":68,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":125,"org.easymock.tests2.UsageConstraintsTest.testNull":214,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":54,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":140,"org.easymock.tests2.CaptureTest.testPrimitive":87,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":191,"org.easymock.tests.UsageTest.moreThanOneArgument":109,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":112,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":12,"org.easymock.tests2.CaptureTest.testCaptureNone":236,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":194,"org.easymock.tests.UsageUnorderedTest.message":106,"org.easymock.tests.UsageVerifyTest.twoReturns":117,"org.easymock.tests2.ThreadingTest.testThreadSafe":233,"org.easymock.tests.UsageTest.argumentsOrdered":113,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":136,"org.easymock.tests2.CaptureTest.testCapture_2617107":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":197,"org.easymock.tests2.UsageConstraintsTest.any":219,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":198,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":2,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests2.SerializationTest.testClass":163,"org.easymock.tests.LimitationsTest.mockNativeMethod":9,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":144,"org.easymock.tests2.AnswerTest.answer":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":32,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":171,"org.easymock.tests2.CaptureTest.testAnd":84,"org.easymock.tests2.UsageTest.strictResetToDefault":237,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests2.NameTest.nameForMocksControl":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":203,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":40,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":16,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":55,"org.easymock.tests.MockingTest.testNicePartialClassMocking":15,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":63,"org.easymock.tests2.CaptureTest.testCaptureLast":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":257,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":123,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":217,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":74,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":228,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":122,"org.easymock.tests2.CaptureTest.testCapture1_2446744":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":17,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":151,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":231,"org.easymock.tests.UsageThrowableTest.throwError":179,"org.easymock.tests.UsageStrictMockTest.differentMethods":47,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":159,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":142,"org.easymock.tests.UsageVerifyTest.twoThrows":116,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":80,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":34,"org.easymock.samples.ExampleTest.voteAgainstRemoval":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":196,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":193,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":192,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":66,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":137,"org.easymock.tests2.UsageTest.niceToStrict":149,"org.easymock.tests2.UsageConstraintsTest.testNotNull":230,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":185,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":53,"org.easymock.tests2.UsageTest.defaultResetToNice":240,"org.easymock.tests2.MockBuilderTest.testCreateMock":145,"org.easymock.samples.ExampleTest.voteAgainstRemovals":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":28,"org.easymock.tests.UsageVarargTest.differentLength":118,"org.easymock.tests2.CallbackTest.callback":155,"org.easymock.tests2.UsageConstraintsTest.equals":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":255,"org.easymock.tests.UsageTest.openCallCountByLastCall":176,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":139,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":210,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":100,"org.easymock.tests.UsageCallCountTest.tooFewCalls":102,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":222,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":71,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":25,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":172,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":99,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":92,"org.easymock.tests.UsageThrowableTest.throwCheckedException":182,"org.easymock.tests2.EasyMockSupportClassTest.testAll":78,"org.easymock.tests2.CaptureTest.testCaptureAll":85,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":73,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":70,"org.easymock.tests.MockNameTest.defaultName":107,"org.easymock.tests2.UsageConstraintsTest.testMatches":223,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":72,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":13,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests2.NameTest.nameForNiceMock":248,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":235,"org.easymock.tests.UsageVarargTest.allKinds":98,"org.easymock.tests2.DependencyTest.testInterfaceMocking":49,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":115,"org.easymock.tests2.DelegateToTest.testStubDelegate":51,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":184,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":156,"org.easymock.tests2.AnswerTest.stubAnswer":168,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":45,"org.easymock.tests2.UsageConstraintsTest.greaterThan":224,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":39,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":195,"org.easymock.samples.ExampleTest.voteForRemoval":6,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":234,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":160,"org.easymock.tests.UsageExpectAndReturnTest.floatType":19,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":31,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":57,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":251,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":225,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":128,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":211,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":146,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":89,"org.easymock.tests2.SerializationTest.test":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":201,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":180,"org.easymock.tests2.UsageConstraintsTest.testSame":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":18,"org.easymock.tests2.CaptureTest.testCaptureFirst":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":202,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":154,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":130,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":187,"org.easymock.tests.GenericTest.testPackageScope":170,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":48,"org.easymock.tests2.CaptureTest.testCapture2_2446744":96,"org.easymock.tests2.UsageTest.moreThanOneArgument":147,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":56,"org.easymock.tests.GenericTest.testBridgedEquals":162,"org.easymock.tests2.NameTest.nameForMock":246,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":104,"org.easymock.tests.UsageExpectAndReturnTest.longType":20,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":26,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":254,"org.easymock.tests2.UsageStrictMockTest.differentMethods":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":10,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":21,"org.easymock.tests.UsageCallCountTest.tooManyCalls":105,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":0,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":41,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":23,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":126,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":183,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":190,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":69,"org.easymock.tests2.NameTest.nameForStrictMock":247,"org.easymock.tests2.UsageConstraintsTest.testContains":221,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":209,"org.easymock.tests2.UsageConstraintsTest.testFind":213,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":62,"org.easymock.tests.MockTypeTest.fromEasyMockClass":124,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":131,"org.easymock.tests.UsageExpectAndReturnTest.object":188,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":52,"org.easymock.tests2.UsageStrictMockTest.range":76,"org.easymock.tests2.UsageConstraintsTest.lessThan":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":206,"org.easymock.tests.UsageTest.exactCallCountByLastCall":114,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":178,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":138,"org.easymock.tests2.CaptureTest.testCaptureRightOne":94,"org.easymock.tests2.UsageConstraintsTest.testOr":216,"org.easymock.tests.UsageRangeTest.combination":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":59,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":29,"org.easymock.tests.UsageTest.wrongArguments":111,"org.easymock.tests2.MockBuilderTest.testWithConstructor":252,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":22,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":27,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":1,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":103,"org.easymock.tests2.UsageConstraintsTest.cmpTo":220,"org.easymock.tests2.CaptureTest.testCaptureMultiple":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":199,"org.easymock.tests2.UsageTest.openCallCountByLastCall":238,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":239,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":208,"org.easymock.tests2.CaptureTest.testCaptureFromStub":95,"org.easymock.tests.UsageTest.unexpectedCallWithArray":110,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":135,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":132,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":181,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":253,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":189,"org.easymock.tests2.CaptureTest.testCapture":93,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":65,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":121,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":133,"org.easymock.tests2.UsageConstraintsTest.constraints":141,"org.easymock.tests.CapturesMatcherTest.test":82,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":81,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":120,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":90,"org.easymock.tests2.UsageTest.resumeIfFailure":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":36,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":129,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":204}}]
