[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[5,6,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,5,30,31,32,33,6,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,7,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[63,64,65,66],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[67,68,69,0,1,2,70,12,71,72,73,74,75,76,13,77,78,79,80,63,64,81,82,83,84,85,86,87,88,89,90,91,17,92,93,94,95,96,97,98,99,100,101,18,102,103,19,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,20,24,152,153,154,155,156,157,158,159,160,4,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"suffix"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[67,238,68,239,240,8,69,0,9,1,2,10,70,11,12,71,72,73,74,75,76,13,77,78,79,80,14,63,64,65,81,82,83,84,85,86,15,87,16,88,89,90,91,17,241,92,242,243,244,245,93,246,94,95,247,96,97,98,248,99,249,100,101,18,250,251,102,103,19,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,252,253,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,254,255,146,147,148,149,256,150,151,20,21,22,23,24,152,153,154,155,156,157,158,25,26,159,257,258,160,259,260,261,4,262,263,161,162,264,163,164,265,165,266,267,268,269,270,271,272,29,273,274,166,167,275,276,277,278,279,280,281,282,36,169,170,171,172,173,174,175,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,181,304,182,183,184,185,186,187,188,189,190,305,306,307,191,308,192,193,309,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,217,218,51,310,219,220,311,312,221,313,222,224,225,226,227,314,315,228,229,316,317,318,319,320,321,54,55,56,57,58,59,60,61,62,231,232,233,234,322,235,236,237,323,324,325,326,327,328,329,330,331,332,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[63,64,65,66],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[105,112,117,129],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[5,6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return this.org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[67,334,335,238,68,239,240,69,0,1,2,10,70,11,12,71,72,73,74,75,76,13,77,78,79,80,63,64,81,82,83,84,85,86,87,88,89,90,91,17,336,241,92,242,337,243,244,93,246,94,95,96,97,98,248,99,249,100,101,18,250,251,102,103,19,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,252,253,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,256,150,151,24,152,153,154,155,156,157,158,25,26,159,257,258,160,259,259,260,260,4,161,162,264,163,164,165,266,269,29,273,274,166,167,275,276,277,278,279,280,281,282,168,169,170,171,172,173,174,175,338,339,340,341,342,343,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,181,304,182,183,184,185,186,187,188,189,190,344,345,305,307,191,308,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,51,310,219,220,311,312,221,313,222,223,224,225,226,227,314,315,228,229,346,347,348,349,350,316,317,318,319,320,321,351,352,353,230,231,232,233,234,322,235,236,237,354,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"control":"control","args":"args","proxy":"proxy","method":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:58","sourceCode":"return java.util.List<org.easymock.IArgumentMatcher>","type":"CtReturnImpl"},"failures":[87,93,19,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,252,253,139,141,142,143,144,145,254,255,146,147,148,149,256,150,151,166,167,169,170,171,172,173,307,191,313,226,227,314,315,228,320,236,237,333],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[105,106,108,110,111,355,122,127,141,143,149],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[240,69,70,71,75,76,78,88,90,244,93,246,94,95,247,96,98,248,99,249,250,251,103,105,119,357,358,359,360,361,269,270,273,274,362,363,364,365,305,307,191,308,192,193,309,217,218,310,311,312,221,313,222,234,322,235,328],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[366,367,307,51,368,369],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[370,371,372,373,374,375,376,377,378,379],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[8,69,380,381,0,9,1,2,382,10,70,11,63,65,81,82,84,85,86,15,87,383,384,16,88,89,90,385,386,91,379,387,388,389,390,391,130,392,393,131,394,395,396,397,398,399,400,401,402,132,403,404,405,406,407,133,408,409,152,153,154,155,157,158,25,26,159,259,259,260,260,4,267,268,5,30,31,32,33,35,174,410,175,283,338,411,412,188,189,190,413,50,414,415,416,417,418,419,420,421,229,422,423,424],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[67,238,239,240,252,253,264,280],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"position":"org.easymock.EasyMock:557","failures":[67,334,335,238,68,239,240,69,0,1,2,70,12,71,72,73,74,75,76,13,77,78,79,80,63,64,81,82,83,84,85,86,87,88,89,90,91,17,336,241,92,242,337,243,93,94,95,96,97,98,99,100,101,18,102,103,19,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,252,253,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,256,150,151,24,152,153,154,155,156,157,158,25,26,159,257,258,160,259,259,260,260,4,161,162,264,163,164,165,266,269,166,167,275,276,277,278,279,280,281,282,168,169,170,171,172,173,174,175,338,339,340,341,342,343,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,181,304,182,183,184,185,186,187,188,189,190,42,345,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,313,222,223,224,225,226,227,314,315,228,229,346,347,348,349,350,316,317,318,319,320,321,351,352,353,425,230,426,231,232,233,234,322,235,236,237,354],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":106,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":217,"org.easymock.tests2.UsageTest.argumentsOrdered":251,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":79,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":249,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":261,"org.easymock.tests2.DelegateToTest.testReturnException":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":317,"org.easymock.tests.MockingTest.testPartialClassMocking":188,"org.easymock.tests.MockClassControlTest.testToString":31,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":284,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":362,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":370,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":112,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":226,"org.easymock.tests2.UsageTest.wrongArguments":248,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":56,"org.easymock.samples.ExampleTest.answerVsDelegate":264,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":424,"org.easymock.tests2.UsageConstraintsTest.testNull":108,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":84,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":35,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":78,"org.easymock.tests2.CaptureTest.testPrimitive":144,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":228,"org.easymock.tests.UsageTest.moreThanOneArgument":218,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":303,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":277,"org.easymock.tests.UsageTest.argumentsOrdered":312,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":346,"org.easymock.tests.UsageVarargTest.varargIntAccepted":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":169,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":375,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":173,"org.easymock.tests.ReplayStateInvalidUsageTest.times":45,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":24,"org.easymock.tests2.AnswerTest.answer":67,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":23,"org.easymock.tests2.CaptureTest.testAnd":141,"org.easymock.tests2.UsageTest.strictResetToDefault":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":74,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":224,"org.easymock.tests2.DelegateToTest.testDelegate":243,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":299,"org.easymock.tests.LimitationsTest.mockFinalMethod":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":62,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":344,"org.easymock.tests2.CaptureTest.testCapture1_2446744":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":21,"org.easymock.tests.UsageThrowableTest.throwError":181,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":409,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":170,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":398,"org.easymock.tests2.UsageTest.niceToStrict":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":285,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":0,"org.easymock.tests2.MockBuilderTest.testCreateMock":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":405,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":293,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":366,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":75,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":343,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":54,"org.easymock.tests.UsageOverloadedMethodTest.overloading":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":117,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":205,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":231,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":116,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":148,"org.easymock.tests2.EasyMockSupportClassTest.testAll":130,"org.easymock.tests.MockClassControlTest.testEquals":34,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":283,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":301,"org.easymock.tests2.CaptureTest.testCaptureAll":142,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":60,"org.easymock.tests2.UsageConstraintsTest.testMatches":118,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":278,"org.easymock.samples.ExampleTest.voteForRemovals":165,"org.easymock.tests.UsageVarargTest.allKinds":333,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":61,"org.easymock.samples.BasicClassMockTest.testPrintContent":268,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":186,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":321,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":337,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":419,"org.easymock.tests2.UsageConstraintsTest.greaterThan":120,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":392,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":223,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":90,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":420,"org.easymock.samples.ExampleTest.voteForRemoval":163,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":385,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":15,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":174,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":72,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":316,"org.easymock.tests2.CaptureTest.testCaptureFirst":151,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":73,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":103,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":36,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":201,"org.easymock.tests2.CaptureTest.testCapture2_2446744":150,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":139,"org.easymock.tests2.UsageTest.moreThanOneArgument":98,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":70,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":332,"org.easymock.tests.GenericTest.testBridgedEquals":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":273,"org.easymock.tests.UsageExpectAndReturnTest.longType":197,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":58,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":3,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":302,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":125,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":352,"org.easymock.tests.UsageCallCountTest.tooManyCalls":274,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":406,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":202,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":185,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":153,"org.easymock.tests2.UsageConstraintsTest.testContains":115,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":28,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":159,"org.easymock.tests2.UsageConstraintsTest.testFind":107,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":233,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":253,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":305,"org.easymock.tests.UsageExpectAndReturnTest.object":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":77,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":371,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":53,"org.easymock.tests.UsageTest.exactCallCountByLastCall":221,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":166,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":425,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":347,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":379,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":210,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":323,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":281,"org.easymock.tests.MockClassControlTest.testHashCode":6,"org.easymock.tests2.EasyMockSupportTest.testVerify":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":400,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":348,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":280,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":342,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":20,"org.easymock.tests.UsageVarargTest.varargCharAccepted":326,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":413,"org.easymock.tests2.CaptureTest.testCaptureMultiple":356,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":180,"org.easymock.tests2.UsageTest.openCallCountByLastCall":100,"org.easymock.tests.DefaultClassInstantiatorTest.object":50,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":80,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":341,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":401,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":183,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":33,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":290,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":211,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":133,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":32,"org.easymock.tests2.UsageTest.resumeIfFailure":102,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":319,"org.easymock.tests2.StubTest.stubWithReturnValue":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":377,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":126,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":203,"org.easymock.tests2.SerializationTest.testAllMockedMethod":65,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":339,"org.easymock.samples.SupportTest.voteForRemovals":161,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":367,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":410,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":296,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":66,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":340,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":334,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":426,"org.easymock.tests.UsageExpectAndThrowTest.object":294,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":123,"org.easymock.tests2.DelegateToTest.testWrongClass":242,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":237,"org.easymock.tests.UsageStrictMockTest.range":192,"org.easymock.samples.ConstructorCalledMockTest.testTax":259,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":13,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":295,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":389,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":47,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":311,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":55,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":368,"org.easymock.tests2.CaptureTest.testCaptureNone":147,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":216,"org.easymock.tests.UsageUnorderedTest.message":313,"org.easymock.tests.UsageVerifyTest.twoReturns":235,"org.easymock.tests.UsageVarargTest.varargByteAccepted":331,"org.easymock.tests2.ThreadingTest.testThreadSafe":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":403,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":272,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":267,"org.easymock.tests2.CaptureTest.testCapture_2617107":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":315,"org.easymock.tests2.UsageConstraintsTest.any":113,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":44,"org.easymock.tests2.StubTest.stub":258,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":179,"org.easymock.tests.UsageExpectAndThrowTest.longType":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":318,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":417,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":43,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":246,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":17,"org.easymock.tests2.SerializationTest.testClass":63,"org.easymock.tests.LimitationsTest.mockNativeMethod":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":213,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":338,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":247,"org.easymock.tests2.NameTest.nameForMocksControl":360,"org.easymock.tests2.MockedExceptionTest.testMockedException":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":393,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":220,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":190,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":288,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":81,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":2,"org.easymock.tests.MockingTest.testNicePartialClassMocking":189,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":86,"org.easymock.tests2.CaptureTest.testCaptureLast":146,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":345,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":158,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":111,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":124,"org.easymock.tests.MockingTest.testTwoMocks":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":194,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":292,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":250,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":128,"org.easymock.samples.ExampleTest.removeNonExistingDocument":27,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":41,"org.easymock.tests.UsageStrictMockTest.differentMethods":193,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":415,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":138,"org.easymock.tests2.MockBuilderTest.testCreateMockString":11,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":394,"org.easymock.tests.UsageExpectAndThrowTest.floatType":286,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":238,"org.easymock.tests.UsageVerifyTest.twoThrows":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":132,"org.easymock.samples.ExampleTest.voteAgainstRemoval":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":177,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":214,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":89,"org.easymock.tests2.UsageConstraintsTest.testNotNull":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":187,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":25,"org.easymock.tests2.UsageTest.defaultResetToNice":18,"org.easymock.samples.ExampleTest.voteAgainstRemovals":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":209,"org.easymock.tests.UsageVarargTest.differentLength":328,"org.easymock.tests2.CallbackTest.callback":240,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":383,"org.easymock.tests.UsageTest.openCallCountByLastCall":219,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":314,"org.easymock.tests.UsageCallCountTest.tooFewCalls":270,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":57,"org.easymock.tests.UsageThrowableTest.throwCheckedException":184,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":369,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":167,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":157,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":154,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":156,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":239,"org.easymock.tests.ObjectMethodsTest.testHashCode":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":374,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":140,"org.easymock.tests2.NameTest.nameForNiceMock":359,"org.easymock.tests2.DependencyTest.testInterfaceMocking":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":372,"org.easymock.samples.ExampleTest.addDocument":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.DelegateToTest.testStubDelegate":92,"org.easymock.tests2.AnswerTest.stubAnswer":68,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":191,"org.easymock.tests.UsageVarargTest.varargLongAccepted":330,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":176,"org.easymock.tests.UsageExpectAndReturnTest.floatType":196,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":91,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":260,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":121,"org.easymock.tests.UsageThrowableTest.noUpperLimit":304,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":104,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":387,"org.easymock.tests2.SerializationTest.test":64,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":254,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":414,"org.easymock.tests2.UsageConstraintsTest.testSame":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":195,"org.easymock.samples.SupportTest.addDocument":263,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":395,"org.easymock.tests.GenericTest.testPackageScope":175,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":349,"org.easymock.tests2.NameTest.nameForMock":357,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":206,"org.easymock.tests2.UsageStrictMockTest.differentMethods":95,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":384,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":298,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":225,"org.easymock.tests2.MockedExceptionTest.testRealException":257,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":378,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":93,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":227,"org.easymock.tests2.NameTest.nameForStrictMock":358,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":381,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":85,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":388,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":416,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":122,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":363,"org.easymock.tests.ErrorMessageTest.testGetters":364,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":69,"org.easymock.tests2.UsageStrictMockTest.range":94,"org.easymock.tests2.UsageConstraintsTest.lessThan":129,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":71,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":399,"org.easymock.tests2.CaptureTest.testCaptureRightOne":149,"org.easymock.tests2.UsageConstraintsTest.testOr":110,"org.easymock.tests.UsageRangeTest.combination":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":82,"org.easymock.tests.UsageTest.wrongArguments":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":396,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":30,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":199,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":207,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":418,"org.easymock.tests.UsageVarargTest.varargShortAccepted":329,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":29,"org.easymock.tests2.UsageConstraintsTest.cmpTo":114,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":335,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":101,"org.easymock.tests2.CaptureTest.testCaptureFromStub":256,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":38,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":380,"org.easymock.tests.UsageTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":307,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":271,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":208,"org.easymock.tests2.UsageConstraintsTest.constraints":105,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":308,"org.easymock.samples.ExampleTest.addAndChangeDocument":266,"org.easymock.tests.UsageStrictMockTest.testVerify":49,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":262,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":59,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":171,"org.easymock.tests.LimitationsTest.abstractClass":421,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":172,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":76,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":324,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":365}}]
