[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[14,15,16,17,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[19,20],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[54,55,56,0,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,32,72,33,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,21,94,22,95,96,97,98,99,100,101,23,102,103,104,105,106,107,108,109,110,111,112,34,113,114,115,116,117,118,119,35,36,120,121,37,38,39,40,1,122,2,4,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,24,25,140,26,141,27,28,142,143,144,145,146,147,148,149,150,151,30,152,153,154,155,31,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,41,175,176,177,178,179,180,181,182,183,184,185,186,42,43,44,45,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,16,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,5,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,47,48,49,50,51,272,19,273,274,275,18,276,277,278,279,280,281,282,283,284,285,286,287,20,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[62,62,63,63,78,102,137,138,139,140,26,141,27,145,147,148,150,151,30,31,156,157,311,190,191,192,193,194,206,312,270,272,19,275,288,289,290,291,292,293,294,313,314,315,316,317],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[89,92,166,318,319,320,321,322,323,324],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplant":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[54,55,56,0,57,58,59,60,61,62,63,64,65,66,67,68,69,70,32,72,33,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,21,94,22,95,96,97,98,99,100,101,23,102,103,104,105,107,108,109,110,112,114,116,118,36,121,1,122,2,4,123,124,125,126,127,128,129,131,132,133,134,135,137,138,139,24,25,140,26,141,27,28,142,143,144,145,146,147,148,149,150,151,30,152,153,155,31,156,157,158,159,160,161,164,166,167,169,170,171,172,173,174,41,175,176,177,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,219,220,16,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,19,273,274,275,276,277,278,279,280,281,282,284,285,286,287,20,288,289,290,291,292,293,294,295,296,297,298,299,302,303,304,305,306,307,308,309,310],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[25,27,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:148","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError(java.lang.StringBuilder))","type":"CtThrowImpl"},"failures":[76,79,80,81,86,106,113,115,124,128,129,132,24,149,163,168,169,170,171,174,41,175,179,180,181,182,188,189,203,205,207,208,209,221,222,223,268,283,299,302,304,305,308,309,310],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:191","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:106","sourceCode":"return org.easymock.IAnswer<?>.answer()","type":"CtReturnImpl"},"failures":[55,56,0,57,58,60,62,63,65,69,70,71,32,72,33,73,74,75,78,80,81,83,84,86,87,88,89,90,91,92,93,21,94,95,96,99,100,101,23,102,103,104,105,106,107,108,109,110,111,112,34,114,116,118,119,35,36,120,121,37,38,39,40,1,122,2,4,123,124,125,126,127,128,129,130,131,132,133,134,137,138,139,24,25,140,26,141,27,28,142,143,144,145,146,147,148,149,150,151,30,152,153,155,31,156,157,158,159,160,161,162,164,165,166,167,171,172,173,41,176,177,178,181,182,183,184,185,186,42,43,44,45,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,206,208,209,211,212,213,214,215,216,16,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,5,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,47,48,49,50,51,272,19,273,274,275,18,276,277,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,306,307,310],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[92,325,295,296,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[326],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[327,328,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[330,331,332,333,173,174,179,180,334,335,336,205,303,304,305,308,309],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[78,80,81,173,337,338,339,340,187,188,189,206,208,209,268,303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[311,313,314,315,316,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:124","sourceCode":"throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[78,80,81,341,330,342,343,344,345,173,187,188,189,335,346,347,348,349,206,208,209,268,303],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[119,35,36,120,137,171,177,188,195,197,198,199,200,201,202,211,212,213,214,215,216,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,271,273,274,277,302,307],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":25,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":302,"org.easymock.tests2.UsageTest.argumentsOrdered":180,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":214,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":175,"org.easymock.tests2.StubTest.stubWithReturnValue":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":234,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":64,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":155,"org.easymock.tests2.SerializationTest.testAllMockedMethod":85,"org.easymock.tests2.DelegateToTest.testReturnException":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":212,"org.easymock.tests.MockingTest.testPartialClassMocking":295,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":332,"org.easymock.samples.SupportTest.voteForRemovals":55,"org.easymock.tests.MockClassControlTest.testToString":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":248,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":184,"org.easymock.tests.UsageExpectAndThrowTest.object":258,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":337,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":74,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":152,"org.easymock.tests2.DelegateToTest.testWrongClass":2,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":289,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":272,"org.easymock.tests2.UsageTest.wrongArguments":174,"org.easymock.tests.UsageStrictMockTest.range":208,"org.easymock.samples.ConstructorCalledMockTest.testTax":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":44,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":130,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":321,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":87,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":9,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":52,"org.easymock.tests2.UsageConstraintsTest.testNull":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":259,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":108,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":166,"org.easymock.tests2.CaptureTest.testPrimitive":95,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":275,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":308,"org.easymock.tests.UsageTest.moreThanOneArgument":303,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":43,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":107,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":292,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":15,"org.easymock.tests2.CaptureTest.testCaptureNone":100,"org.easymock.tests.UsageUnorderedTest.message":268,"org.easymock.tests.UsageVerifyTest.twoReturns":189,"org.easymock.tests.UsageVarargTest.varargByteAccepted":286,"org.easymock.tests2.ThreadingTest.testThreadSafe":69,"org.easymock.tests.UsageTest.argumentsOrdered":309,"org.easymock.tests.UsageVarargTest.varargIntAccepted":280,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":220,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":66,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":345,"org.easymock.tests2.CaptureTest.testCapture_2617107":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":190,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":333,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":274,"org.easymock.tests2.UsageConstraintsTest.any":143,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":165,"org.easymock.tests2.StubTest.stub":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":194,"org.easymock.tests.UsageExpectAndThrowTest.longType":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":213,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":327,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":79,"org.easymock.tests2.SerializationTest.testClass":83,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":121,"org.easymock.tests.LimitationsTest.mockNativeMethod":269,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":244,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":17,"org.easymock.tests2.AnswerTest.answer":158,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":40,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests2.UsageTest.strictResetToDefault":172,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":34,"org.easymock.tests2.MockedExceptionTest.testMockedException":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":291,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":127,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":307,"org.easymock.tests2.DelegateToTest.testDelegate":4,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":297,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":252,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":117,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":105,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":167,"org.easymock.tests.MockingTest.testNicePartialClassMocking":296,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":263,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":110,"org.easymock.tests2.CaptureTest.testCaptureLast":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":215,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":349,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":93,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":28,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":51,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":153,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":348,"org.easymock.tests2.CaptureTest.testCapture1_2446744":96,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":38,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":179,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":156,"org.easymock.tests.UsageThrowableTest.throwError":195,"org.easymock.tests.UsageStrictMockTest.differentMethods":209,"org.easymock.tests2.ConstraintsToStringTest.andToString":344,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":71,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":320,"org.easymock.tests2.MockBuilderTest.testCreateMockString":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":294,"org.easymock.tests.UsageExpectAndThrowTest.floatType":250,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":149,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":159,"org.easymock.tests.UsageVerifyTest.twoThrows":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":185,"org.easymock.samples.PartialClassMockTest.testGetArea":65,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":191,"org.easymock.samples.ExampleTest.voteAgainstRemoval":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":14,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":114,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":249,"org.easymock.tests2.UsageTest.niceToStrict":41,"org.easymock.tests2.UsageConstraintsTest.testNotNull":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":202,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":13,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":164,"org.easymock.tests2.MockBuilderTest.testCreateMock":168,"org.easymock.tests2.UsageTest.defaultResetToNice":178,"org.easymock.samples.ExampleTest.voteAgainstRemovals":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":240,"org.easymock.tests.UsageVarargTest.differentLength":283,"org.easymock.tests2.CallbackTest.callback":86,"org.easymock.tests.UsageTest.openCallCountByLastCall":306,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":330,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":257,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":128,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":138,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":42,"org.easymock.tests.UsageCallCountTest.tooFewCalls":218,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":10,"org.easymock.tests.UsageOverloadedMethodTest.overloading":276,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":246,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":236,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":90,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":18,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":328,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":146,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":101,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":45,"org.easymock.tests.UsageThrowableTest.throwCheckedException":199,"org.easymock.tests2.EasyMockSupportClassTest.testAll":183,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":224,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":335,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":265,"org.easymock.tests2.CaptureTest.testCaptureAll":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":39,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":271,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":92,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":89,"org.easymock.tests2.UsageConstraintsTest.testMatches":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":91,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":161,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":293,"org.easymock.samples.ExampleTest.voteForRemovals":60,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":72,"org.easymock.tests.UsageVarargTest.allKinds":20,"org.easymock.tests2.DependencyTest.testInterfaceMocking":73,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":187,"org.easymock.samples.BasicClassMockTest.testPrintContent":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":50,"org.easymock.samples.ExampleTest.addDocument":59,"org.easymock.tests2.DelegateToTest.testStubDelegate":122,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":201,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":76,"org.easymock.tests2.AnswerTest.stubAnswer":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":216,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":3,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":206,"org.easymock.tests2.UsageConstraintsTest.greaterThan":150,"org.easymock.tests.UsageVarargTest.varargLongAccepted":285,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":115,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":210,"org.easymock.samples.ExampleTest.voteForRemoval":57,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":243,"org.easymock.tests.UsageExpectAndReturnTest.floatType":227,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":111,"org.easymock.tests2.ConstraintsToStringTest.orToString":341,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":63,"org.easymock.tests.UsageThrowableTest.noUpperLimit":196,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":151,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":298,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":139,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":318,"org.easymock.tests2.SerializationTest.test":84,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":97,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":125,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":226,"org.easymock.tests2.UsageConstraintsTest.testSame":141,"org.easymock.samples.SupportTest.addDocument":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":211,"org.easymock.tests2.CaptureTest.testCaptureFirst":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":126,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":247,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":232,"org.easymock.tests.GenericTest.testPackageScope":16,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":32,"org.easymock.tests2.CaptureTest.testCapture2_2446744":103,"org.easymock.tests2.UsageTest.moreThanOneArgument":173,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":287,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":222,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":8,"org.easymock.tests.UsageExpectAndReturnTest.longType":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":47,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":123,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":237,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":311,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":154,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":264,"org.easymock.tests2.UsageStrictMockTest.differentMethods":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":290,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":229,"org.easymock.tests.UsageCallCountTest.tooManyCalls":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":301,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":217,"org.easymock.tests2.MockedExceptionTest.testRealException":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":253,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":19,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":88,"org.easymock.tests.MockingTest.testNiceClassMocking":53,"org.easymock.tests2.UsageConstraintsTest.testContains":145,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":36,"org.easymock.tests2.UsageConstraintsTest.testFind":140,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":277,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":7,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":116,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":109,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":203,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":118,"org.easymock.tests.UsageExpectAndReturnTest.object":235,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":338,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":112,"org.easymock.tests.ErrorMessageTest.testGetters":339,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":163,"org.easymock.tests2.UsageStrictMockTest.range":80,"org.easymock.tests2.UsageConstraintsTest.lessThan":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":131,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":282,"org.easymock.tests.UsageTest.exactCallCountByLastCall":310,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":12,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":124,"org.easymock.tests2.CaptureTest.testCaptureRightOne":23,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":336,"org.easymock.tests2.UsageConstraintsTest.testOr":27,"org.easymock.tests.UsageRangeTest.combination":299,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":278,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":106,"org.easymock.tests.UsageTest.wrongArguments":305,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":5,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":230,"org.easymock.tests2.EasyMockSupportTest.testVerify":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":238,"org.easymock.tests.UsageVarargTest.varargShortAccepted":284,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":245,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":37,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":326,"org.easymock.tests2.UsageConstraintsTest.cmpTo":144,"org.easymock.tests.UsageVarargTest.varargCharAccepted":281,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":77,"org.easymock.tests2.UsageTest.openCallCountByLastCall":176,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":6,"org.easymock.tests.DefaultClassInstantiatorTest.object":46,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":134,"org.easymock.tests2.CaptureTest.testCaptureFromStub":102,"org.easymock.tests.UsageTest.unexpectedCallWithArray":304,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":255,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":198,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":219,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":239,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":324,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":207,"org.easymock.tests2.UsageConstraintsTest.constraints":24,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":254,"org.easymock.samples.ExampleTest.addAndChangeDocument":61,"org.easymock.tests2.ConstraintsToStringTest.notToString":342,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":242,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":68,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":343,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":323,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":48,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":98,"org.easymock.tests2.UsageTest.resumeIfFailure":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":192,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":193,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":340,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":129}}]
