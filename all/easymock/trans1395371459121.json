[{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[26],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,3,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,8,10,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,11,12,13,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,15,16,17,18,156,157,19,158,159,160,161,162,163,164,165,166,167,168,169,170,171,23,25,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[92,97,99,113,114,128],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[175,181,192,220],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[229,230,37,231,42,43,44,45,62,63,232,127,233,233,234,234,235,236,237,142,238,239,240,143,144,241,242,243,244,245,246,247,248,249,250,251,162,252,164,165,166,253,167,168,254,169,255,199,206,208,210,256,211,212,257,213,214],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[258,259,260,4,5,6,7,9,261,12,13,20,21,22,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[43,168],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[262,207],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[29,39,41,3,4,5,6,73,77,78,80,83,264,8,9,90,99,103,104,106,109,115,116,117,118,11,12,13,134,244,154,19,20,158,159,21,22,161,170,265,266,267,268,269,23,24,172,174,175,177,179,180,185,188,189,191,197],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[218,220,221,270,222,223,226,271,227],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[272],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[273,274,275,276,277,278,279,280,281,282,283,284,285,286,212,214,287],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[288,136,170,200,203],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[289,187,194,198],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[178],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":176,"org.easymock.tests2.UsageTest.argumentsOrdered":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":49,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":159,"org.easymock.tests2.StubTest.stubWithReturnValue":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":282,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":195,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":104,"org.easymock.tests2.SerializationTest.testAllMockedMethod":210,"org.easymock.tests2.DelegateToTest.testReturnException":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":47,"org.easymock.tests.MockingTest.testPartialClassMocking":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":81,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":69,"org.easymock.tests.UsageExpectAndThrowTest.object":79,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":14,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":92,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":93,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":182,"org.easymock.tests2.UsageTest.wrongArguments":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":124,"org.easymock.samples.ConstructorCalledMockTest.testTax":233,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":35,"org.easymock.samples.ExampleTest.answerVsDelegate":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":256,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":230,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":276,"org.easymock.tests2.UsageConstraintsTest.testNull":178,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":80,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":164,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":268,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":241,"org.easymock.tests2.CaptureTest.testPrimitive":221,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":126,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":88,"org.easymock.tests.UsageTest.moreThanOneArgument":3,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":34,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":130,"org.easymock.tests2.CaptureTest.testCaptureNone":225,"org.easymock.tests.UsageUnorderedTest.message":259,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":59,"org.easymock.tests2.ThreadingTest.testThreadSafe":145,"org.easymock.tests.UsageTest.argumentsOrdered":6,"org.easymock.tests.UsageVarargTest.varargIntAccepted":54,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":32,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":236,"org.easymock.tests2.CaptureTest.testCapture_2617107":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":119,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":142,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":94,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":144,"org.easymock.tests2.UsageConstraintsTest.any":183,"org.easymock.tests2.StubTest.stub":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":123,"org.easymock.tests.UsageExpectAndThrowTest.longType":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":48,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":2,"org.easymock.tests2.SerializationTest.testClass":208,"org.easymock.tests.LimitationsTest.mockNativeMethod":45,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":232,"org.easymock.tests2.AnswerTest.answer":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":114,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":151,"org.easymock.tests2.CaptureTest.testAnd":218,"org.easymock.tests2.UsageTest.strictResetToDefault":157,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":281,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":168,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":172,"org.easymock.tests2.NameTest.nameForMocksControl":18,"org.easymock.tests2.MockedExceptionTest.testMockedException":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":129,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":117,"org.easymock.tests2.DelegateToTest.testDelegate":217,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":73,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":44,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":242,"org.easymock.tests.MockingTest.testNicePartialClassMocking":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":84,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":166,"org.easymock.tests2.CaptureTest.testCaptureLast":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":50,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":214,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":181,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":68,"org.easymock.tests.MockingTest.testTwoMocks":231,"org.easymock.tests2.CaptureTest.testCapture1_2446744":270,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":95,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":149,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":21,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":197,"org.easymock.tests.UsageStrictMockTest.differentMethods":10,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":272,"org.easymock.tests2.MockBuilderTest.testCreateMockString":246,"org.easymock.tests.UsageExpectAndThrowTest.floatType":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":132,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":189,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":201,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":250,"org.easymock.samples.PartialClassMockTest.testGetArea":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":120,"org.easymock.samples.ExampleTest.voteAgainstRemoval":138,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":70,"org.easymock.tests2.UsageTest.niceToStrict":158,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":274,"org.easymock.tests2.UsageConstraintsTest.testNotNull":196,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":204,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":143,"org.easymock.tests2.MockBuilderTest.testCreateMock":243,"org.easymock.tests2.UsageTest.defaultResetToNice":160,"org.easymock.samples.ExampleTest.voteAgainstRemovals":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":110,"org.easymock.tests2.CallbackTest.callback":170,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":78,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":266,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":173,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":33,"org.easymock.tests.UsageCallCountTest.tooFewCalls":30,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":277,"org.easymock.tests.UsageOverloadedMethodTest.overloading":133,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":262,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":106,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":186,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":226,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":36,"org.easymock.tests2.EasyMockSupportClassTest.testAll":248,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":63,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":86,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":263,"org.easymock.tests2.CaptureTest.testCaptureAll":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":150,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":213,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":212,"org.easymock.tests2.UsageConstraintsTest.testMatches":188,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":131,"org.easymock.samples.ExampleTest.voteForRemovals":140,"org.easymock.tests2.NameTest.nameForNiceMock":17,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":147,"org.easymock.tests.UsageVarargTest.allKinds":61,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":11,"org.easymock.tests2.DependencyTest.testInterfaceMocking":156,"org.easymock.samples.BasicClassMockTest.testPrintContent":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":67,"org.easymock.samples.ExampleTest.addDocument":139,"org.easymock.tests2.DelegateToTest.testStubDelegate":216,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":269,"org.easymock.tests2.AnswerTest.stubAnswer":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":51,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":8,"org.easymock.tests2.UsageConstraintsTest.greaterThan":190,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":116,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":255,"org.easymock.tests.UsageVarargTest.varargLongAccepted":58,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":90,"org.easymock.samples.ExampleTest.voteForRemoval":137,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":146,"org.easymock.tests.UsageExpectAndReturnTest.floatType":97,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":113,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":199,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":234,"org.easymock.tests.UsageThrowableTest.noUpperLimit":39,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":191,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":37,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":174,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":222,"org.easymock.tests2.SerializationTest.test":209,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":96,"org.easymock.tests2.UsageConstraintsTest.testSame":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":46,"org.easymock.tests2.CaptureTest.testCaptureFirst":228,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":102,"org.easymock.tests.GenericTest.testPackageScope":62,"org.easymock.tests2.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":244,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":60,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":278,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":275,"org.easymock.tests2.NameTest.nameForMock":15,"org.easymock.tests.UsageExpectAndReturnTest.longType":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":64,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":245,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":87,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":107,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":85,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":128,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":99,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":83,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":0,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":118,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":29,"org.easymock.tests2.MockedExceptionTest.testRealException":207,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":103,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":74,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":211,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":238,"org.easymock.tests2.NameTest.nameForStrictMock":16,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":28,"org.easymock.tests2.UsageConstraintsTest.testContains":185,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":206,"org.easymock.tests2.UsageConstraintsTest.testFind":177,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":134,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":286,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":165,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":153,"org.easymock.tests.UsageExpectAndReturnTest.object":105,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":192,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":167,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":239,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":198,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":56,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":279,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":38,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":265,"org.easymock.tests2.CaptureTest.testCaptureRightOne":227,"org.easymock.tests2.UsageConstraintsTest.testOr":180,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":285,"org.easymock.tests.UsageRangeTest.combination":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":252,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":52,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":111,"org.easymock.tests.UsageTest.wrongArguments":4,"org.easymock.tests2.MockBuilderTest.testWithConstructor":280,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":108,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":1,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":288,"org.easymock.tests.UsageVarargTest.varargShortAccepted":57,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":148,"org.easymock.tests2.UsageConstraintsTest.cmpTo":184,"org.easymock.tests.UsageVarargTest.varargCharAccepted":55,"org.easymock.tests2.CompareToTest.testLessThan":289,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":171,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":240,"org.easymock.tests.UsageTest.unexpectedCallWithArray":260,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":261,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":76,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":31,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":283,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":109,"org.easymock.tests2.CaptureTest.testCapture":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":254,"org.easymock.tests2.UsageConstraintsTest.constraints":175,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":75,"org.easymock.samples.ExampleTest.addAndChangeDocument":141,"org.easymock.tests.UsageStrictMockTest.testVerify":91,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":251,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":65,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":223,"org.easymock.tests2.UsageTest.resumeIfFailure":161,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":121,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":229,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":101,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":267,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":53}}]
