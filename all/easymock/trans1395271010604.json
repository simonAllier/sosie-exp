[{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[2],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,2,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,1,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,140,141,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[16,20,21,22,23,24,25,2,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,53,75,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,101,156,157,158,159,160,161,162,173,247,255,256,294,295,300,305,306,307,308,309],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[29],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[283],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[3,6,10,11,13,14,15,16,310,311,19,0,312,313,47,314,315,316,317,318,319,320,321,80,96,97,322,323,152,153,324,325,184,326,327,328,238,329,246,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,302,303,345],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[39],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[78,79,80,346],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[103,104,347,255,258,259],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[81,83,84,85,86,87,88,90,348,91,92,94],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[349,350,347,255,351,352],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[110,111],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[339,343],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[5,9,353,354,355,313,356,357,47,358,314,48,315,316,359,360,317,361,362,318,363,49,319,320,364,365,321,50,366,367,78,368,369,370,371,372,373,126,374,140,141],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[78,79,80,346],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[95,96,97,98,162,296,297,298,299,300,301,307],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[375,376],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[81,83,85,86,87,90,91,92,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:327","failures":[182,183,220,221],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[20,34,37,46,51,52,1,58,74,77,82,88,89,94,193,199,205,209,211,231,247,262,268,274,278,280,377,286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[3,4,5,6,8,9,10,11,13,14,15,375,16,311,17,18,19,47,48,49,50,78,80,97,378,379,380,381,382,119,383,120,376,121,122,384,123,385,386,126,140,140,141,141,152,153,154,184,238,239,240,241,246,331,387,388,302,303,304],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[22,23,25,26,27,29,39,44,81,83,91],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[339,343],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[46,389],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[390,391,392,393,394,370,374],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[395,396,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,398],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[399,345],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[78,79,80,346],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[339,343],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":23,"org.easymock.tests2.UsageTest.argumentsOrdered":66,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":230,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":137,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":61,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":155,"org.easymock.tests2.DelegateToTest.testReturnException":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":297,"org.easymock.tests.MockingTest.testPartialClassMocking":239,"org.easymock.tests.MockClassControlTest.testToString":332,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":262,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":390,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":28,"org.easymock.tests2.UsageTest.wrongArguments":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":305,"org.easymock.samples.ExampleTest.answerVsDelegate":146,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":388,"org.easymock.tests2.UsageConstraintsTest.testNull":25,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":13,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":136,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":337,"org.easymock.tests2.CaptureTest.testPrimitive":84,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":309,"org.easymock.tests.UsageTest.moreThanOneArgument":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":281,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":12,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":224,"org.easymock.tests.UsageTest.argumentsOrdered":236,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":248,"org.easymock.tests.UsageVarargTest.varargIntAccepted":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":394,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":381,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":160,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":55,"org.easymock.tests2.AnswerTest.answer":106,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":29,"org.easymock.tests2.CaptureTest.testAnd":81,"org.easymock.tests2.UsageTest.strictResetToDefault":57,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":311,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":369,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":223,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":131,"org.easymock.tests2.DelegateToTest.testDelegate":74,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":277,"org.easymock.tests.LimitationsTest.mockFinalMethod":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":300,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":227,"org.easymock.tests2.CaptureTest.testCapture1_2446744":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":275,"org.easymock.tests.UsageThrowableTest.throwError":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":226,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":367,"org.easymock.samples.PartialClassMockTest.testGetArea":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":157,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":175,"org.easymock.tests2.UsageTest.niceToStrict":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":317,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":120,"org.easymock.tests2.MockBuilderTest.testCreateMock":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":271,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":349,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":132,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":221,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":287,"org.easymock.tests.UsageOverloadedMethodTest.overloading":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":363,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":34,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":204,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":284,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":33,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":90,"org.easymock.tests2.EasyMockSupportClassTest.testAll":47,"org.easymock.tests.MockClassControlTest.testEquals":336,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":303,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":279,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":378,"org.easymock.tests2.CaptureTest.testCaptureAll":82,"org.easymock.tests2.UsageConstraintsTest.testMatches":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":225,"org.easymock.samples.ExampleTest.voteForRemovals":150,"org.easymock.tests.UsageVarargTest.allKinds":173,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":242,"org.easymock.samples.BasicClassMockTest.testPrintContent":153,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":191,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":99,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":301,"org.easymock.tests2.UsageConstraintsTest.greaterThan":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":178,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":19,"org.easymock.samples.ExampleTest.voteForRemoval":147,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":344,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":0,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":375,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":246,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":129,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":296,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":69,"org.easymock.tests2.CaptureTest.testCaptureFirst":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":130,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":200,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":53,"org.easymock.tests2.UsageTest.moreThanOneArgument":58,"org.easymock.tests2.CaptureTest.testCapture2_2446744":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":123,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":172,"org.easymock.tests.GenericTest.testBridgedEquals":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":292,"org.easymock.tests.UsageExpectAndReturnTest.longType":196,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":127,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":385,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":280,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":42,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":229,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":222,"org.easymock.tests.UsageCallCountTest.tooManyCalls":293,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":365,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":190,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":4,"org.easymock.tests.MockingTest.testNiceClassMocking":329,"org.easymock.tests.MockingTest.testClassMocking":328,"org.easymock.tests2.UsageConstraintsTest.testContains":32,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":382,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":97,"org.easymock.tests2.UsageConstraintsTest.testFind":24,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":286,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":76,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":253,"org.easymock.tests.UsageExpectAndReturnTest.object":203,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":391,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":167,"org.easymock.tests.UsageTest.exactCallCountByLastCall":237,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":161,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":249,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":374,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":163,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":209,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":215,"org.easymock.tests.ResultTest.createThrowResultToString":397,"org.easymock.tests.MockClassControlTest.testHashCode":335,"org.easymock.tests2.EasyMockSupportTest.testVerify":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":362,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":250,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":220,"org.easymock.tests.UsageVarargTest.varargCharAccepted":166,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":100,"org.easymock.tests2.UsageTest.openCallCountByLastCall":62,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":138,"org.easymock.tests.DefaultClassInstantiatorTest.object":338,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":219,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":318,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":188,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":17,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":334,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":268,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":210,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":50,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":333,"org.easymock.tests2.UsageTest.resumeIfFailure":67,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":299,"org.easymock.tests2.StubTest.stubWithReturnValue":125,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":370,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":202,"org.easymock.tests2.SerializationTest.testAllMockedMethod":80,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":282,"org.easymock.samples.SupportTest.voteForRemovals":143,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":350,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":274,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":346,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":283,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":107,"org.easymock.tests.UsageExpectAndThrowTest.object":272,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":40,"org.easymock.tests2.DelegateToTest.testWrongClass":72,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":294,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":295,"org.easymock.samples.ConstructorCalledMockTest.testTax":140,"org.easymock.tests.UsageStrictMockTest.range":258,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":134,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":273,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":121,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":313,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":351,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":176,"org.easymock.tests2.CaptureTest.testCaptureNone":89,"org.easymock.tests.UsageUnorderedTest.message":247,"org.easymock.tests.UsageVerifyTest.twoReturns":244,"org.easymock.tests.UsageVarargTest.varargByteAccepted":171,"org.easymock.tests2.ThreadingTest.testThreadSafe":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":319,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":291,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":152,"org.easymock.tests2.CaptureTest.testCapture_2617107":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":308,"org.easymock.tests2.UsageConstraintsTest.any":30,"org.easymock.tests2.StubTest.stub":124,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":183,"org.easymock.tests.UsageExpectAndThrowTest.longType":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":298,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":342,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":102,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":118,"org.easymock.tests2.SerializationTest.testClass":78,"org.easymock.tests.LimitationsTest.mockNativeMethod":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":212,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":304,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":380,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":105,"org.easymock.tests2.NameTest.nameForMocksControl":117,"org.easymock.tests2.MockedExceptionTest.testMockedException":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":314,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":234,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":266,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":10,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":122,"org.easymock.tests.MockingTest.testNicePartialClassMocking":240,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":15,"org.easymock.tests2.CaptureTest.testCaptureLast":88,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":228,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":27,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":9,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":41,"org.easymock.tests.MockingTest.testTwoMocks":238,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":270,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":45,"org.easymock.tests.UsageStrictMockTest.differentMethods":259,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":340,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":1,"org.easymock.tests2.MockBuilderTest.testCreateMockString":386,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":330,"org.easymock.tests.UsageExpectAndThrowTest.floatType":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":315,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":357,"org.easymock.tests.ResultTest.createReturnResultToString":396,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":109,"org.easymock.tests.UsageVerifyTest.twoThrows":243,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":49,"org.easymock.tests.ResultTest.createDelegateResultToString":395,"org.easymock.samples.ExampleTest.voteAgainstRemoval":148,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":174,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":18,"org.easymock.tests.LimitationsTest.privateConstructor":325,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":355,"org.easymock.tests2.UsageConstraintsTest.testNotNull":44,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":192,"org.easymock.tests2.UsageTest.defaultResetToNice":64,"org.easymock.samples.ExampleTest.voteAgainstRemovals":145,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":377,"org.easymock.tests.UsageVarargTest.differentLength":168,"org.easymock.tests2.CallbackTest.callback":77,"org.easymock.tests.UsageTest.openCallCountByLastCall":233,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":307,"org.easymock.tests.UsageCallCountTest.tooFewCalls":289,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":6,"org.easymock.tests.UsageThrowableTest.throwCheckedException":189,"org.easymock.tests.MockingTest.testStrictClassMocking":327,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":352,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":162,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":5,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":398,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":7,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":393,"org.easymock.tests2.NameTest.nameForNiceMock":116,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":54,"org.easymock.tests2.DependencyTest.testInterfaceMocking":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":392,"org.easymock.samples.ExampleTest.addDocument":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":320,"org.easymock.tests2.DelegateToTest.testStubDelegate":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.AnswerTest.stubAnswer":110,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":256,"org.easymock.tests.UsageVarargTest.varargLongAccepted":170,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.tests.UsageExpectAndReturnTest.floatType":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":126,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":141,"org.easymock.tests.UsageThrowableTest.noUpperLimit":186,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":38,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":217,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":21,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":322,"org.easymock.tests2.SerializationTest.test":79,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":86,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":339,"org.easymock.tests2.UsageConstraintsTest.testSame":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":194,"org.easymock.samples.SupportTest.addDocument":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":316,"org.easymock.tests.GenericTest.testPackageScope":302,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":251,"org.easymock.tests2.NameTest.nameForMock":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":205,"org.easymock.tests2.UsageStrictMockTest.differentMethods":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":373,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":197,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":276,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":180,"org.easymock.tests2.MockedExceptionTest.testRealException":98,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":101,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":306,"org.easymock.tests2.NameTest.nameForStrictMock":115,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":75,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":14,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":323,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":39,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":341,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":119,"org.easymock.tests2.UsageStrictMockTest.range":103,"org.easymock.tests2.UsageConstraintsTest.lessThan":46,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":128,"org.easymock.tests2.CaptureTest.testCaptureRightOne":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":361,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":11,"org.easymock.tests.UsageTest.wrongArguments":232,"org.easymock.tests2.MockBuilderTest.testWithConstructor":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":359,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":331,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":198,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":206,"org.easymock.tests.UsageVarargTest.varargShortAccepted":169,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":343,"org.easymock.tests2.UsageConstraintsTest.cmpTo":31,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":108,"org.easymock.tests2.CompareToTest.testLessThan":389,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":63,"org.easymock.tests2.CaptureTest.testCaptureFromStub":92,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":383,"org.easymock.tests.UsageTest.unexpectedCallWithArray":347,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":255,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":290,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":207,"org.easymock.tests2.CaptureTest.testCapture":348,"org.easymock.tests2.UsageConstraintsTest.constraints":22,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":257,"org.easymock.samples.ExampleTest.addAndChangeDocument":151,"org.easymock.tests.UsageStrictMockTest.testVerify":261,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":144,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":254,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":158,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":379,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":199,"org.easymock.tests.LimitationsTest.abstractClass":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":159,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":218,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":133}}]
