[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[26,27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[28,3,29,30,31,32,33,5,34,35,36,37,38,39,40,41,42,43,23,44,45,46,47,48,49,50,51,52],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[53,54,55,56,57,57,58,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,26,80,81,82,27,83,84,85,86,87,88,1,89,90,91,92,93,94,95,96,97,98,28,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,2,119,120,3,121,29,30,122,4,31,32,33,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,5,34,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,6,207,208,209,210,211,212,213,214,215,216,7,8,217,218,9,219,10,11,12,13,220,14,15,16,17,221,18,19,20,21,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,35,239,36,240,37,38,39,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,40,0,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,41,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,42,367,43,23,368,369,44,370,45,371,24,372,46,47,373,48,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,25,410,411,412,413,414,415,49,416,417,50,51,52,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[28,120,121,29,30,31,32,180,5,34,208,209,212,216,36,240,38,39,247,250,268,305,318,369,44,46,47,417,51,52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[328,329,330,332,444,336],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[445,446,447,448],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[53,54,55,56,59,60,61,62,63,64,65,66,67,69,71,72,80,81,84,1,90,92,93,94,95,97,98,28,111,117,118,2,3,121,30,122,4,31,32,33,123,124,128,129,130,131,132,133,134,135,148,149,151,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,5,34,181,182,183,184,185,186,187,188,189,190,191,192,200,201,202,203,204,205,206,6,207,208,7,8,217,218,9,219,10,11,12,13,220,14,15,16,17,221,18,19,20,21,223,224,225,227,228,230,35,239,36,240,37,38,39,241,242,253,254,255,256,257,258,259,260,261,262,263,264,265,272,274,275,40,0,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,305,310,311,41,312,313,318,323,324,325,326,327,328,329,330,331,332,333,335,336,339,340,341,342,343,345,346,347,349,356,360,362,364,42,23,368,369,44,370,45,371,24,372,46,47,373,48,374,377,380,381,382,383,384,385,386,387,388,389,390,393,397,398,399,402,403,404,405,406,407,408,409,25,410,412,413,414,415,49,416,417,50,51,52,418,422,425,435,441],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[40,0,276,277,278,279,280,281,282,283,292,293,297,298,323,324,325,326,333,334],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:283","sourceCode":"return ((org.easymock.internal.ClassProxyFactory.MockMethodInterceptor)(net.sf.cglib.proxy.Factory.getCallback(0))).java.lang.reflect.InvocationHandler","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[368,395],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[449],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[57,57,58,58,341,365,374,375,394],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[123,283],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[450,344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":47,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":263,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":450,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":45,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":56,"org.easymock.tests2.DelegateToTest.testReturnException":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":86,"org.easymock.tests.MockingTest.testPartialClassMocking":148,"org.easymock.tests.MockClassControlTest.testToString":194,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":411,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":119,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":425,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":7,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":340,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":281,"org.easymock.tests2.UsageTest.wrongArguments":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":204,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":237,"org.easymock.samples.ExampleTest.answerVsDelegate":63,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":214,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":153,"org.easymock.tests2.UsageConstraintsTest.testNull":277,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":388,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":199,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":262,"org.easymock.tests2.CaptureTest.testPrimitive":326,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":207,"org.easymock.tests.UsageTest.moreThanOneArgument":121,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":21,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":114,"org.easymock.tests.UsageTest.argumentsOrdered":32,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":70,"org.easymock.tests.UsageVarargTest.varargIntAccepted":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":175,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":354,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":179,"org.easymock.tests.ReplayStateInvalidUsageTest.times":107,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":318,"org.easymock.tests2.DependencyTest.testClassMocking":337,"org.easymock.tests2.AnswerTest.answer":377,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":353,"org.easymock.tests2.CaptureTest.testAnd":323,"org.easymock.tests2.UsageTest.strictResetToDefault":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":396,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":358,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":113,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":257,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":74,"org.easymock.tests2.DelegateToTest.testDelegate":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":79,"org.easymock.tests2.DependencyTest.testClassMockingSupport":338,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":208,"org.easymock.tests2.CaptureTest.testCapture1_2446744":327,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":16,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":351,"org.easymock.tests.UsageThrowableTest.throwError":128,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":101,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":213,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":309,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":443,"org.easymock.samples.PartialClassMockTest.testGetArea":53,"org.easymock.tests.MockingTest.testInterfaceMocking":150,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":430,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":8,"org.easymock.tests2.UsageTest.niceToStrict":370,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":360,"org.easymock.tests2.MockBuilderTest.testCreateMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":438,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":321,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":13,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":258,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":235,"org.easymock.tests.UsageOverloadedMethodTest.overloading":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":434,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":228,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":166,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":117,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":286,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":332,"org.easymock.tests2.EasyMockSupportClassTest.testAll":422,"org.easymock.tests.MockClassControlTest.testEquals":198,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":77,"org.easymock.tests2.CaptureTest.testCaptureAll":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":352,"org.easymock.tests.MockNameTest.defaultName":120,"org.easymock.tests2.UsageConstraintsTest.testMatches":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":115,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":99,"org.easymock.samples.ExampleTest.voteForRemovals":67,"org.easymock.tests.UsageVarargTest.allKinds":191,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":180,"org.easymock.samples.BasicClassMockTest.testPrintContent":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":78,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":134,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":307,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":348,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":143,"org.easymock.tests2.UsageConstraintsTest.greaterThan":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":201,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":399,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":144,"org.easymock.samples.ExampleTest.voteForRemoval":64,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":400,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":311,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":391,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":111,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":23,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":255,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":85,"org.easymock.tests2.CaptureTest.testCaptureFirst":336,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":256,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":48,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":231,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":162,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":312,"org.easymock.tests2.CaptureTest.testCapture2_2446744":335,"org.easymock.tests2.UsageTest.moreThanOneArgument":369,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":42,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":190,"org.easymock.tests.GenericTest.testBridgedEquals":27,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":97,"org.easymock.tests.UsageExpectAndReturnTest.longType":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":75,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":20,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":222,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":295,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":112,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":233,"org.easymock.tests.UsageCallCountTest.tooManyCalls":98,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":133,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":403,"org.easymock.tests.MockingTest.testNiceClassMocking":154,"org.easymock.tests.MockingTest.testClassMocking":146,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":91,"org.easymock.tests2.UsageConstraintsTest.testContains":285,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":272,"org.easymock.tests2.UsageConstraintsTest.testFind":276,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":2,"org.easymock.tests.MockTypeTest.fromEasyMockClass":212,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":384,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":35,"org.easymock.tests.UsageExpectAndReturnTest.object":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":261,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":185,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":249,"org.easymock.tests.UsageTest.exactCallCountByLastCall":33,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":123,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":375,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":181,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":171,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":227,"org.easymock.tests.MockClassControlTest.testHashCode":197,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":302,"org.easymock.tests2.EasyMockSupportTest.testVerify":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":432,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":126,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":225,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":350,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":300,"org.easymock.tests.UsageVarargTest.varargCharAccepted":184,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":136,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":416,"org.easymock.tests2.UsageTest.openCallCountByLastCall":371,"org.easymock.tests.DefaultClassInstantiatorTest.object":137,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":125,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":433,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":131,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":301,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":397,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":172,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":441,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":195,"org.easymock.tests2.UsageTest.resumeIfFailure":373,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":88,"org.easymock.tests2.StubTest.stubWithReturnValue":25,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":363,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":296,"org.easymock.tests2.SerializationTest.testAllMockedMethod":343,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":251,"org.easymock.samples.SupportTest.voteForRemovals":61,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":15,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":252,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":378,"org.easymock.tests.UsageExpectAndThrowTest.object":220,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":293,"org.easymock.tests2.DelegateToTest.testWrongClass":347,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":223,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":224,"org.easymock.tests.UsageStrictMockTest.range":38,"org.easymock.samples.ConstructorCalledMockTest.testTax":57,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":268,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":260,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":14,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":419,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":109,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":236,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":245,"org.easymock.tests2.CaptureTest.testCaptureNone":331,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":446,"org.easymock.tests.UsageUnorderedTest.message":28,"org.easymock.tests.UsageVerifyTest.twoReturns":34,"org.easymock.tests.UsageVarargTest.varargByteAccepted":189,"org.easymock.tests2.ThreadingTest.testThreadSafe":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":436,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":95,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":54,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":250,"org.easymock.tests2.CaptureTest.testCapture_2617107":325,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":210,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":6,"org.easymock.tests2.UsageConstraintsTest.any":283,"org.easymock.tests2.StubTest.stub":409,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":106,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":87,"org.easymock.tests.UsageExpectAndThrowTest.longType":218,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":141,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":105,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":50,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":305,"org.easymock.tests2.SerializationTest.testClass":341,"org.easymock.tests.LimitationsTest.mockNativeMethod":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":174,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":82,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":316,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":418,"org.easymock.tests2.NameTest.nameForMocksControl":415,"org.easymock.tests2.MockedExceptionTest.testMockedException":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":424,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":4,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":9,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":385,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":364,"org.easymock.tests.MockingTest.testNicePartialClassMocking":149,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":390,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":314,"org.easymock.tests2.CaptureTest.testCaptureLast":330,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":209,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":408,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":280,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":294,"org.easymock.tests.MockingTest.testTwoMocks":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":12,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":46,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":298,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":448,"org.easymock.samples.ExampleTest.removeNonExistingDocument":68,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":103,"org.easymock.tests.UsageStrictMockTest.differentMethods":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":303,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":139,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":41,"org.easymock.tests2.MockBuilderTest.testCreateMockString":43,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":426,"org.easymock.tests.UsageExpectAndThrowTest.floatType":217,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":421,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":380,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":376,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":435,"org.easymock.samples.ExampleTest.voteAgainstRemoval":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":243,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":398,"org.easymock.tests2.UsageConstraintsTest.testNotNull":297,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":135,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":270,"org.easymock.tests2.UsageTest.defaultResetToNice":372,"org.easymock.samples.ExampleTest.voteAgainstRemovals":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":170,"org.easymock.tests.UsageVarargTest.differentLength":186,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":315,"org.easymock.tests2.CallbackTest.callback":410,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":394,"org.easymock.tests.UsageTest.openCallCountByLastCall":122,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":274,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":206,"org.easymock.tests.UsageCallCountTest.tooFewCalls":93,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":405,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":238,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":447,"org.easymock.tests.UsageThrowableTest.throwCheckedException":132,"org.easymock.tests.MockingTest.testStrictClassMocking":145,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":407,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":404,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":319,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":406,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":382,"org.easymock.tests.ObjectMethodsTest.testHashCode":248,"org.easymock.tests2.NameTest.nameForNiceMock":414,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":313,"org.easymock.tests2.DependencyTest.testInterfaceMocking":339,"org.easymock.samples.ExampleTest.addDocument":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":442,"org.easymock.tests2.DelegateToTest.testStubDelegate":346,"org.easymock.tests2.AnswerTest.stubAnswer":381,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":240,"org.easymock.tests.UsageVarargTest.varargLongAccepted":188,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":173,"org.easymock.tests.UsageExpectAndReturnTest.floatType":157,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":374,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":58,"org.easymock.tests.UsageThrowableTest.noUpperLimit":129,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":229,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":291,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":275,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":266,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":328,"org.easymock.tests2.SerializationTest.test":342,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":138,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":156,"org.easymock.tests2.UsageConstraintsTest.testSame":278,"org.easymock.samples.SupportTest.addDocument":60,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":427,"org.easymock.tests.GenericTest.testPackageScope":80,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":73,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":308,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":152,"org.easymock.tests2.NameTest.nameForMock":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":167,"org.easymock.tests2.UsageStrictMockTest.differentMethods":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":367,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":395,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":17,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":246,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":203,"org.easymock.tests2.MockedExceptionTest.testRealException":273,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":216,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":269,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":417,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":205,"org.easymock.tests2.NameTest.nameForStrictMock":413,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":359,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":383,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":389,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":267,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":140,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":292,"org.easymock.tests.ErrorMessageTest.testGetters":449,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":356,"org.easymock.tests2.UsageStrictMockTest.range":51,"org.easymock.tests2.UsageConstraintsTest.lessThan":299,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":304,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":431,"org.easymock.tests2.CaptureTest.testCaptureRightOne":333,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":445,"org.easymock.tests2.UsageConstraintsTest.testOr":279,"org.easymock.tests.UsageRangeTest.combination":200,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":386,"org.easymock.tests.UsageTest.wrongArguments":30,"org.easymock.tests2.MockBuilderTest.testWithConstructor":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":428,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":168,"org.easymock.tests.UsageVarargTest.varargShortAccepted":187,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":142,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":96,"org.easymock.tests2.UsageConstraintsTest.cmpTo":284,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":22,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":24,"org.easymock.tests2.CaptureTest.testCaptureFromStub":334,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":100,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":357,"org.easymock.tests.UsageTest.unexpectedCallWithArray":29,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":94,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":169,"org.easymock.tests2.CaptureTest.testCapture":444,"org.easymock.tests2.UsageConstraintsTest.constraints":40,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":37,"org.easymock.samples.ExampleTest.addAndChangeDocument":69,"org.easymock.tests.UsageStrictMockTest.testVerify":242,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":59,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":76,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":177,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":161,"org.easymock.tests.LimitationsTest.abstractClass":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":178,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":259}}]
