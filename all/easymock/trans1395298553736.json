[{"position":"org.easymock.internal.LastControl:92","failures":[0],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,3,40,41,42,43,4,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,1,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,5,125,126,6,127,128,129,130,131,132,133,134,135,136,137,8,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[172,172,173,173,174,175,63,176,72],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[177,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[63,176],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[178,179,25,180,3,4,79,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,5,6,134,7,137,8,138,139,140,141,142,204,205,206,207,208,209,210],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:327","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[30,33,34,38,41,211,212,81,82,83,86,100,103,110,184,190,196,200,202,125,213,134,214,152,158,164,168,170],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[26,28,215,41,113,117,119,216,217,188,192,193,195,198,125,135,7,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[218,219,220,221,222,223],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[218,219,220,221,222,223],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[240,110],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[241,242,243],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[244],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[217],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[172,172,173,173,9,224,245,246,10,247,11,12,248,13,249,250,251,14,225,15,16,17,18,19,20,252,21,26,29,30,253,31,32,254,255,33,34,35,36,256,37,38,257,85,86,87,88,89,90,91,92,93,94,95,0,96,97,98,99,100,101,102,103,104,1,105,106,258,107,108,109,110,111,112,259,260,220,117,120,121,182,183,122,123,124,261,214,143,144,145,146,147,208,151,210],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[89],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[172,172,173,173,26,256,79,86,87,90,91,92,93,98,100,101,103,104,108,109,110,117,120,121,122,123,124,262,263,264,265,266,143,144,145,146,147,151],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:52","sourceCode":"final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[267,268,269,270,271,176,66,70,272,273,274,275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[72,73,276,277],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[29,253,36,88,89,93,94,0,1],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[172,173,174,267,271],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[29,253,31,32,254,255,33,35,278,36,256,38],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[279,280],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[9,252,281,282,58,283,59,284,60,61,285,62,286,287,72,288,289,149],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":89,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":207,"org.easymock.tests2.StubTest.stubWithReturnValue":79,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":269,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":224,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":107,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":161,"org.easymock.tests2.SerializationTest.testAllMockedMethod":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":205,"org.easymock.tests.MockingTest.testPartialClassMocking":114,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":219,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":196,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":277,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":184,"org.easymock.tests.UsageExpectAndThrowTest.object":194,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":105,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":112,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":123,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":124,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":120,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":232,"org.easymock.tests.UsageStrictMockTest.range":118,"org.easymock.samples.ConstructorCalledMockTest.testTax":172,"org.easymock.samples.ExampleTest.answerVsDelegate":247,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":53,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":289,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":64,"org.easymock.tests2.UsageConstraintsTest.testNull":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":195,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":60,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":55,"org.easymock.tests2.CaptureTest.testPrimitive":31,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":203,"org.easymock.tests.UsageTest.moreThanOneArgument":125,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":264,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":222,"org.easymock.tests2.CaptureTest.testCaptureNone":34,"org.easymock.tests.UsageUnorderedTest.message":214,"org.easymock.tests.UsageVerifyTest.twoReturns":136,"org.easymock.tests2.ThreadingTest.testThreadSafe":81,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":245,"org.easymock.tests2.CaptureTest.testCapture_2617107":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":143,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":281,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":217,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":183,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":284,"org.easymock.tests2.UsageConstraintsTest.any":96,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":206,"org.easymock.tests.UsageExpectAndThrowTest.longType":187,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":74,"org.easymock.tests2.SerializationTest.testClass":72,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":39,"org.easymock.tests.LimitationsTest.mockNativeMethod":150,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":171,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":0,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":228,"org.easymock.tests2.CaptureTest.testAnd":29,"org.easymock.tests2.UsageTest.strictResetToDefault":40,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":268,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":215,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":229,"org.easymock.tests2.MockedExceptionTest.testMockedException":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":50,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":130,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":6,"org.easymock.tests2.DelegateToTest.testDelegate":212,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":188,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":15,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":61,"org.easymock.tests.MockingTest.testNicePartialClassMocking":115,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":199,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":20,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":226,"org.easymock.tests2.CaptureTest.testCaptureLast":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":208,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":94,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":70,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":106,"org.easymock.tests2.CaptureTest.testCapture1_2446744":32,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":272,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":192,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":109,"org.easymock.tests.UsageThrowableTest.throwError":137,"org.easymock.samples.ExampleTest.removeNonExistingDocument":249,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":230,"org.easymock.tests.UsageStrictMockTest.differentMethods":119,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":235,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":83,"org.easymock.tests2.MockBuilderTest.testCreateMockString":287,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":266,"org.easymock.tests.UsageExpectAndThrowTest.floatType":186,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":102,"org.easymock.tests.UsageVerifyTest.twoThrows":7,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":77,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":144,"org.easymock.samples.ExampleTest.voteAgainstRemoval":12,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":23,"org.easymock.tests2.UsageTest.niceToStrict":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":185,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":274,"org.easymock.tests2.UsageConstraintsTest.testNotNull":108,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":142,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":178,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":59,"org.easymock.tests2.MockBuilderTest.testCreateMock":285,"org.easymock.tests2.UsageTest.defaultResetToNice":2,"org.easymock.samples.ExampleTest.voteAgainstRemovals":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":167,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":227,"org.easymock.tests2.CallbackTest.callback":211,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":174,"org.easymock.tests.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":218,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":193,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":51,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":182,"org.easymock.tests.UsageOverloadedMethodTest.overloading":133,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":100,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":181,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":67,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":163,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":99,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":35,"org.easymock.tests.UsageThrowableTest.throwCheckedException":139,"org.easymock.tests2.EasyMockSupportClassTest.testAll":75,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":223,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":201,"org.easymock.tests2.CaptureTest.testCaptureAll":30,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":210,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":69,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":66,"org.easymock.tests2.UsageConstraintsTest.testMatches":101,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":68,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":265,"org.easymock.samples.ExampleTest.voteForRemovals":13,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":85,"org.easymock.tests.UsageVarargTest.allKinds":261,"org.easymock.tests2.DependencyTest.testInterfaceMocking":111,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":135,"org.easymock.samples.BasicClassMockTest.testPrintContent":246,"org.easymock.samples.ExampleTest.addDocument":248,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":141,"org.easymock.tests2.AnswerTest.stubAnswer":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":209,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":117,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":243,"org.easymock.tests2.UsageConstraintsTest.greaterThan":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":129,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":24,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.samples.ExampleTest.voteForRemoval":11,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":82,"org.easymock.tests.UsageExpectAndReturnTest.floatType":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":63,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":173,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":104,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":87,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":254,"org.easymock.tests2.SerializationTest.test":73,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":175,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":48,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":8,"org.easymock.tests2.UsageConstraintsTest.testSame":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":153,"org.easymock.samples.SupportTest.addDocument":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":204,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":241,"org.easymock.tests2.CaptureTest.testCaptureFirst":38,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":49,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":159,"org.easymock.tests.GenericTest.testPackageScope":148,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":84,"org.easymock.tests2.CaptureTest.testCapture2_2446744":37,"org.easymock.tests2.UsageTest.moreThanOneArgument":41,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":62,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":238,"org.easymock.tests.GenericTest.testBridgedEquals":244,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":275,"org.easymock.tests.UsageExpectAndReturnTest.longType":155,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":46,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":164,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":258,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":271,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":200,"org.easymock.tests2.UsageStrictMockTest.differentMethods":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":262,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":131,"org.easymock.tests2.MockedExceptionTest.testRealException":180,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":160,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":121,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":140,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":65,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":282,"org.easymock.tests2.UsageConstraintsTest.testContains":98,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":25,"org.easymock.tests2.UsageConstraintsTest.testFind":90,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":134,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":259,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":19,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":260,"org.easymock.tests.UsageExpectAndReturnTest.object":162,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":58,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests2.UsageConstraintsTest.lessThan":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":54,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":236,"org.easymock.tests.UsageTest.exactCallCountByLastCall":127,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":151,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":47,"org.easymock.tests2.CaptureTest.testCaptureRightOne":36,"org.easymock.tests2.UsageConstraintsTest.testOr":93,"org.easymock.tests.UsageRangeTest.combination":128,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":176,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":168,"org.easymock.tests2.MockBuilderTest.testWithConstructor":267,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":165,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":280,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":257,"org.easymock.tests2.UsageConstraintsTest.cmpTo":97,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":242,"org.easymock.tests2.CompareToTest.testLessThan":240,"org.easymock.tests2.UsageTest.openCallCountByLastCall":43,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":4,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":57,"org.easymock.tests2.CaptureTest.testCaptureFromStub":256,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":283,"org.easymock.tests.UsageTest.unexpectedCallWithArray":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":191,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":138,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":270,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":233,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":166,"org.easymock.tests2.CaptureTest.testCapture":278,"org.easymock.tests2.UsageConstraintsTest.constraints":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":22,"org.easymock.samples.ExampleTest.addAndChangeDocument":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":190,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":169,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":78,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":255,"org.easymock.tests2.UsageTest.resumeIfFailure":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":145,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":158,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":52}}]
