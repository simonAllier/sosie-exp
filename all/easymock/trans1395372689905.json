[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:196","sourceCode":"java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"args":"args","mockClass":"mockClass","cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,77,78,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[89],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[99,100],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[50,69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[101,102,103],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,2,77,77,78,78,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[137],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[138,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[140,141,142,143,138,139,144,104,145,146,147,148,40,149,150,151,152,153,99,154,155,42,43,44,45,156,157,158,105,106,159,160,107,108,109,110,161,162,163,164,165,111,166,112,113,167,114,115,168,169,170,171,172,116,117,118,46,47,48,49,50,51,52,53,54,55,173,174,175,176,177,178,179,180,181,182,183,119,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,56,203,204,205,206,207,208,209,210,211,212,213,0,214,215,216,217,218,219,1,220,221,222,223,224,57,58,59,60,61,225,62,63,226,2,64,65,227,66,67,68,69,70,71,72,73,74,75,228,229,76,77,77,78,78,230,231,232,233,234,235,236,120,121,122,123,124,237,238,239,240,3,241,242,243,4,244,245,246,247,125,248,249,250,251,252,253,254,255,256,81,257,258,259,260,261,6,7,8,262,263,264,82,265,266,267,9,268,269,270,271,83,272,273,84,274,275,276,277,278,126,127,279,280,128,281,10,282,129,130,131,132,133,283,284,285,286,287,85,87,288,289,290,291,88,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,313,314,315,316,32,317,318,319,320,321,322,323,324,325,326,134,135,33,327,34,35,36,37,38,39,136,328,89,90,91,92,329,330,93,95,96,97,98],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[154,108,171,288],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[140,143,138,139,144,331,104,145,146,147,148,40,149,41,150,152,153,99,154,155,42,43,44,45,156,332,157,158,105,106,159,160,107,108,109,110,161,162,164,165,111,166,112,113,167,114,115,168,169,170,171,172,116,117,118,46,47,49,50,51,52,53,54,55,173,174,175,176,177,178,179,180,181,182,183,119,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,56,203,205,206,207,209,210,211,212,213,0,214,215,216,217,218,219,1,220,221,222,223,224,57,58,59,60,61,225,62,63,226,2,64,65,227,66,67,68,69,70,71,72,73,74,228,229,76,333,77,78,334,230,335,231,232,233,234,336,235,236,79,80,120,121,122,123,124,237,238,239,240,3,241,242,243,4,246,337,247,125,248,249,250,251,252,253,254,255,81,258,260,261,82,265,267,9,270,126,127,279,280,128,281,10,282,129,130,131,132,133,283,284,285,286,287,85,86,338,339,340,341,342,343,344,345,346,347,288,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,313,314,315,316,32,317,318,319,134,135,33,327,34,35,36,37,38,39,136,328,90,91,92,330,348,349,350,351,352,353],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[354,355,356],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.LastControl:92","failures":[159,160,110,161,163,168,173,175,183],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[101,102,103],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[357,358,359,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[361],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[140,143,138,139,144,331,104,145,146,147,148,40,149,41,152,153,99,154,155,156,157,158,363,364,365,366,105,106,159,160,107,108,109,110,161,162,164,165,111,166,112,113,167,114,115,168,169,170,172,116,117,118,46,49,50,54,55,367,173,174,175,176,177,178,179,180,181,182,183,119,184,185,201,202,56,203,205,206,207,209,210,211,212,213,0,214,215,216,217,218,219,1,220,221,222,223,224,57,59,60,62,63,226,2,64,65,227,66,67,68,70,71,73,228,231,232,233,234,336,235,236,120,121,122,123,124,237,238,239,240,3,241,243,4,246,337,247,125,248,249,250,251,368,252,253,254,255,81,258,259,260,261,369,82,269,126,127,279,280,128,281,10,282,129,130,131,132,133,283,284,285,286,287,85,86,338,339,340,341,342,344,345,346,347,288,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,313,314,315,316,32,317,318,319,326,134,135,33,327,34,35,36,37,38,39,136,328,90,91,92,329,370,330,348,349,350,94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[195,220],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[104,154,156,157,105,106,159,160,107,108,109,110,161,162,163,164,165,111,166,112,113,167,114,115,168,169,170,171,172,116,117,118,173,174,175,176,177,178,179,180,181,182,183,119,184,185,70,120,121,122,123,124,3,247,125,126,127,279,280,128,288,312,134,135,136,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[371],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[158,371],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[173,174,175,176,177,178,179,180,182,183,119,184,185,372],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[103],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,2,3,5,10,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":160,"org.easymock.tests2.UsageTest.argumentsOrdered":222,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":31,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":240,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":187,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":218,"org.easymock.tests2.StubTest.stubWithReturnValue":2,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":333,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":301,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":172,"org.easymock.tests2.SerializationTest.testAllMockedMethod":41,"org.easymock.tests2.DelegateToTest.testReturnException":205,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":238,"org.easymock.tests.MockingTest.testPartialClassMocking":90,"org.easymock.samples.SupportTest.voteForRemovals":230,"org.easymock.tests.MockClassControlTest.testToString":95,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":271,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":23,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":11,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":43,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":141,"org.easymock.tests.UsageExpectAndThrowTest.object":21,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":229,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":169,"org.easymock.tests2.DelegateToTest.testWrongClass":207,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":134,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":135,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":162,"org.easymock.tests2.UsageTest.wrongArguments":216,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":126,"org.easymock.tests.UsageStrictMockTest.range":249,"org.easymock.samples.ConstructorCalledMockTest.testTax":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":254,"org.easymock.samples.ExampleTest.answerVsDelegate":232,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":195,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":84,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":58,"org.easymock.tests2.UsageConstraintsTest.testNull":108,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":22,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":197,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":51,"org.easymock.tests2.CaptureTest.testPrimitive":176,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":128,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":317,"org.easymock.tests.UsageTest.moreThanOneArgument":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":253,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":131,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":278,"org.easymock.tests2.CaptureTest.testCaptureNone":181,"org.easymock.tests.UsageUnorderedTest.message":312,"org.easymock.tests.UsageVerifyTest.twoReturns":282,"org.easymock.tests.UsageVarargTest.varargByteAccepted":346,"org.easymock.tests2.ThreadingTest.testThreadSafe":152,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":320,"org.easymock.tests.UsageTest.argumentsOrdered":318,"org.easymock.tests.UsageVarargTest.varargIntAccepted":340,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":350,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":291,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":120,"org.easymock.tests2.CaptureTest.testCapture_2617107":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":356,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":280,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":50,"org.easymock.tests2.UsageConstraintsTest.any":164,"org.easymock.tests2.StubTest.stub":226,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":239,"org.easymock.tests.UsageExpectAndThrowTest.longType":14,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":101,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":145,"org.easymock.tests2.SerializationTest.testClass":40,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":186,"org.easymock.tests.LimitationsTest.mockNativeMethod":82,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":311,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":87,"org.easymock.tests2.AnswerTest.answer":140,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":213,"org.easymock.tests2.CaptureTest.testAnd":173,"org.easymock.tests2.UsageTest.strictResetToDefault":214,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":71,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":137,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":148,"org.easymock.tests2.NameTest.nameForMocksControl":366,"org.easymock.tests2.MockedExceptionTest.testMockedException":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":192,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":32,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":324,"org.easymock.tests2.DelegateToTest.testDelegate":209,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":332,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":15,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":26,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":68,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":357,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":354,"org.easymock.tests2.CaptureTest.testCaptureLast":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":326,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":63,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":287,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":170,"org.easymock.tests.MockingTest.testTwoMocks":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":325,"org.easymock.tests2.CaptureTest.testCapture1_2446744":177,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":24,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":19,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":221,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":117,"org.easymock.tests.UsageThrowableTest.throwError":33,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":358,"org.easymock.tests.UsageStrictMockTest.differentMethods":250,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":273,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":99,"org.easymock.tests2.MockBuilderTest.testCreateMockString":55,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":93,"org.easymock.tests.UsageExpectAndThrowTest.floatType":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":133,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":167,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":143,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":44,"org.easymock.samples.PartialClassMockTest.testGetArea":76,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":121,"org.easymock.samples.ExampleTest.voteAgainstRemoval":234,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":277,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":276,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":73,"org.easymock.tests2.UsageTest.niceToStrict":217,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":12,"org.easymock.tests2.UsageConstraintsTest.testNotNull":116,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":201,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":39,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":49,"org.easymock.tests2.UsageTest.defaultResetToNice":220,"org.easymock.tests2.MockBuilderTest.testCreateMock":53,"org.easymock.samples.ExampleTest.voteAgainstRemovals":231,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":307,"org.easymock.tests.UsageVarargTest.differentLength":343,"org.easymock.tests2.CallbackTest.callback":158,"org.easymock.tests.UsageTest.openCallCountByLastCall":316,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":20,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":193,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":361,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":105,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":329,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":279,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":252,"org.easymock.tests.UsageCallCountTest.tooFewCalls":348,"org.easymock.tests.UsageOverloadedMethodTest.overloading":243,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":9,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":303,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":61,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":102,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":166,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":182,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":255,"org.easymock.tests.UsageThrowableTest.throwCheckedException":36,"org.easymock.tests2.EasyMockSupportClassTest.testAll":42,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":86,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":28,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":212,"org.easymock.tests2.CaptureTest.testCaptureAll":174,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":328,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":62,"org.easymock.tests.MockNameTest.defaultName":256,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":151,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":100,"org.easymock.tests2.UsageConstraintsTest.testMatches":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":225,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":132,"org.easymock.tests.ObjectMethodsTest.testHashCode":290,"org.easymock.samples.ExampleTest.voteForRemovals":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":355,"org.easymock.tests2.NameTest.nameForNiceMock":365,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":155,"org.easymock.tests.UsageVarargTest.allKinds":288,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":281,"org.easymock.tests2.DependencyTest.testInterfaceMocking":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":286,"org.easymock.samples.BasicClassMockTest.testPrintContent":80,"org.easymock.samples.ExampleTest.addDocument":336,"org.easymock.tests2.DelegateToTest.testStubDelegate":206,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":38,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":144,"org.easymock.tests2.AnswerTest.stubAnswer":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":241,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":208,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":125,"org.easymock.tests2.UsageConstraintsTest.greaterThan":114,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":259,"org.easymock.tests.UsageVarargTest.varargLongAccepted":345,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":74,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":251,"org.easymock.samples.ExampleTest.voteForRemoval":233,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":153,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":310,"org.easymock.tests.UsageExpectAndReturnTest.floatType":294,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":274,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":69,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":57,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":78,"org.easymock.tests.UsageThrowableTest.noUpperLimit":327,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":115,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":81,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":106,"org.easymock.tests2.SerializationTest.test":149,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":178,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":190,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":293,"org.easymock.tests2.UsageConstraintsTest.testSame":109,"org.easymock.samples.SupportTest.addDocument":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":237,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":204,"org.easymock.tests2.CaptureTest.testCaptureFirst":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":191,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":224,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":299,"org.easymock.tests.GenericTest.testPackageScope":85,"org.easymock.tests2.UsageTest.moreThanOneArgument":215,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":154,"org.easymock.tests2.CaptureTest.testCapture2_2446744":184,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":323,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":54,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":347,"org.easymock.tests.GenericTest.testBridgedEquals":362,"org.easymock.tests2.NameTest.nameForMock":363,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":352,"org.easymock.tests.UsageExpectAndReturnTest.longType":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":283,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":304,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":29,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":257,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":171,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":27,"org.easymock.tests2.UsageStrictMockTest.differentMethods":147,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":296,"org.easymock.tests.UsageCallCountTest.tooManyCalls":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":25,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":261,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":330,"org.easymock.tests2.MockedExceptionTest.testRealException":203,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":300,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":16,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":59,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":370,"org.easymock.tests2.NameTest.nameForStrictMock":364,"org.easymock.tests2.UsageConstraintsTest.testContains":111,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":56,"org.easymock.tests2.UsageConstraintsTest.testFind":107,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":4,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":156,"org.easymock.tests.MockTypeTest.fromEasyMockClass":272,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":67,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":246,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":157,"org.easymock.tests.UsageExpectAndReturnTest.object":302,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":70,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":47,"org.easymock.tests2.UsageStrictMockTest.range":146,"org.easymock.tests2.UsageConstraintsTest.lessThan":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":196,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":342,"org.easymock.tests.UsageTest.exactCallCountByLastCall":319,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":136,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":189,"org.easymock.tests2.CaptureTest.testCaptureRightOne":183,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":321,"org.easymock.tests2.UsageConstraintsTest.testOr":110,"org.easymock.tests.UsageRangeTest.combination":258,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":338,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":65,"org.easymock.tests.UsageTest.wrongArguments":315,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":267,"org.easymock.tests.MockClassControlTest.testHashCode":98,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":297,"org.easymock.tests2.EasyMockSupportTest.testVerify":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":305,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":322,"org.easymock.tests.UsageVarargTest.varargShortAccepted":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":265,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":7,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":210,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":367,"org.easymock.tests2.UsageConstraintsTest.cmpTo":165,"org.easymock.tests.UsageVarargTest.varargCharAccepted":341,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":142,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":5,"org.easymock.tests2.UsageTest.openCallCountByLastCall":219,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":1,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":199,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":6,"org.easymock.tests2.CaptureTest.testCaptureFromStub":119,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":48,"org.easymock.tests.UsageTest.unexpectedCallWithArray":314,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":18,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":247,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":359,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":306,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":248,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":72,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":97,"org.easymock.tests2.UsageConstraintsTest.constraints":159,"org.easymock.samples.ExampleTest.addAndChangeDocument":236,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":17,"org.easymock.tests.CapturesMatcherTest.test":372,"org.easymock.tests.UsageStrictMockTest.testVerify":368,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":262,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":335,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":45,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":284,"org.easymock.tests2.UsageTest.resumeIfFailure":223,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":122,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":298,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":83,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":123,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":339,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":194}}]
