[{"position":"org.easymock.internal.matchers.Equals:37","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[43],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if (int != int) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"length":"i","initArgs":"methodArgs","paramTypes":"methodTypes"}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[9,10,180,181,181,182,182,183,184,185,186,187,188,189,190,191,192,193,194,65,195,196,197,198,199,200,201,202,70,203,71,72,204,205,206,207,208,73,209,74,210,211,212,213,214,75,215,216,79,217,218,219,220,221,222,223,224,225,226],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[36,37,227],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[228],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[229,230,231,232,233,234],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[33,235,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[65,66,195,236],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:541","sourceCode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.replay();\n}","type":"CtForEachImpl"},"failures":[0,8,9,10,11,12,180,181,181,182,182,13,15,16,191,192,193,194,54,55,56,57,58,59,60,237,61,62,63,64,238,71,72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[239,65,240,241,242,243,244,245,246],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[9,10,180,181,181,182,182,183,184,185,186,187,188,189,190,191,192,193,194,65,195,196,197,199,200,201,202,70,203,71,72,204,205,206,207,208,73,209,74,210,211,212,213,214,75,215,216,79,217,218,219,220,221,222,223,224,225,226],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[180,181,182,192,193],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[200,70,214,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[247,248,249],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[65,66,195,236],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[229,230,231,232,233,234],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[184,239,65,240,241,242,251,252,245,246],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[253],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[254,20,21,23,27,28,255,39,42,256,257,258,259,260,261,262,52,55,57,59,60,62,63,64,205,73,75,77,263,82,84,264,89,90,265,147,148,150,151,152,153,154],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[266,267],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[268,269,270],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[247,248,249],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[239,187,190,271,272,273,274,275,245,276,277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[278],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[180,70,71,72,206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[279,280,281],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[65,66,195,236],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[282,283],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:68","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":39,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":250,"org.easymock.tests2.UsageTest.argumentsOrdered":255,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":92,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":100,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":28,"org.easymock.tests2.StubTest.stubWithReturnValue":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":245,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":262,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":125,"org.easymock.tests2.SerializationTest.testAllMockedMethod":195,"org.easymock.tests2.DelegateToTest.testReturnException":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":98,"org.easymock.tests.MockingTest.testPartialClassMocking":223,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":230,"org.easymock.samples.SupportTest.voteForRemovals":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":282,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":167,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":236,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":155,"org.easymock.tests.UsageExpectAndThrowTest.object":165,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":260,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":240,"org.easymock.tests2.DelegateToTest.testWrongClass":46,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":80,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":81,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":106,"org.easymock.tests.UsageStrictMockTest.range":89,"org.easymock.samples.ConstructorCalledMockTest.testTax":181,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":237,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":185,"org.easymock.tests2.UsageConstraintsTest.testNull":40,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":166,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":71,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":62,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":110,"org.easymock.tests.UsageTest.moreThanOneArgument":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":174,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":177,"org.easymock.tests2.CaptureTest.testCaptureNone":51,"org.easymock.tests.UsageUnorderedTest.message":82,"org.easymock.tests.UsageVerifyTest.twoReturns":85,"org.easymock.tests.UsageVarargTest.varargByteAccepted":144,"org.easymock.tests2.ThreadingTest.testThreadSafe":35,"org.easymock.tests.UsageTest.argumentsOrdered":265,"org.easymock.tests.UsageVarargTest.varargIntAccepted":139,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":244,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":199,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":109,"org.easymock.tests2.UsageConstraintsTest.any":257,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":203,"org.easymock.tests2.StubTest.stub":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":99,"org.easymock.tests.UsageExpectAndThrowTest.longType":158,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":280,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":268,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":19,"org.easymock.tests2.SerializationTest.testClass":65,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":16,"org.easymock.tests.LimitationsTest.mockNativeMethod":220,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":13,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":217,"org.easymock.tests2.AnswerTest.answer":67,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":135,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":198,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests2.UsageTest.strictResetToDefault":25,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":213,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":58,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests2.DelegateToTest.testDelegate":47,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":228,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":225,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":159,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":208,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":72,"org.easymock.tests.MockingTest.testNicePartialClassMocking":224,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":170,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":210,"org.easymock.tests2.CaptureTest.testCaptureLast":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":101,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":42,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":190,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":261,"org.easymock.tests.MockingTest.testTwoMocks":222,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":163,"org.easymock.tests.UsageThrowableTest.throwError":147,"org.easymock.tests.UsageStrictMockTest.differentMethods":90,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":37,"org.easymock.tests2.MockBuilderTest.testCreateMockString":207,"org.easymock.tests.UsageExpectAndThrowTest.floatType":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":179,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":278,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":68,"org.easymock.tests.UsageVerifyTest.twoThrows":84,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":193,"org.easymock.samples.PartialClassMockTest.testGetArea":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":112,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":75,"org.easymock.tests2.UsageTest.niceToStrict":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":156,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":273,"org.easymock.tests2.UsageConstraintsTest.testNotNull":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":154,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":249,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":70,"org.easymock.tests2.MockBuilderTest.testCreateMock":204,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":131,"org.easymock.tests2.CallbackTest.callback":23,"org.easymock.tests.UsageTest.openCallCountByLastCall":94,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":229,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":164,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":108,"org.easymock.tests.UsageOverloadedMethodTest.overloading":77,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":105,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":76,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":127,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":188,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":269,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":258,"org.easymock.tests.UsageThrowableTest.throwCheckedException":151,"org.easymock.tests2.EasyMockSupportClassTest.testAll":191,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":79,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":234,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":172,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":196,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":189,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":187,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":178,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":243,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":38,"org.easymock.tests.UsageVarargTest.allKinds":146,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":83,"org.easymock.tests2.DependencyTest.testInterfaceMocking":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":242,"org.easymock.samples.BasicClassMockTest.testPrintContent":10,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.DelegateToTest.testStubDelegate":45,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":153,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":254,"org.easymock.tests2.AnswerTest.stubAnswer":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":102,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":87,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":252,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":215,"org.easymock.tests.UsageVarargTest.varargLongAccepted":143,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":91,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":36,"org.easymock.tests.UsageExpectAndReturnTest.floatType":118,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":184,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":182,"org.easymock.tests.UsageThrowableTest.noUpperLimit":148,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":221,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":24,"org.easymock.tests2.SerializationTest.test":66,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":246,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":270,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":56,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":117,"org.easymock.samples.SupportTest.addDocument":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":97,"org.easymock.tests2.CaptureTest.testCaptureFirst":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":57,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":32,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":123,"org.easymock.tests.GenericTest.testPackageScope":216,"org.easymock.tests2.UsageTest.moreThanOneArgument":26,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":205,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":145,"org.easymock.tests.GenericTest.testBridgedEquals":283,"org.easymock.tests.UsageExpectAndReturnTest.longType":119,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":54,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":206,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":128,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":277,"org.easymock.tests2.UsageStrictMockTest.differentMethods":21,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":171,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":120,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":281,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":124,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":18,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":186,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":200,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":183,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":78,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":74,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests.UsageExpectAndReturnTest.object":126,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":259,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":212,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":201,"org.easymock.tests2.UsageStrictMockTest.range":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":241,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":141,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":253,"org.easymock.tests.UsageTest.exactCallCountByLastCall":96,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":251,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":55,"org.easymock.tests2.CaptureTest.testCaptureRightOne":52,"org.easymock.tests2.UsageConstraintsTest.testOr":41,"org.easymock.tests.UsageRangeTest.combination":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":239,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":73,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":132,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":137,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":104,"org.easymock.tests2.MockBuilderTest.testWithConstructor":274,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":226,"org.easymock.tests2.EasyMockSupportTest.testVerify":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":129,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":279,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":267,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":103,"org.easymock.tests.UsageVarargTest.varargShortAccepted":142,"org.easymock.tests.UsageVarargTest.varargCharAccepted":140,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":17,"org.easymock.tests2.UsageTest.openCallCountByLastCall":29,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":30,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":247,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":64,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":202,"org.easymock.tests.UsageTest.unexpectedCallWithArray":232,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":162,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":231,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":150,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":276,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":130,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":214,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":88,"org.easymock.samples.ExampleTest.addAndChangeDocument":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":161,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":133,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":194,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":86,"org.easymock.tests2.UsageTest.resumeIfFailure":31,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":113,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":218,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":60,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":138}}]
