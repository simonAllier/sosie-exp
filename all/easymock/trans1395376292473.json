[{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[41,42,43,44,45],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,0,0,1,1,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,13,16,26,32,74,75,76,77,78,79,80,81,82,83,84,35,85,37,86,87,88,38,89,90,39],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[91,92,93,94,95,96,97,41,98,42,43,99,100,101,45],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[41,102,103,45,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:205","sourceCode":"break","type":"CtBreakImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[97,105,41,102,106,76,78,107,45,104],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[108,109,110],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[63,70,82,111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[92,112,105,41,102,103,42,43,113,114,115,44,116,107,45,104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[117],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[118],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[46,47,48,119,120,49,50,51,52,121,53,54,55,56,122,123,57,124,125,126,127,128,129,0,0,1,1,58,59,60,61,63,64,130,65,66,67,68,69,70,72,13,16,26,32,74,75,76,77,78,79,80,131,81,82,83,84,132,111,133,134,35,135,136,85,37,86,87,88,38,89,90,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[137,77,138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[139,140,141,41,102,142,143,144,103,145,146,147,45,104,148,149,150,151,152,153,154,155,156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[157,158,159,160,161,162,163,164,165,166,167,168,135,136,85,169],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[170],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[171,172],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[173,174,175,176,177,178,179,180,181,182,183,184,185,48,186,158,187,188,189,190,191,192,193,194,195,196,197,198,91,50,51,52,53,159,160,161,162,163,164,199,200,201,202,203,204,205,206,207,208,209,54,55,92,210,211,212,213,214,215,112,93,94,140,141,95,96,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,122,237,238,97,105,239,41,102,240,106,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,144,278,279,280,281,282,283,284,285,103,42,43,286,287,288,289,290,123,57,124,125,126,127,128,129,291,292,293,294,295,296,297,145,298,299,300,301,302,303,304,305,306,307,308,0,0,1,1,309,58,59,60,61,63,65,66,67,68,69,70,72,310,311,312,313,314,315,316,317,318,13,16,26,32,319,320,321,168,322,323,324,325,326,327,328,329,116,99,330,137,146,147,117,100,101,331,332,74,75,333,76,77,78,79,80,81,82,83,84,133,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,107,349,45,104,350,351,148,149,352,150,353,151,152,354,355,356,357,153,358,108,154,138,359,155,360,361,109,362,363,364,156,110,35,365,366,367,368,369,135,136,85,169,370,37,371,86,87,88,38,89,372,90,39,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[6,391,392,393,394,395,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[283,298,300,301,303,308],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[396,397,248,289,321],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","threadSafe":"shouldBeUsedInOneThread","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,1,8,9,398,399],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1507","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[352,150,354,355,360,361],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[93,97,400,401,402,403],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[404,405,166,167],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[406,196,299,373,375,407,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":352,"org.easymock.tests2.UsageTest.argumentsOrdered":101,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":215,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":344,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":137,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":309,"org.easymock.tests2.DelegateToTest.testReturnException":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":160,"org.easymock.tests.MockingTest.testPartialClassMocking":50,"org.easymock.tests.MockClassControlTest.testToString":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":217,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":113,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":391,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":355,"org.easymock.tests2.UsageTest.wrongArguments":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":286,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":184,"org.easymock.samples.ExampleTest.answerVsDelegate":299,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":47,"org.easymock.tests2.UsageConstraintsTest.testNull":353,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":76,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":129,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":343,"org.easymock.tests2.CaptureTest.testPrimitive":380,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":290,"org.easymock.tests.UsageTest.moreThanOneArgument":112,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":236,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":293,"org.easymock.tests.UsageTest.argumentsOrdered":96,"org.easymock.tests.UsageVarargTest.varargIntAccepted":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":395,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":61,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":406,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":285,"org.easymock.tests.ReplayStateInvalidUsageTest.times":254,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":365,"org.easymock.tests2.AnswerTest.answer":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":318,"org.easymock.tests2.CaptureTest.testAnd":377,"org.easymock.tests2.UsageTest.strictResetToDefault":329,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":5,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":292,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":338,"org.easymock.tests2.DelegateToTest.testDelegate":376,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":214,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":118,"org.easymock.tests2.CaptureTest.testCapture1_2446744":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":230,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":316,"org.easymock.tests.UsageThrowableTest.throwError":187,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":295,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":398,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":34,"org.easymock.samples.PartialClassMockTest.testGetArea":58,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":218,"org.easymock.tests2.UsageTest.niceToStrict":330,"org.easymock.tests2.ThreadingTest.testChangeDefault":171,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":65,"org.easymock.tests2.MockBuilderTest.testCreateMock":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":29,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":402,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":226,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":405,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":182,"org.easymock.tests.UsageOverloadedMethodTest.overloading":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":25,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":108,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":269,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":296,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":358,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":386,"org.easymock.tests.MockClassControlTest.testEquals":128,"org.easymock.tests2.EasyMockSupportClassTest.testAll":13,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":55,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":317,"org.easymock.tests2.CaptureTest.testCaptureAll":378,"org.easymock.tests2.UsageConstraintsTest.testMatches":154,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":294,"org.easymock.samples.ExampleTest.voteForRemovals":303,"org.easymock.tests.UsageVarargTest.allKinds":209,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":103,"org.easymock.samples.BasicClassMockTest.testPrintContent":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":213,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":193,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":347,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":164,"org.easymock.tests2.UsageConstraintsTest.greaterThan":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":14,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":278,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":84,"org.easymock.samples.ExampleTest.voteForRemoval":300,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":132,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":79,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":48,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":328,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":336,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":159,"org.easymock.tests2.CaptureTest.testCaptureFirst":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":337,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":332,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":91,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":265,"org.easymock.tests2.CaptureTest.testCapture2_2446744":389,"org.easymock.tests2.UsageTest.moreThanOneArgument":116,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":313,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":70,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":208,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":180,"org.easymock.tests.UsageExpectAndReturnTest.longType":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":210,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":334,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":71,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":235,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":362,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":291,"org.easymock.tests.UsageCallCountTest.tooManyCalls":181,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":222,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":192,"org.easymock.tests.MockingTest.testNiceClassMocking":121,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":88,"org.easymock.tests.MockingTest.testClassMocking":120,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":174,"org.easymock.tests2.UsageConstraintsTest.testContains":153,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":62,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":85,"org.easymock.tests2.UsageConstraintsTest.testFind":150,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":145,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":237,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":320,"org.easymock.tests.UsageExpectAndReturnTest.object":268,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":342,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":392,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":203,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":245,"org.easymock.tests.UsageTest.exactCallCountByLastCall":216,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":186,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":36,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":199,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":196,"org.easymock.tests.MockClassControlTest.testHashCode":127,"org.easymock.tests2.EasyMockSupportTest.testVerify":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":23,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":143,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":404,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":195,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":315,"org.easymock.tests.UsageVarargTest.varargCharAccepted":202,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":348,"org.easymock.tests2.UsageTest.openCallCountByLastCall":146,"org.easymock.tests.DefaultClassInstantiatorTest.object":122,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":345,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":243,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":224,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":190,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":126,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":82,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":223,"org.easymock.tests.CapturesMatcherTest.test":170,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":165,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":32,"org.easymock.tests2.UsageTest.resumeIfFailure":331,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":162,"org.easymock.tests2.StubTest.stubWithReturnValue":168,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":267,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":363,"org.easymock.tests2.SerializationTest.testAllMockedMethod":86,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":403,"org.easymock.samples.SupportTest.voteForRemovals":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":229,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":397,"org.easymock.tests.UsageExpectAndThrowTest.object":227,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":361,"org.easymock.tests2.DelegateToTest.testWrongClass":375,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":242,"org.easymock.tests.UsageStrictMockTest.range":41,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":228,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":10,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":95,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":183,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":400,"org.easymock.tests2.CaptureTest.testCaptureNone":385,"org.easymock.tests.UsageUnorderedTest.message":92,"org.easymock.tests.UsageVerifyTest.twoReturns":43,"org.easymock.tests.UsageVarargTest.varargByteAccepted":207,"org.easymock.tests2.ThreadingTest.testThreadSafe":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":27,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":178,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":59,"org.easymock.tests2.CaptureTest.testCapture_2617107":379,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":289,"org.easymock.tests2.UsageConstraintsTest.any":356,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":253,"org.easymock.tests2.StubTest.stub":321,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":161,"org.easymock.tests.UsageExpectAndThrowTest.longType":220,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":252,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":349,"org.easymock.tests2.SerializationTest.testClass":37,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":370,"org.easymock.tests.LimitationsTest.mockNativeMethod":53,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":56,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":277,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":350,"org.easymock.tests2.NameTest.nameForMocksControl":325,"org.easymock.tests2.MockedExceptionTest.testMockedException":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":15,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":141,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":221,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":74,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":68,"org.easymock.tests.MockingTest.testNicePartialClassMocking":51,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":78,"org.easymock.tests2.CaptureTest.testCaptureLast":384,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":39,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":354,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":109,"org.easymock.tests.MockingTest.testTwoMocks":49,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":225,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":156,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":172,"org.easymock.samples.ExampleTest.removeNonExistingDocument":304,"org.easymock.tests.UsageStrictMockTest.differentMethods":102,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":250,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":312,"org.easymock.tests2.MockBuilderTest.testCreateMockString":72,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":17,"org.easymock.tests.UsageExpectAndThrowTest.floatType":219,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":12,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":367,"org.easymock.tests.UsageVerifyTest.twoThrows":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":26,"org.easymock.samples.ExampleTest.voteAgainstRemoval":301,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":83,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":3,"org.easymock.tests2.UsageConstraintsTest.testNotNull":364,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":194,"org.easymock.tests2.UsageTest.defaultResetToNice":117,"org.easymock.samples.ExampleTest.voteAgainstRemovals":298,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":273,"org.easymock.tests.UsageVarargTest.differentLength":204,"org.easymock.tests2.CallbackTest.callback":133,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":399,"org.easymock.tests.UsageTest.openCallCountByLastCall":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":351,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":288,"org.easymock.tests.UsageCallCountTest.tooFewCalls":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":89,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":185,"org.easymock.tests.UsageThrowableTest.throwCheckedException":191,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":401,"org.easymock.tests.MockingTest.testStrictClassMocking":119,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":158,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":90,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":38,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":372,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":369,"org.easymock.tests.ObjectMethodsTest.testHashCode":244,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":394,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":314,"org.easymock.tests2.NameTest.nameForNiceMock":324,"org.easymock.tests2.DependencyTest.testInterfaceMocking":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":393,"org.easymock.samples.ExampleTest.addDocument":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":33,"org.easymock.tests2.DelegateToTest.testStubDelegate":374,"org.easymock.tests2.AnswerTest.stubAnswer":368,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":105,"org.easymock.tests.UsageVarargTest.varargLongAccepted":206,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":240,"org.easymock.tests.UsageExpectAndReturnTest.floatType":260,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":35,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.UsageThrowableTest.noUpperLimit":188,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":155,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":148,"org.easymock.tests2.SerializationTest.test":371,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":382,"org.easymock.tests2.UsageConstraintsTest.testSame":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":259,"org.easymock.samples.SupportTest.addDocument":307,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":18,"org.easymock.tests.GenericTest.testPackageScope":54,"org.easymock.tests2.NameTest.nameForMock":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":270,"org.easymock.tests2.UsageStrictMockTest.differentMethods":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":262,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":231,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":280,"org.easymock.tests2.MockedExceptionTest.testRealException":169,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":107,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":287,"org.easymock.tests2.NameTest.nameForStrictMock":323,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":130,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":77,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":134,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":114,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":360,"org.easymock.tests.ErrorMessageTest.testGetters":115,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":63,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.UsageConstraintsTest.lessThan":110,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":335,"org.easymock.tests2.CaptureTest.testCaptureRightOne":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":22,"org.easymock.tests2.UsageConstraintsTest.testOr":152,"org.easymock.tests.UsageRangeTest.combination":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":75,"org.easymock.tests.UsageTest.wrongArguments":94,"org.easymock.tests2.MockBuilderTest.testWithConstructor":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":19,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":271,"org.easymock.tests.UsageVarargTest.varargShortAccepted":205,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":179,"org.easymock.tests2.UsageConstraintsTest.cmpTo":357,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":147,"org.easymock.tests2.CaptureTest.testCaptureFromStub":388,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":247,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":64,"org.easymock.tests.UsageTest.unexpectedCallWithArray":93,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":97,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":177,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":272,"org.easymock.tests2.UsageConstraintsTest.constraints":149,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":239,"org.easymock.samples.ExampleTest.addAndChangeDocument":305,"org.easymock.tests.UsageStrictMockTest.testVerify":106,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":306,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":211,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":383,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":283,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":264,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":284,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":44,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":340}}]
