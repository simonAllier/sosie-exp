[{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:167","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getAllInterfacesForClass(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[16,17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[19,20,21,22,23,24,25,26],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[27,28,29,30,31,32,33],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[34],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","threadSafe":"shouldBeUsedInOneThread","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[36,37,8,10,38,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[40,27,41,28,29,30,42,43,33,44],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[36,37,8,10,38,39],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[45],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:134","failures":[46],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[47,48,49,50,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[19,52,53,54,55,56,57,58,59,60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[40,27,41,61,28,29,30,42,31,43,33,44,62],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[63,64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[65,66,40,27,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,41,97,98,33,44,99,100],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[101,1,102,103,104,36,105,106,107,37,108,5,109,6,7,8,110,9,111,112,10,38,39,113,14,114,115],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[117,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[40,27,41,28,29,30,42,43,33,44],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[118,119,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[27,28,29,30,31,32,33],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[121,122,123,67,124,68,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,0,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[156,157,158,159,160,161,162,118,119,120,163,164,165],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[166,167,168,169,170,171,172,122,173,174,175,176,177,178,179,180,181,182,126,183,184,185,186,187],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[188,189,190,191,192],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[166,193,19,194,195,196,197,198,199,167,200,201,202,203,204,205,168,169,170,171,172,121,122,173,174,175,176,177,206,207,208,69,178,179,180,181,182,125,126,183,184,185,186,187,209,210,101,211,1,102,212,213,214,215,216,217,52,218,219,103,2,220,221,222,223,224,3,4,225,226,227,228,229,230,231,232,35,233,234,235,236,63,16,237,238,239,240,17,64,241,18,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,127,128,129,130,53,260,54,20,21,22,23,24,25,157,261,158,159,160,161,162,118,262,119,163,164,263,165,264,265,266,131,267,268,132,269,133,270,271,272,273,274,55,117,56,57,275,58,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,144,145,147,148,291,292,293,294,295,296,297,5,109,6,7,298,299,300,301,302,303,304,305,306,47,307,48,308,59,309,310,311,312,313,314,49,50,315,51,316,317,8,110,318,9,111,319,320,321,112,10,11,322,323,12,13,324,325,326,327,328,329,330,331,149,332,333,150,151,334,335,336,337,338,339,340,341,342,343,344,345,60,346,26,347,348,349,15,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,152,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,114,115,454],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[248,36,37,39,455],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[188],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[166,193,19,194,195,196,197,198,199,167,456,457,200,201,458,65,65,66,66,202,203,204,205,40,27,168,169,170,171,172,121,122,173,174,175,176,177,459,460,206,207,461,123,67,462,208,124,68,178,179,180,181,182,125,126,183,184,185,186,187,209,210,101,211,1,102,212,214,215,216,217,52,218,219,103,2,220,221,222,223,224,3,4,225,226,227,228,463,464,229,230,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,231,232,35,233,234,235,236,63,16,237,238,239,240,17,64,241,18,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,127,128,129,130,53,260,54,20,21,22,23,24,25,157,261,158,159,160,161,162,118,262,119,163,164,263,165,264,265,266,131,267,268,132,269,133,270,271,272,273,41,274,465,55,117,56,57,275,58,134,466,135,467,468,469,136,137,44,470,138,139,471,0,276,472,473,474,475,476,477,478,479,140,480,481,141,482,142,277,278,279,280,281,282,283,284,285,286,287,288,289,290,188,189,190,191,192,143,144,145,146,147,148,291,292,293,294,295,296,297,5,109,6,7,298,299,300,301,302,303,304,305,306,47,307,48,308,59,309,310,311,312,313,314,49,50,315,51,316,317,8,110,318,9,111,319,320,321,112,10,11,322,323,12,13,324,483,484,485,486,325,326,327,328,329,330,487,331,149,332,333,150,151,334,335,336,337,338,339,340,341,342,343,344,345,60,346,26,347,348,349,15,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,152,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,488,489,490,116,491,431,492,432,433,493,434,435,436,437,438,439,440,441,442,494,495,153,154,155,496,497,498,443,444,445,446,447,448,449,450,451,452,453,499,500,501,502,503,504,505,114,115,454],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[224,269],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[500,504],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":16,"org.easymock.tests2.UsageTest.argumentsOrdered":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":321,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":307,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":221,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":166,"org.easymock.tests2.DelegateToTest.testReturnException":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":326,"org.easymock.tests.MockingTest.testPartialClassMocking":116,"org.easymock.tests.MockClassControlTest.testToString":153,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":259,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":444,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":408,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":78,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":207,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":28,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":241,"org.easymock.tests2.UsageTest.wrongArguments":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":350,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":282,"org.easymock.samples.ExampleTest.answerVsDelegate":19,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":146,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":433,"org.easymock.tests2.UsageConstraintsTest.testNull":239,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":472,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":498,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":270,"org.easymock.tests2.CaptureTest.testPrimitive":159,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":354,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":427,"org.easymock.tests.UsageTest.moreThanOneArgument":112,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":448,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":380,"org.easymock.tests.UsageVarargTest.varargIntAccepted":389,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":355,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":186,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":359,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":121,"org.easymock.tests.ReplayStateInvalidUsageTest.times":342,"org.easymock.tests2.DependencyTest.testClassMocking":459,"org.easymock.tests2.AnswerTest.answer":55,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":312,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":217,"org.easymock.tests2.CaptureTest.testAnd":157,"org.easymock.tests2.UsageTest.strictResetToDefault":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":267,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":286,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":384,"org.easymock.tests2.DelegateToTest.testDelegate":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":423,"org.easymock.tests.LimitationsTest.mockFinalMethod":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":329,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":295,"org.easymock.tests2.DependencyTest.testClassMockingSupport":460,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":114,"org.easymock.tests2.CaptureTest.testCapture1_2446744":160,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":476,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":421,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":215,"org.easymock.tests.UsageThrowableTest.throwError":399,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":336,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":145,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":450,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":96,"org.easymock.samples.PartialClassMockTest.testGetArea":458,"org.easymock.tests.MockingTest.testInterfaceMocking":431,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":356,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":429,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":409,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":83,"org.easymock.tests2.UsageTest.niceToStrict":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":468,"org.easymock.tests2.MockBuilderTest.testCreateMock":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":91,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":174,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":417,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":36,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":268,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":290,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":434,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":280,"org.easymock.tests.UsageOverloadedMethodTest.overloading":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":93,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":246,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":347,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":371,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":245,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":119,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":390,"org.easymock.tests.MockClassControlTest.testEquals":497,"org.easymock.tests2.EasyMockSupportClassTest.testAll":75,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":190,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":216,"org.easymock.tests2.CaptureTest.testCaptureAll":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":293,"org.easymock.tests.MockNameTest.defaultName":152,"org.easymock.tests2.UsageConstraintsTest.testMatches":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":449,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":334,"org.easymock.samples.ExampleTest.voteForRemovals":197,"org.easymock.tests.UsageVarargTest.allKinds":398,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":109,"org.easymock.samples.BasicClassMockTest.testPrintContent":457,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":294,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":405,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":209,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":183,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":330,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":43,"org.easymock.tests2.UsageConstraintsTest.greaterThan":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":76,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":285,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":141,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":505,"org.easymock.samples.ExampleTest.voteForRemoval":194,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":482,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":232,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":475,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":487,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":218,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":266,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":325,"org.easymock.tests2.CaptureTest.testCaptureFirst":165,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":131,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":226,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":367,"org.easymock.tests2.UsageTest.moreThanOneArgument":103,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":233,"org.easymock.tests2.CaptureTest.testCapture2_2446744":263,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":313,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":397,"org.easymock.tests.GenericTest.testBridgedEquals":192,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":441,"org.easymock.tests.UsageExpectAndReturnTest.longType":363,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":264,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":291,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":426,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":407,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":254,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":424,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":446,"org.easymock.tests.UsageCallCountTest.tooManyCalls":442,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":368,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":413,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":404,"org.easymock.tests.MockingTest.testNiceClassMocking":493,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":123,"org.easymock.tests.MockingTest.testClassMocking":489,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":435,"org.easymock.tests2.UsageConstraintsTest.testContains":244,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":204,"org.easymock.tests2.UsageConstraintsTest.testFind":238,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":279,"org.easymock.tests.MockTypeTest.fromEasyMockClass":144,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":54,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":316,"org.easymock.tests.UsageExpectAndReturnTest.object":370,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":477,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":133,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":392,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":29,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":333,"org.easymock.tests.UsageTest.exactCallCountByLastCall":324,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":303,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":443,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":381,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":27,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":387,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":376,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":26,"org.easymock.tests.MockClassControlTest.testHashCode":496,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":179,"org.easymock.tests2.EasyMockSupportTest.testVerify":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":85,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":382,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":60,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":214,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":213,"org.easymock.tests.UsageVarargTest.varargCharAccepted":391,"org.easymock.tests2.CaptureTest.testCaptureMultiple":156,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":51,"org.easymock.tests2.UsageTest.openCallCountByLastCall":222,"org.easymock.tests.DefaultClassInstantiatorTest.object":499,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":272,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":288,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":149,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":14,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":86,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":402,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":171,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":178,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":480,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":155,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":414,"org.easymock.tests.CapturesMatcherTest.test":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":377,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":451,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":154,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":94,"org.easymock.tests2.UsageTest.resumeIfFailure":225,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":328,"org.easymock.tests2.StubTest.stubWithReturnValue":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":33,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":255,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":369,"org.easymock.tests2.SerializationTest.testAllMockedMethod":465,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":311,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":37,"org.easymock.samples.SupportTest.voteForRemovals":201,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":420,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":315,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":117,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":445,"org.easymock.tests.UsageExpectAndThrowTest.object":418,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":252,"org.easymock.tests2.DelegateToTest.testWrongClass":23,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":296,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":297,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.samples.ConstructorCalledMockTest.testTax":65,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":229,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":419,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":136,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":72,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":281,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":38,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":430,"org.easymock.tests2.CaptureTest.testCaptureNone":262,"org.easymock.tests.UsageUnorderedTest.message":5,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":396,"org.easymock.tests2.ThreadingTest.testThreadSafe":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":89,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":439,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":456,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":150,"org.easymock.tests2.CaptureTest.testCapture_2617107":158,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":353,"org.easymock.tests2.UsageConstraintsTest.any":242,"org.easymock.tests2.StubTest.stub":227,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":341,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":453,"org.easymock.tests.UsageExpectAndThrowTest.longType":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":327,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":503,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":340,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests2.SerializationTest.testClass":41,"org.easymock.tests.LimitationsTest.mockNativeMethod":485,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":191,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":170,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":212,"org.easymock.tests2.NameTest.nameForMocksControl":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":172,"org.easymock.tests2.MockedExceptionTest.testMockedException":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":77,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":323,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":492,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":412,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":260,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":471,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":137,"org.easymock.tests.MockingTest.testNicePartialClassMocking":491,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":474,"org.easymock.tests2.CompareToTest.testNotComparable":34,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":168,"org.easymock.tests2.CaptureTest.testCaptureLast":118,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":61,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":115,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":64,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":68,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":253,"org.easymock.tests.MockingTest.testTwoMocks":490,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":416,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":257,"org.easymock.samples.ExampleTest.removeNonExistingDocument":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":173,"org.easymock.tests.UsageStrictMockTest.differentMethods":111,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":338,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":180,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":501,"org.easymock.tests2.ConstraintsToStringTest.andToString":107,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":35,"org.easymock.tests2.MockBuilderTest.testCreateMockString":139,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":494,"org.easymock.tests.UsageExpectAndThrowTest.floatType":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":79,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":74,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":57,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":88,"org.easymock.samples.ExampleTest.voteAgainstRemoval":195,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":48,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":481,"org.easymock.tests.LimitationsTest.privateConstructor":484,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":71,"org.easymock.tests2.UsageConstraintsTest.testNotNull":256,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":406,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":202,"org.easymock.tests2.UsageTest.defaultResetToNice":224,"org.easymock.samples.ExampleTest.voteAgainstRemovals":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":308,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":375,"org.easymock.tests.UsageVarargTest.differentLength":393,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":169,"org.easymock.tests2.CallbackTest.callback":52,"org.easymock.tests2.UsageConstraintsTest.equals":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":478,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":455,"org.easymock.tests.UsageTest.openCallCountByLastCall":322,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":352,"org.easymock.tests.UsageCallCountTest.tooFewCalls":437,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":462,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":283,"org.easymock.tests.UsageThrowableTest.throwCheckedException":403,"org.easymock.tests.MockingTest.testStrictClassMocking":488,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":39,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":386,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":122,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":67,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":208,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":58,"org.easymock.tests.ObjectMethodsTest.testHashCode":332,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":31,"org.easymock.tests2.NameTest.nameForNiceMock":129,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":234,"org.easymock.tests2.DependencyTest.testInterfaceMocking":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":30,"org.easymock.samples.ExampleTest.addDocument":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":90,"org.easymock.tests2.DelegateToTest.testStubDelegate":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":95,"org.easymock.tests2.AnswerTest.stubAnswer":275,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":110,"org.easymock.tests.UsageVarargTest.varargLongAccepted":395,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":47,"org.easymock.tests.UsageExpectAndReturnTest.floatType":362,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":378,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":40,"org.easymock.tests2.ConstraintsToStringTest.orToString":104,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":66,"org.easymock.tests.UsageThrowableTest.noUpperLimit":400,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":185,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":250,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":236,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":463,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":161,"org.easymock.tests2.SerializationTest.test":274,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":500,"org.easymock.tests2.UsageConstraintsTest.testSame":240,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":361,"org.easymock.samples.SupportTest.addDocument":200,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":80,"org.easymock.tests.GenericTest.testPackageScope":189,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":184,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":432,"org.easymock.tests2.NameTest.nameForMock":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":372,"org.easymock.tests2.UsageStrictMockTest.differentMethods":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":479,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":364,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":422,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":331,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":287,"org.easymock.tests2.MockedExceptionTest.testRealException":205,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":148,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":113,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":62,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":345,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":351,"org.easymock.tests2.NameTest.nameForStrictMock":128,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":467,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":464,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":502,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":466,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":42,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":306,"org.easymock.tests2.CaptureTest.testCaptureRightOne":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":84,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":45,"org.easymock.tests2.UsageConstraintsTest.testOr":17,"org.easymock.tests.UsageRangeTest.combination":284,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":0,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":81,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":495,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":373,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":504,"org.easymock.tests.UsageVarargTest.varargShortAccepted":394,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":440,"org.easymock.tests2.UsageConstraintsTest.cmpTo":243,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":301,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":223,"org.easymock.tests2.CaptureTest.testCaptureFromStub":164,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":335,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":135,"org.easymock.tests.UsageTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":438,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":99,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":374,"org.easymock.tests2.CaptureTest.testCapture":120,"org.easymock.tests2.UsageConstraintsTest.constraints":63,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":318,"org.easymock.samples.ExampleTest.addAndChangeDocument":199,"org.easymock.tests2.ConstraintsToStringTest.notToString":105,"org.easymock.tests.UsageStrictMockTest.testVerify":320,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":167,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":317,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":292,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":162,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":357,"org.easymock.tests.LimitationsTest.abstractClass":483,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":366,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":358,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":132}}]
