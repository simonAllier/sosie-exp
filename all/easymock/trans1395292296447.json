[{"position":"org.easymock.internal.matchers.NotNull:36","failures":[0,1,2,3],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,1,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[16,19,20,24,38,42,98,156,206,174,175,176,177,178,180,181,182,200,201,207,208,202,204,205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[209],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[15,210,22,33,34,36,38,39,41,51,1],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[211],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[212],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[213,214,215,216,161,217],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[4,218,219,68,69,123,124],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[220,221,222,223,224,225,226],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[220,221,222,223,224,225,226],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[34,38,41],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[4,5,6,7,8,9,10,11,12,227,228,13,14,229,230,15,16,210,17,18,231,232,19,20,21,22,233,23,24,26,27,234,235,28,236,237,238,239,29,31,32,33,34,240,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,0,54,1,55,56,241,242,243,244,57,58,60,61,245,64,246,247,248,65,249,250,251,252,253,254,66,255,256,257,258,259,260,261,262,67,263,68,264,265,266,267,69,268,269,270,271,272,70,71,72,73,273,74,75,76,77,78,79,274,80,81,275,82,83,84,85,86,87,276,277,88,278,89,90,91,92,279,280,93,94,95,96,97,281,282,98,99,100,101,102,283,284,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,118,300,301,302,303,304,305,119,306,120,307,308,121,309,310,122,311,123,124,125,126,127,2,312,3,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,157,330,158,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,206,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,159,160,161,384,162,163,385,386,164,165,387,388,389,390,391,392,393,394,395,396,397,169,170,171,172,173,398,399,400,174,175,176,177,178,179,401,402,403,404,405,180,181,406,407,217,182,183,184,185,186,408,409,187,188,410,411,189,190,191,192,193,412,413,414,415,416,417,418,419,420,421,422,423,424,194,195,196,197,425,426,427,428,198,199,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,211,444,445,446,447,448,200,201,207,208,202,203,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,204,205,468,469,470,471,472,473,474,475],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:79","sourceCode":"return java.util.List<java.lang.reflect.Field>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[213,214,215,216,161,217],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[4,14,229,218,218,219,219,25,27,30,220,241,476,477,242,57,58,59,60,62,63,261,262,478,67,479,263,68,264,265,480,481,266,482,483,267,484,69,268,269,270,271,272,70,485,486,82,83,85,86,87,276,88,487,278,89,90,91,92,279,280,283,284,119,306,120,308,121,309,310,122,311,123,124,488,125,126,127,313,316,320,321,322,323,324,325,327,328,329,157,330,347,348,349,350,351,352,353,354,391,392,393,166,167,168,397,409,187,188,410,411,189],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[4,14,229,218,218,219,219,25,27,30,220,241,242,57,58,59,60,62,63,261,262,478,67,479,263,68,264,265,480,481,266,482,483,267,484,69,268,269,270,271,272,70,485,486,82,83,85,86,87,276,88,487,278,89,90,91,92,279,280,489,490,491,492,493,119,306,120,308,494,121,309,310,122,311,123,124,488,125,126,495,127,313,316,320,321,322,323,324,325,327,328,329,157,330,347,348,349,350,351,352,353,354,391,392,393,166,167,168,397,409,187,188,410,411,189,474],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[33,39,44,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"substring"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[279,95],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[119,306,120,307,342,343,344,345,206,346,181,207],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[234,237],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[411],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[240,79,385],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[4,14,229,218,218,219,219,25,27,30,220,496,241,242,57,58,59,60,62,63,261,262,478,67,479,263,68,264,265,480,481,266,482,483,267,484,69,268,269,270,271,272,70,485,486,82,83,85,86,87,276,88,487,278,89,90,91,92,279,280,490,491,119,306,120,308,497,494,121,309,498,310,122,311,123,226,124,488,125,126,499,495,127,313,316,319,320,321,322,323,324,325,326,327,328,329,157,330,347,348,349,350,351,352,353,354,391,392,393,166,167,168,397,409,187,188,410,411,189,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[73,98,101,102,160,182,185,186,194,195,196,198,437],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[33,40,46,56,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[212],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[501,502,503,277,504],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[48,75,86,211],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[275],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[218,218,219,219,487,505],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[148,151],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[506],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[25,26,27],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[411],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[220,221,222,223,224,225,226],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[7,64,246,247,248,65,249,290,2,3,197],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":34,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":159,"org.easymock.tests2.UsageTest.argumentsOrdered":274,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":370,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":75,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":5,"org.easymock.tests2.DelegateToTest.testReturnException":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":343,"org.easymock.tests.MockingTest.testPartialClassMocking":166,"org.easymock.tests.MockClassControlTest.testToString":349,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":285,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":404,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":481,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":203,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":221,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":200,"org.easymock.tests2.UsageTest.wrongArguments":273,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":260,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":399,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":316,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":396,"org.easymock.tests2.UsageConstraintsTest.testNull":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":85,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":114,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":354,"org.easymock.tests2.CaptureTest.testPrimitive":17,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":202,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":467,"org.easymock.tests.UsageTest.moreThanOneArgument":160,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":357,"org.easymock.tests.UsageTest.argumentsOrdered":386,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":193,"org.easymock.tests.UsageVarargTest.varargIntAccepted":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":225,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":308,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":477,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":304,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":178,"org.easymock.tests.ReplayStateInvalidUsageTest.times":445,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":66,"org.easymock.tests2.DependencyTest.testClassMocking":283,"org.easymock.tests2.AnswerTest.answer":64,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":377,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":294,"org.easymock.tests2.CaptureTest.testAnd":15,"org.easymock.tests2.UsageTest.strictResetToDefault":72,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":109,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":415,"org.easymock.tests2.DelegateToTest.testDelegate":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":463,"org.easymock.tests.LimitationsTest.mockFinalMethod":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":390,"org.easymock.tests2.DependencyTest.testClassMockingSupport":284,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":435,"org.easymock.tests2.CaptureTest.testCapture1_2446744":18,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":461,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":292,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":440,"org.easymock.tests.UsageThrowableTest.throwError":148,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":315,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":486,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":441,"org.easymock.tests.MockingTest.testInterfaceMocking":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":430,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":474,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":449,"org.easymock.tests2.UsageTest.niceToStrict":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":266,"org.easymock.tests2.ThreadingTest.testChangeDefault":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":122,"org.easymock.tests2.MockBuilderTest.testCreateMock":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":270,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":457,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":213,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":110,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":434,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":416,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":173,"org.easymock.tests.UsageOverloadedMethodTest.overloading":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":272,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":427,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":46,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":139,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":45,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":209,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":21,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":333,"org.easymock.tests2.EasyMockSupportClassTest.testAll":67,"org.easymock.tests.MockClassControlTest.testEquals":353,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":188,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":465,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":489,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":388,"org.easymock.tests2.CaptureTest.testCaptureAll":16,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":293,"org.easymock.tests.MockNameTest.defaultName":475,"org.easymock.tests2.UsageConstraintsTest.testMatches":47,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":438,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":358,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests.UsageVarargTest.allKinds":341,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":389,"org.easymock.samples.BasicClassMockTest.testPrintContent":229,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":154,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":281,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":237,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":346,"org.easymock.tests2.UsageConstraintsTest.greaterThan":49,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":479,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":170,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.samples.ExampleTest.voteForRemoval":8,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":327,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":94,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":279,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":276,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":189,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":71,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":107,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":342,"org.easymock.tests2.CaptureTest.testCaptureFirst":24,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":108,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":81,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":199,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":135,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":96,"org.easymock.tests2.CaptureTest.testCapture2_2446744":23,"org.easymock.tests2.UsageTest.moreThanOneArgument":73,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":378,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":340,"org.easymock.tests.GenericTest.testBridgedEquals":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":423,"org.easymock.tests.UsageExpectAndReturnTest.longType":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":165,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":105,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":495,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":466,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":468,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":464,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":355,"org.easymock.tests.UsageCallCountTest.tooManyCalls":424,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":453,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":153,"org.easymock.tests.MockingTest.testNiceClassMocking":397,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":58,"org.easymock.tests.MockingTest.testClassMocking":392,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":494,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":417,"org.easymock.tests2.UsageConstraintsTest.testContains":44,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":120,"org.easymock.tests2.UsageConstraintsTest.testFind":35,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":192,"org.easymock.tests.MockTypeTest.fromEasyMockClass":314,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":406,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":3,"org.easymock.tests.UsageExpectAndReturnTest.object":138,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":222,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":335,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":472,"org.easymock.tests.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":412,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":403,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":220,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":144,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":426,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":296,"org.easymock.tests.MockClassControlTest.testHashCode":352,"org.easymock.tests2.EasyMockSupportTest.testVerify":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":483,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":413,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":433,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":291,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":275,"org.easymock.tests.UsageVarargTest.varargCharAccepted":334,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":319,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":383,"org.easymock.tests2.UsageTest.openCallCountByLastCall":76,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":116,"org.easymock.tests.DefaultClassInstantiatorTest.object":320,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":432,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":470,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":267,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":493,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":253,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":295,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":90,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":351,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":454,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":70,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":350,"org.easymock.tests2.UsageTest.resumeIfFailure":80,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":313,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":345,"org.easymock.tests2.StubTest.stubWithReturnValue":29,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":226,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":137,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":54,"org.easymock.tests2.SerializationTest.testAllMockedMethod":27,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":376,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":214,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":298,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":460,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":382,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":246,"org.easymock.tests.UsageExpectAndThrowTest.object":458,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":405,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":52,"org.easymock.tests2.DelegateToTest.testWrongClass":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":205,"org.easymock.tests.UsageStrictMockTest.range":184,"org.easymock.samples.ConstructorCalledMockTest.testTax":218,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":243,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":112,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":57,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":459,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":123,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":447,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":261,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":398,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":431,"org.easymock.tests2.CaptureTest.testCaptureNone":20,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":501,"org.easymock.tests.UsageUnorderedTest.message":156,"org.easymock.tests.UsageVerifyTest.twoReturns":196,"org.easymock.tests.UsageVarargTest.varargByteAccepted":339,"org.easymock.tests2.ThreadingTest.testThreadSafe":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":268,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":421,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":473,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":14,"org.easymock.tests2.CaptureTest.testCapture_2617107":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":380,"org.easymock.tests2.UsageConstraintsTest.any":42,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":444,"org.easymock.tests2.StubTest.stub":239,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":402,"org.easymock.tests.UsageExpectAndThrowTest.longType":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":381,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":324,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":211,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":99,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":118,"org.easymock.tests2.SerializationTest.testClass":25,"org.easymock.tests.LimitationsTest.mockNativeMethod":157,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":147,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":492,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":252,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":102,"org.easymock.tests2.NameTest.nameForMocksControl":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":254,"org.easymock.tests2.MockedExceptionTest.testMockedException":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":263,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":452,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":168,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":312,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":82,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":124,"org.easymock.tests.MockingTest.testNicePartialClassMocking":167,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":87,"org.easymock.tests2.CaptureTest.testCaptureLast":19,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":250,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":436,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":39,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":63,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":53,"org.easymock.tests.MockingTest.testTwoMocks":393,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":245,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":128,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":456,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":79,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":55,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":503,"org.easymock.samples.ExampleTest.removeNonExistingDocument":12,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":442,"org.easymock.tests.UsageStrictMockTest.differentMethods":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":297,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":502,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":322,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":95,"org.easymock.tests2.MockBuilderTest.testCreateMockString":127,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":347,"org.easymock.tests.UsageExpectAndThrowTest.floatType":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":264,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":478,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":248,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":496,"org.easymock.tests.UsageVerifyTest.twoThrows":195,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":69,"org.easymock.samples.ExampleTest.voteAgainstRemoval":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":371,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests.LimitationsTest.privateConstructor":329,"org.easymock.tests2.UsageConstraintsTest.testNotNull":1,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":155,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":119,"org.easymock.tests2.UsageTest.defaultResetToNice":78,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":372,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":251,"org.easymock.tests.UsageVarargTest.differentLength":336,"org.easymock.tests2.CallbackTest.callback":290,"org.easymock.tests2.UsageConstraintsTest.equals":240,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":487,"org.easymock.tests.UsageTest.openCallCountByLastCall":162,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":207,"org.easymock.tests.UsageCallCountTest.tooFewCalls":419,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":60,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":400,"org.easymock.tests.UsageThrowableTest.throwCheckedException":152,"org.easymock.tests.MockingTest.testStrictClassMocking":391,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":216,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":181,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":62,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":255,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":446,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":61,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":249,"org.easymock.tests2.CompareToTest.testGreateOrEqual":500,"org.easymock.tests.ObjectMethodsTest.testHashCode":471,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":224,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":97,"org.easymock.tests2.NameTest.nameForNiceMock":288,"org.easymock.tests2.DependencyTest.testInterfaceMocking":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":223,"org.easymock.samples.ExampleTest.addDocument":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":485,"org.easymock.tests2.DelegateToTest.testStubDelegate":28,"org.easymock.tests2.AnswerTest.stubAnswer":65,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":182,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":506,"org.easymock.tests.UsageVarargTest.varargLongAccepted":338,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":146,"org.easymock.tests.UsageExpectAndReturnTest.floatType":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":30,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":219,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests.UsageThrowableTest.noUpperLimit":149,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":303,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":32,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":241,"org.easymock.tests2.SerializationTest.test":26,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":231,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":321,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":129,"org.easymock.tests2.UsageConstraintsTest.testSame":37,"org.easymock.samples.SupportTest.addDocument":228,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":265,"org.easymock.tests.GenericTest.testPackageScope":187,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":302,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":395,"org.easymock.tests2.NameTest.nameForMock":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":499,"org.easymock.tests2.UsageStrictMockTest.differentMethods":101,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":278,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":132,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":462,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":469,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":172,"org.easymock.tests2.MockedExceptionTest.testRealException":307,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":318,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":373,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":448,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":201,"org.easymock.tests2.NameTest.nameForStrictMock":287,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":310,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":86,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":242,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":51,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":323,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":121,"org.easymock.tests2.UsageStrictMockTest.range":100,"org.easymock.tests2.UsageConstraintsTest.lessThan":56,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":299,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":482,"org.easymock.tests2.CaptureTest.testCaptureRightOne":22,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":212,"org.easymock.tests2.UsageConstraintsTest.testOr":38,"org.easymock.tests.UsageRangeTest.combination":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":83,"org.easymock.tests.UsageTest.wrongArguments":384,"org.easymock.tests2.MockBuilderTest.testWithConstructor":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":480,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":361,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":325,"org.easymock.tests.UsageVarargTest.varargShortAccepted":337,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":422,"org.easymock.tests2.UsageConstraintsTest.cmpTo":43,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":363,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":77,"org.easymock.tests2.CaptureTest.testCaptureFromStub":233,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":439,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":309,"org.easymock.tests.UsageTest.unexpectedCallWithArray":161,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":217,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":420,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":505,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":142,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":183,"org.easymock.tests2.UsageConstraintsTest.constraints":33,"org.easymock.samples.ExampleTest.addAndChangeDocument":227,"org.easymock.tests.UsageStrictMockTest.testVerify":408,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":230,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":407,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":387,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":232,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":491,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":176,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":134,"org.easymock.tests.LimitationsTest.abstractClass":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":177,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":111,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":331}}]
