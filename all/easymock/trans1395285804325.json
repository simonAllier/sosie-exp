[{"position":"org.easymock.internal.RecordState:217","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,162,163,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[21,27,28,147,208,209,212,213,232,314,315,358,342,345],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,220,221,222,223,224,225,226,227,228,229,230,231,232,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,269,270,271,272,273,274,275,276,277,278,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,313,314,315,316,317,318,319,320,321,323,324,327,331,332,333,334,335,336,338,339,359,359,340,341,342,343,344,345,346,347,350,351,352],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[360],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[361,362,363],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[1,63,364,64,365,65,66,67,68,69,70,366,71,93,164,367,368,304],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","name":"methodName"}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[12,360],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[19,369],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[370],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[1,63,364,64,365,65,66,67,68,69,70,371,366,71,93,164,367,368,304],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[1,52,372,373,374,375,376,377,378,379,380,381,382],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,162,163,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:58","sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[20,21,27,28,57,58,59,60,145,147,148,207,209,212,213,383,313,314,315,342,343,345,346],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[133,135,137,154,323],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,27,28,147,208,209,212,213,232,314,315,327,358,342,345],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[1,2,3,384],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[363],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[73,75,83,101,102,104,106,107,109,119,124],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[88],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[0,1,2,8,11,12,14,15,18,19,20,22,23,24,25,29,30,31,32,33,34,35,36,37,39,40,41,42,44,61,62,65,67,68,73,74,80,81,83,86,88,91,97,102,104,106,107,124,131,133,134,135,137,138,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,165,166,170,172,173,174,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,210,211,214,227,228,229,230,231,232,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,269,270,271,272,273,274,275,276,277,278,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,301,303,313,314,315,316,317,318,319,320,321,323,324,341,343,344,345,346,347],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[16,17,18,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,94,95,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,141,143,145,146,170,171,172,180,181,182,183,184,227,228,229,230,231,232,233,277,278,289,290,301,342,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[357],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[1,3,45,46,47,48,50,51,52,53,54,55,56,63,364,64,365,65,66,67,68,69,70,366,71,385,386,387,87,88,90,91,92,93,94,95,96,97,98,129,162,162,163,163,164,165,166,367,368,205,246,302,303,304,306,349,350,351,352],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[21,27,28,147,208,209,212,213,232,314,315,358,342,345],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[1,2,3,384],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[133,135,136,137,154,388,323],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[389,390,391,392,393],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[73,74,75,76,83,84,101,102,103,104,105,106,107,108,109,110,119,120,124,125],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[233,394,395,396,397,398],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[399,400,401],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[8,18,20,21,24,25,27,28,30,57,58,59,60,104,105,110,111,124,125,137,145,147,148,154,174,206,207,209,210,211,212,213,214,221,223,226,232,271,291,301,302,313,314,315,342,343,345,346,354,355],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,27,28,147,208,209,212,213,232,314,315,327,358,342,345],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":102,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":206,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":41,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":23,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":152,"org.easymock.tests2.DelegateToTest.testReturnException":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":286,"org.easymock.tests.MockingTest.testPartialClassMocking":350,"org.easymock.tests.MockClassControlTest.testToString":307,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":281,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":247,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":383,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":377,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":180,"org.easymock.tests2.UsageTest.wrongArguments":21,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":177,"org.easymock.samples.ExampleTest.answerVsDelegate":154,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":368,"org.easymock.tests2.UsageConstraintsTest.testNull":104,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":90,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":40,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":312,"org.easymock.tests2.CaptureTest.testPrimitive":76,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":184,"org.easymock.tests.UsageTest.moreThanOneArgument":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":266,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":318,"org.easymock.tests.UsageTest.argumentsOrdered":213,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":353,"org.easymock.tests.UsageVarargTest.varargIntAccepted":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":227,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":63,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":231,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":0,"org.easymock.tests.ReplayStateInvalidUsageTest.times":242,"org.easymock.tests2.AnswerTest.answer":8,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":109,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":7,"org.easymock.tests2.CaptureTest.testAnd":73,"org.easymock.tests2.UsageTest.strictResetToDefault":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":338,"org.easymock.tests2.DelegateToTest.testDelegate":137,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":357,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":289,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":335,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":267,"org.easymock.tests2.CaptureTest.testCapture1_2446744":77,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":5,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":236,"org.easymock.tests.UsageThrowableTest.throwError":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":320,"org.easymock.samples.PartialClassMockTest.testGetArea":164,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":228,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":168,"org.easymock.tests2.UsageTest.niceToStrict":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":248,"org.easymock.tests2.ThreadingTest.testChangeDefault":393,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":401,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":65,"org.easymock.tests2.MockBuilderTest.testCreateMock":69,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":256,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":36,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":330,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":218,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":175,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":114,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":324,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":196,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":113,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":362,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":82,"org.easymock.tests2.EasyMockSupportClassTest.testAll":53,"org.easymock.tests.MockClassControlTest.testEquals":311,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":303,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":264,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":385,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":6,"org.easymock.tests2.CaptureTest.testCaptureAll":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":333,"org.easymock.tests2.UsageConstraintsTest.testMatches":115,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":319,"org.easymock.samples.ExampleTest.voteForRemovals":158,"org.easymock.tests.UsageVarargTest.allKinds":301,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":313,"org.easymock.samples.BasicClassMockTest.testPrintContent":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":334,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":275,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":143,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":290,"org.easymock.tests2.UsageConstraintsTest.greaterThan":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":382,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":337,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":98,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":398,"org.easymock.samples.ExampleTest.voteForRemoval":155,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":139,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":371,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":93,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":205,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":33,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":285,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":132,"org.easymock.tests2.CaptureTest.testCaptureFirst":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":34,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":30,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":192,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":141,"org.easymock.tests2.UsageTest.moreThanOneArgument":20,"org.easymock.tests2.CaptureTest.testCapture2_2446744":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":70,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":300,"org.easymock.tests.GenericTest.testBridgedEquals":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":225,"org.easymock.tests.UsageExpectAndReturnTest.longType":188,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":331,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":265,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":366,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":179,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":122,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":316,"org.easymock.tests.UsageCallCountTest.tooManyCalls":226,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":252,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":274,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":46,"org.easymock.tests2.UsageConstraintsTest.testContains":112,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":219,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":364,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":129,"org.easymock.tests2.UsageConstraintsTest.testFind":103,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":17,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":340,"org.easymock.tests.UsageExpectAndReturnTest.object":195,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":39,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":378,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":284,"org.easymock.tests.UsageTest.exactCallCountByLastCall":214,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":170,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":354,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":372,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":201,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":291,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":323,"org.easymock.tests.MockClassControlTest.testHashCode":310,"org.easymock.tests2.EasyMockSupportTest.testVerify":43,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":355,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":321,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":4,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":72,"org.easymock.tests.UsageVarargTest.varargCharAccepted":294,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":144,"org.easymock.tests2.UsageTest.openCallCountByLastCall":24,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":399,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":42,"org.easymock.tests.DefaultClassInstantiatorTest.object":233,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":328,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":282,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":358,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":272,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":96,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":253,"org.easymock.tests.CapturesMatcherTest.test":359,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":202,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":56,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":308,"org.easymock.tests2.UsageTest.resumeIfFailure":29,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":288,"org.easymock.tests2.StubTest.stubWithReturnValue":62,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":373,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":123,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":194,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":279,"org.easymock.samples.SupportTest.voteForRemovals":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":259,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":384,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":280,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":9,"org.easymock.tests.UsageExpectAndThrowTest.object":257,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":120,"org.easymock.tests2.DelegateToTest.testWrongClass":135,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":277,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":278,"org.easymock.samples.ConstructorCalledMockTest.testTax":162,"org.easymock.tests.UsageStrictMockTest.range":345,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":38,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":258,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":67,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":212,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":244,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":169,"org.easymock.tests2.CaptureTest.testCaptureNone":81,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":390,"org.easymock.tests.UsageUnorderedTest.message":232,"org.easymock.tests.UsageVerifyTest.twoReturns":315,"org.easymock.tests.UsageVarargTest.varargByteAccepted":299,"org.easymock.tests2.ThreadingTest.testThreadSafe":138,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":223,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":165,"org.easymock.tests2.CaptureTest.testCapture_2617107":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":183,"org.easymock.tests2.UsageConstraintsTest.any":110,"org.easymock.tests2.StubTest.stub":61,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":217,"org.easymock.tests.UsageExpectAndThrowTest.longType":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":287,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":361,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":240,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":146,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":246,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":204,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":304,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":387,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":149,"org.easymock.tests2.NameTest.nameForMocksControl":60,"org.easymock.tests2.MockedExceptionTest.testMockedException":128,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":251,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":352,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":87,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":68,"org.easymock.tests.MockingTest.testNicePartialClassMocking":351,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":92,"org.easymock.tests2.CaptureTest.testCaptureLast":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":376,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":268,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":107,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":51,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":121,"org.easymock.tests.MockingTest.testTwoMocks":349,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":255,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":125,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":392,"org.easymock.samples.ExampleTest.removeNonExistingDocument":159,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":238,"org.easymock.tests.UsageStrictMockTest.differentMethods":346,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":395,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":391,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":140,"org.easymock.tests2.MockBuilderTest.testCreateMockString":71,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":305,"org.easymock.tests.UsageExpectAndThrowTest.floatType":249,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":116,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":11,"org.easymock.tests.UsageVerifyTest.twoThrows":314,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":55,"org.easymock.samples.ExampleTest.voteAgainstRemoval":156,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":167,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":97,"org.easymock.tests2.UsageConstraintsTest.testNotNull":124,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":276,"org.easymock.tests2.UsageTest.defaultResetToNice":26,"org.easymock.samples.ExampleTest.voteAgainstRemovals":153,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":200,"org.easymock.tests.UsageVarargTest.differentLength":296,"org.easymock.tests2.CallbackTest.callback":44,"org.easymock.tests.UsageTest.openCallCountByLastCall":210,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":182,"org.easymock.tests.UsageCallCountTest.tooFewCalls":221,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":178,"org.easymock.tests.UsageThrowableTest.throwCheckedException":273,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":171,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":50,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":47,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":243,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":49,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":13,"org.easymock.tests.ObjectMethodsTest.testHashCode":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":381,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":142,"org.easymock.tests2.NameTest.nameForNiceMock":59,"org.easymock.tests2.DependencyTest.testInterfaceMocking":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":379,"org.easymock.samples.ExampleTest.addDocument":157,"org.easymock.tests2.DelegateToTest.testStubDelegate":134,"org.easymock.tests2.AnswerTest.stubAnswer":12,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":343,"org.easymock.tests.UsageVarargTest.varargLongAccepted":298,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":347,"org.easymock.tests.UsageExpectAndReturnTest.floatType":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":52,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":163,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":118,"org.easymock.tests.UsageThrowableTest.noUpperLimit":270,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":100,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":78,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":363,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":186,"org.easymock.tests2.UsageConstraintsTest.testSame":105,"org.easymock.samples.SupportTest.addDocument":150,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":239,"org.easymock.tests.GenericTest.testPackageScope":302,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":356,"org.easymock.tests2.NameTest.nameForMock":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":197,"org.easymock.tests2.UsageStrictMockTest.differentMethods":148,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":189,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":261,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":339,"org.easymock.tests2.MockedExceptionTest.testRealException":130,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":375,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":181,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":245,"org.easymock.tests2.NameTest.nameForStrictMock":58,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":400,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":16,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":91,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":396,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":119,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":64,"org.easymock.tests2.UsageStrictMockTest.range":147,"org.easymock.tests2.UsageConstraintsTest.lessThan":126,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":32,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":380,"org.easymock.tests2.CaptureTest.testCaptureRightOne":83,"org.easymock.tests2.UsageConstraintsTest.testOr":106,"org.easymock.tests.UsageRangeTest.combination":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":88,"org.easymock.tests.UsageTest.wrongArguments":209,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":198,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":397,"org.easymock.tests.UsageVarargTest.varargShortAccepted":297,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":224,"org.easymock.tests2.UsageConstraintsTest.cmpTo":111,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":10,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":25,"org.easymock.tests2.CaptureTest.testCaptureFromStub":84,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":235,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":365,"org.easymock.tests.UsageTest.unexpectedCallWithArray":208,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":342,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":199,"org.easymock.tests2.UsageConstraintsTest.constraints":101,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":344,"org.easymock.samples.ExampleTest.addAndChangeDocument":160,"org.easymock.tests.UsageStrictMockTest.testVerify":348,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":161,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":341,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":332,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":79,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":386,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":229,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":230,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":37,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":292}}]
