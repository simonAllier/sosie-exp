[{"position":"org.easymock.internal.LastControl:92","failures":[0,1,2,3,4,5,6,7,8],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[10,11,12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[14,15,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[23,0,24],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[14,15,16,25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[42],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[43,44,45,46,14,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,42,76,77,78,79,80,81],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[82,83,84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[85,86,87,88,89],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[91,26,27,28,92,93,94,95,96,97,98,99,32,33,34,35,40],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[43,44,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,14,15,16,116,117,118,119,120,121,122,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,123,124,125,23,126,0,1,127,128,129,130,2,3,131,4,132,133,134,135,136,137,138,139,140,5,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,6,86,7,158,159,160,161,162,163,164,8,165,87,88,166,167,168,169,170,17,171,18,172,173,174,175,176,91,26,177,178,179,180,181,27,28,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,72,10,199,73,200,201,202,203,74,204,205,75,206,11,76,207,208,209,210,211,212,213,214,215,216,217,218,219,12,220,221,222,13,223,224,77,225,226,227,228,78,79,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,80,81,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,29,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,9,370,371,372,373,374,90,375,376,377,378,379,380,381,382,99,32,33,383,384,34,35,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,36,37,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,38,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,19,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,82,83,84,39,475,476,40,477,478,41,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[26,27,28,29,31,32,33,34,35,36,37,39,40,41],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[92,94,96,97,32,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[115,0,138,175,91,26,177,178,27,28,183,185,189,190,193,10,11,12,221,246,247,248,249,267,269,270,29,271,272,330,356,382,99,33,34,35,385,409,36,37,39,475,40,477,478,41,479,480,507,508,509,498,500,501,505,506],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[11,13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[14,15,16,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[100,101,102,103,104,105,107,115,14,15,16,123,125,23,126,0,1,128,129,130,2,3,131,132,133,134,135,136,137,138,139,140,5,141,142,144,145,146,147,148,151,152,153,154,155,156,157,6,86,7,158,160,161,162,163,164,8,88,166,167,170,171,18,174,176,91,177,178,181,182,198,201,202,208,210,211,212,213,216,219,220,224,77,228,78,231,246,247,248,249,80,263,264,265,266,268,269,271,272,273,274,275,276,277,278,280,294,295,297,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,330,331,332,333,335,343,344,350,351,352,354,355,357,358,359,360,361,362,363,366,377,378,381,99,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,407,408,409,36,37,425,426,434,441,442,443,444,445,446,470,471,472,473,474,476,477,479,480,481,482,483,484,485,486,487,493,494,495,496,497,498,499,500,501,502,503],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[92,94,198,96,97,301,32,33,383,384,34,35,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,36,37,410,40,477],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[43,43,44,44,108,109,112,14,16,50,53,63,69,198,510,10,199,201,202,203,204,206,11,511,207,208,209,211,212,213,214,216,219,12,220,221,223,224,77,225,228,78,512,80,265,293,294,295,297,335,343,344,345,366,413,418,434],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[456,457,466,467,469],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[6,86,7,158,159,160,161,162,163,164,8,165,87,88,89],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[43,43,44,44,108,109,112,14,16,50,53,63,69,198,10,199,201,202,203,204,206,11,207,208,209,211,212,213,214,216,219,12,220,221,13,223,224,77,225,228,78,80,265,293,294,295,297,329,334,335,336,337,338,339,343,344,345,366,413,418,434],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[29,36,37,39,41,508,509],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"failures":[14,74,75,513,514,515,516,80,81],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[43,43,44,44,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,14,15,16,50,53,63,69,123,125,23,126,0,1,128,129,130,2,3,131,4,132,133,134,135,136,137,138,139,140,5,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,6,86,7,158,159,160,161,162,163,164,8,165,87,88,166,167,168,169,170,17,171,18,172,173,174,175,176,91,26,177,178,179,180,181,27,28,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,10,201,202,203,204,206,11,207,208,209,210,211,212,213,214,216,219,12,220,221,223,224,77,225,227,228,78,231,232,238,246,247,248,249,80,256,263,264,265,266,267,268,269,270,29,271,272,273,274,275,276,277,278,280,281,283,293,294,295,297,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,325,326,327,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,348,350,351,352,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,9,370,371,372,373,374,90,375,376,377,378,379,380,381,382,99,32,33,383,384,34,35,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,36,37,410,411,412,421,422,423,424,425,426,427,428,429,430,431,434,436,437,438,439,440,441,38,442,443,444,445,446,462,468,470,471,472,473,474,82,83,84,39,475,476,40,477,478,41,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[517],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[518,22,215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","defaultValue":"key","key":"key"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[6,86,7,158,159,160,161,162,163,164,8,165,87,88,89],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"equalsMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[283,284,285,286,288,290],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[519,513,514,515,520,521,516,80],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":382,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":19,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":178,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":111,"org.easymock.tests2.DelegateToTest.testReturnException":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":483,"org.easymock.tests.MockingTest.testPartialClassMocking":294,"org.easymock.tests.MockClassControlTest.testToString":336,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":245,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":386,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":53,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":507,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":513,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":131,"org.easymock.tests2.UsageTest.wrongArguments":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":377,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":244,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":277,"org.easymock.samples.ExampleTest.answerVsDelegate":101,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":418,"org.easymock.tests2.UsageConstraintsTest.testNull":129,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":299,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":211,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":193,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":341,"org.easymock.tests2.CaptureTest.testPrimitive":158,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":381,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":405,"org.easymock.tests.UsageTest.moreThanOneArgument":99,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":495,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":488,"org.easymock.tests.UsageTest.argumentsOrdered":35,"org.easymock.tests.UsageVarargTest.varargIntAccepted":352,"org.easymock.tests.InvocationTest.testEquals":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":442,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":521,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":198,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":261,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":449,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":446,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":238,"org.easymock.tests.ReplayStateInvalidUsageTest.times":374,"org.easymock.tests2.DependencyTest.testClassMocking":229,"org.easymock.tests2.AnswerTest.answer":148,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":463,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":157,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":415,"org.easymock.tests2.CaptureTest.testAnd":6,"org.easymock.tests2.UsageTest.strictResetToDefault":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":494,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":332,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":492,"org.easymock.tests2.DelegateToTest.testDelegate":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":401,"org.easymock.tests.LimitationsTest.mockFinalMethod":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":474,"org.easymock.tests2.DependencyTest.testClassMockingSupport":230,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":321,"org.easymock.tests2.CaptureTest.testCapture1_2446744":159,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":399,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":155,"org.easymock.tests.UsageThrowableTest.throwError":424,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":369,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":417,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":262,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":497,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":71,"org.easymock.samples.PartialClassMockTest.testGetArea":112,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":9,"org.easymock.tests.MockingTest.testInterfaceMocking":296,"org.easymock.tests2.CompareToTest.testLessOrEqual":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":443,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":411,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":387,"org.easymock.tests2.UsageTest.niceToStrict":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":58,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":329,"org.easymock.tests2.ThreadingTest.testChangeDefault":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":201,"org.easymock.tests2.MockBuilderTest.testCreateMock":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":66,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":241,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":395,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":92,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":189,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":414,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":84,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":498,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":275,"org.easymock.tests.UsageOverloadedMethodTest.overloading":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":68,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":439,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":136,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":312,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":135,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":164,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":353,"org.easymock.tests2.EasyMockSupportClassTest.testAll":50,"org.easymock.tests.MockClassControlTest.testEquals":340,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":403,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":472,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":156,"org.easymock.tests2.CaptureTest.testCaptureAll":86,"org.easymock.tests.MockNameTest.defaultName":279,"org.easymock.tests2.UsageConstraintsTest.testMatches":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":496,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":367,"org.easymock.samples.ExampleTest.voteForRemovals":105,"org.easymock.tests.UsageVarargTest.allKinds":361,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":409,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":473,"org.easymock.samples.BasicClassMockTest.testPrintContent":109,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":430,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":487,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":173,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":516,"org.easymock.tests2.UsageConstraintsTest.greaterThan":139,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":51,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":331,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":221,"org.easymock.samples.ExampleTest.voteForRemoval":102,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":290,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":167,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":222,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":419,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":119,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":214,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":175,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":366,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":186,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":482,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":17,"org.easymock.tests2.CaptureTest.testCaptureFirst":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":187,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":183,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":38,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":308,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":169,"org.easymock.tests2.CaptureTest.testCapture2_2446744":87,"org.easymock.tests2.UsageTest.moreThanOneArgument":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":464,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":11,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":360,"org.easymock.tests.GenericTest.testBridgedEquals":346,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":505,"org.easymock.tests.UsageExpectAndReturnTest.longType":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":470,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":511,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":404,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":143,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":365,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":493,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":422,"org.easymock.tests.UsageCallCountTest.tooManyCalls":506,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":67,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":309,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":243,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":391,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":429,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":224,"org.easymock.tests.MockingTest.testNiceClassMocking":300,"org.easymock.tests.MockingTest.testClassMocking":292,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":510,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":499,"org.easymock.tests2.UsageConstraintsTest.testContains":134,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":265,"org.easymock.tests2.UsageConstraintsTest.testFind":128,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":408,"org.easymock.tests.MockTypeTest.fromEasyMockClass":416,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":475,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":125,"org.easymock.tests.UsageExpectAndReturnTest.object":311,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":514,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":355,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":327,"org.easymock.tests.UsageTest.exactCallCountByLastCall":385,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":489,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":347,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":98,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":81,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":317,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":350,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":252,"org.easymock.tests.MockClassControlTest.testHashCode":339,"org.easymock.tests2.EasyMockSupportTest.testVerify":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":60,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":490,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":436,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":83,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":154,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":30,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":197,"org.easymock.tests.UsageVarargTest.varargCharAccepted":354,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":282,"org.easymock.tests2.CaptureTest.testCaptureMultiple":85,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":469,"org.easymock.tests2.UsageTest.openCallCountByLastCall":179,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":195,"org.easymock.tests.DefaultClassInstantiatorTest.object":283,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":82,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":325,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":31,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":427,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":236,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":251,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":12,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":338,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":392,"org.easymock.tests.CapturesMatcherTest.test":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":318,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":69,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":337,"org.easymock.tests2.UsageTest.resumeIfFailure":182,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":413,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":485,"org.easymock.tests2.StubTest.stubWithReturnValue":274,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":74,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":310,"org.easymock.tests2.SerializationTest.testAllMockedMethod":16,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":462,"org.easymock.samples.SupportTest.voteForRemovals":114,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":94,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":342,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":398,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":25,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":468,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":149,"org.easymock.tests.UsageExpectAndThrowTest.object":396,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":349,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":141,"org.easymock.tests2.DelegateToTest.testWrongClass":172,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":362,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":363,"org.easymock.samples.ConstructorCalledMockTest.testTax":43,"org.easymock.tests.UsageStrictMockTest.range":41,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":121,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":397,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":47,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":276,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":96,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":412,"org.easymock.tests2.CaptureTest.testCaptureNone":163,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":20,"org.easymock.tests.UsageUnorderedTest.message":39,"org.easymock.tests.UsageVerifyTest.twoReturns":37,"org.easymock.tests.UsageVarargTest.varargByteAccepted":359,"org.easymock.tests2.ThreadingTest.testThreadSafe":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":64,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":503,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":108,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":328,"org.easymock.tests2.CaptureTest.testCapture_2617107":7,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":95,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":466,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":380,"org.easymock.tests2.UsageConstraintsTest.any":132,"org.easymock.tests2.StubTest.stub":273,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":373,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndThrowTest.longType":389,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":287,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":372,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":270,"org.easymock.tests2.SerializationTest.testClass":14,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":256,"org.easymock.tests.LimitationsTest.mockNativeMethod":434,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":320,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":345,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":235,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":272,"org.easymock.tests2.NameTest.nameForMocksControl":249,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":237,"org.easymock.tests2.MockedExceptionTest.testMockedException":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":52,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":384,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":390,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":124,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":297,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":208,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":204,"org.easymock.tests.MockingTest.testNicePartialClassMocking":295,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":519,"org.easymock.tests2.CaptureTest.testCaptureLast":162,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":233,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":322,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":78,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":142,"org.easymock.tests.MockingTest.testTwoMocks":293,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":394,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":146,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":22,"org.easymock.samples.ExampleTest.removeNonExistingDocument":106,"org.easymock.tests.UsageStrictMockTest.differentMethods":479,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":240,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":253,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":21,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":285,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":168,"org.easymock.tests2.MockBuilderTest.testCreateMockString":207,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":334,"org.easymock.tests.UsageExpectAndThrowTest.floatType":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":54,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":49,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":151,"org.easymock.tests.UsageVerifyTest.twoThrows":36,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":250,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":63,"org.easymock.samples.ExampleTest.voteAgainstRemoval":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":410,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":220,"org.easymock.tests.LimitationsTest.privateConstructor":433,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":46,"org.easymock.tests2.UsageConstraintsTest.testNotNull":145,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":431,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":263,"org.easymock.tests2.UsageTest.defaultResetToNice":181,"org.easymock.samples.ExampleTest.voteAgainstRemovals":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":234,"org.easymock.tests.UsageVarargTest.differentLength":356,"org.easymock.tests2.CallbackTest.callback":115,"org.easymock.tests2.UsageConstraintsTest.equals":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":217,"org.easymock.tests.UsageTest.openCallCountByLastCall":383,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":379,"org.easymock.tests.UsageCallCountTest.tooFewCalls":501,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":278,"org.easymock.tests.UsageThrowableTest.throwCheckedException":428,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":97,"org.easymock.tests.MockingTest.testStrictClassMocking":291,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":228,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":281,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":239,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":90,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":227,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":153,"org.easymock.tests.ObjectMethodsTest.testHashCode":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":520,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":170,"org.easymock.tests2.NameTest.nameForNiceMock":248,"org.easymock.tests2.DependencyTest.testInterfaceMocking":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":515,"org.easymock.samples.ExampleTest.addDocument":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":65,"org.easymock.tests2.DelegateToTest.testStubDelegate":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":70,"org.easymock.tests2.AnswerTest.stubAnswer":152,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":477,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":205,"org.easymock.tests.UsageVarargTest.varargLongAccepted":358,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.floatType":303,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":319,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":80,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":44,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":440,"org.easymock.tests.UsageThrowableTest.noUpperLimit":425,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":260,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":126,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":116,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":160,"org.easymock.tests2.SerializationTest.test":15,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":284,"org.easymock.tests2.UsageConstraintsTest.testSame":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":302,"org.easymock.samples.SupportTest.addDocument":113,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":226,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":55,"org.easymock.tests.GenericTest.testPackageScope":343,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":259,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":298,"org.easymock.tests2.NameTest.nameForMock":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":313,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":76,"org.easymock.tests2.UsageStrictMockTest.differentMethods":271,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":305,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":400,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":324,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":333,"org.easymock.tests2.MockedExceptionTest.testRealException":266,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":459,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":269,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":376,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":378,"org.easymock.tests2.NameTest.nameForStrictMock":247,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":200,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":212,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":120,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":508,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":5,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":286,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":10,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests2.UsageConstraintsTest.lessThan":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":455,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":185,"org.easymock.tests2.CaptureTest.testCaptureRightOne":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":59,"org.easymock.tests2.UsageConstraintsTest.testOr":2,"org.easymock.tests.UsageRangeTest.combination":330,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":209,"org.easymock.tests.UsageTest.wrongArguments":33,"org.easymock.tests2.MockBuilderTest.testWithConstructor":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":56,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":335,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":448,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":314,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":288,"org.easymock.tests.UsageVarargTest.varargShortAccepted":357,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":504,"org.easymock.tests2.UsageConstraintsTest.cmpTo":133,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":450,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":180,"org.easymock.tests2.CaptureTest.testCaptureFromStub":165,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":368,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":199,"org.easymock.tests.UsageTest.unexpectedCallWithArray":32,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":502,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":42,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":315,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":478,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":107,"org.easymock.tests.UsageStrictMockTest.testVerify":481,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":110,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":476,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":471,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":161,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":512,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":444,"org.easymock.tests.LimitationsTest.abstractClass":432,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":445,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":509,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":190,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":351}}]
