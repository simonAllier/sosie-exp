[{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[0],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[1,2,3,4,5,6,7,8,9],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[13,14,15,16,17,18,19,20,21,21,22,22,23,11,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,1,60,2,61,62,63,64,65,66,67,3,68,69,70,71,72,4,5,73,74,75,6,7,76,8,77,78,79,80,81,82,83,84,85,9,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,12,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,10,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[1,60,2,61,62,63,64,65,67,3,68,69,70,309],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[42,44,45,49,50,56,57,310,311,312,313,314,315,316,317,318,319,320,83,160,162,163,164,187,188,321,322,323,324,325,326,327,232,233,235,236,240,241,242,245,246,256,292,293,294],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[21,21,22,22,35,42,68,71,72,73,74,75,6,79,81,82,84,85,90,91,92,168,169,172,191,192,193,194,195,233,328,238,329,330,331,332,333,286,287,288,289,290,300,306,307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[334],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[14,36,37,122,123,124,125,126,127,129,159],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[335,309],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:70","failures":[44,45,235,236],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:231","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    if (org.easymock.internal.Injection != null) {\n        throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n    } \n    org.easymock.internal.Injection = org.easymock.internal.Injection;\n} ","type":"CtIfImpl"},"failures":[336,337,338,339,340,341],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"toAssign"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[14,122,124,127,129,159,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[75],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[343],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[1,60,2,61,62,63,64,65,67,3,68,69,70,309],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[42,45,46,49,163,344,207,211,212,214,217,233,236,237,240,292,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[28,29,30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[21,22,28,345,346,347,348,349,93,350,351,94,352,353,354,355,356,357,358,359,360,95,361,362,363,364,365,96,366,367,368,369,370,371,372,373,117,121,374,128,375],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[376],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[13,14,15,16,377,17,18,378,379,19,380,20,336,21,21,22,22,337,23,11,24,25,26,27,28,29,30,31,32,33,34,35,36,37,41,381,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,1,60,2,61,62,63,64,65,66,67,3,68,69,70,71,72,4,5,73,74,75,6,7,76,77,78,79,80,81,82,83,84,85,9,86,87,88,89,90,91,92,93,94,95,96,98,99,101,102,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,12,161,162,163,165,166,167,168,169,170,171,172,176,177,178,179,180,181,182,183,184,185,186,187,188,10,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,382,383,384,385,386,387,388,389,390,391,223,224,225,226,227,228,229,392,230,231,393,232,233,234,235,236,237,394,238,239,240,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,300,301,302,303,304,305,306,307,308],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[51],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[395,396,397,398,399,370,375],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[1,60,2,61,3,68,4,5,73,74,75,6,7,76,8,77,9,86,90,91],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[28,29,30,401],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[41,43,44,45,47,50,51,52,56,57,58,59,4,83,98,103,104,105,129,136,140,141,144,149,156,158,402,327,387,231,232,234,235,236,239,241,242,245,246,247,253,254,255,256,262,403,404,293,294],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[27],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[405,81],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[7,76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[44,50,56,57,327,232,235,241,242,245,246,256,293,294],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[13,14,15,16,377,17,406,18,378,379,19,380,20,336,21,22,337,23,11,24,25,26,27,28,29,30,407,408,31,32,338,409,410,411,412,33,339,413,414,415,416,417,418,419,420,421,422,423,34,35,36,400,37,424,425,38,39,40,41,381,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,1,60,2,61,62,63,64,65,66,67,3,68,69,70,71,72,4,5,426,73,74,75,6,7,76,8,77,78,79,80,81,82,83,84,85,9,86,87,88,89,90,91,92,347,348,349,93,350,351,94,352,353,354,355,356,357,358,359,360,95,361,362,363,364,365,96,366,367,427,97,98,428,429,99,100,101,102,430,371,103,104,105,340,431,432,433,434,106,341,435,436,437,438,439,107,108,109,110,440,111,112,113,114,115,116,117,118,441,119,120,121,374,122,123,124,125,126,127,128,375,129,130,442,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,443,155,444,445,446,156,157,158,447,448,159,160,12,161,162,163,164,165,166,167,168,169,170,171,172,449,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,344,10,189,190,191,192,193,194,195,196,197,198,199,200,201,202,450,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,382,383,384,451,385,386,387,388,389,390,391,223,224,225,226,227,228,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,376,229,392,230,467,231,393,232,233,234,235,236,237,394,328,468,469,470,471,472,473,474,475,476,477,478,238,479,480,481,482,483,484,485,486,239,240,241,242,243,244,245,246,247,248,487,249,250,251,252,253,254,255,256,488,489,490,491,492,493,257,258,259,329,494,495,496,330,331,497,498,499,500,501,502,503,342,332,504,260,505,506,333,507,508,261,509,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,510,511,291,512,292,293,294,295,296,297,298,299,300,301,513,514,302,303,304,515,305,516,517,518,306,307,519,308,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[405,4,76,81,92],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests2.UsageTest.argumentsOrdered":57,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":239,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":145,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":501,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":52,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":337,"org.easymock.tests2.DelegateToTest.testReturnException":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":198,"org.easymock.tests.MockingTest.testPartialClassMocking":303,"org.easymock.tests.MockClassControlTest.testToString":454,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":440,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":203,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":32,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":542,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":395,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":168,"org.easymock.tests2.UsageTest.wrongArguments":50,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":417,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":174,"org.easymock.samples.ExampleTest.answerVsDelegate":14,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":484,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":517,"org.easymock.tests2.UsageConstraintsTest.testNull":74,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":151,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":459,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":144,"org.easymock.tests2.CaptureTest.testPrimitive":61,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":222,"org.easymock.tests.UsageTest.moreThanOneArgument":240,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":193,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":224,"org.easymock.tests.UsageTest.argumentsOrdered":246,"org.easymock.tests.UsageVarargTest.varargIntAccepted":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":504,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":399,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":438,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":420,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":290,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":526,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":314,"org.easymock.tests.ReplayStateInvalidUsageTest.times":475,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":33,"org.easymock.tests2.DependencyTest.testClassMocking":407,"org.easymock.tests2.AnswerTest.answer":122,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":505,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":40,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":481,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":446,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":369,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":192,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":139,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":264,"org.easymock.tests2.DelegateToTest.testDelegate":27,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":228,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":525,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":218,"org.easymock.tests.LimitationsTest.mockFinalMethod":512,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":299,"org.easymock.tests2.DependencyTest.testClassMockingSupport":408,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":187,"org.easymock.tests2.CaptureTest.testCapture1_2446744":62,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":443,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":216,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":38,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":469,"org.easymock.tests.UsageThrowableTest.throwError":176,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":483,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":439,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":195,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":367,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":529,"org.easymock.samples.PartialClassMockTest.testGetArea":19,"org.easymock.tests.MockingTest.testInterfaceMocking":515,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":470,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":287,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":189,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":493,"org.easymock.tests2.UsageTest.niceToStrict":51,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":356,"org.easymock.tests2.ThreadingTest.testChangeDefault":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":99,"org.easymock.tests2.MockBuilderTest.testCreateMock":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":363,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":414,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":212,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":311,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":140,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":480,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":186,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":248,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":449,"org.easymock.tests.UsageOverloadedMethodTest.overloading":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":365,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":161,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":81,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":277,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":80,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":343,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":67,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":451,"org.easymock.tests.MockClassControlTest.testEquals":458,"org.easymock.tests2.EasyMockSupportClassTest.testAll":93,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":392,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":220,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":316,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":39,"org.easymock.tests2.CaptureTest.testCaptureAll":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":297,"org.easymock.tests.MockNameTest.defaultName":450,"org.easymock.tests2.UsageConstraintsTest.testMatches":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":194,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":328,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests.UsageVarargTest.allKinds":223,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":292,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":298,"org.easymock.samples.BasicClassMockTest.testPrintContent":379,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":182,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":435,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":202,"org.easymock.tests2.UsageConstraintsTest.greaterThan":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":263,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":158,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":530,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":466,"org.easymock.samples.ExampleTest.voteForRemoval":15,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":447,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":131,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":154,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":522,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":47,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":196,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":498,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":137,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":197,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":23,"org.easymock.tests2.CaptureTest.testCaptureFirst":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":497,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":138,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":59,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":273,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":133,"org.easymock.tests2.UsageTest.moreThanOneArgument":49,"org.easymock.tests2.CaptureTest.testCapture2_2446744":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":506,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":104,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":391,"org.easymock.tests.GenericTest.testBridgedEquals":467,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":254,"org.easymock.tests.UsageExpectAndReturnTest.longType":269,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":295,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":221,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":88,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":238,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":166,"org.easymock.tests.UsageCallCountTest.tooManyCalls":255,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":322,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":274,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":208,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":181,"org.easymock.tests.MockingTest.testNiceClassMocking":518,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":116,"org.easymock.tests.MockingTest.testClassMocking":514,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":487,"org.easymock.tests2.UsageConstraintsTest.testContains":79,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":109,"org.easymock.tests2.UsageConstraintsTest.testFind":73,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":259,"org.easymock.tests.MockTypeTest.fromEasyMockClass":482,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":37,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":231,"org.easymock.tests.UsageExpectAndReturnTest.object":276,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":396,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":386,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":491,"org.easymock.tests.UsageTest.exactCallCountByLastCall":247,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":519,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":225,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":326,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":375,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":282,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":382,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":12,"org.easymock.tests.MockClassControlTest.testHashCode":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":431,"org.easymock.tests2.EasyMockSupportTest.testVerify":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":358,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":313,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":226,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":185,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":159,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":425,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":402,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":427,"org.easymock.tests.UsageVarargTest.varargCharAccepted":385,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":509,"org.easymock.tests2.UsageTest.openCallCountByLastCall":53,"org.easymock.tests.DefaultClassInstantiatorTest.object":460,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":146,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":184,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":489,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":327,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":359,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":411,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":340,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":528,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":456,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":209,"org.easymock.tests.CapturesMatcherTest.test":309,"org.easymock.tests.ReplayStateInvalidCallsTest.times":534,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":165,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":535,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":96,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":315,"org.easymock.tests2.UsageTest.resumeIfFailure":58,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":479,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":200,"org.easymock.tests2.StubTest.stubWithReturnValue":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":370,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":275,"org.easymock.tests2.SerializationTest.testAllMockedMethod":30,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":260,"org.easymock.samples.SupportTest.voteForRemovals":20,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":318,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":376,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":433,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":215,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":401,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":261,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":123,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":520,"org.easymock.tests.UsageExpectAndThrowTest.object":213,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":86,"org.easymock.tests2.DelegateToTest.testWrongClass":25,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":532,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":306,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":307,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests.UsageStrictMockTest.range":235,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":422,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":142,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":214,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":101,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":477,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":173,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":321,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":524,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":190,"org.easymock.tests2.CaptureTest.testCaptureNone":66,"org.easymock.tests.UsageUnorderedTest.message":256,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":403,"org.easymock.tests.UsageVerifyTest.twoReturns":294,"org.easymock.tests.UsageVarargTest.varargByteAccepted":390,"org.easymock.tests2.ThreadingTest.testThreadSafe":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":361,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":252,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":492,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":378,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":320,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":507,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":171,"org.easymock.tests2.UsageConstraintsTest.any":77,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":474,"org.easymock.tests2.StubTest.stub":34,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":508,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":199,"org.easymock.tests.UsageExpectAndThrowTest.longType":206,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":464,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":473,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":43,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests2.SerializationTest.testClass":28,"org.easymock.tests.LimitationsTest.mockNativeMethod":291,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":285,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":410,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":540,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":46,"org.easymock.tests2.NameTest.nameForMocksControl":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":412,"org.easymock.tests2.MockedExceptionTest.testMockedException":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":351,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":244,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":400,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":207,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":305,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":148,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":102,"org.easymock.tests.MockingTest.testNicePartialClassMocking":304,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":153,"org.easymock.tests2.CompareToTest.testNotComparable":334,"org.easymock.tests2.CaptureTest.testCaptureLast":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":338,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":188,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":539,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":121,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":87,"org.easymock.tests.MockingTest.testTwoMocks":302,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":536,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":211,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":56,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":91,"org.easymock.samples.ExampleTest.removeNonExistingDocument":406,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":471,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":413,"org.easymock.tests.UsageStrictMockTest.differentMethods":236,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":432,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":462,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":424,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":132,"org.easymock.tests2.ConstraintsToStringTest.andToString":317,"org.easymock.tests2.MockBuilderTest.testCreateMockString":105,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":452,"org.easymock.tests.UsageExpectAndThrowTest.floatType":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":352,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":125,"org.easymock.tests.UsageVerifyTest.twoThrows":293,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":95,"org.easymock.samples.ExampleTest.voteAgainstRemoval":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":502,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":10,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":157,"org.easymock.tests.LimitationsTest.privateConstructor":511,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":346,"org.easymock.tests2.UsageConstraintsTest.testNotNull":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":183,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":107,"org.easymock.tests2.UsageTest.defaultResetToNice":55,"org.easymock.samples.ExampleTest.voteAgainstRemovals":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":281,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":409,"org.easymock.tests.UsageVarargTest.differentLength":387,"org.easymock.tests2.CallbackTest.callback":129,"org.easymock.tests2.UsageConstraintsTest.equals":426,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":444,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":324,"org.easymock.tests.UsageTest.openCallCountByLastCall":243,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":170,"org.easymock.tests.UsageCallCountTest.tooFewCalls":250,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":175,"org.easymock.tests.UsageThrowableTest.throwCheckedException":180,"org.easymock.tests.MockingTest.testStrictClassMocking":513,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":323,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":120,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":301,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":339,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":476,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":119,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":127,"org.easymock.tests.ObjectMethodsTest.testHashCode":490,"org.easymock.tests2.CompareToTest.testGreateOrEqual":405,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":398,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":538,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":134,"org.easymock.tests2.NameTest.nameForNiceMock":113,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":533,"org.easymock.tests2.DependencyTest.testInterfaceMocking":31,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":397,"org.easymock.samples.ExampleTest.addDocument":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":362,"org.easymock.tests2.DelegateToTest.testStubDelegate":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.AnswerTest.stubAnswer":126,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":233,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":430,"org.easymock.tests.UsageVarargTest.varargLongAccepted":389,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":500,"org.easymock.tests.UsageExpectAndReturnTest.floatType":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":128,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests2.ConstraintsToStringTest.orToString":310,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":437,"org.easymock.tests.UsageThrowableTest.noUpperLimit":177,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":85,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":72,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":418,"org.easymock.tests2.SerializationTest.test":29,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":63,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":0,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":461,"org.easymock.tests2.UsageConstraintsTest.testSame":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":267,"org.easymock.samples.SupportTest.addDocument":380,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":441,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":523,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":353,"org.easymock.tests.GenericTest.testPackageScope":229,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":436,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":516,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":521,"org.easymock.tests2.NameTest.nameForMock":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":278,"org.easymock.tests2.UsageStrictMockTest.differentMethods":45,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":373,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":445,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":217,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":488,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":265,"org.easymock.tests2.MockedExceptionTest.testRealException":110,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":486,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":325,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":342,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":478,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":169,"org.easymock.tests2.NameTest.nameForStrictMock":112,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":429,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":36,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":152,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":421,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":463,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":98,"org.easymock.tests2.UsageStrictMockTest.range":44,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":527,"org.easymock.tests2.UsageConstraintsTest.lessThan":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":499,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":136,"org.easymock.tests2.CaptureTest.testCaptureRightOne":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":357,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":262,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":149,"org.easymock.tests.UsageTest.wrongArguments":242,"org.easymock.tests2.MockBuilderTest.testWithConstructor":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":354,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":494,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":279,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":465,"org.easymock.tests.UsageVarargTest.varargShortAccepted":388,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":253,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":541,"org.easymock.tests2.UsageConstraintsTest.cmpTo":78,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":124,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":531,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":496,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":54,"org.easymock.tests2.CaptureTest.testCaptureFromStub":68,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":468,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":428,"org.easymock.tests.UsageTest.unexpectedCallWithArray":241,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":537,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":232,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":251,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":280,"org.easymock.tests2.CaptureTest.testCapture":335,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":234,"org.easymock.samples.ExampleTest.addAndChangeDocument":18,"org.easymock.tests2.ConstraintsToStringTest.notToString":312,"org.easymock.tests.UsageStrictMockTest.testVerify":394,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":336,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":393,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":296,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":288,"org.easymock.tests.LimitationsTest.abstractClass":510,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":272,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":141,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":383}}]
