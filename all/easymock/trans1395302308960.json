[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[3,4,5,6,7,8],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,0,205,206,207,208,1,209,210,2,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,3,4,5,6,283,7,284,8,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[254],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[246,256],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[488],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[96,97,164,489,490,491],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[136,138,139,142,143,144,145,186,187,193,194,492,493,494,312,322,323,324,343,344,346,347,434,436,439,440],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[68,138,139,160,171,172,174,187,193,194,195,495,496,308,312,319,320,321,323,324,343,346,347,497,356,435,436,439,440,470],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[72,73,74,498],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[415],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1039","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[215,222,227],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[205],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[499,500,501],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,0,205,206,207,208,1,209,210,2,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,3,4,5,6,283,7,284,8,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[502,503,504,505,343,435],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[292],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[10,11,14,15,19,20,21,22,24,25,26,27,28,29,32,58,72,73,74,75,76,77,79,80,81,82,83,84,86,87,88,89,92,95,97,101,102,103,104,107,121,124,125,126,135,136,139,140,142,143,144,145,158,164,165,176,177,181,182,185,186,188,189,192,195,197,198,201,202,203,204,0,206,207,208,1,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,230,232,233,236,260,261,262,263,264,267,269,270,277,278,279,280,281,285,286,287,288,293,294,308,309,310,311,313,314,315,316,317,318,322,323,324,326,327,328,329,330,332,333,335,336,337,338,339,342,344,347,348,349,350,351,352,353,354,355,357,360,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,420,421,423,434,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,469,474,475,476,477,478,479,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[110,111,113,116,117,120,147,148,150,153,154,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"matched"}},{"position":"org.easymock.internal.LastControl:95","failures":[19,21,29,204,0,207,1,209,2,220,225],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[15,36,39,49,55,72,74,82,84,85,87,88,89,90,92,95,96,97,98,158,506,160,161,164,165,166,168,171,172,507,174,175,176,177,178,181,182,489,508,230,237,242,293,294,295,360,372,419,420,421,423,472,473,484,485,485,486,486],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[15,36,39,49,55,72,74,82,84,85,87,88,89,90,92,95,96,97,98,158,506,160,161,164,165,166,168,171,172,507,174,175,176,177,178,181,182,489,508,490,230,237,242,293,294,295,360,372,419,420,421,423,472,473,484,485,485,486,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[72,73,74,498],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[188],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[72,73,74,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[14,20,21,23,24,26,27,31,32,58,75,77,79,138,139,186,189,190,191,195,197,198,199,202,203,204,206,207,208,1,213,214,215,216,218,219,226,227,269,308,309,310,311,312,315,322,327,346,347,373,374,377,379,380,381,382,384,385,386,387,389,390,391,392,433,434,437,438,442,443,446,448,449,450,451,453,454,455,456,458,459,460,461,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.LastControl:61","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,77,79,92,136,200,202,203,204,0,206,207,208,1,209,210,2,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,232,233,234,235,236,260,261,262,263,264,312,339,343,344,354,357,358,462,463],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.MocksControl:190","failures":[29,62,69,70,85,97,189,194,0,209,210,211,214,220,221,222,224,268,269,271,272,273,274,275,312,323,326,440],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[10,11,12,14,15,19,20,21,22,23,26,27,28,29,31,32,36,39,49,55,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,76,82,84,85,86,87,88,89,92,96,97,98,107,108,114,121,125,126,136,138,139,151,160,164,166,168,172,175,176,177,178,180,181,182,184,185,186,188,190,191,192,195,196,197,198,199,200,201,202,203,204,0,206,207,208,1,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,232,233,236,245,260,261,262,263,264,265,268,270,271,272,273,274,275,293,308,309,310,311,322,323,324,325,326,327,344,346,347,354,357,358,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,420,421,423,433,434,437,438,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,466,467,469,474,475,476,477,479,483,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":433,"org.easymock.tests2.UsageTest.argumentsOrdered":194,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":403,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":189,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":487,"org.easymock.tests2.DelegateToTest.testReturnException":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":351,"org.easymock.tests.MockingTest.testPartialClassMocking":420,"org.easymock.tests.MockClassControlTest.testToString":361,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":141,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":442,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":39,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":492,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":108,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":210,"org.easymock.tests2.UsageTest.wrongArguments":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":232,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":120,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":287,"org.easymock.samples.ExampleTest.answerVsDelegate":475,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":242,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":425,"org.easymock.tests2.UsageConstraintsTest.testNull":207,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":87,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":68,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":366,"org.easymock.tests2.CaptureTest.testPrimitive":22,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":236,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":461,"org.easymock.tests.UsageTest.moreThanOneArgument":434,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":279,"org.easymock.tests.UsageTest.argumentsOrdered":440,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":297,"org.easymock.tests.UsageVarargTest.varargIntAccepted":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":260,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":156,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":129,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":264,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":114,"org.easymock.tests.ReplayStateInvalidUsageTest.times":253,"org.easymock.tests2.DependencyTest.testClassMocking":105,"org.easymock.tests2.AnswerTest.answer":121,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":104,"org.easymock.tests2.CaptureTest.testAnd":19,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":239,"org.easymock.tests2.UsageTest.strictResetToDefault":185,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":310,"org.easymock.tests2.DelegateToTest.testDelegate":14,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":457,"org.easymock.tests.LimitationsTest.mockFinalMethod":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":354,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":371,"org.easymock.tests2.DependencyTest.testClassMockingSupport":106,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":265,"org.easymock.tests2.CaptureTest.testCapture1_2446744":23,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":455,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":102,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":247,"org.easymock.tests.UsageThrowableTest.throwError":268,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":241,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":157,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":57,"org.easymock.samples.PartialClassMockTest.testGetArea":484,"org.easymock.tests.MockingTest.testInterfaceMocking":422,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":248,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":261,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":443,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":432,"org.easymock.tests2.UsageTest.niceToStrict":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":164,"org.easymock.tests2.MockBuilderTest.testCreateMock":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":52,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":117,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":451,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":64,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":238,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":307,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":313,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":285,"org.easymock.tests.UsageOverloadedMethodTest.overloading":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":54,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":467,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":384,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":325,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":214,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":28,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":331,"org.easymock.tests2.EasyMockSupportClassTest.testAll":36,"org.easymock.tests.MockClassControlTest.testEquals":365,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":294,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":459,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":489,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":103,"org.easymock.tests2.CaptureTest.testCaptureAll":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":369,"org.easymock.tests.MockNameTest.defaultName":340,"org.easymock.tests2.UsageConstraintsTest.testMatches":216,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":280,"org.easymock.samples.ExampleTest.voteForRemovals":479,"org.easymock.tests.UsageVarargTest.allKinds":339,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":322,"org.easymock.samples.BasicClassMockTest.testPrintContent":473,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":370,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":274,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":153,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":355,"org.easymock.tests2.UsageConstraintsTest.greaterThan":218,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":37,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":98,"org.easymock.samples.ExampleTest.voteForRemoval":476,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":8,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":99,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":198,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":243,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":90,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":184,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":372,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":61,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":350,"org.easymock.tests2.CaptureTest.testCaptureFirst":32,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":62,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":380,"org.easymock.tests2.UsageTest.moreThanOneArgument":186,"org.easymock.tests2.CaptureTest.testCapture2_2446744":31,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":411,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":172,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":338,"org.easymock.tests.GenericTest.testBridgedEquals":296,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":320,"org.easymock.tests.UsageExpectAndReturnTest.longType":376,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":367,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":507,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":460,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":223,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":458,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":277,"org.easymock.tests.UsageCallCountTest.tooManyCalls":321,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":53,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":381,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":447,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":273,"org.easymock.tests.MockingTest.testNiceClassMocking":426,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":176,"org.easymock.tests.MockingTest.testClassMocking":418,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":506,"org.easymock.tests2.UsageConstraintsTest.testContains":213,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":314,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":82,"org.easymock.tests2.UsageConstraintsTest.testFind":206,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":327,"org.easymock.tests.MockTypeTest.fromEasyMockClass":240,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":79,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":341,"org.easymock.tests.UsageExpectAndReturnTest.object":383,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":67,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":333,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":430,"org.easymock.tests.UsageTest.exactCallCountByLastCall":441,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":289,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":389,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":328,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":147,"org.easymock.tests.MockClassControlTest.testHashCode":364,"org.easymock.tests2.EasyMockSupportTest.testVerify":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":46,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":499,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":299,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":464,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":306,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":495,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":101,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":18,"org.easymock.tests.UsageVarargTest.varargCharAccepted":332,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":282,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastCall":190,"org.easymock.tests.DefaultClassInstantiatorTest.object":3,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":70,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":305,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":428,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":496,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":47,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":491,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":112,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":146,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":96,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":363,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":448,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":390,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":257,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":55,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":362,"org.easymock.tests2.UsageTest.resumeIfFailure":195,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":237,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":353,"org.easymock.tests2.StubTest.stubWithReturnValue":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":167,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":224,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":382,"org.easymock.tests2.SerializationTest.testAllMockedMethod":74,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":409,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":503,"org.easymock.samples.SupportTest.voteForRemovals":483,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":149,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":454,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":498,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":415,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":122,"org.easymock.tests.UsageExpectAndThrowTest.object":452,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":291,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":221,"org.easymock.tests2.DelegateToTest.testWrongClass":12,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":462,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":463,"org.easymock.samples.ConstructorCalledMockTest.testTax":485,"org.easymock.tests.UsageStrictMockTest.range":346,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":132,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":453,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":166,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":33,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":255,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":286,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":504,"org.easymock.tests2.CaptureTest.testCaptureNone":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":304,"org.easymock.tests.UsageUnorderedTest.message":312,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":497,"org.easymock.tests.UsageVerifyTest.twoReturns":324,"org.easymock.tests.UsageVarargTest.varargByteAccepted":337,"org.easymock.tests2.ThreadingTest.testThreadSafe":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":50,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":318,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":472,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":431,"org.easymock.tests2.CaptureTest.testCapture_2617107":21,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":235,"org.easymock.tests2.UsageConstraintsTest.any":211,"org.easymock.tests2.StubTest.stub":75,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":259,"org.easymock.tests.UsageExpectAndThrowTest.longType":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":352,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":283,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":251,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":137,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":151,"org.easymock.tests2.SerializationTest.testClass":72,"org.easymock.tests.LimitationsTest.mockNativeMethod":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":392,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":295,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":490,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":111,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":140,"org.easymock.tests2.NameTest.nameForMocksControl":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":113,"org.easymock.tests2.MockedExceptionTest.testMockedException":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":38,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":438,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":446,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":423,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":78,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":168,"org.easymock.tests.MockingTest.testNicePartialClassMocking":421,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":89,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":109,"org.easymock.tests2.CaptureTest.testCaptureLast":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":266,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":182,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":209,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":222,"org.easymock.tests.MockingTest.testTwoMocks":419,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":373,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":450,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":193,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":226,"org.easymock.samples.ExampleTest.removeNonExistingDocument":480,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":116,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":249,"org.easymock.tests.UsageStrictMockTest.differentMethods":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":148,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":5,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":199,"org.easymock.tests2.MockBuilderTest.testCreateMockString":174,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":359,"org.easymock.tests.UsageExpectAndThrowTest.floatType":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":40,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":35,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":17,"org.easymock.tests.UsageVerifyTest.twoThrows":323,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":49,"org.easymock.samples.ExampleTest.voteAgainstRemoval":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":404,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":302,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":97,"org.easymock.tests.LimitationsTest.privateConstructor":229,"org.easymock.tests2.UsageConstraintsTest.testNotNull":225,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":275,"org.easymock.tests2.UsageTest.defaultResetToNice":192,"org.easymock.samples.ExampleTest.voteAgainstRemovals":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":405,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":388,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":110,"org.easymock.tests.UsageVarargTest.differentLength":334,"org.easymock.tests2.CallbackTest.callback":58,"org.easymock.tests2.UsageConstraintsTest.equals":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":93,"org.easymock.tests.UsageTest.openCallCountByLastCall":437,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":234,"org.easymock.tests.UsageCallCountTest.tooFewCalls":316,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":178,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":288,"org.easymock.tests.UsageThrowableTest.throwCheckedException":272,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":505,"org.easymock.tests.MockingTest.testStrictClassMocking":417,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":181,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":358,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":177,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":115,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":180,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":126,"org.easymock.tests.ObjectMethodsTest.testHashCode":429,"org.easymock.tests2.NameTest.nameForNiceMock":144,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":201,"org.easymock.tests2.DependencyTest.testInterfaceMocking":107,"org.easymock.samples.ExampleTest.addDocument":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":51,"org.easymock.tests2.DelegateToTest.testStubDelegate":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":56,"org.easymock.tests2.AnswerTest.stubAnswer":125,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":344,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":169,"org.easymock.tests.UsageVarargTest.varargLongAccepted":336,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":391,"org.easymock.tests.UsageExpectAndReturnTest.floatType":375,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":15,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":486,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":155,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":219,"org.easymock.tests.UsageThrowableTest.noUpperLimit":269,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":203,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":127,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":24,"org.easymock.tests2.SerializationTest.test":73,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":4,"org.easymock.tests2.UsageConstraintsTest.testSame":208,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":374,"org.easymock.samples.SupportTest.addDocument":482,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":179,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":41,"org.easymock.tests.GenericTest.testPackageScope":293,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":154,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":424,"org.easymock.tests2.NameTest.nameForMock":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":385,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":173,"org.easymock.tests2.UsageStrictMockTest.differentMethods":139,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":94,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":377,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":456,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":427,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":311,"org.easymock.tests2.MockedExceptionTest.testRealException":83,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":406,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":233,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":256,"org.easymock.tests2.NameTest.nameForStrictMock":143,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":163,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":77,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":88,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":131,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":493,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":6,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":220,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":160,"org.easymock.tests2.UsageStrictMockTest.range":138,"org.easymock.tests2.UsageConstraintsTest.lessThan":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":150,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":45,"org.easymock.tests2.CaptureTest.testCaptureRightOne":29,"org.easymock.tests2.UsageConstraintsTest.testOr":1,"org.easymock.tests.UsageRangeTest.combination":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":85,"org.easymock.tests.UsageTest.wrongArguments":436,"org.easymock.tests2.MockBuilderTest.testWithConstructor":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":42,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":386,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":7,"org.easymock.tests.UsageVarargTest.varargShortAccepted":335,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":319,"org.easymock.tests2.UsageConstraintsTest.cmpTo":212,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":396,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":191,"org.easymock.tests2.CaptureTest.testCaptureFromStub":30,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":246,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":161,"org.easymock.tests.UsageTest.unexpectedCallWithArray":435,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":343,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":387,"org.easymock.tests2.UsageConstraintsTest.constraints":204,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":345,"org.easymock.samples.ExampleTest.addAndChangeDocument":481,"org.easymock.tests.UsageStrictMockTest.testVerify":349,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":471,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":342,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":368,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":25,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":508,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":262,"org.easymock.tests.LimitationsTest.abstractClass":228,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":379,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":263,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":494,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":65,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":329}}]
