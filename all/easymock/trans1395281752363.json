[{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,25,26,26,27,28,29,30,0,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,1,94,95,2,3,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,4,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,6,222,223,7,8,224,225,226,9,10,12,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[29,35,42,152,153,156,253,198,200,201,202,203,204,205,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,11,278],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[48,279,280],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","args":"args","cstr":"cstr"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[281],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[282,283,284,285,286,287,288],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[127,289],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[290,291],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:277","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"this","delegateTo":"value","this":"lastResult"}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[81,87,103,104,106,107,108,109,110,115],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[292],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[145,294,295,296],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[13,297,14,15,16,17,298,18,19,20,21,27,29,30,0,31,32,33,34,35,36,37,38,39,40,299,41,42,300,301,47,302,303,304,305,49,51,52,53,54,55,56,57,58,59,60,61,62,63,306,307,64,308,309,310,65,66,67,68,311,69,70,71,72,73,74,312,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,1,94,95,2,3,313,96,97,98,99,100,314,315,316,101,317,102,103,104,105,106,107,108,109,110,111,112,113,114,115,318,319,320,321,322,323,324,325,326,327,116,328,329,330,331,332,333,121,129,130,334,335,133,336,337,338,339,340,141,341,342,343,344,345,346,142,143,144,145,146,347,348,349,350,294,149,295,351,352,353,354,355,150,151,152,153,4,356,154,155,156,157,158,159,160,161,162,163,164,165,357,358,359,169,170,174,175,5,360,361,362,253,363,364,365,366,367,368,369,370,371,372,373,374,176,375,376,377,378,379,177,380,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,381,382,383,384,385,296,386,387,388,389,390,391,198,199,200,201,202,203,204,205,206,207,208,209,210,211,392,393,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,394,395,396,397,274,275,276,212,398,213,214,215,216,399,217,218,219,220,221,6,222,223,7,8,224,400,225,401,277,226,9,402,10,11,12,403,404,405,406,278,407,227,228,229,230,231,232,233,234,235,408,409,410,236,237,238,239,411,240,241,412,413,242,243,244,414,245,246,247,248,249,250,251,252,415,416,417,418,419,420],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[25,25,26,26,42,65,66,69,70,71,72,77,79,80,82,83,84,89,90,91,1,113,160,161,164,169,170,360,363,364,373,377,381,206,207,208,209,210,211,6,227,228,229,230,231,239],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[144],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[13,297,14,15,16,17,298,18,19,20,21,22,23,24,25,26,27,28,282,421,29,30,0,31,32,33,34,35,36,37,38,39,40,299,41,42,422,423,424,43,425,426,44,427,428,429,430,431,432,433,434,435,45,436,437,438,439,440,46,441,442,300,301,47,302,303,304,305,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,306,307,64,308,309,310,65,66,67,68,311,69,70,71,72,73,74,312,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,1,94,95,2,3,313,96,97,98,99,100,314,315,316,101,317,102,103,104,105,106,107,108,109,110,111,112,113,114,115,318,319,320,321,322,323,324,325,326,327,116,328,329,330,331,332,333,117,118,119,120,443,121,122,123,444,445,446,124,447,448,449,125,450,126,288,127,451,279,452,128,453,454,455,456,129,130,457,458,459,460,461,334,335,131,132,133,134,135,136,462,463,137,464,465,466,138,139,140,467,468,336,337,338,339,340,141,341,342,343,344,345,346,142,143,144,145,146,147,469,470,148,471,347,348,349,350,294,149,295,351,352,353,354,355,150,151,152,153,4,356,154,155,156,157,158,159,160,161,162,163,164,165,472,473,474,166,167,357,168,358,359,475,169,170,293,171,172,173,476,174,175,5,360,361,362,253,363,364,365,366,367,368,369,370,371,372,373,374,176,375,376,377,378,379,177,380,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,381,382,383,384,385,296,386,387,388,389,390,391,198,199,200,201,202,203,204,205,206,207,208,209,210,211,392,393,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,289,477,478,394,395,479,396,397,274,275,276,212,398,213,214,215,216,399,217,218,219,220,221,6,222,223,7,8,224,400,225,401,277,226,9,402,10,11,12,480,481,482,483,484,485,486,487,488,403,404,405,406,278,407,227,228,229,230,231,232,233,234,235,408,409,410,236,237,238,239,411,240,241,412,413,242,243,244,414,245,246,247,248,249,250,251,252,415,416,417,418,419,420,489,490,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"this.org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[13,297,14,15,17,18,20,24,30,32,33,37,38,41,42,51,52,53,54,56,57,60,61,62,64,310,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,1,94,95,2,3,101,103,104,105,106,107,108,109,110,111,112,114,115,322,125,128,132,135,139,151,157,158,160,161,162,163,164,165,169,170,174,198,199,201,202,203,204,205,211,214,216,218,219,220,6,222,223,7,8,11,278,227,228,229,230,231,232,242,243,244,245,246,248,249,250,251,252],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[90],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[13,297,14,15,17,18,20,24,25,25,26,26,28,29,30,0,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,300,301,47,302,303,305,48,49,51,52,53,54,55,56,57,58,59,60,61,62,306,307,64,308,309,310,65,66,67,68,69,70,71,72,73,74,312,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,1,94,95,2,3,100,314,315,316,101,317,102,103,104,105,106,107,108,109,110,111,112,113,114,115,318,319,320,322,116,117,118,119,120,121,122,123,124,125,126,127,128,454,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,347,348,349,149,351,352,353,354,355,150,151,152,153,4,356,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,392,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,213,219,221,6,222,223,7,8,400,401,277,9,10,11,12,403,404,405,406,278,407,227,228,229,230,231,232,233,234,235,408,409,410,236,237,238,239,411,240,241,412,413,252],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[485,281,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[293,171,172,173,476],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[46,449],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[499,500,356,501,502,221],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[144],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[67,68,73,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[309,362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[293],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[67,68,70,72,73,312,84,89,102,104,112],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[67,68,70,72,73,312,84,89,102,104,112],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[293,476],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":68,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":153,"org.easymock.tests2.UsageTest.argumentsOrdered":38,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":369,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":33,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":21,"org.easymock.tests2.DelegateToTest.testReturnException":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":404,"org.easymock.tests.MockingTest.testPartialClassMocking":166,"org.easymock.tests.MockClassControlTest.testToString":491,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":313,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":430,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":44,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":254,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":283,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":160,"org.easymock.tests2.UsageTest.wrongArguments":31,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":349,"org.easymock.samples.ExampleTest.answerVsDelegate":297,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":479,"org.easymock.tests2.UsageConstraintsTest.testNull":70,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":359,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":134,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":496,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":60,"org.easymock.tests2.CaptureTest.testPrimitive":105,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":164,"org.easymock.tests.UsageTest.moreThanOneArgument":4,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":273,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":208,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":411,"org.easymock.tests.UsageTest.argumentsOrdered":158,"org.easymock.tests.UsageVarargTest.varargIntAccepted":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":227,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":445,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":287,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":332,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":231,"org.easymock.tests.ReplayStateInvalidUsageTest.times":388,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests2.DependencyTest.testClassMocking":455,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":292,"org.easymock.tests2.AnswerTest.answer":100,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":321,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":478,"org.easymock.tests2.CaptureTest.testAnd":102,"org.easymock.tests2.UsageTest.strictResetToDefault":30,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":466,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":448,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":55,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":234,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":413,"org.easymock.tests2.DelegateToTest.testDelegate":310,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":269,"org.easymock.tests.LimitationsTest.mockFinalMethod":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":355,"org.easymock.tests2.DependencyTest.testClassMockingSupport":456,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":174,"org.easymock.tests2.CaptureTest.testCapture1_2446744":106,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":319,"org.easymock.tests.UsageThrowableTest.throwError":198,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":383,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":395,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":497,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":442,"org.easymock.samples.PartialClassMockTest.testGetArea":24,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":384,"org.easymock.tests.MockingTest.testInterfaceMocking":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":228,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":431,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":420,"org.easymock.tests2.UsageTest.niceToStrict":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":125,"org.easymock.tests2.MockBuilderTest.testCreateMock":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":438,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":343,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":263,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":56,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":477,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":276,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":347,"org.easymock.tests.UsageOverloadedMethodTest.overloading":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":435,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":79,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":189,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":150,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":78,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":281,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":111,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":414,"org.easymock.tests.MockClassControlTest.testEquals":495,"org.easymock.tests2.EasyMockSupportClassTest.testAll":43,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":172,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":271,"org.easymock.tests2.CaptureTest.testCaptureAll":103,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":353,"org.easymock.tests.MockNameTest.defaultName":393,"org.easymock.tests2.UsageConstraintsTest.testMatches":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":209,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":381,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests.UsageVarargTest.allKinds":252,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":10,"org.easymock.samples.BasicClassMockTest.testPrintContent":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":354,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":204,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":407,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":329,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":487,"org.easymock.tests2.UsageConstraintsTest.greaterThan":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":425,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":233,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":140,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":488,"org.easymock.samples.ExampleTest.voteForRemoval":14,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":467,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":143,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":460,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":462,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":147,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":53,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":403,"org.easymock.tests2.CaptureTest.testCaptureFirst":115,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":54,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":40,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":402,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":185,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":145,"org.easymock.tests2.CaptureTest.testCapture2_2446744":114,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":376,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":251,"org.easymock.tests.GenericTest.testBridgedEquals":476,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":217,"org.easymock.tests.UsageExpectAndReturnTest.longType":181,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":351,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":272,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":87,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":239,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":409,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":206,"org.easymock.tests.UsageCallCountTest.tooManyCalls":218,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":203,"org.easymock.tests.MockingTest.testNiceClassMocking":475,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":118,"org.easymock.tests.MockingTest.testClassMocking":473,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":398,"org.easymock.tests2.UsageConstraintsTest.testContains":77,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":47,"org.easymock.tests2.UsageConstraintsTest.testFind":69,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":152,"org.easymock.tests.MockTypeTest.fromEasyMockClass":394,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":219,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":305,"org.easymock.tests.UsageExpectAndReturnTest.object":188,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":59,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":246,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":284,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":418,"org.easymock.tests.UsageTest.exactCallCountByLastCall":159,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":240,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":282,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":194,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":242,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":401,"org.easymock.tests.MockClassControlTest.testHashCode":494,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":324,"org.easymock.tests2.EasyMockSupportTest.testVerify":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":433,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":241,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":400,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":318,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":299,"org.easymock.tests.UsageVarargTest.varargCharAccepted":245,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":480,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":380,"org.easymock.tests2.UsageTest.openCallCountByLastCall":34,"org.easymock.tests.DefaultClassInstantiatorTest.object":481,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":62,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":274,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":434,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":261,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":323,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":493,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":260,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":195,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":408,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":46,"org.easymock.tests2.UsageTest.resumeIfFailure":39,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":289,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":406,"org.easymock.tests2.StubTest.stubWithReturnValue":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":288,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":187,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":88,"org.easymock.tests2.SerializationTest.testAllMockedMethod":50,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":176,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":280,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":500,"org.easymock.samples.SupportTest.voteForRemovals":20,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":266,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":177,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":314,"org.easymock.tests.UsageExpectAndThrowTest.object":264,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":295,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":85,"org.easymock.tests2.DelegateToTest.testWrongClass":308,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":170,"org.easymock.samples.ConstructorCalledMockTest.testTax":25,"org.easymock.tests.UsageStrictMockTest.range":223,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":334,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":58,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":117,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":265,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":422,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":390,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":157,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":348,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":501,"org.easymock.tests2.CaptureTest.testCaptureNone":110,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":238,"org.easymock.tests.UsageUnorderedTest.message":165,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":250,"org.easymock.tests2.ThreadingTest.testThreadSafe":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":436,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":216,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":419,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":22,"org.easymock.tests2.CaptureTest.testCapture_2617107":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":378,"org.easymock.tests2.UsageConstraintsTest.any":75,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":387,"org.easymock.tests2.StubTest.stub":41,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":405,"org.easymock.tests.UsageExpectAndThrowTest.longType":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":379,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":485,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":386,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":94,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":116,"org.easymock.tests2.SerializationTest.testClass":48,"org.easymock.tests.LimitationsTest.mockNativeMethod":148,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":197,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":338,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":3,"org.easymock.tests2.NameTest.nameForMocksControl":99,"org.easymock.tests2.MockedExceptionTest.testMockedException":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":426,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":258,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":304,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":131,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":127,"org.easymock.tests.MockingTest.testNicePartialClassMocking":167,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":136,"org.easymock.tests2.CaptureTest.testCaptureLast":109,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":336,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":175,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":123,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":73,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":86,"org.easymock.tests.MockingTest.testTwoMocks":474,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":262,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":90,"org.easymock.samples.ExampleTest.removeNonExistingDocument":298,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":385,"org.easymock.tests.UsageStrictMockTest.differentMethods":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":325,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":483,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":291,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":144,"org.easymock.tests2.MockBuilderTest.testCreateMockString":454,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":427,"org.easymock.tests.UsageExpectAndThrowTest.floatType":256,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":424,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":316,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":421,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":45,"org.easymock.samples.ExampleTest.voteAgainstRemoval":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":370,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":139,"org.easymock.tests.LimitationsTest.privateConstructor":470,"org.easymock.tests2.UsageConstraintsTest.testNotNull":89,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":205,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":300,"org.easymock.tests2.UsageTest.defaultResetToNice":36,"org.easymock.samples.ExampleTest.voteAgainstRemovals":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":371,"org.easymock.tests.UsageVarargTest.differentLength":247,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":337,"org.easymock.tests2.CallbackTest.callback":322,"org.easymock.tests2.UsageConstraintsTest.equals":311,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":464,"org.easymock.tests.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":162,"org.easymock.tests.UsageCallCountTest.tooFewCalls":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":120,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":350,"org.easymock.tests.UsageThrowableTest.throwCheckedException":202,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":502,"org.easymock.tests.MockingTest.testStrictClassMocking":472,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":392,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":122,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":341,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":389,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":121,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":317,"org.easymock.tests.ObjectMethodsTest.testHashCode":417,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":286,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":146,"org.easymock.tests2.NameTest.nameForNiceMock":98,"org.easymock.tests2.DependencyTest.testInterfaceMocking":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":285,"org.easymock.samples.ExampleTest.addDocument":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.DelegateToTest.testStubDelegate":64,"org.easymock.tests2.AnswerTest.stubAnswer":101,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":451,"org.easymock.tests.UsageVarargTest.varargLongAccepted":249,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":368,"org.easymock.tests.UsageExpectAndReturnTest.floatType":180,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":196,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":26,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":83,"org.easymock.tests.UsageThrowableTest.noUpperLimit":199,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":331,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":66,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":457,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":107,"org.easymock.tests2.SerializationTest.test":49,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":498,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":179,"org.easymock.tests2.UsageConstraintsTest.testSame":71,"org.easymock.samples.SupportTest.addDocument":19,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":443,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":428,"org.easymock.tests.GenericTest.testPackageScope":171,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":330,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":358,"org.easymock.tests2.NameTest.nameForMock":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":190,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":453,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":465,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":182,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":268,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":415,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":235,"org.easymock.tests2.MockedExceptionTest.testRealException":302,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":397,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":372,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":391,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":161,"org.easymock.tests2.NameTest.nameForStrictMock":97,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":449,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":303,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":135,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":461,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":484,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":84,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":124,"org.easymock.tests2.UsageStrictMockTest.range":95,"org.easymock.tests2.UsageConstraintsTest.lessThan":91,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":327,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":432,"org.easymock.tests2.CaptureTest.testCaptureRightOne":112,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":290,"org.easymock.tests2.UsageConstraintsTest.testOr":72,"org.easymock.tests.UsageRangeTest.combination":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":132,"org.easymock.tests.UsageTest.wrongArguments":154,"org.easymock.tests2.MockBuilderTest.testWithConstructor":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":429,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":490,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":361,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":486,"org.easymock.tests.UsageVarargTest.varargShortAccepted":248,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":399,"org.easymock.tests2.UsageConstraintsTest.cmpTo":76,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":253,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":35,"org.easymock.tests2.CaptureTest.testCaptureFromStub":113,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":382,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":447,"org.easymock.tests.UsageTest.unexpectedCallWithArray":356,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":221,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":192,"org.easymock.tests2.UsageConstraintsTest.constraints":67,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":222,"org.easymock.samples.ExampleTest.addAndChangeDocument":18,"org.easymock.tests.UsageStrictMockTest.testVerify":224,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":27,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":352,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":229,"org.easymock.tests.LimitationsTest.abstractClass":469,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":184,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":57,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":243}}]
