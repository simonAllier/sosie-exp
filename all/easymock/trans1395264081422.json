[{"position":"org.easymock.internal.RecordState:183","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[222,223,224,225,226,227,228,229,230,231,232,233],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,234,235,236,237,238,239,1,2,3,4,240,5,6,241,242,7,243,244,8,9,10,11,12,13,245,246,247,248,249,250,251,252,253,254,255,256,257,258,14,259,260,15,261,16,17,18,19,20,262,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,263,264,265,266,267,268,49,50,269,270,51,52,271,272,53,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,54,55,56,57,58,59,300,301,302,303,304,305,306,307,308,309,310,311,60,61,62,312,63,64,313,65,66,67,68,69,314,315,316,317,318,319,320,321,322,323,324,325,326,70,71,327,72,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,73,74,348,349,350,351,352,353,354,355,356,357,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,358,98,99,100,101,102,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,103,104,105,106,107,108,377,109,378,378,379,379,110,111,112,113,114,115,116,380,222,223,381,224,117,382,225,226,383,384,227,385,386,118,119,387,120,121,122,123,124,125,126,127,388,389,390,391,128,129,130,131,132,133,134,135,136,137,392,138,139,140,141,393,394,395,396,142,397,398,143,399,144,400,145,146,147,148,401,402,403,404,405,406,407,408,409,410,411,412,413,149,414,150,415,151,416,417,418,419,420,421,422,423,424,425,426,152,427,428,429,430,431,432,433,434,435,153,436,437,438,439,440,154,441,442,155,443,156,157,444,158,445,446,447,448,449,450,451,452,453,454,455,159,456,457,160,161,162,163,458,164,459,165,166,167,460,168,169,170,171,172,461,173,174,175,176,177,178,462,463,179,180,464,181,182,183,184,465,466,185,186,187,188,189,467,468,228,229,469,230,190,470,231,232,471,472,233,473,474,475,476,191,192,193,194,477,195,196,197,198,199,200,478,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[479,208],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[480,217],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[458],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[261,481,482,269,483,484],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"failMessage"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[0,234,238,239,1,2,3,4,242,7,8,9,10,11,12,13,246,248,249,251,254,256,14,260,15,261,16,17,18,19,20,262,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,269,270,51,52,271,272,53,54,55,56,57,58,59,300,301,302,303,304,310,60,61,62,63,64,65,66,67,68,69,70,71,72,331,332,333,334,335,336,73,74,350,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,358,98,99,100,101,102,359,360,361,362,372,373,374,375,376,103,104,105,106,107,108,109,378,378,379,379,110,111,112,113,114,115,116,117,118,119,387,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,392,138,139,140,141,393,394,395,396,142,397,398,143,399,144,400,145,146,147,148,404,405,406,407,408,149,414,150,151,418,420,424,152,153,154,155,443,156,157,444,158,447,450,452,159,160,161,162,163,164,165,166,167,168,169,170,171,172,461,173,174,175,176,177,178,462,463,179,180,464,181,182,183,184,465,466,185,186,187,188,189,190,473,474,475,476,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[408,414,445,455],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[485,486],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[271,394,477],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[487,488,489,490,491,401,415],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[492,191,208,214],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[364,365,366,367,369,371],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[0,234,235,236,237,238,239,1,2,3,4,240,5,6,241,242,7,243,244,8,9,10,11,12,13,245,246,247,248,249,250,251,252,253,254,255,256,257,258,14,259,260,15,261,16,17,18,19,20,262,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,263,264,265,266,267,268,49,50,269,270,51,52,271,272,53,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,54,55,56,57,58,59,300,301,302,303,304,305,306,307,308,309,310,311,60,61,62,312,63,64,313,65,66,67,68,69,314,315,316,317,318,319,320,321,322,323,324,325,326,70,71,327,72,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,345,347,73,74,348,349,350,351,352,353,354,355,356,357,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,358,98,99,100,101,102,359,360,361,362,364,365,366,367,368,369,371,372,373,374,375,376,103,104,105,106,107,108,377,109,378,378,379,379,110,111,112,113,114,115,116,380,222,223,381,224,117,382,225,226,383,384,227,118,119,387,120,121,122,123,124,125,126,127,388,389,390,391,130,131,132,133,135,136,137,392,138,139,140,141,393,394,395,396,142,397,398,143,399,144,400,145,146,147,148,401,410,413,149,414,150,416,417,421,424,426,152,428,429,432,433,434,435,153,437,440,154,441,442,155,443,156,157,444,158,445,447,448,449,450,451,452,453,454,159,456,457,160,161,162,163,458,164,459,165,166,167,460,168,169,170,171,172,461,173,174,175,176,177,178,462,463,179,180,464,181,183,184,466,186,187,188,189,467,468,228,229,469,230,190,470,231,232,471,472,233,473,474,475,476,191,192,193,194,477,195,196,197,198,199,200,478,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[13,261,18,493,269,270,271,272,101,102,123,392,394,395],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[414,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[210],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[487,488,489,490,491,401,415],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[168],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[18,19,100,123,124],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[130,134,494,401,409,412,415,495,419,496,497],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[487,488,489,490,491,401,415],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":194,"org.easymock.tests2.UsageTest.argumentsOrdered":395,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":49,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":187,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":283,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":139,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":111,"org.easymock.tests2.DelegateToTest.testReturnException":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":332,"org.easymock.tests.MockingTest.testPartialClassMocking":70,"org.easymock.tests.MockClassControlTest.testToString":351,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":403,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":430,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":77,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":487,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":200,"org.easymock.tests2.UsageTest.wrongArguments":392,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":8,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":361,"org.easymock.samples.ExampleTest.answerVsDelegate":104,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":345,"org.easymock.tests2.UsageConstraintsTest.testNull":196,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":329,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":157,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":186,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":356,"org.easymock.tests2.CaptureTest.testPrimitive":172,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":12,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":96,"org.easymock.tests.UsageTest.moreThanOneArgument":50,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":374,"org.easymock.tests.UsageTest.argumentsOrdered":272,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":337,"org.easymock.tests.UsageVarargTest.varargIntAccepted":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":55,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":491,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":408,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":384,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":59,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":190,"org.easymock.tests.ReplayStateInvalidUsageTest.times":253,"org.easymock.tests2.DependencyTest.testClassMocking":385,"org.easymock.tests2.AnswerTest.answer":159,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":476,"org.easymock.tests2.CaptureTest.testAnd":169,"org.easymock.tests2.UsageTest.strictResetToDefault":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":450,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":183,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":98,"org.easymock.tests2.DelegateToTest.testDelegate":168,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":341,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":92,"org.easymock.tests.LimitationsTest.mockFinalMethod":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":304,"org.easymock.tests2.DependencyTest.testClassMockingSupport":386,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":263,"org.easymock.tests2.CaptureTest.testCapture1_2446744":461,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":474,"org.easymock.tests.UsageThrowableTest.throwError":21,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":247,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":344,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":376,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":442,"org.easymock.samples.PartialClassMockTest.testGetArea":110,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":248,"org.easymock.tests.MockingTest.testInterfaceMocking":327,"org.easymock.tests2.CompareToTest.testLessOrEqual":492,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":56,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":431,"org.easymock.tests2.UsageTest.niceToStrict":138,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":78,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":273,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":149,"org.easymock.tests2.MockBuilderTest.testCreateMock":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":438,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":232,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":483,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":86,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":184,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":237,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":238,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":359,"org.easymock.tests.UsageOverloadedMethodTest.overloading":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":435,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":205,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":40,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":357,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":204,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":177,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":312,"org.easymock.tests2.EasyMockSupportClassTest.testAll":424,"org.easymock.tests.MockClassControlTest.testEquals":355,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":7,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":475,"org.easymock.tests2.CaptureTest.testCaptureAll":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":302,"org.easymock.tests.MockNameTest.defaultName":348,"org.easymock.tests2.UsageConstraintsTest.testMatches":206,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":375,"org.easymock.samples.ExampleTest.voteForRemovals":108,"org.easymock.tests.UsageVarargTest.allKinds":69,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":100,"org.easymock.samples.BasicClassMockTest.testPrintContent":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":303,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":27,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":387,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":460,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":336,"org.easymock.tests2.UsageConstraintsTest.greaterThan":208,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":425,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":358,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":453,"org.easymock.samples.ExampleTest.voteForRemoval":105,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":371,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":454,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":400,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":346,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":445,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":54,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":181,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":331,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":459,"org.easymock.tests2.CaptureTest.testCaptureFirst":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":182,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":36,"org.easymock.tests2.CaptureTest.testCapture2_2446744":463,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":146,"org.easymock.tests2.UsageTest.moreThanOneArgument":137,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":291,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":68,"org.easymock.tests.GenericTest.testBridgedEquals":244,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":5,"org.easymock.tests.UsageExpectAndReturnTest.longType":32,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":300,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":95,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":213,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":93,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":372,"org.easymock.tests.UsageCallCountTest.tooManyCalls":6,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":26,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":129,"org.easymock.tests.MockingTest.testNiceClassMocking":330,"org.easymock.tests.MockingTest.testClassMocking":325,"org.easymock.tests2.UsageConstraintsTest.testContains":203,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":239,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":143,"org.easymock.tests2.UsageConstraintsTest.testFind":195,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":76,"org.easymock.tests.MockTypeTest.fromEasyMockClass":343,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":164,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":260,"org.easymock.tests.UsageExpectAndReturnTest.object":39,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":488,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":64,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":320,"org.easymock.tests.UsageTest.exactCallCountByLastCall":53,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":278,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":266,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":338,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":401,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":45,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":60,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":222,"org.easymock.tests.MockClassControlTest.testHashCode":354,"org.easymock.tests2.EasyMockSupportTest.testVerify":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":433,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":236,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":473,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":467,"org.easymock.tests.UsageVarargTest.varargCharAccepted":63,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":363,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":296,"org.easymock.tests2.UsageTest.openCallCountByLastCall":140,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":188,"org.easymock.tests.DefaultClassInstantiatorTest.object":364,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":235,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":318,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":434,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":469,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":380,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":451,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":46,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":154,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":352,"org.easymock.tests2.UsageTest.resumeIfFailure":396,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":334,"org.easymock.tests2.StubTest.stubWithReturnValue":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":415,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":38,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":214,"org.easymock.tests2.SerializationTest.testAllMockedMethod":220,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":289,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":484,"org.easymock.samples.SupportTest.voteForRemovals":116,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":89,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":295,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":456,"org.easymock.tests.UsageExpectAndThrowTest.object":87,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":268,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":211,"org.easymock.tests2.DelegateToTest.testWrongClass":167,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":73,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":74,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.samples.ConstructorCalledMockTest.testTax":378,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":390,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":466,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":88,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":421,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":255,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":271,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":360,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":481,"org.easymock.tests2.CaptureTest.testCaptureNone":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":316,"org.easymock.tests.UsageUnorderedTest.message":13,"org.easymock.tests.UsageVerifyTest.twoReturns":102,"org.easymock.tests.UsageVarargTest.varargByteAccepted":67,"org.easymock.tests2.ThreadingTest.testThreadSafe":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":436,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":4,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":113,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":321,"org.easymock.tests2.CaptureTest.testCapture_2617107":171,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":293,"org.easymock.tests2.UsageConstraintsTest.any":201,"org.easymock.tests2.StubTest.stub":126,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":299,"org.easymock.tests.UsageExpectAndThrowTest.longType":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":333,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":368,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":251,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":122,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":117,"org.easymock.tests2.SerializationTest.testClass":218,"org.easymock.tests.LimitationsTest.mockNativeMethod":14,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":48,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":243,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":229,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":125,"org.easymock.tests2.NameTest.nameForMocksControl":407,"org.easymock.tests2.MockedExceptionTest.testMockedException":398,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":426,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":52,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":458,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":72,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":81,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":155,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":151,"org.easymock.tests.MockingTest.testNicePartialClassMocking":71,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":158,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":468,"org.easymock.tests2.CaptureTest.testCaptureLast":175,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":264,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":134,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":199,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":212,"org.easymock.tests.MockingTest.testTwoMocks":326,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":494,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":85,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":394,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":216,"org.easymock.samples.ExampleTest.removeNonExistingDocument":377,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":231,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":249,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":223,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":486,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":366,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":145,"org.easymock.tests2.MockBuilderTest.testCreateMockString":420,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":427,"org.easymock.tests.UsageExpectAndThrowTest.floatType":79,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":160,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":402,"org.easymock.tests.UsageVerifyTest.twoThrows":101,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":153,"org.easymock.samples.ExampleTest.voteAgainstRemoval":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":284,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":314,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":452,"org.easymock.tests.LimitationsTest.privateConstructor":258,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":497,"org.easymock.tests2.UsageConstraintsTest.testNotNull":215,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":397,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":28,"org.easymock.tests2.UsageTest.defaultResetToNice":393,"org.easymock.samples.ExampleTest.voteAgainstRemovals":103,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":285,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":228,"org.easymock.tests.UsageVarargTest.differentLength":313,"org.easymock.tests2.CallbackTest.callback":221,"org.easymock.tests2.UsageConstraintsTest.equals":477,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":448,"org.easymock.tests.UsageTest.openCallCountByLastCall":51,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":191,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":10,"org.easymock.tests.UsageCallCountTest.tooFewCalls":2,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":362,"org.easymock.tests.UsageThrowableTest.throwCheckedException":25,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":482,"org.easymock.tests.MockingTest.testStrictClassMocking":324,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":234,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":470,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":130,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":132,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":162,"org.easymock.tests.ObjectMethodsTest.testHashCode":319,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":490,"org.easymock.tests2.NameTest.nameForNiceMock":406,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":147,"org.easymock.tests2.DependencyTest.testInterfaceMocking":118,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":489,"org.easymock.samples.ExampleTest.addDocument":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.DelegateToTest.testStubDelegate":166,"org.easymock.tests2.AnswerTest.stubAnswer":161,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":16,"org.easymock.tests.UsageVarargTest.varargLongAccepted":66,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":282,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":47,"org.easymock.tests.UsageExpectAndReturnTest.floatType":31,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":148,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":379,"org.easymock.tests.UsageThrowableTest.noUpperLimit":22,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":209,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":383,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":192,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":388,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":173,"org.easymock.tests2.SerializationTest.test":219,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":365,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":30,"org.easymock.tests2.UsageConstraintsTest.testSame":197,"org.easymock.samples.SupportTest.addDocument":115,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":428,"org.easymock.tests.GenericTest.testPackageScope":242,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":277,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":226,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":328,"org.easymock.tests2.NameTest.nameForMock":404,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":419,"org.easymock.tests2.UsageStrictMockTest.differentMethods":124,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":449,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":33,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":91,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":317,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":99,"org.easymock.tests2.MockedExceptionTest.testRealException":399,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":347,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":287,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":9,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":256,"org.easymock.tests2.NameTest.nameForStrictMock":405,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":413,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":163,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":389,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":210,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":367,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":410,"org.easymock.tests2.UsageStrictMockTest.range":123,"org.easymock.tests2.UsageConstraintsTest.lessThan":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":224,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":432,"org.easymock.tests2.CaptureTest.testCaptureRightOne":178,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":485,"org.easymock.tests2.UsageConstraintsTest.testOr":198,"org.easymock.tests.UsageRangeTest.combination":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":443,"org.easymock.tests.UsageTest.wrongArguments":270,"org.easymock.tests2.MockBuilderTest.testWithConstructor":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":429,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":274,"org.easymock.tests.UsageVarargTest.varargShortAccepted":65,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":369,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":240,"org.easymock.tests2.UsageConstraintsTest.cmpTo":202,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":457,"org.easymock.tests2.CompareToTest.testLessThan":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":276,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":141,"org.easymock.tests2.CaptureTest.testCaptureFromStub":462,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":246,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":411,"org.easymock.tests.UsageTest.unexpectedCallWithArray":269,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":261,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":3,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":495,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":43,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":17,"org.easymock.tests2.UsageConstraintsTest.constraints":193,"org.easymock.samples.ExampleTest.addAndChangeDocument":109,"org.easymock.tests.UsageStrictMockTest.testVerify":262,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":112,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":15,"org.easymock.tests2.CompareToTest.testGreateThan":479,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":301,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":57,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":35,"org.easymock.tests.LimitationsTest.abstractClass":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":58,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":465,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":61}}]
