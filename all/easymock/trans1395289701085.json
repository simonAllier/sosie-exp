[{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[9,10],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,8,75,76,9,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,0,1,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,10,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,2,271,3,272,273,274,275,276,277,278,279,280,281,282,283,284,4,5,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,6,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,7,494,495,496,497,498,499,500,501,502,503,504,505,506],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[507],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[508,509,510,511,370,476],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[14,28,63,65,93,94,96,429],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[29,30,31,512],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[11,11,12,12,21,22,25,29,31,32,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,159,513,160,161,162,163,164,165,166,168,169,170,514,171,172,173,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,515,219,220,233,234,235,252,253,254,255,256,257,258,259,260,261,262,263,265,268,293,298,299,300,301,302,303,304,305,306,307,308,309,310,350,406,411,425,426,427,428],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[13,14,15,16,17,18,20,21,22,23,24,26,27,28,30,31,41,63,65,66,67,68,69,71,72,73,74,8,75,9,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,122,123,124,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,172,173,174,175,176,177,180,186,189,192,194,200,201,207,226,233,234,235,236,237,238,239,240,241,242,243,244,245,10,251,269,270,2,271,3,272,273,274,275,276,277,278,279,280,281,282,283,284,4,5,288,291,294,296,297,304,305,307,308,310,314,315,316,318,319,320,321,322,323,324,325,6,326,350,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,417,418,419,420,421,422,423,424,427,429,431,432,436,437,438,439,440,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,490,491,7,494,495,496,497,500,501,502,503,505,506],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[415,416,471,472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[28,68,82,127,129,130,131,132,136,137,139,141,145,146,149,160,170,184,186,215,216,217,218,237,239,240,241,242,243,294,320,368,369,371,374,375,376,400,401,402,473,474,476,477,478,479,480,481,516,517,518,498,500,501,505,506],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[29,30,31,512],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[28,63,65,66,80,83,92,102,108,109,114,115,117,118,126,129,269,273,279,283,4,369,377,383,389,393,395,399,453,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[241,242,3,275,276,278,281,381,385,386,388,391,449,479,480,489,492,493],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[29,30,31,512],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[68,69,72,74,8,76,85,90,101,103,111],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[29,30,31,512],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[29,30,31,512],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[29,30,31,512],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[25,29,44,54,60,159,160,161,163,165,166,170,171,178,184,185,188,309,406,411],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,41,44,54,60,63,65,66,67,68,69,71,72,73,74,8,75,9,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,119,120,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,159,160,163,164,165,166,169,170,171,172,173,174,175,176,177,178,180,183,184,185,186,189,190,191,192,194,195,196,200,201,207,219,226,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,10,251,262,263,265,269,270,2,271,3,272,273,274,275,276,277,278,279,280,281,282,283,284,4,5,294,296,297,307,308,314,315,316,318,319,320,321,322,323,324,325,6,326,350,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,417,418,419,420,421,422,423,424,427,429,431,432,435,436,437,438,439,440,465,466,467,468,469,473,474,475,476,477,478,479,480,481,483,484,485,486,487,488,7,494,495,496,497,500,501,502,503,504,505,506],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[401,421,422],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[11,11,12,12,66,67,71,72,73,74,78,80,81,83,84,90,91,92,112,239,10,6,326,349,363,364,367,436,437,438,439,440,441,445,446,455,460,477,7,494,495,496,497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[69],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[519],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":69,"org.easymock.tests2.UsageTest.argumentsOrdered":137,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":368,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":451,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":132,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":24,"org.easymock.tests2.DelegateToTest.testReturnException":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":484,"org.easymock.tests.MockingTest.testPartialClassMocking":262,"org.easymock.tests.MockClassControlTest.testToString":300,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":214,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":48,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":44,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":377,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":516,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":201,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":348,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":75,"org.easymock.tests2.UsageTest.wrongArguments":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":363,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":248,"org.easymock.samples.ExampleTest.answerVsDelegate":14,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":411,"org.easymock.tests2.UsageConstraintsTest.testNull":72,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":267,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":175,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":149,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":305,"org.easymock.tests2.CaptureTest.testPrimitive":104,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":367,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":396,"org.easymock.tests.UsageTest.moreThanOneArgument":369,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":495,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":489,"org.easymock.tests.UsageTest.argumentsOrdered":375,"org.easymock.tests.UsageVarargTest.varargIntAccepted":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":436,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":159,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":231,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":440,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":332,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests.ReplayStateInvalidUsageTest.times":359,"org.easymock.tests2.DependencyTest.testClassMocking":198,"org.easymock.tests2.AnswerTest.answer":93,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":458,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":100,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":408,"org.easymock.tests2.CaptureTest.testAnd":101,"org.easymock.tests2.UsageTest.strictResetToDefault":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":507,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":494,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":144,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":296,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":493,"org.easymock.tests2.DelegateToTest.testDelegate":126,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":392,"org.easymock.tests.LimitationsTest.mockFinalMethod":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":487,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":469,"org.easymock.tests2.DependencyTest.testClassMockingSupport":199,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":285,"org.easymock.tests2.CaptureTest.testCapture1_2446744":105,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":179,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":390,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":98,"org.easymock.tests.UsageThrowableTest.throwError":417,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":353,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":410,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":62,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":335,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.MockingTest.testInterfaceMocking":264,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":437,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":404,"org.easymock.tests2.UsageTest.niceToStrict":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":49,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":378,"org.easymock.tests2.ThreadingTest.testChangeDefault":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":163,"org.easymock.tests2.MockBuilderTest.testCreateMock":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":57,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":210,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":508,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":386,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":145,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":407,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":498,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":246,"org.easymock.tests.UsageOverloadedMethodTest.overloading":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":59,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":432,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":80,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":397,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":278,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":79,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":110,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":317,"org.easymock.tests2.EasyMockSupportClassTest.testAll":41,"org.easymock.tests.MockClassControlTest.testEquals":304,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":308,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":394,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":467,"org.easymock.tests2.CaptureTest.testCaptureAll":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":99,"org.easymock.tests.MockNameTest.defaultName":250,"org.easymock.tests2.UsageConstraintsTest.testMatches":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":496,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":351,"org.easymock.samples.ExampleTest.voteForRemovals":18,"org.easymock.tests.UsageVarargTest.allKinds":325,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":400,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":468,"org.easymock.samples.BasicClassMockTest.testPrintContent":22,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":423,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":488,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":125,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":228,"org.easymock.tests2.UsageConstraintsTest.greaterThan":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":42,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":295,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":186,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":336,"org.easymock.samples.ExampleTest.voteForRemoval":15,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":258,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":187,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":117,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":178,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":328,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":127,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":350,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":142,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":483,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":121,"org.easymock.tests2.CaptureTest.testCaptureFirst":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":143,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":139,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":435,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":274,"org.easymock.tests2.UsageTest.moreThanOneArgument":129,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":119,"org.easymock.tests2.CaptureTest.testCapture2_2446744":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":459,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":170,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":324,"org.easymock.tests.GenericTest.testBridgedEquals":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":505,"org.easymock.tests.UsageExpectAndReturnTest.longType":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":465,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":140,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":514,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":395,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":88,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":393,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":7,"org.easymock.tests.UsageCallCountTest.tooManyCalls":506,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":275,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":382,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":422,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":190,"org.easymock.tests.MockingTest.testNiceClassMocking":268,"org.easymock.tests.MockingTest.testClassMocking":260,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":513,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":499,"org.easymock.tests2.UsageConstraintsTest.testContains":78,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":235,"org.easymock.tests2.UsageConstraintsTest.testFind":71,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":399,"org.easymock.tests.MockTypeTest.fromEasyMockClass":409,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":474,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":65,"org.easymock.tests.UsageExpectAndReturnTest.object":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":148,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":319,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":291,"org.easymock.tests.UsageTest.exactCallCountByLastCall":376,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":490,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":311,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":220,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":283,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":314,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":222,"org.easymock.tests.MockClassControlTest.testHashCode":303,"org.easymock.tests2.EasyMockSupportTest.testVerify":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":51,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":491,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":471,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":429,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":97,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":153,"org.easymock.tests.UsageVarargTest.varargCharAccepted":318,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":464,"org.easymock.tests2.UsageTest.openCallCountByLastCall":133,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":151,"org.easymock.tests.DefaultClassInstantiatorTest.object":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":470,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":420,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":205,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":221,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":184,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":302,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":334,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":383,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":284,"org.easymock.tests.ReplayStateInvalidCallsTest.times":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":414,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":60,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":301,"org.easymock.tests2.UsageTest.resumeIfFailure":138,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":486,"org.easymock.tests2.StubTest.stubWithReturnValue":245,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":276,"org.easymock.tests2.SerializationTest.testAllMockedMethod":31,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":457,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":509,"org.easymock.samples.SupportTest.voteForRemovals":27,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":306,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":389,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":512,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":463,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":0,"org.easymock.tests.UsageExpectAndThrowTest.object":387,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":313,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":86,"org.easymock.tests2.DelegateToTest.testWrongClass":124,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":6,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":338,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":326,"org.easymock.tests.UsageStrictMockTest.range":479,"org.easymock.samples.ConstructorCalledMockTest.testTax":11,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":36,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":147,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":189,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":388,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":38,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":361,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":247,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":510,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":330,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":405,"org.easymock.tests2.CaptureTest.testCaptureNone":109,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":155,"org.easymock.tests.UsageUnorderedTest.message":473,"org.easymock.tests.UsageVerifyTest.twoReturns":402,"org.easymock.tests.UsageVarargTest.varargByteAccepted":323,"org.easymock.tests2.ThreadingTest.testThreadSafe":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":55,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":503,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":21,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":292,"org.easymock.tests2.CaptureTest.testCapture_2617107":103,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":366,"org.easymock.tests2.UsageConstraintsTest.any":9,"org.easymock.tests2.StubTest.stub":244,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":358,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndThrowTest.longType":380,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":256,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":357,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":240,"org.easymock.tests2.SerializationTest.testClass":29,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":226,"org.easymock.tests.LimitationsTest.mockNativeMethod":427,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":5,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":309,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":204,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":346,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":243,"org.easymock.tests2.NameTest.nameForMocksControl":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":206,"org.easymock.tests2.MockedExceptionTest.testMockedException":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":43,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":373,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":64,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":381,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":172,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":166,"org.easymock.tests.MockingTest.testNicePartialClassMocking":263,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":177,"org.easymock.tests2.CaptureTest.testCaptureLast":108,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":202,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":286,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":196,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":345,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":87,"org.easymock.tests.MockingTest.testTwoMocks":261,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":342,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":385,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":136,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":91,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":158,"org.easymock.samples.ExampleTest.removeNonExistingDocument":19,"org.easymock.tests.UsageStrictMockTest.differentMethods":480,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":209,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":223,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":157,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":254,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":118,"org.easymock.tests2.MockBuilderTest.testCreateMockString":171,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":45,"org.easymock.tests.UsageExpectAndThrowTest.floatType":379,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":40,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":94,"org.easymock.tests.UsageVerifyTest.twoThrows":401,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":54,"org.easymock.samples.ExampleTest.voteAgainstRemoval":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":403,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":185,"org.easymock.tests.LimitationsTest.privateConstructor":426,"org.easymock.tests2.UsageConstraintsTest.testNotNull":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":424,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":233,"org.easymock.tests2.UsageTest.defaultResetToNice":135,"org.easymock.samples.ExampleTest.voteAgainstRemovals":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":282,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":203,"org.easymock.tests.UsageVarargTest.differentLength":320,"org.easymock.tests2.CallbackTest.callback":28,"org.easymock.tests2.UsageConstraintsTest.equals":70,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":181,"org.easymock.tests.UsageTest.openCallCountByLastCall":372,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":66,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":365,"org.easymock.tests.UsageCallCountTest.tooFewCalls":501,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":249,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":156,"org.easymock.tests.UsageThrowableTest.throwCheckedException":421,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":511,"org.easymock.tests.MockingTest.testStrictClassMocking":259,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":195,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":251,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":208,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":360,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":194,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":96,"org.easymock.tests.ObjectMethodsTest.testHashCode":290,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":120,"org.easymock.tests2.NameTest.nameForNiceMock":217,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":344,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":339,"org.easymock.tests2.DependencyTest.testInterfaceMocking":200,"org.easymock.samples.ExampleTest.addDocument":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":56,"org.easymock.tests2.DelegateToTest.testStubDelegate":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":61,"org.easymock.tests2.AnswerTest.stubAnswer":95,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":477,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":167,"org.easymock.tests.UsageVarargTest.varargLongAccepted":322,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":4,"org.easymock.tests.UsageExpectAndReturnTest.floatType":2,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":219,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":12,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":433,"org.easymock.tests.UsageThrowableTest.noUpperLimit":418,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":230,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":67,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":32,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":106,"org.easymock.tests2.SerializationTest.test":30,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":253,"org.easymock.tests2.UsageConstraintsTest.testSame":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":270,"org.easymock.samples.SupportTest.addDocument":26,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":193,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":329,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":46,"org.easymock.tests.GenericTest.testPackageScope":307,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":229,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":266,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":327,"org.easymock.tests2.NameTest.nameForMock":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":279,"org.easymock.tests2.UsageStrictMockTest.differentMethods":242,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":182,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":3,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":391,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":297,"org.easymock.tests2.MockedExceptionTest.testRealException":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":454,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":239,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":362,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":364,"org.easymock.tests2.NameTest.nameForStrictMock":216,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":162,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":63,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":176,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":35,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":517,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":85,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":255,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":160,"org.easymock.tests2.UsageStrictMockTest.range":241,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":333,"org.easymock.tests2.UsageConstraintsTest.lessThan":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":141,"org.easymock.tests2.CaptureTest.testCaptureRightOne":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":50,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":154,"org.easymock.tests2.UsageConstraintsTest.testOr":74,"org.easymock.tests.UsageRangeTest.combination":294,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":173,"org.easymock.tests.UsageTest.wrongArguments":371,"org.easymock.tests2.MockBuilderTest.testWithConstructor":519,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":47,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":280,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":257,"org.easymock.tests.UsageVarargTest.varargShortAccepted":321,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":504,"org.easymock.tests2.UsageConstraintsTest.cmpTo":77,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":347,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":1,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":134,"org.easymock.tests2.CaptureTest.testCaptureFromStub":112,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":352,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":161,"org.easymock.tests.UsageTest.unexpectedCallWithArray":370,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":343,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":476,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":502,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":281,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":478,"org.easymock.tests2.UsageConstraintsTest.constraints":68,"org.easymock.samples.ExampleTest.addAndChangeDocument":20,"org.easymock.tests.UsageStrictMockTest.testVerify":482,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":23,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":466,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":107,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":515,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":438,"org.easymock.tests.LimitationsTest.abstractClass":425,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":439,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":434,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":518,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":146,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":315}}]
