[{"transplant":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[22,23,24,251],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[252,30,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[5,13,18,19,20,21,24,39,41,42,43,253,47,49,52,53,254,96,97,100,101,102,103,108,121,123,124,125,126,128,129,130,131,132,133,134,255,136,137,256,257,150,152,174,258,259,185,186,188,189,190,260,214,217,218,220,224,241,242,243,244,245,246,247,248,249,250],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[46,47,52,53,261,262,263,264,186,212,213,214,217,218,265,266,267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[268,269,6,7,8,9,13,16,17,270,271,272,273,33,274,109,275,111,112,115,116,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[141,149,194,200,207,208],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[293,95,97,98,99,100,101,102,104,294,105,106,108],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[295],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[30,40,55,56,57,58,59,60,61,62,63,64,296,65,66,67,68,69,70,71,72,73,74,75,76,254,77,78,79,80,81,83,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,138,139,145,146,147,148,149,186,187,220,222,223,224,225,226,232,239,240,250],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[297,5,298,31],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[45],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[0,299,300,1,2,3,4,268,301,269,302,5,303,6,7,304,305,8,9,10,11,12,13,14,15,16,306,17,18,19,20,21,22,23,24,25,270,26,27,28,29,307,308,30,309,310,271,298,31,272,311,273,32,312,313,314,315,316,317,33,274,318,319,320,321,322,323,34,35,36,324,37,38,39,40,41,42,43,253,325,326,327,328,44,45,46,47,48,49,50,51,329,52,53,330,54,55,56,57,58,331,59,60,61,62,63,64,296,65,66,67,68,69,70,71,72,73,74,75,76,254,77,78,79,80,81,82,83,332,333,334,84,335,336,85,337,338,339,340,341,342,343,344,345,86,346,347,348,349,350,87,351,352,353,354,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,355,356,357,358,359,360,361,362,363,109,275,364,365,366,367,368,110,111,112,113,114,115,116,369,370,117,371,372,118,373,276,277,278,279,119,119,120,120,121,122,123,124,125,126,127,128,129,130,131,374,132,133,134,375,376,135,255,136,137,377,256,257,138,139,140,141,142,143,144,378,379,280,281,282,380,381,382,383,384,385,386,387,388,389,145,146,147,148,149,150,390,151,152,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,420,421,422,181,182,423,183,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,258,259,439,184,185,186,187,188,189,190,260,440,441,442,443,444,445,446,447,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,283,448,449,450,211,212,213,214,215,216,217,218,219,220,221,451,452,453,222,223,224,225,226,454,455,227,456,457,458,459,460,461,228,229,230,231,232,233,462,463,464,465,284,466,467,285,286,468,469,470,471,472,473,474,475,476,477,478,479,480,234,235,236,237,238,239,240,481,241,242,243,482,244,245,483,246,247,248,249,250,287,288,289,290,291,292],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[417,462],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[301,8,298,273,85],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[40,55,56,59,60,61,62,67,69,70,72,73,78,79,80,106,119,119,120,120,138,140,141,142,143,144,145,146,147,148,149,427,187,222,223,226,239,240,481],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[65,138,139,223,226,232],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[65,138],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:145","sourceCode":"return java.lang.reflect.Method != null ? org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>) : false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[411,459],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:46","sourceCode":"if ((java.util.List<org.easymock.IArgumentMatcher>.size()) != (org.easymock.internal.Invocation.getArguments().int)) {\n    throw new java.lang.IllegalStateException((((((((((\"\" + (org.easymock.internal.Invocation.getArguments().int)) + \" matchers expected, \") + (java.util.List<org.easymock.IArgumentMatcher>.size())) + \" recorded.\\n\") + \"This exception usually occurs when matchers are mixed with raw values when recording a method:\\n\") + \"\\tfoo(5, eq(6));\\t// wrong\\n\") + \"You need to use no matcher at all or a matcher for every single param:\\n\") + \"\\tfoo(eq(5), eq(6));\\t// right\\n\") + \"\\tfoo(5, 6);\\t// also right\"));\n} ","type":"CtIfImpl"},"failures":[296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[415],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[68],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[445,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":58,"org.easymock.tests2.UsageTest.argumentsOrdered":53,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":211,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":403,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":49,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":121,"org.easymock.tests2.DelegateToTest.testReturnException":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":229,"org.easymock.tests.MockingTest.testPartialClassMocking":181,"org.easymock.tests.MockClassControlTest.testToString":280,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":373,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":153,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":85,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":64,"org.easymock.tests2.UsageTest.wrongArguments":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":222,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":368,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":473,"org.easymock.samples.ExampleTest.answerVsDelegate":127,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":290,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":425,"org.easymock.tests2.UsageConstraintsTest.testNull":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":27,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":18,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":382,"org.easymock.tests2.CaptureTest.testPrimitive":98,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":226,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":172,"org.easymock.tests.UsageTest.moreThanOneArgument":212,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":142,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":457,"org.easymock.tests.UsageTest.argumentsOrdered":218,"org.easymock.tests.UsageVarargTest.varargIntAccepted":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":145,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":268,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":321,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":149,"org.easymock.tests.ReplayStateInvalidUsageTest.times":435,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":109,"org.easymock.tests2.DependencyTest.testClassMocking":353,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":358,"org.easymock.tests2.CaptureTest.testAnd":95,"org.easymock.tests2.UsageTest.strictResetToDefault":45,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":271,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":141,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":14,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":461,"org.easymock.tests2.DelegateToTest.testDelegate":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":168,"org.easymock.tests.LimitationsTest.mockFinalMethod":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":479,"org.easymock.tests2.DependencyTest.testClassMockingSupport":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":258,"org.easymock.tests2.CaptureTest.testCapture1_2446744":99,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":356,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":429,"org.easymock.tests.UsageThrowableTest.throwError":173,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":289,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":322,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":352,"org.easymock.samples.PartialClassMockTest.testGetArea":122,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":430,"org.easymock.tests.MockingTest.testInterfaceMocking":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":146,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":449,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":154,"org.easymock.tests2.UsageTest.niceToStrict":48,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":5,"org.easymock.tests2.MockBuilderTest.testCreateMock":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":348,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":365,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":162,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":261,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":15,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":419,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":471,"org.easymock.tests.UsageOverloadedMethodTest.overloading":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":350,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":386,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":69,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":480,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":202,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":68,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":104,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":482,"org.easymock.tests2.EasyMockSupportClassTest.testAll":84,"org.easymock.tests.MockClassControlTest.testEquals":381,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":170,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":262,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":477,"org.easymock.tests2.CaptureTest.testCaptureAll":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":357,"org.easymock.tests.MockNameTest.defaultName":283,"org.easymock.tests2.UsageConstraintsTest.testMatches":70,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":143,"org.easymock.samples.ExampleTest.voteForRemovals":131,"org.easymock.tests.UsageVarargTest.allKinds":250,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":478,"org.easymock.samples.BasicClassMockTest.testPrintContent":134,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":179,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":233,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":318,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":324,"org.easymock.tests2.UsageConstraintsTest.greaterThan":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":335,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":451,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":272,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":447,"org.easymock.samples.ExampleTest.voteForRemoval":128,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":91,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":311,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":291,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":307,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":150,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":44,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":12,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":228,"org.easymock.tests2.CaptureTest.testCaptureFirst":108,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":13,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":54,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":198,"org.easymock.tests2.CaptureTest.testCapture2_2446744":107,"org.easymock.tests2.UsageTest.moreThanOneArgument":46,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":411,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":8,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":249,"org.easymock.tests.GenericTest.testBridgedEquals":392,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":256,"org.easymock.tests.UsageExpectAndReturnTest.longType":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":475,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":171,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":481,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":254,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":463,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":140,"org.easymock.tests.UsageCallCountTest.tooManyCalls":257,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":349,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":158,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":178,"org.easymock.tests.MockingTest.testNiceClassMocking":426,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":111,"org.easymock.tests.MockingTest.testClassMocking":421,"org.easymock.tests2.UsageConstraintsTest.testContains":67,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":297,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":376,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":117,"org.easymock.tests2.UsageConstraintsTest.testFind":59,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":235,"org.easymock.tests.MockTypeTest.fromEasyMockClass":288,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":184,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":83,"org.easymock.tests.UsageExpectAndReturnTest.object":201,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":30,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":17,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":245,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":467,"org.easymock.tests.UsageTest.exactCallCountByLastCall":219,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":468,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":458,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":267,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":312,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":207,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":241,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":385,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":314,"org.easymock.tests.MockClassControlTest.testHashCode":380,"org.easymock.tests2.EasyMockSupportTest.testVerify":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":343,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":459,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":418,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":383,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":355,"org.easymock.tests.UsageVarargTest.varargCharAccepted":244,"org.easymock.tests2.CaptureTest.testCaptureMultiple":293,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastCall":50,"org.easymock.tests.DefaultClassInstantiatorTest.object":441,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":20,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":417,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":284,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":344,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":313,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":282,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":298,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":159,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":87,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":281,"org.easymock.tests2.UsageTest.resumeIfFailure":330,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":231,"org.easymock.tests2.StubTest.stubWithReturnValue":118,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":77,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":200,"org.easymock.tests2.SerializationTest.testAllMockedMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":409,"org.easymock.samples.SupportTest.voteForRemovals":125,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":263,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":316,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":165,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":251,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":415,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":299,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":470,"org.easymock.tests.UsageExpectAndThrowTest.object":163,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":75,"org.easymock.tests2.DelegateToTest.testWrongClass":36,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":239,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":240,"org.easymock.tests.UsageStrictMockTest.range":189,"org.easymock.samples.ConstructorCalledMockTest.testTax":119,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":327,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":164,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":6,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":437,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":472,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":450,"org.easymock.tests2.CaptureTest.testCaptureNone":103,"org.easymock.tests.UsageUnorderedTest.message":220,"org.easymock.tests.UsageVerifyTest.twoReturns":238,"org.easymock.tests.UsageVarargTest.varargByteAccepted":248,"org.easymock.tests2.ThreadingTest.testThreadSafe":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":346,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":137,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":133,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":285,"org.easymock.tests2.CaptureTest.testCapture_2617107":97,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":264,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":225,"org.easymock.tests2.UsageConstraintsTest.any":65,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":434,"org.easymock.tests2.StubTest.stub":372,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndThrowTest.longType":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":230,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":445,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":433,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":41,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":33,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests.LimitationsTest.mockNativeMethod":227,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":391,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":210,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":361,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":253,"org.easymock.tests2.NameTest.nameForMocksControl":279,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":363,"org.easymock.tests2.MockedExceptionTest.testMockedException":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":336,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":216,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":157,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":82,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":25,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":7,"org.easymock.tests.MockingTest.testNicePartialClassMocking":182,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":29,"org.easymock.tests2.CaptureTest.testCaptureLast":102,"org.easymock.tests2.CompareToTest.testCompareEqual":252,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":359,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":259,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":116,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":63,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":76,"org.easymock.tests.MockingTest.testTwoMocks":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":161,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":52,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":79,"org.easymock.samples.ExampleTest.removeNonExistingDocument":374,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":431,"org.easymock.tests.UsageStrictMockTest.differentMethods":190,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":315,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":443,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":92,"org.easymock.tests2.MockBuilderTest.testCreateMockString":9,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":378,"org.easymock.tests.UsageExpectAndThrowTest.floatType":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":337,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":334,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":1,"org.easymock.tests.UsageVerifyTest.twoThrows":237,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":86,"org.easymock.samples.ExampleTest.voteAgainstRemoval":129,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":404,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":31,"org.easymock.tests.LimitationsTest.privateConstructor":455,"org.easymock.tests2.UsageConstraintsTest.testNotNull":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":180,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":369,"org.easymock.tests2.UsageTest.defaultResetToNice":329,"org.easymock.samples.ExampleTest.voteAgainstRemovals":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":405,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":206,"org.easymock.tests.UsageVarargTest.differentLength":483,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":360,"org.easymock.tests2.CallbackTest.callback":4,"org.easymock.tests2.UsageConstraintsTest.equals":331,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":309,"org.easymock.tests.UsageTest.openCallCountByLastCall":215,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":224,"org.easymock.tests.UsageCallCountTest.tooFewCalls":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":113,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":474,"org.easymock.tests.UsageThrowableTest.throwCheckedException":177,"org.easymock.tests.MockingTest.testStrictClassMocking":420,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":266,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":139,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":115,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":275,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":436,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":114,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":3,"org.easymock.tests.ObjectMethodsTest.testHashCode":466,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":295,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":94,"org.easymock.tests2.NameTest.nameForNiceMock":278,"org.easymock.tests2.DependencyTest.testInterfaceMocking":88,"org.easymock.samples.ExampleTest.addDocument":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":347,"org.easymock.tests2.DelegateToTest.testStubDelegate":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.AnswerTest.stubAnswer":2,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":187,"org.easymock.tests.UsageVarargTest.varargLongAccepted":247,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.floatType":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":209,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":32,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":120,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests.UsageThrowableTest.noUpperLimit":174,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":320,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":325,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":100,"org.easymock.tests2.SerializationTest.test":23,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":484,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":442,"org.easymock.tests2.UsageConstraintsTest.testSame":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":192,"org.easymock.samples.SupportTest.addDocument":124,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":338,"org.easymock.tests.GenericTest.testPackageScope":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":319,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":424,"org.easymock.tests2.NameTest.nameForMock":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":203,"org.easymock.tests2.UsageStrictMockTest.differentMethods":43,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":195,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":167,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":465,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":453,"org.easymock.tests2.MockedExceptionTest.testRealException":371,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":406,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":40,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":438,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":223,"org.easymock.tests2.NameTest.nameForStrictMock":277,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":302,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":81,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":326,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":444,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":74,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":301,"org.easymock.tests2.UsageStrictMockTest.range":42,"org.easymock.tests2.UsageConstraintsTest.lessThan":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":11,"org.easymock.tests2.CaptureTest.testCaptureRightOne":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":342,"org.easymock.tests2.UsageConstraintsTest.testOr":62,"org.easymock.tests.UsageRangeTest.combination":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":270,"org.easymock.tests.UsageTest.wrongArguments":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":339,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":379,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":204,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":446,"org.easymock.tests.UsageVarargTest.varargShortAccepted":246,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":377,"org.easymock.tests2.UsageConstraintsTest.cmpTo":66,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":396,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":51,"org.easymock.tests2.CaptureTest.testCaptureFromStub":106,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":428,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":269,"org.easymock.tests.UsageTest.unexpectedCallWithArray":213,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":186,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":136,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":205,"org.easymock.tests2.CaptureTest.testCapture":294,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":188,"org.easymock.tests2.UsageConstraintsTest.constraints":57,"org.easymock.samples.ExampleTest.addAndChangeDocument":132,"org.easymock.tests.UsageStrictMockTest.testVerify":440,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":123,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":476,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":147,"org.easymock.tests.LimitationsTest.abstractClass":454,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":197,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":148,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":16,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":242}}]
