[{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:214","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[79,80],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[12,81,82,83,84,85],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[86,87,88,89,90,91,92,93,94,95,96,31,97,97,98,98,99,100,101,39,102,103,104,105,40,106,107,41,108,109,42,110,111,112,113,114,115,116,117,118,119,120,48,121,49,122,123,124,125,126,127,128,129,130,131,132,133,134],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.Injection.getAnnotation().java.lang.String()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[90,91,92,93,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,99,103,105,106,107,108,175,112,113,114,115,176,177,116,117,178,118,119,120,121,122,123,124,179,180,181,125,129,130,131,132,182,133,134,183],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[184,185,186,187,188],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,0,214,215,216,217,1,218,219,86,220,221,87,222,223,2,3,4,5,88,224,225,226,227,228,229,230,231,232,233,234,235,184,236,237,238,6,239,240,89,90,91,241,92,242,243,244,245,246,93,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,94,95,96,267,268,7,8,9,10,11,269,270,271,272,273,12,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,13,307,308,309,310,311,312,313,314,315,81,135,316,136,137,317,14,138,139,318,15,16,17,319,320,321,322,323,324,325,326,327,18,19,20,21,22,23,24,25,26,27,28,29,328,329,330,331,332,140,141,142,143,144,145,333,334,146,147,335,148,149,150,336,151,152,153,154,155,156,157,158,159,160,161,162,163,164,337,338,339,340,165,341,342,343,344,30,31,32,33,34,35,36,37,166,167,168,169,345,346,347,348,170,185,171,172,349,173,38,350,351,352,174,97,97,98,98,353,99,100,101,39,354,103,104,355,356,105,40,106,357,107,358,41,108,359,42,360,361,362,175,363,43,44,45,46,364,365,366,112,367,368,113,369,370,371,372,373,374,375,376,377,114,378,379,380,381,382,115,383,384,385,386,387,388,389,390,391,392,393,394,395,396,176,177,397,398,399,400,401,402,403,404,47,405,406,407,408,116,117,178,118,119,120,48,409,121,410,411,49,122,123,124,412,413,414,50,415,416,417,418,419,420,51,421,422,423,424,52,425,426,179,427,180,181,428,429,430,431,432,433,53,434,59,60,435,61,62,63,64,65,66,67,68,436,437,58,438,439,440,441,442,69,70,443,444,445,71,72,446,125,447,448,449,450,451,452,453,54,454,455,456,457,458,459,460,461,462,463,464,465,55,56,126,466,467,468,469,470,471,57,472,473,474,475,476,477,127,478,128,129,130,131,132,182,133,134,479,186,183,187,480,188,73,74,75,76,481,482,483,484,485,486,77,78,487,488],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[489,66,438,446],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[1,218,219,260,268,272,12,274,277,278,279,314,81,316,136,137,490,491,492,493,156,338,339,103,41,108,42,397,400,401,402,405,406,407,408,117,122,124,414,415,419,420,422,425,427,180,181,59,440],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[389],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[12,81,136,137,180,181],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[205,211,213,0,214,215,216,217,1,218,219,220,223,2,3,4,5,88,224,225,226,227,228,229,230,231,232,233,234,235,184,236,237,238,6,239,240,89,90,241,242,243,244,245,93,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,94,95,96,267,268,7,8,9,10,11,269,270,271,272,273,12,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,306,13,307,308,309,310,311,312,313,314,315,81,135,316,136,137,317,14,138,139,318,15,16,17,319,321,322,323,324,325,326,327,18,19,20,21,22,23,24,25,26,27,28,29,328,329,330,331,332,140,141,142,143,144,145,333,334,146,147,335,148,149,150,336,151,152,153,154,155,156,157,158,159,160,161,162,163,164,337,338,339,340,165,341,342,343,344,30,31,32,33,34,35,36,37,166,167,168,169,345,346,347,348,170,185,171,172,349,173,38,350,351,352,174,100,101,360,361,362,175,363,43,44,45,46,364,112,368,113,370,376,379,382,385,387,388,389,391,395,396,176,177,397,398,399,400,401,402,403,404,47,405,406,407,408,116,117,178,118,119,120,409,121,411,49,122,124,412,414,50,415,416,418,419,51,422,423,424,52,425,426,179,427,180,181,428,429,430,431,432,433,53,434,59,60,61,62,63,64,65,66,67,68,436,437,58,438,439,440,441,442,69,70,443,444,445,71,72,446,125,460,461,462,463,464,465,55,56,126,466,478,128,132,182,479,186,183,187,480,188,73,74,75,76,481,482,483,484,485,486,77,78,487,488],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[268,273,274,277,278,81,135,136,137,337,338,339,494,495,496,391,392,393,394,399,400,405,406,179,180,181],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:172","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[69],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[479,480],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[267],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:153","failures":[225,248,249,250,251,252,253,342,55,56,126,466],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":60,"org.easymock.tests2.UsageTest.argumentsOrdered":406,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":272,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":423,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":199,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":402,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":353,"org.easymock.tests2.DelegateToTest.testReturnException":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":249,"org.easymock.tests.MockingTest.testPartialClassMocking":90,"org.easymock.tests.MockClassControlTest.testToString":32,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":390,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":113,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":283,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":494,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":177,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":66,"org.easymock.tests2.UsageTest.wrongArguments":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":165,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":459,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":4,"org.easymock.samples.ExampleTest.answerVsDelegate":185,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":87,"org.easymock.tests2.UsageConstraintsTest.testNull":62,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":243,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":118,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":422,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":37,"org.easymock.tests2.CaptureTest.testPrimitive":76,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":344,"org.easymock.tests.UsageTest.moreThanOneArgument":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":302,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":168,"org.easymock.tests.UsageTest.argumentsOrdered":278,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":328,"org.easymock.tests.UsageVarargTest.varargIntAccepted":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":160,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":476,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":164,"org.easymock.tests.ReplayStateInvalidUsageTest.times":26,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":54,"org.easymock.tests2.DependencyTest.testClassMocking":395,"org.easymock.tests2.AnswerTest.answer":460,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":206,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":46,"org.easymock.tests2.CaptureTest.testAnd":73,"org.easymock.tests2.UsageTest.strictResetToDefault":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":418,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":158,"org.easymock.tests2.DelegateToTest.testDelegate":188,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":298,"org.easymock.tests.LimitationsTest.mockFinalMethod":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":252,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":11,"org.easymock.tests2.DependencyTest.testClassMockingSupport":396,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":321,"org.easymock.tests2.CaptureTest.testCapture1_2446744":481,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":44,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":20,"org.easymock.tests.UsageThrowableTest.throwError":226,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":221,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":491,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":477,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":384,"org.easymock.samples.PartialClassMockTest.testGetArea":99,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":21,"org.easymock.tests.MockingTest.testInterfaceMocking":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":161,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":270,"org.easymock.tests2.UsageTest.niceToStrict":401,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":284,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":189,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":105,"org.easymock.tests2.MockBuilderTest.testCreateMock":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":380,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":456,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":84,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":292,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":419,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":2,"org.easymock.tests.UsageOverloadedMethodTest.overloading":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":382,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":438,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":148,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":346,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":58,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":486,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":257,"org.easymock.tests2.EasyMockSupportClassTest.testAll":112,"org.easymock.tests.MockClassControlTest.testEquals":36,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":95,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":300,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":9,"org.easymock.tests2.CaptureTest.testCaptureAll":74,"org.easymock.tests.MockNameTest.defaultName":327,"org.easymock.tests2.UsageConstraintsTest.testMatches":439,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":169,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":18,"org.easymock.samples.ExampleTest.voteForRemovals":173,"org.easymock.tests.UsageVarargTest.allKinds":265,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":337,"org.easymock.samples.BasicClassMockTest.testPrintContent":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":10,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":232,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":425,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":480,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":253,"org.easymock.tests2.UsageConstraintsTest.greaterThan":441,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":367,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":157,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":124,"org.easymock.samples.ExampleTest.voteForRemoval":171,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":313,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":412,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":361,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":48,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":397,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":88,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":196,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":416,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":248,"org.easymock.tests2.CaptureTest.testCaptureFirst":488,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":195,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":417,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":408,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":6,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":334,"org.easymock.tests2.CaptureTest.testCapture2_2446744":487,"org.easymock.tests2.UsageTest.moreThanOneArgument":399,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":175,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":207,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":264,"org.easymock.tests.GenericTest.testBridgedEquals":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":218,"org.easymock.tests.UsageExpectAndReturnTest.longType":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":7,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":50,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":109,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":301,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":444,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":340,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":166,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":325,"org.easymock.tests.UsageCallCountTest.tooManyCalls":219,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":458,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":288,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":231,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":130,"org.easymock.tests.MockingTest.testNiceClassMocking":244,"org.easymock.tests.MockingTest.testClassMocking":240,"org.easymock.tests2.UsageConstraintsTest.testContains":437,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":102,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":0,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":126,"org.easymock.tests2.UsageConstraintsTest.testFind":61,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":348,"org.easymock.tests.MockTypeTest.fromEasyMockClass":220,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":387,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":314,"org.easymock.tests.UsageExpectAndReturnTest.object":335,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":421,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":259,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":17,"org.easymock.tests.UsageTest.exactCallCountByLastCall":279,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":194,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":303,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":447,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":152,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":184,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":468,"org.easymock.tests.MockClassControlTest.testHashCode":35,"org.easymock.tests2.EasyMockSupportTest.testVerify":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":375,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":281,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":492,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":43,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":433,"org.easymock.tests.UsageVarargTest.varargCharAccepted":258,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":306,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":212,"org.easymock.tests2.UsageTest.openCallCountByLastCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":424,"org.easymock.tests.DefaultClassInstantiatorTest.object":13,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":280,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":15,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":376,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":452,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":467,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":122,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":289,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":115,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":33,"org.easymock.tests2.UsageTest.resumeIfFailure":407,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":251,"org.easymock.tests2.StubTest.stubWithReturnValue":389,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":357,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":445,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":147,"org.easymock.tests2.SerializationTest.testAllMockedMethod":128,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":205,"org.easymock.samples.SupportTest.voteForRemovals":174,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":85,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":266,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":470,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":295,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":211,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":461,"org.easymock.tests.UsageExpectAndThrowTest.object":293,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":305,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":70,"org.easymock.tests2.DelegateToTest.testWrongClass":187,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":138,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":139,"org.easymock.tests.UsageStrictMockTest.range":136,"org.easymock.samples.ConstructorCalledMockTest.testTax":97,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":431,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":51,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":129,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":294,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":106,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":28,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":3,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":82,"org.easymock.tests2.CaptureTest.testCaptureNone":485,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":271,"org.easymock.tests.UsageUnorderedTest.message":268,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":490,"org.easymock.tests.UsageVerifyTest.twoReturns":339,"org.easymock.tests.UsageVarargTest.varargByteAccepted":263,"org.easymock.tests2.ThreadingTest.testThreadSafe":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":378,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":217,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":100,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":319,"org.easymock.tests2.CaptureTest.testCapture_2617107":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":343,"org.easymock.tests2.UsageConstraintsTest.any":68,"org.easymock.tests2.StubTest.stub":388,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":25,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":250,"org.easymock.tests.UsageExpectAndThrowTest.longType":286,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":310,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":24,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":427,"org.easymock.tests2.SerializationTest.testClass":127,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":57,"org.easymock.tests.LimitationsTest.mockNativeMethod":93,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":155,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":96,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":451,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":428,"org.easymock.tests2.NameTest.nameForMocksControl":394,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":453,"org.easymock.tests2.MockedExceptionTest.testMockedException":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":368,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":276,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":386,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":287,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":116,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":107,"org.easymock.tests.MockingTest.testNicePartialClassMocking":91,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":120,"org.easymock.tests2.CaptureTest.testCaptureLast":484,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":449,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":322,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":134,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":65,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":443,"org.easymock.tests.MockingTest.testTwoMocks":89,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":291,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":405,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":72,"org.easymock.samples.ExampleTest.removeNonExistingDocument":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":455,"org.easymock.tests.UsageStrictMockTest.differentMethods":137,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":22,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":469,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":80,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":308,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":362,"org.easymock.tests2.MockBuilderTest.testCreateMockString":42,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":30,"org.easymock.tests.UsageExpectAndThrowTest.floatType":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":369,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":463,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":448,"org.easymock.tests.UsageVerifyTest.twoThrows":338,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":114,"org.easymock.samples.ExampleTest.voteAgainstRemoval":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":200,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":269,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":123,"org.easymock.tests.LimitationsTest.privateConstructor":246,"org.easymock.tests2.UsageConstraintsTest.testNotNull":71,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":55,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":233,"org.easymock.tests2.UsageTest.defaultResetToNice":47,"org.easymock.samples.ExampleTest.voteAgainstRemovals":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":201,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":450,"org.easymock.tests.UsageVarargTest.differentLength":260,"org.easymock.tests2.CallbackTest.callback":414,"org.easymock.tests2.UsageConstraintsTest.equals":435,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":410,"org.easymock.tests.UsageTest.openCallCountByLastCall":275,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":342,"org.easymock.tests.UsageCallCountTest.tooFewCalls":215,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":132,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":5,"org.easymock.tests.UsageThrowableTest.throwCheckedException":230,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":83,"org.easymock.tests.MockingTest.testStrictClassMocking":239,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":454,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":131,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":27,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":182,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":465,"org.easymock.tests2.CompareToTest.testGreateOrEqual":489,"org.easymock.tests.ObjectMethodsTest.testHashCode":16,"org.easymock.tests2.NameTest.nameForNiceMock":393,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":363,"org.easymock.tests2.DependencyTest.testInterfaceMocking":176,"org.easymock.samples.ExampleTest.addDocument":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":379,"org.easymock.tests2.DelegateToTest.testStubDelegate":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.AnswerTest.stubAnswer":464,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":135,"org.easymock.tests.UsageVarargTest.varargLongAccepted":262,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":154,"org.easymock.tests.UsageExpectAndReturnTest.floatType":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":125,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":475,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":442,"org.easymock.tests.UsageThrowableTest.noUpperLimit":227,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":434,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":429,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":482,"org.easymock.tests2.SerializationTest.test":478,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":307,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":141,"org.easymock.tests2.UsageConstraintsTest.testSame":63,"org.easymock.samples.SupportTest.addDocument":352,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":370,"org.easymock.tests.GenericTest.testPackageScope":94,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":193,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":474,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":242,"org.easymock.tests2.NameTest.nameForMock":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":149,"org.easymock.tests2.UsageStrictMockTest.differentMethods":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":359,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":411,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":297,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":318,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":159,"org.easymock.tests2.MockedExceptionTest.testRealException":466,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":223,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":203,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":202,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":341,"org.easymock.tests2.NameTest.nameForStrictMock":392,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":356,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":385,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":119,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":430,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":495,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":69,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":309,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":103,"org.easymock.tests2.UsageStrictMockTest.range":180,"org.easymock.tests2.UsageConstraintsTest.lessThan":446,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":471,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":197,"org.easymock.tests2.CaptureTest.testCaptureRightOne":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":374,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":79,"org.easymock.tests2.UsageConstraintsTest.testOr":64,"org.easymock.tests.UsageRangeTest.combination":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":117,"org.easymock.tests.UsageTest.wrongArguments":274,"org.easymock.tests2.MockBuilderTest.testWithConstructor":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":371,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":31,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":150,"org.easymock.tests.UsageVarargTest.varargShortAccepted":261,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":311,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":1,"org.easymock.tests2.UsageConstraintsTest.cmpTo":436,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":192,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":404,"org.easymock.tests2.CaptureTest.testCaptureFromStub":78,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":19,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":104,"org.easymock.tests.UsageTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":81,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":216,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":336,"org.easymock.tests2.UsageConstraintsTest.constraints":59,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.samples.ExampleTest.addAndChangeDocument":350,"org.easymock.tests.UsageStrictMockTest.testVerify":14,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":351,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":8,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":483,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":162,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":111,"org.easymock.tests.LimitationsTest.abstractClass":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":163,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":496,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":420,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":255}}]
