[{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[79,80,81,82],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[83,84,85],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[86,87,88,89,90,91,92,0,93,1,94,2,3,95,4,5,6,96,97,98,99,100,79,80,101,102,103,104,105,106,107,108,109,110,111,112,7,8,9,10,113,11,12,13,14,114,115,15,116,16,117,17,18,19,20,21,118,119,120,121,22,23,24,25,26,27,28,29,122,30,123,31,32,33,124,125,34,35,126,127,128,129,130,131,132,133,134,135,136,137,36,138,139,140,141,142,143,144,145,146,147,148,149,150,37,38,39,151,152,153,154,155,156,40,41,42,43,44,45,157,46,47,158,159,160,161,162,163,164,53,54,165,166,55,167,56,57,58,59,168,60,61,62,63,169,64,65,66,67,170,68,171,172,173,174,175,176,69,70,71,72,73,74,177,178,179,180,181,75,76,77,78,182,183,184],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[185,186,187],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:37","sourceCode":"return org.easymock.internal.ExpectedInvocation","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[188,189,92,190,191,192,193,96,194,195,97,196,197,198,199,200,201,202,203,204,98,205,206,207,208,209,99,210,211,212,213,79,129,133,214,215,216,217,218,219,220],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[92,190,221,222,223,224,225,79,217,218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[94,226],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[227],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[228,229,191,192,193,96,194,195,97,196,197,198,199,200,201,202,203,204,98,205,206,207,208,209,99,210,211,230,231,232,233,234,235,79,218],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:77","failures":[213,235],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[236,237,238,26,239,240,241,242,243,244,245,70,246,247,74],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[248,249,239,250,251,245],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.reportLastControl(this.org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"position":"org.easymock.internal.RecordState:173","failures":[7],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[86,87,88,89,253,90,91,93,94,254,237,238,101,102,103,104,106,107,110,111,112,255,113,12,114,115,15,117,19,118,119,120,256,121,22,257,258,25,259,26,27,260,30,261,123,262,263,32,33,124,125,35,264,135,36,141,144,148,156,241,242,157,46,265,243,266,170,171,172,173,174,175,267,268,269,270,271,69,272,70,71,273,247,75,274,275,276,277,278,279,280,281,282,283],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[129,141,284,149],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[1,236,237,238,25,26,27,286,287,288,289,42,240,241,242,243,245,69,70,71,73,247,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[290,0,1,236,2,3,237,238,5,255,12,13,15,116,22,23,25,26,27,286,287,288,289,28,40,41,42,240,43,44,241,242,45,243,68,267,268,269,245,69,70,71,73,247,74,291,292,274,283,293],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[0,5,19,259,26,264,41,45,243,294,269,272,70,247,74,75,295,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[248,249,264,239,240,43,44,241,242,45,157,250,251,161,245,69],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[92,190,217],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1445","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[299,300],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[17,301],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[86,290,87,88,302,89,253,303,90,304,305,0,93,1,236,94,254,2,3,95,237,238,4,5,185,6,306,307,100,308,309,310,80,101,102,103,104,105,106,107,108,109,110,111,112,311,312,313,7,314,315,255,8,9,10,113,11,12,13,14,114,115,316,15,116,16,117,17,18,19,20,21,118,119,120,256,121,22,23,24,257,258,25,259,26,27,260,286,287,288,289,28,317,285,318,29,319,122,30,261,123,31,262,263,32,33,124,125,320,34,35,321,322,323,324,264,126,325,131,138,139,142,150,326,37,38,39,151,152,327,328,329,330,331,154,332,333,334,335,336,155,156,40,41,42,239,240,43,44,241,242,45,157,46,265,186,47,243,337,161,162,266,338,339,340,53,54,165,166,55,167,56,57,58,59,168,60,61,62,63,169,64,65,66,67,170,341,68,171,172,173,174,175,342,343,344,345,346,176,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,267,379,268,380,294,269,270,271,245,69,272,70,71,273,381,382,383,384,385,386,72,246,73,247,74,387,388,389,390,391,392,177,178,179,180,181,75,76,77,78,393,394,395,182,183,184,396,397,291,292,398,399,274,275,276,277,278,400,279,280,281,282,283,401,293,402,403,404],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"value"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[116,405,146],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[31,34,41,243,54,57,62,65,67,350,356,362,366,368],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[86,290,87,88,89,253,90,91,188,188,189,189,92,0,93,1,94,2,3,95,4,5,185,6,96,97,98,99,306,307,100,308,309,310,79,80,101,102,103,104,105,106,107,108,109,110,111,112,312,313,7,314,315,255,8,9,10,113,11,12,13,14,114,115,15,116,16,117,17,18,19,20,21,118,119,120,121,22,23,24,25,26,27,28,317,285,318,29,319,122,30,123,31,32,33,124,125,320,34,35,264,126,127,128,129,130,131,132,133,134,135,136,137,36,138,139,140,141,142,143,144,145,146,147,148,149,150,37,38,39,151,152,327,153,154,155,156,40,41,42,43,44,45,157,46,265,186,47,243,158,159,160,161,162,163,164,338,339,340,53,54,165,166,55,167,56,57,58,59,168,60,61,62,63,169,64,65,66,67,170,341,68,171,172,173,174,175,342,343,344,345,346,176,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,373,374,375,378,69,70,71,382,384,385,72,73,247,74,387,388,389,390,391,392,177,178,179,180,181,75,76,77,78,393,394,395,182,183,184,396,397,291,292,398,399],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[236,237,238,26,239,240,241,242,243,244,245,70,246,247,74],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":113,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":41,"org.easymock.tests2.UsageTest.argumentsOrdered":238,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":325,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":254,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":304,"org.easymock.tests2.DelegateToTest.testReturnException":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":388,"org.easymock.tests.MockingTest.testPartialClassMocking":158,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":199,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":349,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":221,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":157,"org.easymock.tests2.UsageTest.wrongArguments":236,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":330,"org.easymock.samples.ExampleTest.answerVsDelegate":290,"org.easymock.tests2.UsageConstraintsTest.testNull":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":143,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":110,"org.easymock.tests2.CaptureTest.testPrimitive":123,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":47,"org.easymock.tests.UsageTest.moreThanOneArgument":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":368,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":344,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":397,"org.easymock.tests.UsageTest.argumentsOrdered":242,"org.easymock.tests.UsageVarargTest.varargIntAccepted":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":181,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests2.AnswerTest.answer":28,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":316,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":324,"org.easymock.tests2.CaptureTest.testAnd":122,"org.easymock.tests2.UsageTest.strictResetToDefault":93,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":343,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":77,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":399,"org.easymock.tests2.DelegateToTest.testDelegate":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":391,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":336,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":266,"org.easymock.tests2.CaptureTest.testCapture1_2446744":31,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":362,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":322,"org.easymock.tests.UsageThrowableTest.throwError":170,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":346,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":211,"org.easymock.samples.PartialClassMockTest.testGetArea":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":183,"org.easymock.tests2.UsageTest.niceToStrict":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":200,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":350,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":235,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":207,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":248,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":358,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":106,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":375,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":232,"org.easymock.tests.UsageOverloadedMethodTest.overloading":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":209,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":385,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":17,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":60,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":117,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":84,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":124,"org.easymock.tests2.EasyMockSupportClassTest.testAll":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":366,"org.easymock.tests2.CaptureTest.testCaptureAll":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":334,"org.easymock.tests.MockNameTest.defaultName":348,"org.easymock.tests2.UsageConstraintsTest.testMatches":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":345,"org.easymock.samples.ExampleTest.voteForRemovals":89,"org.easymock.tests.UsageVarargTest.allKinds":283,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":335,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":174,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":392,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":315,"org.easymock.tests2.UsageConstraintsTest.greaterThan":20,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":194,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":76,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":149,"org.easymock.samples.ExampleTest.voteForRemoval":87,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":38,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":371,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":327,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":103,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":387,"org.easymock.tests2.CaptureTest.testCaptureFirst":35,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":104,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":5,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":57,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":151,"org.easymock.tests2.CaptureTest.testCapture2_2446744":34,"org.easymock.tests2.UsageTest.moreThanOneArgument":1,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":36,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":282,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":233,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":230,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":294,"org.easymock.tests.UsageExpectAndReturnTest.longType":166,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":332,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":367,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":396,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":256,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":365,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":342,"org.easymock.tests.UsageCallCountTest.tooManyCalls":269,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":208,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":58,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":173,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":128,"org.easymock.tests2.UsageConstraintsTest.testContains":16,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":377,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":100,"org.easymock.tests2.UsageConstraintsTest.testFind":11,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":40,"org.easymock.tests.MockTypeTest.fromEasyMockClass":369,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":270,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":310,"org.easymock.tests.UsageExpectAndReturnTest.object":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":222,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":278,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":403,"org.easymock.tests.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":234,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":176,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":291,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":190,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":64,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":384,"org.easymock.tests2.EasyMockSupportTest.testVerify":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":202,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":292,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":374,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":382,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":321,"org.easymock.tests.UsageVarargTest.varargCharAccepted":277,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":52,"org.easymock.tests2.UsageTest.openCallCountByLastCall":2,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":228,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":373,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":293,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":171,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":147,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":355,"org.easymock.tests.CapturesMatcherTest.test":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":65,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":99,"org.easymock.tests2.UsageTest.resumeIfFailure":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":390,"org.easymock.tests2.StubTest.stubWithReturnValue":6,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":217,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":121,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":59,"org.easymock.tests2.SerializationTest.testAllMockedMethod":81,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":339,"org.easymock.samples.SupportTest.voteForRemovals":90,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":249,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":361,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":82,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":340,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":317,"org.easymock.tests.UsageExpectAndThrowTest.object":359,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":119,"org.easymock.tests2.DelegateToTest.testWrongClass":314,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":161,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":162,"org.easymock.samples.ConstructorCalledMockTest.testTax":188,"org.easymock.tests.UsageStrictMockTest.range":70,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":127,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":360,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":191,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":241,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":329,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":250,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":184,"org.easymock.tests2.CaptureTest.testCaptureNone":33,"org.easymock.tests.UsageUnorderedTest.message":243,"org.easymock.tests.UsageVerifyTest.twoReturns":74,"org.easymock.tests.UsageVarargTest.varargByteAccepted":281,"org.easymock.tests2.ThreadingTest.testThreadSafe":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":205,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":268,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":404,"org.easymock.tests2.CaptureTest.testCapture_2617107":261,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":50,"org.easymock.tests2.UsageConstraintsTest.any":15,"org.easymock.tests2.StubTest.stub":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":51,"org.easymock.tests.UsageExpectAndThrowTest.longType":352,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":83,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":259,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":126,"org.easymock.tests2.SerializationTest.testClass":79,"org.easymock.tests.LimitationsTest.mockNativeMethod":153,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":67,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.tests2.NameTest.nameForMocksControl":289,"org.easymock.tests2.MockedExceptionTest.testMockedException":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":195,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":44,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":353,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":137,"org.easymock.tests.MockingTest.testNicePartialClassMocking":159,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":145,"org.easymock.tests2.CompareToTest.testCompareEqual":405,"org.easymock.tests2.CaptureTest.testCaptureLast":32,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":338,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":133,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":114,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":120,"org.easymock.tests.MockingTest.testTwoMocks":337,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":53,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":357,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":237,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":23,"org.easymock.tests.UsageStrictMockTest.differentMethods":71,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":300,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":196,"org.easymock.tests.UsageExpectAndThrowTest.floatType":351,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":193,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":318,"org.easymock.tests.UsageVerifyTest.twoThrows":247,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":98,"org.easymock.samples.ExampleTest.voteAgainstRemoval":88,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":49,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":148,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":213,"org.easymock.tests2.UsageConstraintsTest.testNotNull":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":175,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":306,"org.easymock.tests2.UsageTest.defaultResetToNice":95,"org.easymock.samples.ExampleTest.voteAgainstRemovals":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":169,"org.easymock.tests.UsageVarargTest.differentLength":400,"org.easymock.tests2.CallbackTest.callback":264,"org.easymock.tests.UsageTest.openCallCountByLastCall":43,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":265,"org.easymock.tests.UsageCallCountTest.tooFewCalls":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":331,"org.easymock.tests.UsageThrowableTest.throwCheckedException":172,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":251,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":132,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":347,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":131,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":319,"org.easymock.tests.ObjectMethodsTest.testHashCode":402,"org.easymock.tests2.CompareToTest.testGreateOrEqual":301,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":152,"org.easymock.tests2.NameTest.nameForNiceMock":288,"org.easymock.tests2.DependencyTest.testInterfaceMocking":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":223,"org.easymock.samples.ExampleTest.addDocument":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":206,"org.easymock.tests2.DelegateToTest.testStubDelegate":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":210,"org.easymock.tests2.AnswerTest.stubAnswer":29,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":69,"org.easymock.tests.UsageVarargTest.varargLongAccepted":280,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":48,"org.easymock.tests.UsageExpectAndReturnTest.floatType":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":92,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":189,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":386,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":21,"org.easymock.tests.UsageThrowableTest.noUpperLimit":341,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":9,"org.easymock.tests2.SerializationTest.test":80,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":262,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":85,"org.easymock.tests2.UsageConstraintsTest.testSame":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":54,"org.easymock.samples.SupportTest.addDocument":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":197,"org.easymock.tests.GenericTest.testPackageScope":163,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":398,"org.easymock.tests2.NameTest.nameForMock":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":61,"org.easymock.tests2.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":220,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":226,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":55,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":363,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":401,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":78,"org.easymock.tests2.MockedExceptionTest.testRealException":308,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":372,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":46,"org.easymock.tests2.NameTest.nameForStrictMock":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":229,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":309,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":144,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":118,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":295,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":134,"org.easymock.tests2.UsageStrictMockTest.range":26,"org.easymock.tests2.UsageConstraintsTest.lessThan":24,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":224,"org.easymock.tests2.CaptureTest.testCaptureRightOne":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":201,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":299,"org.easymock.tests2.UsageConstraintsTest.testOr":14,"org.easymock.tests.UsageRangeTest.combination":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":141,"org.easymock.tests.UsageTest.wrongArguments":240,"org.easymock.tests2.MockBuilderTest.testWithConstructor":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":198,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":62,"org.easymock.tests.UsageVarargTest.varargShortAccepted":279,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":380,"org.easymock.tests2.UsageConstraintsTest.cmpTo":116,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":285,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests2.CaptureTest.testCaptureFromStub":320,"org.easymock.tests.UsageTest.unexpectedCallWithArray":239,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":245,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":379,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":219,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":63,"org.easymock.tests2.CaptureTest.testCapture":297,"org.easymock.tests2.UsageConstraintsTest.constraints":10,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":272,"org.easymock.samples.ExampleTest.addAndChangeDocument":253,"org.easymock.tests.UsageStrictMockTest.testVerify":381,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":305,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":333,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":180,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":72,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":107,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":275,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":296}}]
