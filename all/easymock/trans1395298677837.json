[{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[23,24,0,1,1,2,2,25,26,27,3,4,28,29,30,31,32,33,34,35,36,37,38,39,40,41,6,42,43,44,45,46,47,48,49,50,7,51,52,53,54,55,56,57,58,8,59,60,61,62,63,64,65,66,67,11,68,69,70,14,15,71,72,17,73,74,75,76,77,78,79,18,80,81,82,19,83,84,20,21,85,86,22,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[116,117,118,119,120,121],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[122,123,124],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[125,126,127,128,129,130],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[131,132,133,134,135,136,137,138,139,140,23,24,141,142,0,1,2,25,26,27,143,3,4,5,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,28,29,30,31,160,161,32,33,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,34,203,204,205,35,206,207,36,37,38,39,40,41,6,42,43,44,45,46,47,48,49,50,7,51,52,53,54,55,56,57,58,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,8,283,59,284,285,286,287,288,289,64,9,65,66,10,67,11,68,69,12,70,13,14,15,71,16,17,73,74,290,75,76,77,78,291,79,18,80,81,82,19,83,84,20,292,293,294,295,296,297,298,299,300,301,302,303,304,305,21,85,86,22,87,88,306,307,308,309,89,310,311,312,313,314,315,316,125,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,118,348,349,350,351,352,353,354,355,119,356,357,358,359,360,361,90,91,92,93,362,363,364,365,366,367,94,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,126,405,127,406,407,408,409,410,411,412,413,414,415,416,417,418,128,129,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,95,96,97,98,99,471,100,472,473,101,474,475,476,477,478,479,480,481,482,102,483,103,104,105,106,107,108,484,485,486,130,487,488,489,490,491,492,493,494,109,110,111,112,113,114,495,115,496,497,498,499],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[500,501],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[288,289],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[133,251,253,254,255,324,388],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[468],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[175,179,180,187,192,271,275,276,279,71,299,346,350,351],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[215,222,227,234],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[131,132,133,134,135,136,137,139,140,23,24,141,142,0,1,2,25,26,27,143,3,149,158,159,28,29,30,31,161,32,33,168,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,39,6,7,56,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,247,249,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,8,283,59,284,287,288,289,64,65,11,68,69,70,15,71,17,73,74,290,75,76,77,78,79,81,82,19,83,292,293,294,295,296,297,298,299,301,302,85,86,312,313,314,315,316,125,317,318,319,320,321,346,347,118,348,349,350,351,352,502,502,354,355,119,356,357,358,359,360,361,92,362,363,364,365,366,367,94,386,388,389,392,393,394,395,396,397,398,399,400,401,402,403,404,126,405,127,406,407,408,409,410,411,412,413,414,415,416,417,418,128,129,424,425,426,427,428,430,431,432,433,434,435,436,437,439,440,441,442,443,444,445,446,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,98,99,100,476,477,478,479,480,481,482,130,487,488,489,490],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[4,503,504,505,506,507,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[508,213,215,232,238],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[4,503,504,505,506,507,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[509],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[222],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[177,179,180,190,510,116,511,512,513,514,318,319,320,321,348,350,351,355,121,515,516,387,390,391,392,497,498],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[131,132,133,134,135,136,137,139,140,23,24,141,142,0,1,1,2,2,25,26,27,143,3,149,158,159,28,29,30,31,161,32,33,168,175,176,177,178,179,180,181,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,39,6,7,56,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,8,283,59,284,285,286,287,288,289,64,65,11,69,70,71,73,74,290,75,76,77,79,81,82,19,83,292,293,294,299,300,301,302,303,304,305,85,86,22,125,317,318,319,320,321,338,344,346,347,118,348,349,350,351,352,353,354,355,119,356,357,358,359,360,361,92,362,363,364,365,366,367,94,386,387,388,389,390,391,393,394,395,396,397,398,399,400,401,402,403,404,126,405,127,406,407,408,409,410,411,412,413,414,415,416,417,418,128,129,419,420,421,422,423,424,425,426,427,428,430,431,432,433,434,435,436,437,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,97,98,99,100,474,475,476,477,478,479,481,482,485,130,487,488,489,490,491,492,493,497,498],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[222],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:221","sourceCode":"return T","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[131,132,133,134,135,136,137,139,140,23,24,141,142,0,1,2,25,26,27,143,3,149,158,159,28,29,30,31,161,32,33,168,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,39,6,7,56,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,247,249,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,8,283,59,284,287,288,289,64,65,11,68,69,70,15,71,17,73,74,290,75,76,77,78,79,81,82,19,83,292,293,294,295,296,297,298,299,301,302,85,86,312,313,314,315,316,125,317,318,319,320,321,346,347,118,348,349,350,351,352,502,502,354,355,119,356,357,358,359,360,361,92,362,363,364,365,366,367,94,386,388,389,392,393,394,395,396,397,398,399,400,401,402,403,404,126,405,127,406,407,408,409,410,411,412,413,414,415,416,417,418,128,129,424,425,426,427,428,430,431,432,433,434,435,436,437,439,440,441,442,443,444,445,446,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,98,99,100,476,477,478,479,480,481,482,130,487,488,489,490],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[116,117,118,119,120,121],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[387,390,497,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[4,503,504,505,506,507,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[131,132,133,134,135,136,137,138,139,140,141,142,25,26,27,143,144,145,146,147,148,149,150,151,152,153,154,155,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,308,309,310,311,312,313,314,315,316,125,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,118,348,349,350,351,352,353,354,355,119,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,126,405,127,406,407,408,409,410,411,412,413,414,415,416,417,418,128,129,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,484,485,486,130,487,488,489,490,491,492,493,497,498,499],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[188,195,202,294,320,354,358,366,389,439,441,442,443,444,445,446,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[387,390,497,498],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[131,132,134,135,136,137,139,140,23,24,141,142,175,176,177,178,179,180,181,191,193,197,198,201,224,225,237,238,243,244,245,246,257,258,261,262,263,264,269,270,273,279,280,281,282,59,65,11,71,86,318,346,347,118,348,349,350,351,352,353,356,359,360,94,395,396,420,421,426,427,428,430,431,432,433,434,435,436,437,439,440,468,474,476,477,478,479,481,482],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1673","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[132,133,134,135,136,137,138,139,25,26,27,143,3,158,29,30,32,33,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,35,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,249,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,8,283,59,284,287,288,289,64,65,66,67,11,68,15,71,17,73,74,290,75,76,77,78,79,80,81,82,19,83,84,292,293,294,295,296,297,298,299,300,301,302,85,86,88,308,309,89,310,311,312,313,314,315,316,125,317,318,319,320,321,346,347,118,348,349,350,351,352,353,354,355,119,356,357,358,359,360,361,92,362,363,364,365,366,367,94,369,370,371,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,126,405,127,406,407,408,409,410,411,412,413,414,415,416,417,418,128,129,424,425,426,427,428,430,431,432,433,434,435,436,437,439,440,441,442,443,444,445,446,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,95,96,98,99,471,100,472,473,101,474,475,476,477,478,479,480,481,482,102,483,103,104,105,106,107,108,130,487,488,489,490,109,498,499],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[285,288,289,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[261,262,263,265,517,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[216,222,234],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[122,123,124],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":216,"org.easymock.tests2.UsageTest.argumentsOrdered":198,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":354,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":332,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":193,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":131,"org.easymock.tests2.DelegateToTest.testReturnException":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":363,"org.easymock.tests.MockingTest.testPartialClassMocking":98,"org.easymock.tests.MockClassControlTest.testToString":103,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":242,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":448,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":6,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":503,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":393,"org.easymock.tests2.UsageTest.wrongArguments":191,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":297,"org.easymock.samples.ExampleTest.answerVsDelegate":133,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":89,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":473,"org.easymock.tests2.UsageConstraintsTest.testNull":219,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":75,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":108,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":279,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":60,"org.easymock.tests2.CaptureTest.testPrimitive":259,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":397,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":467,"org.easymock.tests.UsageTest.moreThanOneArgument":355,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":488,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":419,"org.easymock.tests.UsageTest.argumentsOrdered":360,"org.easymock.tests.UsageVarargTest.varargIntAccepted":428,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":398,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":507,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":64,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":173,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":204,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":402,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests.ReplayStateInvalidUsageTest.times":382,"org.easymock.tests2.DependencyTest.testClassMocking":156,"org.easymock.tests2.AnswerTest.answer":284,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":186,"org.easymock.tests2.CaptureTest.testAnd":256,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":307,"org.easymock.tests2.UsageTest.strictResetToDefault":189,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":10,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":487,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":301,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":423,"org.easymock.tests2.DelegateToTest.testDelegate":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":463,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":500,"org.easymock.tests.LimitationsTest.mockFinalMethod":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":366,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":316,"org.easymock.tests2.DependencyTest.testClassMockingSupport":157,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":497,"org.easymock.tests2.CaptureTest.testCapture1_2446744":260,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":461,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":184,"org.easymock.tests.UsageThrowableTest.throwError":439,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":376,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":309,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":496,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":58,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":471,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":377,"org.easymock.tests2.CompareToTest.testLessOrEqual":508,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":399,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":46,"org.easymock.tests2.UsageTest.niceToStrict":192,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":373,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":11,"org.easymock.tests2.MockBuilderTest.testCreateMock":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":53,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":457,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":116,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":275,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":306,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":305,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":474,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":295,"org.easymock.tests.UsageOverloadedMethodTest.overloading":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":55,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":389,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":412,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":292,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":228,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":265,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":429,"org.easymock.tests.MockClassControlTest.testEquals":107,"org.easymock.tests2.EasyMockSupportClassTest.testAll":39,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":86,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":465,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":61,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":185,"org.easymock.tests2.CaptureTest.testCaptureAll":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":314,"org.easymock.tests.MockNameTest.defaultName":438,"org.easymock.tests2.UsageConstraintsTest.testMatches":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":489,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":374,"org.easymock.samples.ExampleTest.voteForRemovals":137,"org.easymock.tests.UsageVarargTest.allKinds":437,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":319,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":315,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":445,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":170,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":367,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":495,"org.easymock.tests2.UsageConstraintsTest.greaterThan":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":83,"org.easymock.samples.ExampleTest.voteForRemoval":134,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":115,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":84,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":209,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":72,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":310,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":78,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":188,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":94,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":272,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":362,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":250,"org.easymock.tests2.CaptureTest.testCaptureFirst":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":273,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":200,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":408,"org.easymock.tests2.UsageTest.moreThanOneArgument":190,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":211,"org.easymock.tests2.CaptureTest.testCapture2_2446744":268,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":340,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":436,"org.easymock.tests.GenericTest.testBridgedEquals":87,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":481,"org.easymock.tests.UsageExpectAndReturnTest.longType":405,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":312,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":466,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":447,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":237,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":464,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":492,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":130,"org.easymock.tests.UsageCallCountTest.tooManyCalls":482,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":453,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":444,"org.easymock.tests.MockingTest.testNiceClassMocking":101,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":29,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":501,"org.easymock.tests.MockingTest.testClassMocking":96,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":475,"org.easymock.tests2.UsageConstraintsTest.testContains":227,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":27,"org.easymock.tests2.UsageConstraintsTest.testFind":218,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":294,"org.easymock.tests.MockTypeTest.fromEasyMockClass":308,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":249,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":346,"org.easymock.tests.UsageExpectAndReturnTest.object":411,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":504,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":431,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":371,"org.easymock.tests.UsageTest.exactCallCountByLastCall":361,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":484,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":420,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":4,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":426,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":417,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":388,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":164,"org.easymock.tests.MockClassControlTest.testHashCode":106,"org.easymock.tests2.EasyMockSupportTest.testVerify":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":48,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":421,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":386,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":183,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":182,"org.easymock.tests.UsageVarargTest.varargCharAccepted":430,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":494,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":345,"org.easymock.tests2.UsageTest.openCallCountByLastCall":194,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":122,"org.easymock.tests.DefaultClassInstantiatorTest.object":109,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":281,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":303,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":369,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":516,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":442,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":147,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":163,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":105,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":82,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":454,"org.easymock.tests.CapturesMatcherTest.test":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":418,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":491,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":512,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":56,"org.easymock.tests2.UsageTest.resumeIfFailure":199,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":88,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":365,"org.easymock.tests2.StubTest.stubWithReturnValue":202,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":410,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":238,"org.easymock.tests2.SerializationTest.testAllMockedMethod":59,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":338,"org.easymock.samples.SupportTest.voteForRemovals":142,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":117,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":166,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":460,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":344,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":285,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":486,"org.easymock.tests.UsageExpectAndThrowTest.object":458,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":235,"org.easymock.tests2.DelegateToTest.testWrongClass":253,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":125,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":317,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":350,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":206,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":28,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":509,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":459,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":69,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":36,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":296,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":120,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":470,"org.easymock.tests2.CaptureTest.testCaptureNone":264,"org.easymock.tests.UsageUnorderedTest.message":318,"org.easymock.tests.UsageVerifyTest.twoReturns":321,"org.easymock.tests.UsageVarargTest.varargByteAccepted":435,"org.easymock.tests2.ThreadingTest.testThreadSafe":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":51,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":479,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":372,"org.easymock.tests2.CaptureTest.testCapture_2617107":258,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":499,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":342,"org.easymock.tests2.UsageConstraintsTest.any":225,"org.easymock.tests2.StubTest.stub":201,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":381,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":493,"org.easymock.tests.UsageExpectAndThrowTest.longType":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":364,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":113,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":380,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":178,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":168,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests.LimitationsTest.mockNativeMethod":92,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":129,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":22,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":146,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":181,"org.easymock.tests2.NameTest.nameForMocksControl":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":148,"org.easymock.tests2.MockedExceptionTest.testMockedException":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":41,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":358,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":452,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":100,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":248,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":73,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":70,"org.easymock.tests.MockingTest.testNicePartialClassMocking":99,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":144,"org.easymock.tests2.CaptureTest.testCaptureLast":263,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":498,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":222,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":236,"org.easymock.tests.MockingTest.testTwoMocks":97,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":403,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":456,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":197,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":240,"org.easymock.samples.ExampleTest.removeNonExistingDocument":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":151,"org.easymock.tests.UsageStrictMockTest.differentMethods":351,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":165,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":111,"org.easymock.tests2.ConstraintsToStringTest.andToString":513,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":210,"org.easymock.tests2.MockBuilderTest.testCreateMockString":17,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":102,"org.easymock.tests.UsageExpectAndThrowTest.floatType":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":42,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":38,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":5,"org.easymock.tests.UsageVerifyTest.twoThrows":320,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":7,"org.easymock.samples.ExampleTest.voteAgainstRemoval":135,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":333,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":19,"org.easymock.tests.LimitationsTest.privateConstructor":91,"org.easymock.tests2.UsageConstraintsTest.testNotNull":239,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":446,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":25,"org.easymock.tests2.UsageTest.defaultResetToNice":196,"org.easymock.samples.ExampleTest.voteAgainstRemovals":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":334,"org.easymock.tests.UsageVarargTest.differentLength":432,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":145,"org.easymock.tests2.CallbackTest.callback":187,"org.easymock.tests2.UsageConstraintsTest.equals":217,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":18,"org.easymock.tests.UsageTest.openCallCountByLastCall":357,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":395,"org.easymock.tests.UsageCallCountTest.tooFewCalls":477,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":298,"org.easymock.tests.UsageThrowableTest.throwCheckedException":443,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":121,"org.easymock.tests.MockingTest.testStrictClassMocking":95,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":425,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":150,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":30,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":383,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":161,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":289,"org.easymock.tests.ObjectMethodsTest.testHashCode":370,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":506,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":212,"org.easymock.tests2.NameTest.nameForNiceMock":245,"org.easymock.tests2.DependencyTest.testInterfaceMocking":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":505,"org.easymock.samples.ExampleTest.addDocument":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":57,"org.easymock.tests2.DelegateToTest.testStubDelegate":252,"org.easymock.tests2.AnswerTest.stubAnswer":288,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":348,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":13,"org.easymock.tests.UsageVarargTest.varargLongAccepted":434,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":331,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":128,"org.easymock.tests.UsageExpectAndReturnTest.floatType":126,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":3,"org.easymock.tests2.ConstraintsToStringTest.orToString":510,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests.UsageThrowableTest.noUpperLimit":440,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":172,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":233,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":214,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":34,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":261,"org.easymock.tests2.SerializationTest.test":283,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":404,"org.easymock.tests2.UsageConstraintsTest.testSame":220,"org.easymock.samples.SupportTest.addDocument":141,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":160,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":43,"org.easymock.tests.GenericTest.testPackageScope":85,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":171,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":472,"org.easymock.tests2.NameTest.nameForMock":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":413,"org.easymock.tests2.UsageStrictMockTest.differentMethods":180,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":80,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":127,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":462,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":302,"org.easymock.tests2.MockedExceptionTest.testRealException":143,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":311,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":515,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":335,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":394,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":385,"org.easymock.tests2.NameTest.nameForStrictMock":244,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":123,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":247,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":35,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":112,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":234,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":65,"org.easymock.tests2.UsageStrictMockTest.range":179,"org.easymock.tests2.UsageConstraintsTest.lessThan":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":167,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":63,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":47,"org.easymock.tests2.CaptureTest.testCaptureRightOne":266,"org.easymock.tests2.UsageConstraintsTest.testOr":221,"org.easymock.tests.UsageRangeTest.combination":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":74,"org.easymock.tests.UsageTest.wrongArguments":356,"org.easymock.tests2.MockBuilderTest.testWithConstructor":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":44,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":483,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":323,"org.easymock.tests.UsageVarargTest.varargShortAccepted":433,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":114,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":480,"org.easymock.tests2.UsageConstraintsTest.cmpTo":226,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":325,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":195,"org.easymock.tests2.CaptureTest.testCaptureFromStub":267,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":375,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":66,"org.easymock.tests.UsageTest.unexpectedCallWithArray":119,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":118,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":478,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":415,"org.easymock.tests2.CaptureTest.testCapture":517,"org.easymock.tests2.UsageConstraintsTest.constraints":215,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":349,"org.easymock.samples.ExampleTest.addAndChangeDocument":139,"org.easymock.tests2.ConstraintsToStringTest.notToString":511,"org.easymock.tests.UsageStrictMockTest.testVerify":353,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":140,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":347,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":313,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":400,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":407,"org.easymock.tests.LimitationsTest.abstractClass":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":401,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":276}}]
