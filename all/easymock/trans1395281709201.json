[{"position":"org.easymock.internal.MockBuilder:201","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[46,21,22,23,47,27,29,30,31,33,36,37,38,44],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[48,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[51,52,53,54,55,56,20,21,57,58,22,23,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,27,129,130,131,132,133,28,29,30,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,2,165,166,167,168,169,170,171,172,173,174,175,31,32,176,33,34,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,3,196,197,198,199,200,201,202,203,204,204,205,205,206,207,208,209,210,211,35,36,212,48,213,214,215,37,38,216,217,5,7,8,9,10,218,219,220,221,222,223,49,224,225,226,13,14,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,50,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,16,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,39,40,41,42,297,17,18,19,298,299,300,43,301,44,45,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[230,231,233,235,236,238,247,252,312,314,322],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[204,205,326,327,328],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[120,265],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[46,329,330,31,331,332],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[330,333,331,332],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[98,109,110,111,112,163,164,2,171,3,204,204,205,205,206,207,4,5,6,7,334,8,9,335,10,11,220,221,223,49,224,12,225,226,13,14,227,264,336,16,282,283,297,17,18,19,305,306,307,308,310,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"searchType"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:58","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[53,113,114,115,116,129,139,145,146,147,32,33,34,7,218,219,221,49,225,13,14,227,43,44,45],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[231,236,247],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[337,338,339,340,341,342,184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[343,344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[345,346,347,348,349,350,351],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[313,315,319,320,321,325],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[3,7,8,9,344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[352,353,354],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[355,356,357],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[97,107,108,27,129,130,131,132,133,169,31,32,179,180,190,191,192,193,194,225,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,50,245,246,247,248,249,250,251,252,253,254,266,267,271,43,358,312,313,314,315,316,317,318,319,320,321,322,323,324,325],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[352],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[46,329,330,31,331,332],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[345,346,347,348,349,350,351],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[61,62,63,359,360],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[46,329,330,31,331,332],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[60,182,184],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[245,361],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":231,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests2.UsageTest.argumentsOrdered":38,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":168,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":48,"org.easymock.tests2.StubTest.stubWithReturnValue":304,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":345,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":251,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":143,"org.easymock.tests2.SerializationTest.testAllMockedMethod":282,"org.easymock.tests2.DelegateToTest.testReturnException":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":166,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":172,"org.easymock.tests.MockingTest.testPartialClassMocking":110,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":332,"org.easymock.samples.SupportTest.voteForRemovals":209,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":15,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":67,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":17,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":173,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":256,"org.easymock.tests.UsageExpectAndThrowTest.object":77,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":24,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":248,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":346,"org.easymock.tests2.DelegateToTest.testWrongClass":278,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":179,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":180,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":237,"org.easymock.tests2.UsageTest.wrongArguments":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":129,"org.easymock.samples.ConstructorCalledMockTest.testTax":204,"org.easymock.tests.UsageStrictMockTest.range":33,"org.easymock.samples.ExampleTest.answerVsDelegate":198,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":291,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":305,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":1,"org.easymock.tests2.UsageConstraintsTest.testNull":233,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":78,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":293,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":8,"org.easymock.tests2.CaptureTest.testPrimitive":315,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":133,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":359,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":86,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":22,"org.easymock.tests.UsageTest.moreThanOneArgument":20,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":222,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":53,"org.easymock.tests2.CaptureTest.testCaptureNone":320,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":183,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.UsageVerifyTest.twoReturns":30,"org.easymock.tests.UsageVarargTest.varargByteAccepted":95,"org.easymock.tests2.ThreadingTest.testThreadSafe":268,"org.easymock.tests.UsageTest.argumentsOrdered":23,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":185,"org.easymock.tests.UsageVarargTest.varargIntAccepted":89,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":104,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":206,"org.easymock.tests2.CaptureTest.testCapture_2617107":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":350,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":132,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":334,"org.easymock.tests2.UsageConstraintsTest.any":239,"org.easymock.tests2.StubTest.stub":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":194,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":63,"org.easymock.tests.UsageExpectAndThrowTest.longType":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":167,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":355,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":301,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":274,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":298,"org.easymock.tests.LimitationsTest.mockNativeMethod":171,"org.easymock.tests2.AnswerTest.answer":255,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":2,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":153,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":238,"org.easymock.tests2.CaptureTest.testAnd":312,"org.easymock.tests2.UsageTest.strictResetToDefault":211,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":302,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":226,"org.easymock.tests2.NameTest.nameForMocksControl":42,"org.easymock.tests2.MockedExceptionTest.testMockedException":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":52,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":115,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":58,"org.easymock.tests2.DelegateToTest.testDelegate":280,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":189,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":71,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":112,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":220,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":9,"org.easymock.tests.MockingTest.testNicePartialClassMocking":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":82,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":224,"org.easymock.tests2.CaptureTest.testCaptureLast":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":169,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":128,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":311,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":236,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":249,"org.easymock.tests.MockingTest.testTwoMocks":109,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":127,"org.easymock.tests2.CaptureTest.testCapture1_2446744":316,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":134,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":75,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":253,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":353,"org.easymock.tests.UsageThrowableTest.throwError":154,"org.easymock.tests.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":270,"org.easymock.tests2.MockBuilderTest.testCreateMockString":11,"org.easymock.tests.UsageExpectAndThrowTest.floatType":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":55,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":50,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":258,"org.easymock.tests.UsageVerifyTest.twoThrows":29,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":18,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":191,"org.easymock.samples.ExampleTest.voteAgainstRemoval":200,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":181,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":182,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":14,"org.easymock.tests2.UsageTest.niceToStrict":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":68,"org.easymock.tests2.ThreadingTest.testChangeDefault":354,"org.easymock.tests2.UsageConstraintsTest.testNotNull":252,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":262,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":7,"org.easymock.tests2.MockBuilderTest.testCreateMock":335,"org.easymock.tests2.UsageTest.defaultResetToNice":215,"org.easymock.samples.ExampleTest.voteAgainstRemovals":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":149,"org.easymock.tests.UsageVarargTest.differentLength":92,"org.easymock.tests2.CallbackTest.callback":273,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":333,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":328,"org.easymock.tests.UsageTest.openCallCountByLastCall":57,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":76,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":289,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":228,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":131,"org.easymock.tests.UsageCallCountTest.tooFewCalls":102,"org.easymock.tests.UsageOverloadedMethodTest.overloading":125,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":243,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":120,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":308,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":145,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":356,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":242,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":321,"org.easymock.tests.UsageThrowableTest.throwCheckedException":158,"org.easymock.tests2.EasyMockSupportClassTest.testAll":297,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":164,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":330,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":84,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":336,"org.easymock.tests2.CaptureTest.testCaptureAll":313,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":310,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":307,"org.easymock.tests2.UsageConstraintsTest.testMatches":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":309,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":260,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":54,"org.easymock.samples.ExampleTest.voteForRemovals":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":349,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":272,"org.easymock.tests2.NameTest.nameForNiceMock":41,"org.easymock.tests.UsageVarargTest.allKinds":97,"org.easymock.tests2.DependencyTest.testInterfaceMocking":218,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":348,"org.easymock.samples.BasicClassMockTest.testPrintContent":207,"org.easymock.samples.ExampleTest.addDocument":201,"org.easymock.tests2.DelegateToTest.testStubDelegate":277,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":160,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":299,"org.easymock.tests2.AnswerTest.stubAnswer":259,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":170,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":32,"org.easymock.tests2.UsageConstraintsTest.greaterThan":245,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":114,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":227,"org.easymock.tests.UsageVarargTest.varargLongAccepted":94,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":177,"org.easymock.samples.ExampleTest.voteForRemoval":199,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":269,"org.easymock.tests.UsageExpectAndReturnTest.floatType":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":152,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":12,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":205,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":246,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests.UsageThrowableTest.noUpperLimit":155,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":229,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":98,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":317,"org.easymock.tests2.SerializationTest.test":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":360,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":286,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":156,"org.easymock.tests2.UsageConstraintsTest.testSame":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":135,"org.easymock.samples.SupportTest.addDocument":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":165,"org.easymock.tests2.CaptureTest.testCaptureFirst":325,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":287,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":217,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":141,"org.easymock.tests.GenericTest.testPackageScope":163,"org.easymock.tests2.CaptureTest.testCapture2_2446744":324,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":271,"org.easymock.tests2.UsageTest.moreThanOneArgument":35,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":188,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":96,"org.easymock.tests2.NameTest.nameForMock":39,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":105,"org.easymock.tests.UsageExpectAndReturnTest.longType":137,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":162,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":344,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":146,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":250,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":327,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":83,"org.easymock.tests2.UsageStrictMockTest.differentMethods":45,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":138,"org.easymock.tests.UsageCallCountTest.tooManyCalls":106,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":81,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":116,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":101,"org.easymock.tests2.MockedExceptionTest.testRealException":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":72,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":130,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":159,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":306,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":343,"org.easymock.tests2.UsageConstraintsTest.testContains":241,"org.easymock.tests2.NameTest.nameForStrictMock":40,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":100,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":264,"org.easymock.tests2.UsageConstraintsTest.testFind":232,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":126,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":266,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":49,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":267,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":174,"org.easymock.tests.UsageExpectAndReturnTest.object":144,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":247,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":25,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":225,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":5,"org.easymock.tests2.UsageStrictMockTest.range":44,"org.easymock.tests2.UsageConstraintsTest.lessThan":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":347,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":91,"org.easymock.tests.UsageTest.exactCallCountByLastCall":59,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":285,"org.easymock.tests2.CaptureTest.testCaptureRightOne":322,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":186,"org.easymock.tests2.UsageConstraintsTest.testOr":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":351,"org.easymock.tests.UsageRangeTest.combination":113,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":221,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":87,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":150,"org.easymock.tests.UsageTest.wrongArguments":21,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":119,"org.easymock.tests2.MockBuilderTest.testWithConstructor":326,"org.easymock.tests2.EasyMockSupportTest.testVerify":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":147,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":187,"org.easymock.tests.UsageVarargTest.varargShortAccepted":93,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":65,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":117,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":261,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":358,"org.easymock.tests2.UsageConstraintsTest.cmpTo":240,"org.easymock.tests.UsageVarargTest.varargCharAccepted":90,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":257,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":300,"org.easymock.tests2.UsageTest.openCallCountByLastCall":213,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":214,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":295,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":64,"org.easymock.tests2.CaptureTest.testCaptureFromStub":323,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":6,"org.easymock.tests.UsageTest.unexpectedCallWithArray":46,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":47,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":74,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":157,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":103,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":148,"org.easymock.tests2.UsageConstraintsTest.constraints":230,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":13,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":176,"org.easymock.samples.ExampleTest.addAndChangeDocument":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":73,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":151,"org.easymock.tests.UsageStrictMockTest.testVerify":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":61,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":19,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":175,"org.easymock.tests2.CompareToTest.testGreateThan":361,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":318,"org.easymock.tests2.UsageTest.resumeIfFailure":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":192,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":0,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":140,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":193,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":290,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":88,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":26}}]
