[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[0,1,1,2,2,12,13,17,18,60,61,62,63,64,65,66,67,68,69,70,71,86,87,89,90,91,92,94,95,96,97,98,99,100,101,102,108,109,110,160,161,166,167,168,169,171,172,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,224,226,272,273,274,276,297,300,327,471,338,339,340,341,342,343,472,344,360,361,362,363,364,404,405,406,407,408,411,412,414,415],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[473,474,475,476,320,461],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,24,26,27,28,29,30,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,64,66,67,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,94,99,103,104,105,106,107,110,117,124,125,126,127,128,129,130,131,133,134,135,136,139,140,141,147,155,156,157,159,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,189,192,202,208,211,214,215,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,273,274,276,303,305,306,308,314,316,317,318,319,321,322,323,324,325,326,327,329,330,345,349,352,353,354,355,356,357,358,359,361,362,365,366,367,392,393,394,396,397,399,400,401,402,403,414,416,417,418,419,420,425,426,427,428,429,443,445,446,447,450,451,452,453,455,456,457,458,460,461,462,463,464,465,466],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[338,339,343],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[221,222,464,465],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[127,133,134,221,477,320,321,324,325,345,446,447,461,464],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[478,479,480],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[304,307,310,311],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,481,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,482,483,484,485,486,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,487,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,488,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,489,490,161,162,163,164,165,166,167,168,169,491,170,171,172,492,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,493,494,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[360,364],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[473,474,475,476,320,461],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[374],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.internal.RecordState:233","failures":[0,1,1,2,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,20,21,22,23,24,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,64,66,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,100,103,104,105,106,107,108,109,110,111,117,124,125,126,127,128,129,130,131,132,133,134,135,136,139,140,141,147,154,155,156,157,158,159,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,189,192,202,208,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,273,274,276,292,293,294,295,296,303,305,306,308,313,314,315,316,317,318,319,321,322,323,324,325,326,327,329,330,345,346,347,348,349,350,352,353,354,355,356,357,358,359,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399,400,401,402,403,404,414,416,417,418,419,420,425,426,427,428,429,431,439,440,441,442,443,444,445,446,447,448,450,451,452,453,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[0,1,1,2,2,12,13,17,18,60,61,62,63,64,65,66,67,68,69,70,71,86,87,89,90,91,92,94,95,96,97,98,99,100,101,102,108,109,110,137,138,160,489,490,161,166,167,168,169,171,172,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,224,226,270,271,272,273,274,276,279,297,300,327,338,339,340,341,342,343,344,360,361,362,363,364,404,405,406,407,408,409,410,411,412,413,414,415],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[38],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[33,38,48,53],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[224,225,226],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[253,259,266,267,293,429],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[482,483,484,486],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:243","failures":[0,3,5,6,8,16,17,61,64,66,67,70,86,87,88,89,90,91,94,98,99,100,106,139,140,156,166,167,168,169,170,171,172,189,192,202,208,219,221,222,250,251,252,253,254,255,258,259,261,262,263,265,266,267,268,269,273,274,276,292,293,294,295,313,314,315,316,317,361,363,365,414,416,425,426,427,428,429,431,457,458,462,464,465,469,470],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[517],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[1,2,518,519,520,95],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[521,37,43,55],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[96,128],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[431,468,469,470],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1,1,2,2,12,13,17,18,522,60,61,62,63,64,65,66,67,68,69,70,523,71,86,87,89,90,91,92,94,95,96,97,98,99,100,101,102,108,109,110,160,161,166,167,168,169,171,172,524,525,526,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,224,226,270,271,272,273,274,276,279,297,300,327,338,339,340,341,342,343,344,360,361,362,363,364,404,406,407,408,409,410,411,412,413,414,415],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[361,363,364],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":30,"org.easymock.tests2.UsageTest.argumentsOrdered":134,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":318,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":378,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":129,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":11,"org.easymock.tests2.DelegateToTest.testReturnException":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":440,"org.easymock.tests.MockingTest.testPartialClassMocking":273,"org.easymock.tests.MockClassControlTest.testToString":406,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":19,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":196,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":227,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":140,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":516,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":416,"org.easymock.tests2.UsageTest.wrongArguments":127,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":153,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":423,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":300,"org.easymock.tests2.UsageConstraintsTest.testNull":33,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":278,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":89,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":411,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":182,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":524,"org.easymock.tests2.CaptureTest.testPrimitive":75,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":420,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":246,"org.easymock.tests.UsageTest.moreThanOneArgument":319,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":294,"org.easymock.tests.UsageTest.argumentsOrdered":325,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":328,"org.easymock.tests.UsageVarargTest.varargIntAccepted":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":425,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":60,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":122,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":429,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":500,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":147,"org.easymock.tests.ReplayStateInvalidUsageTest.times":288,"org.easymock.tests2.DependencyTest.testClassMocking":137,"org.easymock.tests2.AnswerTest.answer":211,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":385,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":59,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":494,"org.easymock.tests2.CaptureTest.testAnd":72,"org.easymock.tests2.UsageTest.strictResetToDefault":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":316,"org.easymock.tests2.DelegateToTest.testDelegate":159,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":332,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":499,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":242,"org.easymock.tests.LimitationsTest.mockFinalMethod":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":443,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":337,"org.easymock.tests2.DependencyTest.testClassMockingSupport":138,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":310,"org.easymock.tests2.CaptureTest.testCapture1_2446744":76,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":93,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":57,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":282,"org.easymock.tests.UsageThrowableTest.throwError":352,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":299,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":123,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":210,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":503,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":275,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":426,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":469,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":438,"org.easymock.tests2.UsageTest.niceToStrict":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":228,"org.easymock.tests2.ThreadingTest.testChangeDefault":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":64,"org.easymock.tests2.MockBuilderTest.testCreateMock":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":150,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":473,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":236,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":178,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":493,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":448,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":421,"org.easymock.tests.UsageOverloadedMethodTest.overloading":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":207,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":43,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":261,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":365,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":42,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":81,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":395,"org.easymock.tests.MockClassControlTest.testEquals":410,"org.easymock.tests2.EasyMockSupportClassTest.testAll":189,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":362,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":480,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":244,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":525,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":58,"org.easymock.tests2.CaptureTest.testCaptureAll":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":335,"org.easymock.tests.MockNameTest.defaultName":351,"org.easymock.tests2.UsageConstraintsTest.testMatches":44,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":295,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":403,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":445,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":336,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":358,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":444,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":119,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":472,"org.easymock.tests2.UsageConstraintsTest.greaterThan":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":190,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":315,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":100,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":504,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":344,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":104,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":101,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":523,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":92,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":496,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":124,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":327,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":175,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":439,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":154,"org.easymock.tests2.CaptureTest.testCaptureFirst":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":176,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":136,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":257,"org.easymock.tests2.UsageTest.moreThanOneArgument":126,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":106,"org.easymock.tests2.CaptureTest.testCapture2_2446744":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":386,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":70,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":402,"org.easymock.tests.GenericTest.testBridgedEquals":364,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":455,"org.easymock.tests.UsageExpectAndReturnTest.longType":253,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":333,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":245,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":51,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":313,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":292,"org.easymock.tests.UsageCallCountTest.tooManyCalls":456,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":206,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":258,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":357,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":167,"org.easymock.tests.MockingTest.testNiceClassMocking":279,"org.easymock.tests.MockingTest.testClassMocking":271,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":449,"org.easymock.tests2.UsageConstraintsTest.testContains":41,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":110,"org.easymock.tests2.UsageConstraintsTest.testFind":32,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":367,"org.easymock.tests.MockTypeTest.fromEasyMockClass":298,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":459,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":26,"org.easymock.tests.UsageExpectAndReturnTest.object":260,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":181,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":397,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":436,"org.easymock.tests.UsageTest.exactCallCountByLastCall":326,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":430,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":18,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":266,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":305,"org.easymock.tests.MockClassControlTest.testHashCode":409,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":113,"org.easymock.tests2.EasyMockSupportTest.testVerify":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":199,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":478,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":303,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":347,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":56,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":488,"org.easymock.tests.UsageVarargTest.varargCharAccepted":396,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":471,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":391,"org.easymock.tests2.UsageTest.openCallCountByLastCall":130,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":184,"org.easymock.tests.DefaultClassInstantiatorTest.object":338,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":346,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":434,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":234,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":526,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":355,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":145,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":112,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":502,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":408,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":98,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":233,"org.easymock.tests.ReplayStateInvalidCallsTest.times":508,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":247,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":509,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":479,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":208,"org.easymock.tests2.UsageTest.resumeIfFailure":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":297,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":442,"org.easymock.tests2.StubTest.stubWithReturnValue":165,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":52,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":259,"org.easymock.tests2.SerializationTest.testAllMockedMethod":226,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":384,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":474,"org.easymock.samples.SupportTest.voteForRemovals":16,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":239,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":390,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":212,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":432,"org.easymock.tests.UsageExpectAndThrowTest.object":237,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":49,"org.easymock.tests2.DelegateToTest.testWrongClass":157,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":506,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":457,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":458,"org.easymock.tests.UsageStrictMockTest.range":464,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":162,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":166,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":238,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":186,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":290,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":422,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":475,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":498,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":470,"org.easymock.tests2.CaptureTest.testCaptureNone":80,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":483,"org.easymock.tests.UsageUnorderedTest.message":345,"org.easymock.tests.UsageVerifyTest.twoReturns":447,"org.easymock.tests.UsageVarargTest.varargByteAccepted":401,"org.easymock.tests2.ThreadingTest.testThreadSafe":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":203,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":453,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":437,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests2.CaptureTest.testCapture_2617107":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":388,"org.easymock.tests2.UsageConstraintsTest.any":39,"org.easymock.tests2.StubTest.stub":164,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":389,"org.easymock.tests.UsageExpectAndThrowTest.longType":230,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":342,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":286,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":220,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":117,"org.easymock.tests2.SerializationTest.testClass":224,"org.easymock.tests.LimitationsTest.mockNativeMethod":414,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":269,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":363,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":144,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":514,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":223,"org.easymock.tests2.NameTest.nameForMocksControl":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":146,"org.easymock.tests2.MockedExceptionTest.testMockedException":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":191,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":323,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":25,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":231,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":276,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":67,"org.easymock.tests.MockingTest.testNicePartialClassMocking":274,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":91,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":142,"org.easymock.tests2.CaptureTest.testCaptureLast":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":311,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":513,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":172,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":36,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":50,"org.easymock.tests.MockingTest.testTwoMocks":272,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":510,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":492,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":250,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":235,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":133,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":54,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":486,"org.easymock.samples.ExampleTest.removeNonExistingDocument":9,"org.easymock.tests.UsageStrictMockTest.differentMethods":465,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":149,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":284,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":114,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":485,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":340,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":105,"org.easymock.tests2.MockBuilderTest.testCreateMockString":71,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":193,"org.easymock.tests.UsageExpectAndThrowTest.floatType":229,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":188,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":214,"org.easymock.tests.UsageVerifyTest.twoThrows":446,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":202,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":99,"org.easymock.tests.LimitationsTest.privateConstructor":413,"org.easymock.tests2.UsageConstraintsTest.testNotNull":53,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":108,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":359,"org.easymock.tests2.UsageTest.defaultResetToNice":132,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":380,"org.easymock.tests.UsageVarargTest.differentLength":398,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":143,"org.easymock.tests2.CallbackTest.callback":141,"org.easymock.tests2.UsageConstraintsTest.equals":31,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":95,"org.easymock.tests.UsageTest.openCallCountByLastCall":322,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":517,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":418,"org.easymock.tests.UsageCallCountTest.tooFewCalls":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":169,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":424,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":484,"org.easymock.tests.UsageThrowableTest.throwCheckedException":356,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":476,"org.easymock.tests.MockingTest.testStrictClassMocking":270,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":171,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":350,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":148,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":289,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":170,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":216,"org.easymock.tests2.CompareToTest.testGreateOrEqual":521,"org.easymock.tests.ObjectMethodsTest.testHashCode":435,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":512,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":107,"org.easymock.tests2.NameTest.nameForNiceMock":22,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":507,"org.easymock.tests2.DependencyTest.testInterfaceMocking":139,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":204,"org.easymock.tests2.DelegateToTest.testStubDelegate":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":209,"org.easymock.tests2.AnswerTest.stubAnswer":215,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":462,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":481,"org.easymock.tests.UsageVarargTest.varargLongAccepted":400,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":377,"org.easymock.tests.UsageExpectAndReturnTest.floatType":252,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":268,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":17,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":121,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":47,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":307,"org.easymock.tests.UsageThrowableTest.noUpperLimit":353,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":160,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":77,"org.easymock.tests2.SerializationTest.test":225,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":339,"org.easymock.tests2.UsageConstraintsTest.testSame":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":251,"org.easymock.samples.SupportTest.addDocument":15,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":491,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":497,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":194,"org.easymock.tests.GenericTest.testPackageScope":361,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":120,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":277,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":495,"org.easymock.tests2.NameTest.nameForMock":20,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":262,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":520,"org.easymock.tests2.UsageStrictMockTest.differentMethods":222,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":96,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":254,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":241,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":433,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":317,"org.easymock.tests2.MockedExceptionTest.testRealException":111,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":302,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":381,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":417,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":291,"org.easymock.tests2.NameTest.nameForStrictMock":21,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":63,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":24,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":90,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":161,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":48,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":341,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":61,"org.easymock.tests2.UsageStrictMockTest.range":221,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":501,"org.easymock.tests2.UsageConstraintsTest.lessThan":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":116,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":522,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":376,"org.easymock.tests2.CaptureTest.testCaptureRightOne":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":198,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":482,"org.easymock.tests2.UsageConstraintsTest.testOr":35,"org.easymock.tests.UsageRangeTest.combination":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":87,"org.easymock.tests.UsageTest.wrongArguments":321,"org.easymock.tests2.MockBuilderTest.testWithConstructor":518,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":195,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":369,"org.easymock.tests.UsageVarargTest.varargShortAccepted":399,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":343,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":454,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":515,"org.easymock.tests2.UsageConstraintsTest.cmpTo":40,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":213,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":371,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.CaptureTest.testCaptureFromStub":83,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":281,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":62,"org.easymock.tests.UsageTest.unexpectedCallWithArray":320,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":511,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":461,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":452,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":519,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":264,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":463,"org.easymock.tests2.UsageConstraintsTest.constraints":29,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests.UsageStrictMockTest.testVerify":467,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":14,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":460,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":334,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":427,"org.easymock.tests.LimitationsTest.abstractClass":412,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":428,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":179}}]
