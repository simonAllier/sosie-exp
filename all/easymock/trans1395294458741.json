[{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[6,7,8,9,10,11,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:81","sourceCode":"return org.easymock.internal.Results.getMainInterval().contains(org.easymock.internal.Results.getCallCount())","type":"CtReturnImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[54,55,56,216],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[53],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[217],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[182,190,191,198,205,218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[219,220,159,165,171,175,177,221,222,223,191,197,203,207,209],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[27,28,30,32,33,224,44,48,70,72,79],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1507","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[225],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[70,72,73,219,74,75,76,78,226,79,227,80],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[228,229,230,231,30,35,41,48,68,71,72,219,74,75,76,77,80,84,232,88,89,90,233,234,235,236,237,238,239,240,100,102,107,130,137,147,156,157,222,241,242,185,186,187,223,243,244,245,246,247,248,249,189,210,211,212],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[250,228,229,230,231,13,14,15,16,17,18,19,251,20,21,22,23,24,25,26,27,28,252,29,30,31,32,33,34,224,35,36,37,38,39,40,41,42,43,44,45,46,253,47,48,49,50,254,0,255,256,257,258,51,259,52,6,53,260,261,262,263,2,264,54,55,56,57,265,58,59,60,61,266,267,62,3,268,269,270,63,271,272,273,274,275,276,277,64,65,278,279,66,280,67,68,281,282,69,70,71,72,73,219,74,75,76,77,78,79,227,220,80,283,284,285,286,287,288,289,290,291,292,81,82,83,84,293,294,85,295,86,12,296,297,87,232,88,89,90,298,299,300,301,91,302,303,92,304,305,306,307,308,309,310,311,312,93,313,314,315,316,317,94,318,319,320,321,322,323,324,95,325,326,327,328,329,330,233,96,234,235,97,98,236,237,331,238,239,99,240,100,332,333,101,102,103,334,335,336,337,338,104,339,340,341,342,343,344,105,345,106,107,108,109,110,111,346,112,113,114,347,115,116,4,5,117,118,119,120,121,122,123,124,125,126,127,348,128,349,129,130,350,351,352,353,354,131,132,133,134,135,355,356,357,358,359,136,137,138,139,140,360,141,142,361,143,144,145,146,147,362,148,149,363,364,365,150,151,152,153,154,366,155,156,367,368,157,369,370,371,372,373,374,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,375,376,377,378,379,380,381,382,383,384,178,385,179,180,386,387,388,389,390,391,392,393,394,395,396,181,182,217,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,183,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,221,437,438,439,440,441,442,443,444,222,445,446,447,448,449,450,184,241,242,185,186,187,451,452,188,223,243,453,244,245,246,247,248,249,454,455,456,457,458,459,460,189,461,462,463,464,465,466,467,468,469,470,471,472,473,474,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,475,476,477,210,211,212,478,479,480,218,481,482,483,484,485,213,214,486,215,487,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[332,102,103,425],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[351,352,211],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[89,90,186,187,210],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[497,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[89,186,499,211,212],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[422,442,443,444],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[250,228,229,230,231,13,14,15,16,17,18,19,251,20,21,22,23,24,25,26,27,28,252,29,30,31,32,33,34,224,35,36,37,38,39,40,41,42,43,44,45,46,253,47,48,49,50,254,0,255,256,257,258,51,259,52,6,53,260,261,262,263,2,264,54,55,56,57,265,58,59,60,61,266,267,62,3,268,269,270,63,271,272,273,274,275,276,277,64,65,278,279,66,280,67,68,281,282,69,70,71,72,73,219,74,75,76,77,78,79,227,220,80,283,284,285,286,287,288,289,290,291,292,81,82,83,84,293,294,85,295,86,12,296,297,87,232,88,89,90,298,299,300,301,91,302,303,92,304,305,306,307,308,309,310,311,312,93,313,314,315,316,317,94,318,319,320,321,322,323,324,95,325,326,327,328,329,330,233,96,234,235,97,98,236,237,331,238,239,99,240,100,332,333,101,102,103,334,335,336,337,338,104,339,340,341,342,343,344,105,345,106,107,108,109,110,111,346,112,113,114,347,115,116,4,5,117,118,119,120,121,122,123,124,125,126,127,348,128,349,129,130,350,351,352,353,354,131,132,133,134,135,355,356,357,358,359,136,137,138,139,140,360,141,142,361,143,144,145,146,147,362,148,149,363,364,365,150,151,152,153,154,366,155,156,367,368,157,369,370,371,372,373,374,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,375,376,377,378,379,380,381,382,383,384,178,385,179,180,386,387,388,389,390,391,392,393,394,395,396,181,182,217,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,183,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,221,437,438,439,440,441,442,443,444,222,445,446,447,448,449,450,184,241,242,185,186,187,451,452,188,223,243,453,244,245,246,247,248,249,454,455,456,457,458,459,460,189,461,462,463,464,465,466,467,468,469,470,471,472,473,474,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,475,476,477,210,211,212,478,479,480,218,481,482,483,484,485,213,214,486,215,487,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[468,472],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[500],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[54,55,56,216],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[397,420],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[27,28,30,32,33,48,70,71,72,76,77,79,80,147,156,367,368],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[28,33,44],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[40],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[435],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[121,122,124,125,127,133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[501,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"position":"org.easymock.internal.RecordState:324","failures":[351,352,211],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[89,235,238,239,503,222,241,186,453,244,247,248,211,212],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[504,505,506,507,241,453],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[6,261,508,54,509,7,8,9,510,10,511,86,12],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[52,394],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[27,33,37,44],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":28,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":223,"org.easymock.tests2.UsageTest.argumentsOrdered":239,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":429,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":98,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":117,"org.easymock.tests2.DelegateToTest.testReturnException":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":458,"org.easymock.tests.MockingTest.testPartialClassMocking":213,"org.easymock.tests.MockClassControlTest.testToString":377,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":250,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":307,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":158,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":92,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":7,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":155,"org.easymock.tests2.UsageTest.wrongArguments":235,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":464,"org.easymock.samples.ExampleTest.answerVsDelegate":123,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":394,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":488,"org.easymock.tests2.UsageConstraintsTest.testNull":30,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":59,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":21,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":382,"org.easymock.tests2.CaptureTest.testPrimitive":73,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":157,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":177,"org.easymock.tests.UsageTest.moreThanOneArgument":243,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":58,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":480,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":217,"org.easymock.tests.UsageTest.argumentsOrdered":248,"org.easymock.tests.UsageVarargTest.varargIntAccepted":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":11,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":254,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":285,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":343,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":135,"org.easymock.tests.ReplayStateInvalidUsageTest.times":409,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":95,"org.easymock.tests2.DependencyTest.testClassMocking":291,"org.easymock.tests2.AnswerTest.answer":100,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":436,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":277,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":391,"org.easymock.tests2.CaptureTest.testAnd":70,"org.easymock.tests2.UsageTest.strictResetToDefault":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":257,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":479,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":17,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":400,"org.easymock.tests2.DelegateToTest.testDelegate":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":173,"org.easymock.tests.LimitationsTest.mockFinalMethod":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":449,"org.easymock.tests2.DependencyTest.testClassMockingSupport":292,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":475,"org.easymock.tests2.CaptureTest.testCapture1_2446744":219,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":171,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":275,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":403,"org.easymock.tests.UsageThrowableTest.throwError":349,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":393,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":344,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":319,"org.easymock.samples.PartialClassMockTest.testGetArea":118,"org.easymock.tests.MockingTest.testInterfaceMocking":486,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":132,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":417,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":159,"org.easymock.tests2.UsageTest.niceToStrict":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":308,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":51,"org.easymock.tests2.MockBuilderTest.testCreateMock":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":315,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":327,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":167,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":18,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":390,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":444,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":462,"org.easymock.tests.UsageOverloadedMethodTest.overloading":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":317,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":493,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":201,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":359,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":501,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":38,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":78,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":360,"org.easymock.tests2.EasyMockSupportClassTest.testAll":91,"org.easymock.tests.MockClassControlTest.testEquals":381,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":149,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":447,"org.easymock.tests2.CaptureTest.testCaptureAll":71,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":276,"org.easymock.tests.MockNameTest.defaultName":482,"org.easymock.tests2.UsageConstraintsTest.testMatches":40,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":218,"org.easymock.samples.ExampleTest.voteForRemovals":127,"org.easymock.tests.UsageVarargTest.allKinds":147,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":448,"org.easymock.samples.BasicClassMockTest.testPrintContent":116,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":353,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":461,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":340,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":511,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":473,"org.easymock.tests2.UsageConstraintsTest.greaterThan":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":302,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":151,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":271,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":474,"org.easymock.samples.ExampleTest.voteForRemoval":124,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":65,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":272,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":266,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":188,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":233,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":15,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":457,"org.easymock.tests2.CaptureTest.testCaptureFirst":80,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":16,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":240,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":496,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":197,"org.easymock.tests2.CaptureTest.testCapture2_2446744":220,"org.easymock.tests2.UsageTest.moreThanOneArgument":234,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":221,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":263,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":146,"org.easymock.tests.GenericTest.testBridgedEquals":364,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":387,"org.easymock.tests.UsageExpectAndReturnTest.longType":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":445,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":13,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":498,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":176,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":253,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":478,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":455,"org.easymock.tests.UsageCallCountTest.tooManyCalls":388,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":316,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":352,"org.easymock.tests.MockingTest.testNiceClassMocking":489,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":109,"org.easymock.tests.MockingTest.testClassMocking":484,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":497,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":384,"org.easymock.tests2.UsageConstraintsTest.testContains":37,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":85,"org.easymock.tests2.UsageConstraintsTest.testFind":29,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":137,"org.easymock.tests.MockTypeTest.fromEasyMockClass":392,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":450,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":106,"org.easymock.tests.UsageExpectAndReturnTest.object":200,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":20,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":8,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":372,"org.easymock.tests.UsageTest.exactCallCountByLastCall":249,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":397,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":355,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":206,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":492,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":335,"org.easymock.tests.MockClassControlTest.testHashCode":380,"org.easymock.tests2.EasyMockSupportTest.testVerify":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":310,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":398,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":490,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":443,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":274,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":290,"org.easymock.tests.UsageVarargTest.varargCharAccepted":141,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":466,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":441,"org.easymock.tests2.UsageTest.openCallCountByLastCall":236,"org.easymock.tests.DefaultClassInstantiatorTest.object":467,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":23,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":442,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":370,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":311,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":350,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":334,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":270,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":379,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":207,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":94,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":378,"org.easymock.tests2.UsageTest.resumeIfFailure":99,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":389,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":460,"org.easymock.tests2.StubTest.stubWithReturnValue":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":47,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":199,"org.easymock.tests2.SerializationTest.testAllMockedMethod":56,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":435,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":500,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":505,"org.easymock.samples.SupportTest.voteForRemovals":121,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":362,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":170,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":216,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":440,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":332,"org.easymock.tests.UsageExpectAndThrowTest.object":168,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":357,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":45,"org.easymock.tests2.DelegateToTest.testWrongClass":281,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":181,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":182,"org.easymock.tests.UsageStrictMockTest.range":186,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":288,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":251,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":169,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":52,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":411,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":299,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":463,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":506,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":418,"org.easymock.tests2.CaptureTest.testCaptureNone":77,"org.easymock.tests.UsageUnorderedTest.message":222,"org.easymock.tests.UsageVerifyTest.twoReturns":212,"org.easymock.tests.UsageVarargTest.varargByteAccepted":145,"org.easymock.tests2.ThreadingTest.testThreadSafe":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":313,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":180,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":115,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":373,"org.easymock.tests2.CaptureTest.testCapture_2617107":72,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":438,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":368,"org.easymock.tests2.UsageConstraintsTest.any":35,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":408,"org.easymock.tests2.StubTest.stub":83,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndThrowTest.longType":161,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":471,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":407,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":88,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":104,"org.easymock.tests2.SerializationTest.testClass":54,"org.easymock.tests.LimitationsTest.mockNativeMethod":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":209,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":363,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":322,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":298,"org.easymock.tests2.NameTest.nameForMocksControl":231,"org.easymock.tests2.MockedExceptionTest.testMockedException":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":303,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":162,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":215,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":345,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":57,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":53,"org.easymock.tests.MockingTest.testNicePartialClassMocking":214,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":509,"org.easymock.tests2.CaptureTest.testCaptureLast":76,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":320,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":476,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":114,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":33,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":46,"org.easymock.tests.MockingTest.testTwoMocks":485,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":347,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":166,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":238,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":49,"org.easymock.samples.ExampleTest.removeNonExistingDocument":348,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":405,"org.easymock.tests.UsageStrictMockTest.differentMethods":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":326,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":336,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":469,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":278,"org.easymock.tests2.MockBuilderTest.testCreateMockString":264,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":375,"org.easymock.tests.UsageExpectAndThrowTest.floatType":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":304,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":301,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":101,"org.easymock.tests.UsageVerifyTest.twoThrows":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":296,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":93,"org.easymock.samples.ExampleTest.voteAgainstRemoval":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":430,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":416,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":63,"org.easymock.tests.LimitationsTest.privateConstructor":414,"org.easymock.tests2.UsageConstraintsTest.testNotNull":48,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":293,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":354,"org.easymock.tests2.UsageTest.defaultResetToNice":331,"org.easymock.samples.ExampleTest.voteAgainstRemovals":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":321,"org.easymock.tests.UsageVarargTest.differentLength":361,"org.easymock.tests2.CallbackTest.callback":107,"org.easymock.tests2.UsageConstraintsTest.equals":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":3,"org.easymock.tests.UsageTest.openCallCountByLastCall":245,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":367,"org.easymock.tests.UsageCallCountTest.tooFewCalls":385,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":111,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":465,"org.easymock.tests.UsageThrowableTest.throwCheckedException":351,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":507,"org.easymock.tests.MockingTest.testStrictClassMocking":483,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":113,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":366,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":325,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":410,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":112,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":103,"org.easymock.tests.ObjectMethodsTest.testHashCode":371,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":10,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":66,"org.easymock.tests2.NameTest.nameForNiceMock":230,"org.easymock.tests2.DependencyTest.testInterfaceMocking":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":9,"org.easymock.samples.ExampleTest.addDocument":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":314,"org.easymock.tests2.DelegateToTest.testStubDelegate":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":318,"org.easymock.tests2.AnswerTest.stubAnswer":102,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":242,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":260,"org.easymock.tests.UsageVarargTest.varargLongAccepted":144,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.floatType":192,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":208,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":86,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":494,"org.easymock.tests.UsageThrowableTest.noUpperLimit":129,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":43,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":342,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":26,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":283,"org.easymock.tests2.SerializationTest.test":55,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":74,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":502,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":191,"org.easymock.tests2.UsageConstraintsTest.testSame":31,"org.easymock.samples.SupportTest.addDocument":120,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":346,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":305,"org.easymock.tests.GenericTest.testPackageScope":148,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":341,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":487,"org.easymock.tests2.NameTest.nameForMock":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":202,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":2,"org.easymock.tests2.UsageStrictMockTest.differentMethods":90,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":194,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":172,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":369,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":153,"org.easymock.tests2.MockedExceptionTest.testRealException":295,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":289,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":432,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":232,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":156,"org.easymock.tests2.NameTest.nameForStrictMock":229,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":258,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":60,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":287,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":470,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":44,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":255,"org.easymock.tests2.UsageStrictMockTest.range":89,"org.easymock.tests2.UsageConstraintsTest.lessThan":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":338,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":14,"org.easymock.tests2.CaptureTest.testCaptureRightOne":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":309,"org.easymock.tests2.UsageConstraintsTest.testOr":32,"org.easymock.tests.UsageRangeTest.combination":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":265,"org.easymock.tests.UsageTest.wrongArguments":244,"org.easymock.tests2.MockBuilderTest.testWithConstructor":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":306,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":376,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":203,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":472,"org.easymock.tests.UsageVarargTest.varargShortAccepted":143,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":386,"org.easymock.tests2.UsageConstraintsTest.cmpTo":36,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":422,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":237,"org.easymock.tests2.CaptureTest.testCaptureFromStub":227,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":402,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":256,"org.easymock.tests.UsageTest.unexpectedCallWithArray":453,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":241,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":179,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":1,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":204,"org.easymock.tests2.CaptureTest.testCapture":226,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":185,"org.easymock.tests2.UsageConstraintsTest.constraints":27,"org.easymock.samples.ExampleTest.addAndChangeDocument":128,"org.easymock.tests.UsageStrictMockTest.testVerify":452,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":119,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":446,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":133,"org.easymock.tests.LimitationsTest.abstractClass":413,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":196,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":134,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":499,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":19}}]
