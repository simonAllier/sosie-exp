[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"toStringMethod"}},{"position":"org.easymock.Capture:82","failures":[3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,15,39,40,41,42,43,44,45,46,47,48,49,50,3,51,4,5,6,9,52,10,12,14,53,54,55,56,16,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,0,1,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[159,160,161,162,163,164,165,166,167,168,169,102,103,104,119,122,123,124,125,170,171,172,173,174,175,151,152,156,157,158],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[176,177,178],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[28,180,181,182,183,184,185,186,187,0],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[188],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[189,190,191,192,193,194],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[195,196,197,198,199,200,201,65,202,203,204,205,206,207,208,209,210,211,212,73,213,214,215,216,217,218],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[166,102,103,104,170,219,220,221,222,174,175,151,152,156,157,158],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[223,161,224],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[225],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[145],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[223,161,224],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:200","sourceCode":"throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[226],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"e":"e"}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[227],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[228,229,230,231,232],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[21,22,24,25,26,27,28,233,234,235,29,30,31,32,236,33,34,35,36,237,37,38,238,15,39,239,40,41,42,44,45,240,241,46,47,48,49,50,3,51,5,6,9,52,10,12,242,14,53,54,55,56,16,57,58,59,60,61,243,244,245,62,63,64,65,66,67,166,68,246,247,69,248,70,71,72,73,249,250,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,251,102,103,104,0,1,252,253,110,111,254,112,255,256,257,258,113,259,260,261,262,114,263,264,265,266,115,116,117,123,126,267,268,269,270,170,271,272,127,128,130,131,132,133,134,135,136,137,273,138,139,274,275,276,277,278,279,140,141,142,143,145,146,147,148,149,280,175,152,153,154,156,157,158,281,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[167,168,169,103,283,284,285,171,172,173,174,151,152,286,157],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[287,287,288,288,233,234,30,31,32,236,237,38,238,39,239,45,240,241,13,102,289,290,291,292,293,128,141,142,143,145,146,147,148,149,153,154,156],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[235,29,31,236,33,188,40,45,3,4,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[294,295,296,297,179,233,235,38,39,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[298,47,59,60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:87","sourceCode":"return java.util.List<org.easymock.internal.Injection>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":29,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":270,"org.easymock.tests2.UsageTest.argumentsOrdered":169,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":202,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":17,"org.easymock.tests2.StubTest.stubWithReturnValue":250,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":181,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":258,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":195,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":44,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":74,"org.easymock.tests.MockingTest.testPartialClassMocking":115,"org.easymock.samples.SupportTest.voteForRemovals":27,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":200,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":280,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":97,"org.easymock.tests.UsageExpectAndThrowTest.object":108,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":219,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":72,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":41,"org.easymock.tests2.DelegateToTest.testWrongClass":75,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":183,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":153,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":154,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":141,"org.easymock.tests2.UsageTest.wrongArguments":167,"org.easymock.samples.ConstructorCalledMockTest.testTax":287,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":218,"org.easymock.tests.UsageStrictMockTest.range":157,"org.easymock.samples.ExampleTest.answerVsDelegate":23,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":77,"org.easymock.tests2.UsageConstraintsTest.testNull":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":56,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":48,"org.easymock.tests2.CaptureTest.testPrimitive":5,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":143,"org.easymock.tests.UsageTest.moreThanOneArgument":170,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":172,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":291,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":282,"org.easymock.tests2.CaptureTest.testCaptureNone":52,"org.easymock.tests.UsageUnorderedTest.message":174,"org.easymock.tests.UsageVerifyTest.twoReturns":152,"org.easymock.tests2.ThreadingTest.testThreadSafe":243,"org.easymock.tests.UsageTest.argumentsOrdered":173,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":164,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":145,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":206,"org.easymock.tests2.UsageConstraintsTest.any":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":278,"org.easymock.tests.UsageExpectAndThrowTest.longType":106,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":161,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":18,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":65,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":73,"org.easymock.tests.LimitationsTest.mockNativeMethod":140,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":273,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":266,"org.easymock.tests2.AnswerTest.answer":100,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":188,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":210,"org.easymock.tests2.CaptureTest.testAnd":3,"org.easymock.tests2.UsageTest.strictResetToDefault":67,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":290,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":88,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":272,"org.easymock.tests2.DelegateToTest.testDelegate":76,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":117,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":49,"org.easymock.tests.MockingTest.testNicePartialClassMocking":116,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":109,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":57,"org.easymock.tests2.CompareToTest.testNotComparable":227,"org.easymock.tests2.CompareToTest.testCompareEqual":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":208,"org.easymock.tests2.CaptureTest.testCaptureLast":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":150,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":83,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":33,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":124,"org.easymock.tests2.CaptureTest.testCapture1_2446744":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":252,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":168,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":240,"org.easymock.tests.UsageThrowableTest.throwError":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":214,"org.easymock.tests.UsageStrictMockTest.differentMethods":158,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":199,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":191,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":245,"org.easymock.tests2.ConstraintsToStringTest.andToString":162,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":293,"org.easymock.tests.UsageExpectAndThrowTest.floatType":105,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":15,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":231,"org.easymock.tests.UsageVerifyTest.twoThrows":151,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":98,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests2.CompareToTest.testLessOrEqual":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":146,"org.easymock.samples.ExampleTest.voteAgainstRemoval":25,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":276,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":60,"org.easymock.tests2.UsageTest.niceToStrict":68,"org.easymock.tests2.UsageConstraintsTest.testNotNull":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":136,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":178,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":47,"org.easymock.tests2.UsageTest.defaultResetToNice":69,"org.easymock.samples.ExampleTest.voteAgainstRemovals":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":114,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":209,"org.easymock.tests2.CallbackTest.callback":230,"org.easymock.tests2.UsageConstraintsTest.equals":225,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":215,"org.easymock.tests.UsageTest.openCallCountByLastCall":271,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":89,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":144,"org.easymock.tests.UsageOverloadedMethodTest.overloading":139,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":38,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":259,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":80,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":138,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":37,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":10,"org.easymock.tests.UsageThrowableTest.throwCheckedException":133,"org.easymock.tests2.EasyMockSupportClassTest.testAll":96,"org.easymock.tests2.CaptureTest.testCaptureAll":51,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":82,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":213,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":79,"org.easymock.tests2.UsageConstraintsTest.testMatches":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":81,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":292,"org.easymock.tests2.CompareToTest.testGreateOrEqual":297,"org.easymock.samples.ExampleTest.voteForRemovals":26,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":63,"org.easymock.tests2.DependencyTest.testInterfaceMocking":71,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":185,"org.easymock.tests2.DelegateToTest.testStubDelegate":249,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":135,"org.easymock.tests2.AnswerTest.stubAnswer":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":203,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":156,"org.easymock.tests2.UsageConstraintsTest.greaterThan":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":187,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":267,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":275,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":194,"org.easymock.samples.ExampleTest.voteForRemoval":24,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":244,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":265,"org.easymock.tests.UsageExpectAndReturnTest.floatType":110,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":288,"org.easymock.tests2.ConstraintsToStringTest.orToString":159,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":205,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":234,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":66,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":7,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":86,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":190,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":253,"org.easymock.tests2.UsageConstraintsTest.testSame":32,"org.easymock.tests2.CaptureTest.testCaptureFirst":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":87,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":70,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":256,"org.easymock.tests.GenericTest.testPackageScope":137,"org.easymock.tests2.CaptureTest.testCapture2_2446744":242,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":62,"org.easymock.tests2.UsageTest.moreThanOneArgument":166,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":50,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":204,"org.easymock.tests.UsageExpectAndReturnTest.longType":111,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":260,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":43,"org.easymock.tests2.UsageStrictMockTest.differentMethods":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":289,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":224,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":269,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":217,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":232,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":102,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":142,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":78,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":298,"org.easymock.tests2.UsageConstraintsTest.testContains":237,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":64,"org.easymock.tests2.UsageConstraintsTest.testFind":30,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":274,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":228,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":16,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":229,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":155,"org.easymock.tests.UsageExpectAndReturnTest.object":113,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":220,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":192,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":58,"org.easymock.tests.ErrorMessageTest.testGetters":221,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":216,"org.easymock.tests2.UsageStrictMockTest.range":103,"org.easymock.tests2.UsageConstraintsTest.lessThan":241,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":184,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":201,"org.easymock.tests.UsageTest.exactCallCountByLastCall":127,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":128,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":186,"org.easymock.tests2.CaptureTest.testCaptureRightOne":12,"org.easymock.tests2.UsageConstraintsTest.testOr":236,"org.easymock.tests.UsageRangeTest.combination":126,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":54,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":120,"org.easymock.tests.UsageTest.wrongArguments":171,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":198,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":261,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":223,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":193,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":118,"org.easymock.tests2.UsageConstraintsTest.cmpTo":36,"org.easymock.tests2.CompareToTest.testLessThan":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":279,"org.easymock.tests2.UsageTest.openCallCountByLastCall":246,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":247,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":95,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":176,"org.easymock.tests.DefaultClassInstantiatorTest.object":189,"org.easymock.tests2.CaptureTest.testCaptureFromStub":13,"org.easymock.tests.UsageTest.unexpectedCallWithArray":285,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":284,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":286,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":211,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":197,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":262,"org.easymock.tests2.CaptureTest.testCapture":11,"org.easymock.tests2.UsageConstraintsTest.constraints":235,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":59,"org.easymock.tests2.ConstraintsToStringTest.notToString":160,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":264,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":99,"org.easymock.tests2.CompareToTest.testGreateThan":295,"org.easymock.tests2.UsageTest.resumeIfFailure":248,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":147,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":255,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":148,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":222,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":90}}]
