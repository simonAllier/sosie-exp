[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,0,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.LastControl:48","failures":[1,79,79,80,80,2,3,81,4,5,6,82,83,84,85,86,87,88,89,7,90,91,92,93,94,95,96,97,98,8,9,10,11,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,12,13,14,15,16,17,18,19,20,122,123,21,22,124,23,24,25,125,26,27,28,29,30,31,32,33,34,35,126,127,128,36,37,38,39,40,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,41,42,155,156,157,158,159,160,161,43,44,45,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,46,213,214,215,216,217,218,219,220,221,222,223,224,225,47,48,226,227,228,229,0,230,231,232,49,50,51,52,53,233,234,235,236,237,238,239,240,241,54,242,243,244,245,246,247,248,249,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,250,251,252,72,73,74,75,76,77,78],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[94,95,97,253,109,110,111,31,32,33,34,35,126,254,255,40,129,130,131,132,41,42,256,43,183,184,185,186,187,188,189,190,191,192,257,193,194,195,196,197,198,199,200,201,202,203,204,258,205,206,207,208,259,209,46,214,215,216,260,217,218,261,262,219,220,221,222,223,224,225,226,248,249,61,263,72,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[97,265,266,267,268,269,127,128,270,256,44,271,272,273,73],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[185,260,222],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[94,97,109,110,31,32,33,34,35,254,40,129,130,131,132,41,42,256,43,183,184,185,186,187,188,189,190,191,192,257,193,194,195,196,197,198,199,200,201,202,203,204,258,205,206,207,208,259,215,216,260,217,218,261,262,219,220,221,222,223,224,225,248,249,61,72],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[274,275,266,256,276,277],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[278,279],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[280,281,282],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:221","sourceCode":"final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[1,283,284,79,79,80,80,285,88,286,89,287,288,289,7,290,98,291,278,292,293,280,279,294,295,296,297,12,13,14,298,255,299,300,301,302,303,304,305,306,307,308,309,310,179,180,181,226,311,312,49,313,314,50,315,51,52,316,317,53,318,54,319,55,56,58,59,60,320,61,321,322,263,62,63,64,323,324,65,66,67,68,70,71,325,326,327,75,328,329,76,330,331,332,333,334,335,336,337,338,77,339,340,341,342,343,78,344,345],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[346],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"delegateTo"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[202],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[278,279],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[12,13,14,56,263,64,70,347,332,335,336],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1121","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[105,126,127,128,158,43,45,348,235,72,74,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[315,320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:37","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (java.util.regex.Pattern.java.util.regex.Pattern.compile(java.lang.String).matcher(((java.lang.String)(java.lang.Object))).find())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[226,227,311],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":186,"org.easymock.tests2.UsageTest.argumentsOrdered":273,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":104,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":346,"org.easymock.tests2.StubTest.stubWithReturnValue":251,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":205,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":22,"org.easymock.tests2.SerializationTest.testAllMockedMethod":311,"org.easymock.tests2.DelegateToTest.testReturnException":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":91,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":165,"org.easymock.tests.MockingTest.testPartialClassMocking":12,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":277,"org.easymock.samples.SupportTest.voteForRemovals":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":285,"org.easymock.tests.MockClassControlTest.testToString":300,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":103,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":324,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":134,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":166,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":243,"org.easymock.tests.UsageExpectAndThrowTest.object":144,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":203,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":48,"org.easymock.tests2.DelegateToTest.testWrongClass":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":41,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":42,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":192,"org.easymock.tests2.UsageTest.wrongArguments":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":40,"org.easymock.samples.ConstructorCalledMockTest.testTax":79,"org.easymock.tests.UsageStrictMockTest.range":44,"org.easymock.samples.ExampleTest.answerVsDelegate":81,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":65,"org.easymock.tests2.UsageConstraintsTest.testNull":188,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":58,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":145,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":305,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":51,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":176,"org.easymock.tests2.CaptureTest.testPrimitive":217,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":325,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":268,"org.easymock.tests.UsageTest.moreThanOneArgument":105,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":153,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":57,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":10,"org.easymock.tests2.CaptureTest.testCaptureNone":220,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":164,"org.easymock.tests.UsageUnorderedTest.message":97,"org.easymock.tests.UsageVerifyTest.twoReturns":128,"org.easymock.tests2.ThreadingTest.testThreadSafe":210,"org.easymock.tests.UsageTest.argumentsOrdered":269,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":339,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":283,"org.easymock.tests2.CaptureTest.testCapture_2617107":260,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":31,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":131,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":315,"org.easymock.tests2.UsageConstraintsTest.any":193,"org.easymock.tests2.StubTest.stub":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":35,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":92,"org.easymock.tests.UsageExpectAndThrowTest.longType":137,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":280,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":264,"org.easymock.tests2.SerializationTest.testClass":226,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":209,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":214,"org.easymock.tests.LimitationsTest.mockNativeMethod":7,"org.easymock.tests2.AnswerTest.answer":242,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":89,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":30,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":257,"org.easymock.tests2.CaptureTest.testAnd":215,"org.easymock.tests2.UsageTest.strictResetToDefault":234,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":349,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":263,"org.easymock.tests2.MockedExceptionTest.testMockedException":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":329,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":38,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":171,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":107,"org.easymock.tests2.DelegateToTest.testDelegate":232,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":87,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":138,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":55,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":149,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":60,"org.easymock.tests.LimitationsTest.mockFinalMethod":290,"org.easymock.tests2.CaptureTest.testCaptureLast":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":133,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":71,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":191,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":204,"org.easymock.tests.MockingTest.testTwoMocks":297,"org.easymock.tests2.CaptureTest.testCapture1_2446744":218,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":347,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":142,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":272,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":207,"org.easymock.tests.UsageThrowableTest.throwError":114,"org.easymock.tests.UsageStrictMockTest.differentMethods":45,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":292,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":212,"org.easymock.tests2.MockBuilderTest.testCreateMockString":318,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":99,"org.easymock.tests.UsageExpectAndThrowTest.floatType":136,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":327,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":245,"org.easymock.tests.UsageVerifyTest.twoThrows":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":77,"org.easymock.samples.PartialClassMockTest.testGetArea":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":32,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":162,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":163,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":334,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":308,"org.easymock.tests2.UsageTest.niceToStrict":236,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":135,"org.easymock.tests.LimitationsTest.privateConstructor":289,"org.easymock.tests2.UsageConstraintsTest.testNotNull":206,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":121,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":179,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":50,"org.easymock.tests2.MockBuilderTest.testCreateMock":317,"org.easymock.tests2.UsageTest.defaultResetToNice":239,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":341,"org.easymock.tests2.CallbackTest.callback":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":321,"org.easymock.tests.UsageTest.openCallCountByLastCall":106,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":143,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":172,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":130,"org.easymock.tests.UsageOverloadedMethodTest.overloading":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":338,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":197,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":68,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":23,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":100,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":281,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":196,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":221,"org.easymock.tests.UsageThrowableTest.throwCheckedException":118,"org.easymock.tests.MockClassControlTest.testEquals":304,"org.easymock.tests2.EasyMockSupportClassTest.testAll":75,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":286,"org.easymock.tests.MockingTest.testStrictClassMocking":295,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":151,"org.easymock.tests2.CaptureTest.testCaptureAll":216,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":70,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":110,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.testMatches":198,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":69,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":247,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":11,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":213,"org.easymock.tests.UsageVarargTest.allKinds":254,"org.easymock.tests2.DependencyTest.testInterfaceMocking":47,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":126,"org.easymock.samples.BasicClassMockTest.testPrintContent":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.DelegateToTest.testStubDelegate":0,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":120,"org.easymock.tests2.AnswerTest.stubAnswer":246,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":95,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":43,"org.easymock.tests2.UsageConstraintsTest.greaterThan":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":37,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":64,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":348,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":294,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":323,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":211,"org.easymock.tests.UsageExpectAndReturnTest.floatType":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":29,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":80,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":201,"org.easymock.tests.UsageThrowableTest.noUpperLimit":115,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":233,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":98,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":184,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":309,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":261,"org.easymock.tests2.SerializationTest.test":227,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":316,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":282,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":169,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":16,"org.easymock.tests2.UsageConstraintsTest.testSame":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":90,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":228,"org.easymock.tests2.CaptureTest.testCaptureFirst":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":170,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":241,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":331,"org.easymock.tests.GenericTest.testPackageScope":88,"org.easymock.tests2.UsageTest.moreThanOneArgument":235,"org.easymock.tests2.CaptureTest.testCapture2_2446744":224,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":46,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":86,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":53,"org.easymock.tests.GenericTest.testBridgedEquals":287,"org.easymock.tests.UsageExpectAndReturnTest.longType":18,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":24,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":152,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":258,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":154,"org.easymock.tests2.UsageStrictMockTest.differentMethods":74,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":8,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":160,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":19,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":39,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":342,"org.easymock.tests2.MockedExceptionTest.testRealException":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":21,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":72,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":129,"org.easymock.tests.MockingTest.testNiceClassMocking":298,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":66,"org.easymock.tests.MockingTest.testClassMocking":296,"org.easymock.tests2.UsageConstraintsTest.testContains":195,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":181,"org.easymock.tests2.UsageConstraintsTest.testFind":187,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":102,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":314,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":59,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":249,"org.easymock.tests.UsageExpectAndReturnTest.object":124,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":310,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":293,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":202,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":61,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":49,"org.easymock.tests2.UsageStrictMockTest.range":73,"org.easymock.tests2.UsageConstraintsTest.lessThan":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":175,"org.easymock.tests.UsageTest.exactCallCountByLastCall":108,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":109,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":335,"org.easymock.tests2.CaptureTest.testCaptureRightOne":222,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":84,"org.easymock.tests2.UsageConstraintsTest.testOr":190,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":319,"org.easymock.tests.UsageRangeTest.combination":36,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":56,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":27,"org.easymock.tests.UsageTest.wrongArguments":267,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":156,"org.easymock.tests.MockClassControlTest.testHashCode":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":332,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":20,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":336,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":85,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":112,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":155,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":259,"org.easymock.tests2.UsageConstraintsTest.cmpTo":194,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":244,"org.easymock.tests2.UsageTest.openCallCountByLastCall":237,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":238,"org.easymock.tests.DefaultClassInstantiatorTest.object":291,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":178,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":111,"org.easymock.tests2.CaptureTest.testCaptureFromStub":223,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":313,"org.easymock.tests.UsageTest.unexpectedCallWithArray":266,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":337,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":141,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":256,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":117,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":125,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":302,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":62,"org.easymock.tests2.UsageConstraintsTest.constraints":185,"org.easymock.samples.ExampleTest.addAndChangeDocument":82,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":28,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":159,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":78,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":262,"org.easymock.tests2.UsageTest.resumeIfFailure":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":33,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":306,"org.easymock.tests.LimitationsTest.abstractClass":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":34,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":173}}]
