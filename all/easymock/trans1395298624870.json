[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[24,25],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[26,27,28,29,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","obj":"obj","targetField":"targetField"}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[26,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[79,80,81,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[82],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[83],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[102],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[103,26,27,104,105,106,107,108,109,110,111,112,113,114,115,22,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,79,133,134,135,136,137,138,4,139,140,141,142,23,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,32,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,33,177,178,179,180,181,182,183,184,185,24,186,187,28,188,189,190,191,192,193,194,195,196,197,198,199,200,201,34,202,35,36,37,38,39,40,203,204,41,42,205,206,207,208,209,210,211,212,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,213,214,215,216,64,217,218,219,220,221,222,223,224,225,226,227,228,102,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,65,66,67,68,69,70,263,264,265,266,267,268,269,270,271,272,273,274,275,276,5,277,278,71,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,84,85,86,302,87,303,88,89,90,304,305,91,306,307,308,309,310,311,312,313,314,6,92,93,94,315,95,316,96,97,98,317,318,99,319,320,321,322,30,323,324,1,2,3,16,325,17,326,327,328,329,330,331,332,333,82,334,335,336,337,18,338,339,19,340,341,342,343,344,345,346,347,20,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,72,73,74,75,391,392,393,394,76,395,396,397,398,399,400,77,83,401,402,403,404,7,80,8,405,81,9,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,78,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,100,488,489,490,491,10,492,493,494,495,496,497,101],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[332],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[498],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[208,209,264,265],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[149,150,154],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[12,19],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[173,337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.Range:40","failures":[103,26,27,104,105,106,107,108,109,110,111,112,113,114,115,22,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,79,133,134,135,136,137,138,4,139,140,141,142,23,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,32,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,33,177,178,179,180,181,182,183,184,185,24,186,187,28,188,189,190,191,192,193,194,195,196,197,198,199,200,201,34,202,35,36,37,38,39,40,203,204,41,42,205,206,207,208,209,210,211,212,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,213,214,215,216,64,217,218,219,220,221,222,223,224,225,226,227,228,102,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,65,66,67,68,69,70,263,264,265,266,267,268,269,270,271,272,273,274,275,276,5,277,278,71,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,84,85,86,302,87,303,88,89,90,304,305,91,306,307,308,309,310,311,312,313,314,6,92,93,94,315,95,316,96,97,98,317,318,99,319,320,321,322,30,323,324,1,2,3,16,325,17,326,327,328,329,330,331,332,333,82,334,335,336,337,18,338,339,19,340,341,342,343,344,345,346,347,20,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,72,73,74,75,391,392,393,394,76,395,396,397,398,399,400,77,83,401,402,403,404,7,80,8,405,81,9,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,78,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,100,488,489,490,491,10,492,493,494,495,496,497,101],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[473,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":326,"org.easymock.tests2.UsageTest.argumentsOrdered":402,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":358,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":136,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":399,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":100,"org.easymock.tests2.DelegateToTest.testReturnException":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":66,"org.easymock.tests.MockingTest.testPartialClassMocking":107,"org.easymock.tests.MockClassControlTest.testToString":268,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":406,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":437,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":43,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":476,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":333,"org.easymock.tests2.UsageTest.wrongArguments":397,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":203,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":243,"org.easymock.samples.ExampleTest.answerVsDelegate":10,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":238,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":112,"org.easymock.tests2.UsageConstraintsTest.testNull":329,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":459,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":273,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":357,"org.easymock.tests2.CaptureTest.testPrimitive":414,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":205,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":62,"org.easymock.tests.UsageTest.moreThanOneArgument":213,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":458,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":198,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":114,"org.easymock.tests.UsageTest.argumentsOrdered":218,"org.easymock.tests.UsageVarargTest.varargIntAccepted":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":140,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":191,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":374,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":479,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":305,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":195,"org.easymock.tests.ReplayStateInvalidUsageTest.times":253,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":316,"org.easymock.tests2.DependencyTest.testClassMocking":473,"org.easymock.tests2.AnswerTest.answer":7,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":142,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":373,"org.easymock.tests2.CaptureTest.testAnd":411,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":235,"org.easymock.tests2.UsageTest.strictResetToDefault":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":467,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":197,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":352,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":117,"org.easymock.tests2.DelegateToTest.testDelegate":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":58,"org.easymock.tests.LimitationsTest.mockFinalMethod":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":69,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":126,"org.easymock.tests2.DependencyTest.testClassMockingSupport":474,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":210,"org.easymock.tests2.CaptureTest.testCapture1_2446744":415,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":371,"org.easymock.tests.UsageThrowableTest.throwError":34,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":247,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":237,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":174,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":455,"org.easymock.samples.PartialClassMockTest.testGetArea":490,"org.easymock.tests.MockingTest.testInterfaceMocking":109,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":248,"org.easymock.tests2.CompareToTest.testLessOrEqual":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":442,"org.easymock.tests2.UsageTest.niceToStrict":398,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":183,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":127,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":380,"org.easymock.tests2.MockBuilderTest.testCreateMock":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":450,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":98,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":52,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":353,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":265,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":220,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":241,"org.easymock.tests.UsageOverloadedMethodTest.overloading":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":446,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":18,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":71,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":293,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":337,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":420,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":165,"org.easymock.tests2.EasyMockSupportClassTest.testAll":434,"org.easymock.tests.MockClassControlTest.testEquals":272,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":230,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":60,"org.easymock.tests2.CaptureTest.testCaptureAll":412,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":124,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":372,"org.easymock.tests.MockNameTest.defaultName":206,"org.easymock.tests2.UsageConstraintsTest.testMatches":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":199,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":245,"org.easymock.samples.ExampleTest.voteForRemovals":495,"org.easymock.tests.UsageVarargTest.allKinds":173,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":103,"org.easymock.samples.BasicClassMockTest.testPrintContent":487,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":125,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":39,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":70,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":89,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":310,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":155,"org.easymock.tests2.UsageConstraintsTest.greaterThan":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":119,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":470,"org.easymock.samples.ExampleTest.voteForRemoval":492,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":156,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":471,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":427,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":239,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":480,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":462,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":76,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":201,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":350,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":65,"org.easymock.tests2.CaptureTest.testCaptureFirst":424,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":79,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":351,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":404,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":281,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":289,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":429,"org.easymock.tests2.CaptureTest.testCapture2_2446744":423,"org.easymock.tests2.UsageTest.moreThanOneArgument":396,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":23,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":172,"org.easymock.tests.GenericTest.testBridgedEquals":232,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":227,"org.easymock.tests.UsageExpectAndReturnTest.longType":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":122,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":348,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":61,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":177,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":208,"org.easymock.tests.UsageCallCountTest.tooManyCalls":228,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":451,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":38,"org.easymock.tests.MockingTest.testNiceClassMocking":113,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":362,"org.easymock.tests.MockingTest.testClassMocking":105,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":221,"org.easymock.tests2.UsageConstraintsTest.testContains":336,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":74,"org.easymock.tests2.UsageConstraintsTest.testFind":328,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":33,"org.easymock.tests.MockTypeTest.fromEasyMockClass":236,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":394,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":184,"org.easymock.tests.UsageExpectAndReturnTest.object":292,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":464,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":356,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":167,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":181,"org.easymock.tests.UsageTest.exactCallCountByLastCall":219,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":132,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":115,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":274,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":313,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":298,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":85,"org.easymock.tests.MockClassControlTest.testHashCode":271,"org.easymock.tests2.EasyMockSupportTest.testVerify":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":444,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":22,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":5,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":370,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":391,"org.easymock.tests.UsageVarargTest.varargCharAccepted":166,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":148,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":147,"org.easymock.tests2.UsageTest.openCallCountByLastCall":400,"org.easymock.tests.DefaultClassInstantiatorTest.object":149,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":359,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":263,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":445,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":50,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":315,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":84,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":468,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":49,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":453,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":269,"org.easymock.tests2.UsageTest.resumeIfFailure":403,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":233,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":478,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":68,"org.easymock.tests2.StubTest.stubWithReturnValue":78,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":383,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":291,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":345,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":141,"org.easymock.samples.SupportTest.voteForRemovals":485,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":302,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":55,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":146,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":80,"org.easymock.tests.UsageExpectAndThrowTest.object":53,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":276,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":342,"org.easymock.tests2.DelegateToTest.testWrongClass":309,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":257,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":258,"org.easymock.samples.ConstructorCalledMockTest.testTax":488,"org.easymock.tests.UsageStrictMockTest.range":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":482,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":355,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":361,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":498,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":54,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":431,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":217,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":255,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":242,"org.easymock.tests2.CaptureTest.testCaptureNone":419,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":160,"org.easymock.tests.UsageUnorderedTest.message":161,"org.easymock.tests.UsageVerifyTest.twoReturns":27,"org.easymock.tests.UsageVarargTest.varargByteAccepted":171,"org.easymock.tests2.ThreadingTest.testThreadSafe":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":448,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":225,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":486,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":182,"org.easymock.tests2.CaptureTest.testCapture_2617107":413,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":42,"org.easymock.tests2.UsageConstraintsTest.any":334,"org.easymock.tests2.StubTest.stub":425,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":145,"org.easymock.tests.UsageExpectAndThrowTest.longType":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":67,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":153,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":251,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":322,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":303,"org.easymock.tests.LimitationsTest.mockNativeMethod":261,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":301,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":94,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":324,"org.easymock.tests2.NameTest.nameForMocksControl":410,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":21,"org.easymock.tests2.MockedExceptionTest.testMockedException":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":436,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":64,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":393,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":47,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":456,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":384,"org.easymock.tests.MockingTest.testNicePartialClassMocking":108,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":461,"org.easymock.tests2.CaptureTest.testCaptureLast":418,"org.easymock.tests2.CompareToTest.testCompareEqual":13,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":92,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":211,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":332,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":368,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":343,"org.easymock.tests.MockingTest.testTwoMocks":106,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":51,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":401,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":347,"org.easymock.samples.ExampleTest.removeNonExistingDocument":496,"org.easymock.tests.UsageStrictMockTest.differentMethods":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":97,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":249,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":86,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":151,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":428,"org.easymock.tests2.MockBuilderTest.testCreateMockString":390,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":438,"org.easymock.tests.UsageExpectAndThrowTest.floatType":45,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":405,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":314,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":447,"org.easymock.samples.ExampleTest.voteAgainstRemoval":493,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":137,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":469,"org.easymock.tests.LimitationsTest.privateConstructor":260,"org.easymock.tests2.UsageConstraintsTest.testNotNull":346,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":40,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":72,"org.easymock.tests2.UsageTest.defaultResetToNice":83,"org.easymock.samples.ExampleTest.voteAgainstRemovals":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":138,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":297,"org.easymock.tests.UsageVarargTest.differentLength":168,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":93,"org.easymock.tests2.CallbackTest.callback":6,"org.easymock.tests2.UsageConstraintsTest.equals":327,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":465,"org.easymock.tests.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":41,"org.easymock.tests.UsageCallCountTest.tooFewCalls":223,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":244,"org.easymock.tests.UsageThrowableTest.throwCheckedException":37,"org.easymock.tests.MockingTest.testStrictClassMocking":104,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":367,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":96,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":363,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":366,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":9,"org.easymock.tests.ObjectMethodsTest.testHashCode":180,"org.easymock.tests2.CompareToTest.testGreateOrEqual":14,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":430,"org.easymock.tests2.NameTest.nameForNiceMock":409,"org.easymock.tests2.DependencyTest.testInterfaceMocking":475,"org.easymock.samples.ExampleTest.addDocument":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.DelegateToTest.testStubDelegate":308,"org.easymock.tests2.AnswerTest.stubAnswer":81,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":186,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":385,"org.easymock.tests.UsageVarargTest.varargLongAccepted":170,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":135,"org.easymock.tests.UsageExpectAndReturnTest.floatType":284,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":312,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":489,"org.easymock.tests.UsageThrowableTest.noUpperLimit":202,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":304,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":340,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":325,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":477,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":416,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":283,"org.easymock.tests2.UsageConstraintsTest.testSame":330,"org.easymock.samples.SupportTest.addDocument":484,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":365,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":439,"org.easymock.tests.GenericTest.testPackageScope":229,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":131,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":90,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":111,"org.easymock.tests2.NameTest.nameForMock":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":294,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":389,"org.easymock.tests2.UsageStrictMockTest.differentMethods":323,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":466,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":286,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":57,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":178,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":121,"org.easymock.tests2.MockedExceptionTest.testRealException":75,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":240,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":4,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":321,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":204,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":256,"org.easymock.tests2.NameTest.nameForStrictMock":408,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":379,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":392,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":481,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":152,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":341,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":376,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests2.UsageConstraintsTest.lessThan":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":134,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":443,"org.easymock.tests2.CaptureTest.testCaptureRightOne":421,"org.easymock.tests2.UsageConstraintsTest.testOr":331,"org.easymock.tests.UsageRangeTest.combination":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":457,"org.easymock.tests.UsageTest.wrongArguments":215,"org.easymock.tests2.MockBuilderTest.testWithConstructor":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":440,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":295,"org.easymock.tests.UsageVarargTest.varargShortAccepted":169,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":154,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":226,"org.easymock.tests2.UsageConstraintsTest.cmpTo":335,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":8,"org.easymock.tests2.CompareToTest.testLessThan":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":130,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":77,"org.easymock.tests2.CaptureTest.testCaptureFromStub":422,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":246,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":377,"org.easymock.tests.UsageTest.unexpectedCallWithArray":214,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":224,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":296,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":187,"org.easymock.tests2.UsageConstraintsTest.constraints":17,"org.easymock.samples.ExampleTest.addAndChangeDocument":497,"org.easymock.tests2.ConstraintsToStringTest.notToString":31,"org.easymock.tests.UsageStrictMockTest.testVerify":190,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":101,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":123,"org.easymock.tests2.CompareToTest.testGreateThan":12,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":193,"org.easymock.tests.LimitationsTest.abstractClass":259,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":194,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":280,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":163,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":354}}]
