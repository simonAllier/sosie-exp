[{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[0,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[30,31,32,33,34,35,36,37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[38,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[43,44,45,46,46,47,47,48,49,50,51,52,53,54,55,56,57,58,59,60,0,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,38,88,89,90,91,92,93,94,95,96,97],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:228","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:142","sourceCode":"final java.lang.Long java.lang.Long = org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializableUID(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,99,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[43,44,45,100,101,102,103,104,30,105,106,107,108,109,110,111,112,113,114,48,49,51,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,52,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,54,55,56,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,57,167,168,169,170,171,172,173,174,175,176,177,178,179,31,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,60,41,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,0,99,61,239,240,241,242,243,244,62,66,67,68,69,70,73,245,246,247,248,249,250,251,252,253,74,32,33,78,79,254,80,81,82,83,84,85,87,88,89,90,91,255,92,93,256,257,258,94,95,96,97],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[104,30,105,106,107,108,260,110,111,112,113,114,48,49,51,261,262,263,264,265,266,267,115,268,269,116,117,52,270,271,272,273,274,134,275,276,277,141,142,54,55,56,278,279,149,150,280,151,281,282,283,284,152,285,286,287,288,153,289,290,291,292,293,294,295,296,297,298,154,155,156,157,158,159,160,161,162,163,164,165,57,299,300,301,302,303,304,305,306,307,175,176,308,177,309,310,311,312,178,313,314,315,316,179,317,318,319,320,321,322,182,184,185,186,187,188,323,324,191,192,209,210,60,325,326,327,328,41,329,330,331,332,211,212,213,214,333,215,334,335,216,336,337,217,218,219,221,338,339,340,341,342,224,226,227,228,229,230,231,232,233,234,235,236,237,0,99,61,239,343,344,241,242,243,244,62,66,67,246,345,248,249,250,346,74,32,33,347,34,35,36,78,254,80,81,82,84,85,87,89,90,92,93,348,349,37,350,40,351,352,256,353,354,258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[43,44,45,46,46,47,47,48,49,50,51,52,53,54,55,56,57,60,0,61,62,64,66,67,68,69,70,71,73,74,78,79,80,81,82,83,84,85,86,87,38,88,89,90,91,92,93,94,95,96,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":41,"org.easymock.tests2.UsageTest.argumentsOrdered":252,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":264,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":249,"org.easymock.tests2.StubTest.stubWithReturnValue":349,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":284,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":221,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":100,"org.easymock.tests2.SerializationTest.testAllMockedMethod":61,"org.easymock.tests2.DelegateToTest.testReturnException":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":262,"org.easymock.tests.MockingTest.testPartialClassMocking":54,"org.easymock.samples.SupportTest.voteForRemovals":103,"org.easymock.tests.MockClassControlTest.testToString":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":14,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":306,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":95,"org.easymock.tests.UsageExpectAndThrowTest.object":178,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":238,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":218,"org.easymock.tests2.DelegateToTest.testWrongClass":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":4,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":321,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":322,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":212,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":303,"org.easymock.tests2.UsageTest.wrongArguments":247,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":29,"org.easymock.samples.ConstructorCalledMockTest.testTax":46,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":186,"org.easymock.samples.ExampleTest.answerVsDelegate":30,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":203,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":88,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":59,"org.easymock.tests2.UsageConstraintsTest.testNull":330,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":313,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":80,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":205,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":68,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":172,"org.easymock.tests2.CaptureTest.testPrimitive":229,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":305,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":320,"org.easymock.tests.UsageTest.moreThanOneArgument":276,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":131,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":137,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":254,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":272,"org.easymock.tests2.CaptureTest.testCaptureNone":233,"org.easymock.tests.UsageVerifyTest.twoReturns":155,"org.easymock.tests.UsageVarargTest.varargByteAccepted":163,"org.easymock.tests2.ThreadingTest.testThreadSafe":341,"org.easymock.tests.UsageTest.argumentsOrdered":138,"org.easymock.tests.UsageVarargTest.varargIntAccepted":158,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":117,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":293,"org.easymock.tests2.CaptureTest.testCapture_2617107":228,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":8,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":173,"org.easymock.tests2.UsageConstraintsTest.any":213,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":67,"org.easymock.tests2.StubTest.stub":348,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":263,"org.easymock.tests.UsageExpectAndThrowTest.longType":176,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":127,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":257,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":222,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":225,"org.easymock.tests.LimitationsTest.mockNativeMethod":51,"org.easymock.tests.ReplayStateInvalidUsageTest.times":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":292,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":50,"org.easymock.tests2.AnswerTest.answer":32,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":244,"org.easymock.tests2.CaptureTest.testAnd":226,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":22,"org.easymock.tests2.UsageTest.strictResetToDefault":246,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":85,"org.easymock.tests2.NameTest.nameForMocksControl":352,"org.easymock.tests2.MockedExceptionTest.testMockedException":210,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":200,"org.easymock.tests2.DelegateToTest.testDelegate":344,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":308,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":56,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":78,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":69,"org.easymock.tests.MockingTest.testNicePartialClassMocking":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":179,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":82,"org.easymock.tests2.CaptureTest.testCaptureLast":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":265,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":174,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":211,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":93,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":114,"org.easymock.tests.MockingTest.testTwoMocks":53,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":315,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":311,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":242,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":251,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":339,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":123,"org.easymock.tests.UsageThrowableTest.throwError":140,"org.easymock.samples.ExampleTest.removeNonExistingDocument":109,"org.easymock.tests.UsageStrictMockTest.differentMethods":324,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":25,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":125,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":13,"org.easymock.tests2.MockBuilderTest.testCreateMockString":73,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":20,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":274,"org.easymock.tests.UsageExpectAndThrowTest.floatType":175,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":216,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":33,"org.easymock.tests.UsageVerifyTest.twoThrows":154,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":96,"org.easymock.samples.PartialClassMockTest.testGetArea":43,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":124,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":294,"org.easymock.samples.ExampleTest.voteAgainstRemoval":106,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":98,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":307,"org.easymock.tests2.UsageTest.niceToStrict":248,"org.easymock.tests2.UsageConstraintsTest.testNotNull":338,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":209,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":147,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":66,"org.easymock.tests2.UsageTest.defaultResetToNice":250,"org.easymock.tests2.MockBuilderTest.testCreateMock":70,"org.easymock.samples.ExampleTest.voteAgainstRemovals":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":21,"org.easymock.tests2.CallbackTest.callback":37,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":26,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":312,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":201,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":326,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":184,"org.easymock.tests.UsageCallCountTest.tooFewCalls":269,"org.easymock.tests.UsageOverloadedMethodTest.overloading":134,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":334,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":91,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":133,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":215,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":234,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":187,"org.easymock.tests.UsageThrowableTest.throwCheckedException":144,"org.easymock.tests2.EasyMockSupportClassTest.testAll":94,"org.easymock.tests.MockClassControlTest.testEquals":171,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":318,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":243,"org.easymock.tests2.CaptureTest.testCaptureAll":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":112,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":92,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":90,"org.easymock.tests2.UsageConstraintsTest.testMatches":335,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":130,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":255,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":273,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":121,"org.easymock.tests.ObjectMethodsTest.testHashCode":194,"org.easymock.samples.ExampleTest.voteForRemovals":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":7,"org.easymock.tests2.NameTest.nameForNiceMock":351,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":224,"org.easymock.tests.UsageVarargTest.allKinds":165,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":298,"org.easymock.tests2.DependencyTest.testInterfaceMocking":237,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":6,"org.easymock.samples.BasicClassMockTest.testPrintContent":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":113,"org.easymock.samples.ExampleTest.addDocument":107,"org.easymock.tests2.DelegateToTest.testStubDelegate":343,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":146,"org.easymock.tests2.AnswerTest.stubAnswer":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":266,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":16,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":323,"org.easymock.tests2.UsageConstraintsTest.greaterThan":336,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":9,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":38,"org.easymock.tests.UsageVarargTest.varargLongAccepted":162,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":191,"org.easymock.samples.ExampleTest.voteForRemoval":105,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":342,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":291,"org.easymock.tests.UsageExpectAndReturnTest.floatType":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":83,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":74,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":47,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":337,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":18,"org.easymock.tests.UsageThrowableTest.noUpperLimit":141,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":327,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":245,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":52,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":230,"org.easymock.tests2.SerializationTest.test":99,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":198,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":142,"org.easymock.tests2.UsageConstraintsTest.testSame":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":279,"org.easymock.samples.SupportTest.addDocument":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":261,"org.easymock.tests2.CaptureTest.testCaptureFirst":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":199,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":253,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":126,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":183,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":282,"org.easymock.tests.GenericTest.testPackageScope":48,"org.easymock.tests2.UsageTest.moreThanOneArgument":345,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":223,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":71,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":17,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":164,"org.easymock.tests2.NameTest.nameForMock":350,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":119,"org.easymock.tests.UsageExpectAndReturnTest.longType":150,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":286,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":72,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":220,"org.easymock.tests2.UsageStrictMockTest.differentMethods":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":270,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":280,"org.easymock.tests.UsageCallCountTest.tooManyCalls":120,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":316,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":302,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":268,"org.easymock.tests2.MockedExceptionTest.testRealException":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":28,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":177,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":304,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":132,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":145,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":89,"org.easymock.tests2.UsageConstraintsTest.testContains":333,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":63,"org.easymock.tests2.NameTest.nameForStrictMock":40,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":115,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":60,"org.easymock.tests2.UsageConstraintsTest.testFind":329,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":275,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":35,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":81,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":36,"org.easymock.tests.UsageExpectAndReturnTest.object":152,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":217,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":84,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":27,"org.easymock.tests2.UsageConstraintsTest.lessThan":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":5,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":15,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":195,"org.easymock.tests.UsageTest.exactCallCountByLastCall":139,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":277,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":42,"org.easymock.tests2.CaptureTest.testCaptureRightOne":235,"org.easymock.tests2.UsageConstraintsTest.testOr":332,"org.easymock.tests.UsageRangeTest.combination":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":289,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":79,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":156,"org.easymock.tests.UsageTest.wrongArguments":136,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":180,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":12,"org.easymock.tests.MockClassControlTest.testHashCode":170,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":57,"org.easymock.tests2.EasyMockSupportTest.testVerify":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":31,"org.easymock.tests.UsageVarargTest.varargShortAccepted":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":241,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":118,"org.easymock.tests2.UsageConstraintsTest.cmpTo":214,"org.easymock.tests.UsageVarargTest.varargCharAccepted":159,"org.easymock.tests2.CaptureTest.testCaptureMultiple":259,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":256,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":207,"org.easymock.tests.DefaultClassInstantiatorTest.object":148,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":122,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":65,"org.easymock.tests.UsageTest.unexpectedCallWithArray":135,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":193,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":310,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":143,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":189,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":23,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":288,"org.easymock.tests2.UsageConstraintsTest.constraints":328,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":86,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":169,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":309,"org.easymock.samples.ExampleTest.addAndChangeDocument":260,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":290,"org.easymock.tests.UsageStrictMockTest.testVerify":192,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":97,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":168,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":111,"org.easymock.tests2.UsageTest.resumeIfFailure":346,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":295,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":76,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":281,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":296,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":202,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":157}}]
