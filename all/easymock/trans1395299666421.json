[{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[4,5,6,7,8,9],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[12],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[97,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"result","java.lang.Integer.MAX_VALUE":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[99,100,101,102,103,104,18,105,106,107,108,109,110,111,112,113,114,115],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:205","failures":[116,40,43,44,47,48,51,117,52,53,118,54,55,56,57,119,58,120,59,60,61,121,62,78,88,94,122,123,124,125,126,127,128,129,130,131,132],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[134,135,136],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[34,106],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"position":"org.easymock.internal.LastControl:94","failures":[137,10,138,139,140,141,13,14,142,143,144,101,15,16,145,2,146,147,148,149],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[122,150,151,152],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[153,154,155,156,157,116,42,158,159,160,161,162,51,56,57,58,61,62,163,164,165,166,167,168,169,170,171,13,172,173,103,104,174,175,176,177,178,179,180,181,182,183,184,185,186,8,187,188,189,190,191,9,192,113,114],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[14,15,146],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[193,194,195,196,157,197,198,199,200,201,202,39,43,44,45,203,204,158,205,159,160,206,161,162,207,208,209,210,211,212,213,214,215,50,216,217,137,10,138,139,218,219,220,221,222,140,223,52,55,57,58,61,163,164,224,165,166,167,168,169,170,171,14,143,15,16,145,2,225,133,226,146,147,227,228,229,148,63,64,65,66,230,67,68,172,231,232,173,103,104,233,75,78,88,94,122,150,151,123,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,174,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,179,180,270,108,271,272,273,274,275,276,109,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,187,188,189,190,292,293,3,294,191,295,9,296,192,113,114,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,132,315,316,317,318],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[319],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[320,321],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:228","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1582","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[126],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[141,322,323,324,142,143,144,101,325,326,327,97,102,148,149,328,232,17,21,22,31,35,248,249,250,251,252,269,329,330,331,332,333,334,284,285,296,299,300,303,130,130,131,131],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[41,224],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[99,100,324,13,142,144,101,325,327,102,149,104,18,107,109,111,112,114,115],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[18,105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[211,164,99,100,171,232,107,180,186,111,112,190,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:60","failures":[117,118,119,335,121,336,337,65,68,338,124],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":14,"org.easymock.tests2.UsageTest.argumentsOrdered":170,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":27,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":167,"org.easymock.tests2.StubTest.stubWithReturnValue":322,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":119,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":318,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":229,"org.easymock.tests2.SerializationTest.testAllMockedMethod":151,"org.easymock.tests2.DelegateToTest.testReturnException":235,"org.easymock.tests.MockingTest.testPartialClassMocking":292,"org.easymock.samples.SupportTest.voteForRemovals":317,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":82,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":152,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":78,"org.easymock.tests.UsageExpectAndThrowTest.object":256,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":217,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":147,"org.easymock.tests2.DelegateToTest.testWrongClass":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":284,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":285,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":299,"org.easymock.tests2.UsageTest.wrongArguments":165,"org.easymock.tests.UsageStrictMockTest.range":113,"org.easymock.samples.ConstructorCalledMockTest.testTax":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":177,"org.easymock.samples.ExampleTest.answerVsDelegate":307,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":63,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":129,"org.easymock.tests2.UsageConstraintsTest.testNull":143,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":200,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":57,"org.easymock.tests2.CaptureTest.testPrimitive":139,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":72,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":188,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":331,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":6,"org.easymock.tests2.CaptureTest.testCaptureNone":221,"org.easymock.tests.UsageUnorderedTest.message":174,"org.easymock.tests.UsageVerifyTest.twoReturns":180,"org.easymock.tests.UsageVarargTest.varargByteAccepted":266,"org.easymock.tests.UsageTest.argumentsOrdered":189,"org.easymock.tests.UsageVarargTest.varargIntAccepted":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":89,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":289,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":32,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":248,"org.easymock.tests2.CaptureTest.testCapture_2617107":138,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":36,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":56,"org.easymock.tests2.UsageConstraintsTest.any":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":19,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":252,"org.easymock.tests.UsageExpectAndThrowTest.longType":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":37,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":173,"org.easymock.tests2.SerializationTest.testClass":122,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":157,"org.easymock.tests.LimitationsTest.mockNativeMethod":245,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests2.DependencyTest.testClassMocking":320,"org.easymock.tests2.AnswerTest.answer":211,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":127,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":33,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":156,"org.easymock.tests2.CaptureTest.testAnd":137,"org.easymock.tests2.UsageTest.strictResetToDefault":224,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":118,"org.easymock.tests2.NameTest.nameForMocksControl":196,"org.easymock.tests2.MockedExceptionTest.testMockedException":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":159,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":112,"org.easymock.tests2.DelegateToTest.testDelegate":237,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":3,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":197,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":58,"org.easymock.tests.MockingTest.testNicePartialClassMocking":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":257,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":202,"org.easymock.tests2.CompareToTest.testNotComparable":12,"org.easymock.tests2.CaptureTest.testCaptureLast":220,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":283,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":239,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":68,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":15,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":185,"org.easymock.tests2.DependencyTest.testClassMockingSupport":321,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":238,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":154,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":169,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":149,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":1,"org.easymock.tests.UsageThrowableTest.throwError":270,"org.easymock.tests.UsageStrictMockTest.differentMethods":114,"org.easymock.tests2.MockBuilderTest.testCreateMockString":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":333,"org.easymock.tests.UsageExpectAndThrowTest.floatType":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":79,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":74,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":125,"org.easymock.tests.UsageVerifyTest.twoThrows":179,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":88,"org.easymock.samples.PartialClassMockTest.testGetArea":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":249,"org.easymock.samples.ExampleTest.voteAgainstRemoval":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":28,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":83,"org.easymock.tests2.UsageTest.niceToStrict":166,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":337,"org.easymock.tests2.ThreadingTest.testChangeDefault":0,"org.easymock.tests2.UsageConstraintsTest.testNotNull":148,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":276,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":17,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":134,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":55,"org.easymock.tests2.MockBuilderTest.testCreateMock":60,"org.easymock.tests2.UsageTest.defaultResetToNice":168,"org.easymock.samples.ExampleTest.voteAgainstRemovals":306,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":29,"org.easymock.tests.UsageVarargTest.differentLength":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":91,"org.easymock.tests2.CallbackTest.callback":234,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":40,"org.easymock.tests.UsageTest.openCallCountByLastCall":111,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":160,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":323,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":175,"org.easymock.tests.UsageCallCountTest.tooFewCalls":287,"org.easymock.tests.UsageOverloadedMethodTest.overloading":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":326,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":280,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":304,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":66,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":133,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":178,"org.easymock.tests.UsageThrowableTest.throwCheckedException":273,"org.easymock.tests2.EasyMockSupportClassTest.testAll":75,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":247,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":7,"org.easymock.tests2.CaptureTest.testCaptureAll":10,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":183,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":67,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":65,"org.easymock.tests2.UsageConstraintsTest.testMatches":327,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":230,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":332,"org.easymock.samples.ExampleTest.voteForRemovals":311,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":215,"org.easymock.tests2.NameTest.nameForNiceMock":195,"org.easymock.tests.UsageVarargTest.allKinds":268,"org.easymock.tests2.DependencyTest.testInterfaceMocking":216,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":107,"org.easymock.samples.BasicClassMockTest.testPrintContent":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":184,"org.easymock.samples.ExampleTest.addDocument":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":95,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":275,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":172,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":296,"org.easymock.tests2.UsageConstraintsTest.greaterThan":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":76,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":120,"org.easymock.tests.UsageVarargTest.varargLongAccepted":265,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":45,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.samples.ExampleTest.voteForRemoval":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":26,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":46,"org.easymock.tests.UsageExpectAndReturnTest.floatType":240,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":123,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":131,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":281,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":102,"org.easymock.tests.UsageThrowableTest.noUpperLimit":108,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":324,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":294,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":69,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":218,"org.easymock.tests2.SerializationTest.test":150,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":24,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":158,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":271,"org.easymock.tests2.UsageConstraintsTest.testSame":144,"org.easymock.samples.SupportTest.addDocument":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":73,"org.easymock.tests2.CaptureTest.testCaptureFirst":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":23,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":205,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":80,"org.easymock.tests.GenericTest.testPackageScope":246,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":214,"org.easymock.tests2.CaptureTest.testCapture2_2446744":11,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":21,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":290,"org.easymock.tests2.NameTest.nameForMock":193,"org.easymock.tests.UsageExpectAndReturnTest.longType":241,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":181,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":334,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":228,"org.easymock.tests2.UsageStrictMockTest.differentMethods":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":329,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":41,"org.easymock.tests.UsageCallCountTest.tooManyCalls":291,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":255,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":300,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":274,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":64,"org.easymock.tests2.UsageConstraintsTest.testContains":325,"org.easymock.tests2.NameTest.nameForStrictMock":194,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":142,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":115,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":54,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":136,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":201,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":191,"org.easymock.tests.UsageExpectAndReturnTest.object":243,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":71,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":146,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":39,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":52,"org.easymock.tests2.UsageStrictMockTest.range":103,"org.easymock.tests2.UsageConstraintsTest.lessThan":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":162,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":262,"org.easymock.tests.UsageTest.exactCallCountByLastCall":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":22,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":84,"org.easymock.tests2.CaptureTest.testCaptureRightOne":140,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":105,"org.easymock.tests2.UsageConstraintsTest.testOr":101,"org.easymock.tests.UsageRangeTest.combination":109,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":124,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":198,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":279,"org.easymock.tests.UsageTest.wrongArguments":187,"org.easymock.tests2.MockBuilderTest.testWithConstructor":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":242,"org.easymock.tests2.EasyMockSupportTest.testVerify":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":85,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":106,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":277,"org.easymock.tests.UsageVarargTest.varargShortAccepted":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":153,"org.easymock.tests2.UsageConstraintsTest.cmpTo":225,"org.easymock.tests.UsageVarargTest.varargCharAccepted":261,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":38,"org.easymock.tests2.UsageTest.openCallCountByLastCall":99,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":100,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":209,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":135,"org.easymock.tests2.CaptureTest.testCaptureFromStub":141,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":53,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":86,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":272,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":288,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":335,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":192,"org.easymock.tests2.UsageConstraintsTest.constraints":13,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":43,"org.easymock.samples.ExampleTest.addAndChangeDocument":312,"org.easymock.tests.UsageStrictMockTest.testVerify":298,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":315,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":94,"org.easymock.tests2.CompareToTest.testGreateThan":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":182,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":219,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":250,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":128,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":251,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":206,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":70}}]
