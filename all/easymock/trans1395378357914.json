[{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[28,29,30,31,32,33,0,34,1,2,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,3,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,10,161,11,12,162,163,164,165,166,167,168,169,170,171,172,173,174,15,175,176,177,178,179,20,21,22,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,23,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,24,243,244,245,246,247,248,249,26,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[53,54,55,56,57,58,59,60,272,61,70,71,74,75,83,84,85,86,93,94],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[273,274,275,275,276,276],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[277,65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[135],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[278,83,85,86,87,88,89,90,92,279,93,94,96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[1,2,160,11,12,243],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"targetField"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[53,59,83,85,93],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,51,52,55,56,57,58,63,65,66,68,69,70,74,75,76,94,127,275,275,276,276,145,146,147,148,149,280,281,282,283,284,10,285,286,175,176,179,180,181,182,183,184,250,251,260],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:210","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[287],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,0,34,1,2,35,36,37,38,288,39,40,41,42,43,289,290,291,292,44,45,46,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,293,73,74,75,76,77,294,78,79,295,296,297,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,298,299,300,301,302,303,304,305,306,307,308,309,310,311,97,98,99,100,101,102,103,104,105,106,107,108,109,110,3,111,112,113,114,115,116,117,118,119,120,121,312,122,123,313,314,124,125,126,127,128,129,130,131,132,133,315,134,135,316,136,317,137,318,319,320,275,276,321,322,323,138,139,140,141,142,143,144,324,325,145,146,147,148,149,150,151,152,153,154,155,326,156,157,158,159,160,10,161,11,12,162,164,165,166,167,168,169,171,172,174,327,328,329,16,175,176,177,178,179,20,21,22,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,330,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,23,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,24,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,267,268,269,270,331,332,333,334,334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[335,336,337,338,339,340],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[341,342,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[28,29,30,31,32,33,0,34,1,2,35,36,37,38,288,39,40,41,42,43,289,290,291,292,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,293,73,74,75,76,77,294,78,79,295,296,297,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,298,299,300,301,302,303,304,305,306,307,308,309,310,311,97,98,99,100,101,102,103,104,105,106,107,108,109,110,3,111,112,113,114,115,116,117,118,119,120,121,312,122,123,313,314,124,125,126,127,128,129,130,131,132,133,315,134,135,316,136,317,137,318,319,320,275,275,276,276,321,322,323,138,139,140,141,142,143,344,144,324,325,145,146,147,148,149,150,151,152,153,154,155,326,156,157,158,159,160,10,161,11,12,162,163,164,165,166,167,168,169,170,171,172,345,286,346,347,348,173,349,350,351,352,353,354,355,174,327,13,328,329,15,16,175,176,177,178,179,20,21,22,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,330,197,198,199,200,201,356,357,358,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,23,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,24,243,244,245,246,247,248,249,26,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,331,332,333,359,271,360,361,362,363,364,365],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":54,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":242,"org.easymock.tests2.UsageTest.argumentsOrdered":118,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":153,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":113,"org.easymock.tests2.StubTest.stubWithReturnValue":127,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":320,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":211,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":73,"org.easymock.tests2.SerializationTest.testAllMockedMethod":38,"org.easymock.tests2.DelegateToTest.testReturnException":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":151,"org.easymock.tests.MockingTest.testPartialClassMocking":262,"org.easymock.samples.SupportTest.voteForRemovals":322,"org.easymock.tests.MockClassControlTest.testToString":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":234,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":222,"org.easymock.tests.UsageExpectAndThrowTest.object":232,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":318,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":71,"org.easymock.tests2.DelegateToTest.testWrongClass":103,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":250,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":251,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":60,"org.easymock.tests2.UsageTest.wrongArguments":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":175,"org.easymock.samples.ConstructorCalledMockTest.testTax":275,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":166,"org.easymock.samples.ExampleTest.answerVsDelegate":139,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":312,"org.easymock.tests2.UsageConstraintsTest.testNull":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":233,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":131,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":365,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":308,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":295,"org.easymock.tests2.CaptureTest.testPrimitive":86,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":179,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":354,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":241,"org.easymock.tests.UsageTest.moreThanOneArgument":24,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":182,"org.easymock.tests2.CaptureTest.testCaptureNone":91,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":336,"org.easymock.tests.UsageUnorderedTest.message":23,"org.easymock.tests.UsageVerifyTest.twoReturns":22,"org.easymock.tests.UsageVarargTest.varargByteAccepted":199,"org.easymock.tests2.ThreadingTest.testThreadSafe":39,"org.easymock.tests.UsageTest.argumentsOrdered":248,"org.easymock.tests.UsageVarargTest.varargIntAccepted":194,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":270,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":324,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":9,"org.easymock.tests2.CaptureTest.testCapture_2617107":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":145,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":178,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":79,"org.easymock.tests2.UsageConstraintsTest.any":61,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":351,"org.easymock.tests2.StubTest.stub":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":149,"org.easymock.tests.UsageExpectAndThrowTest.longType":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":152,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":342,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":350,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":34,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":298,"org.easymock.tests2.SerializationTest.testClass":36,"org.easymock.tests.ReplayStateInvalidUsageTest.times":352,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests.LimitationsTest.mockNativeMethod":174,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":221,"org.easymock.tests2.AnswerTest.answer":28,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":108,"org.easymock.tests2.CaptureTest.testAnd":83,"org.easymock.tests2.UsageTest.strictResetToDefault":110,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":135,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":337,"org.easymock.tests2.NameTest.nameForMocksControl":50,"org.easymock.tests2.MockedExceptionTest.testMockedException":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":303,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":171,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":246,"org.easymock.tests2.DelegateToTest.testDelegate":104,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":264,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":226,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":128,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":296,"org.easymock.tests.MockingTest.testNicePartialClassMocking":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":237,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":133,"org.easymock.tests2.CaptureTest.testCaptureLast":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":154,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":26,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":59,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":125,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":189,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":25,"org.easymock.tests2.CaptureTest.testCapture1_2446744":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":202,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":235,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":230,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":106,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":117,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":75,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":340,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":347,"org.easymock.tests.UsageThrowableTest.throwError":252,"org.easymock.samples.ExampleTest.removeNonExistingDocument":344,"org.easymock.tests.UsageStrictMockTest.differentMethods":12,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":173,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":339,"org.easymock.tests2.ConstraintsToStringTest.andToString":8,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":41,"org.easymock.tests2.MockBuilderTest.testCreateMockString":81,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":359,"org.easymock.tests.UsageExpectAndThrowTest.floatType":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":184,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":67,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":29,"org.easymock.tests.UsageVerifyTest.twoThrows":21,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":291,"org.easymock.samples.PartialClassMockTest.testGetArea":319,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":146,"org.easymock.samples.ExampleTest.voteAgainstRemoval":141,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":223,"org.easymock.tests2.UsageTest.niceToStrict":112,"org.easymock.tests2.UsageConstraintsTest.testNotNull":74,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":259,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":280,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":78,"org.easymock.tests2.MockBuilderTest.testCreateMock":297,"org.easymock.tests2.UsageTest.defaultResetToNice":116,"org.easymock.samples.ExampleTest.voteAgainstRemovals":138,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":217,"org.easymock.tests.UsageVarargTest.differentLength":330,"org.easymock.tests2.CallbackTest.callback":46,"org.easymock.tests2.UsageConstraintsTest.equals":287,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":274,"org.easymock.tests.UsageTest.openCallCountByLastCall":245,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":231,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":5,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":304,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":51,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":265,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":177,"org.easymock.tests.UsageCallCountTest.tooFewCalls":268,"org.easymock.tests.UsageOverloadedMethodTest.overloading":156,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":329,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":65,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":213,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":64,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":167,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":338,"org.easymock.tests.UsageThrowableTest.throwCheckedException":256,"org.easymock.tests.MockClassControlTest.testEquals":364,"org.easymock.tests2.EasyMockSupportClassTest.testAll":289,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":191,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":239,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":17,"org.easymock.tests2.CaptureTest.testCaptureAll":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":261,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":123,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":353,"org.easymock.tests2.UsageConstraintsTest.testMatches":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":314,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":31,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":286,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":183,"org.easymock.tests.ObjectMethodsTest.testHashCode":357,"org.easymock.tests2.CompareToTest.testGreateOrEqual":277,"org.easymock.samples.ExampleTest.voteForRemovals":143,"org.easymock.tests2.NameTest.nameForNiceMock":49,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":43,"org.easymock.tests.UsageVarargTest.allKinds":201,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":20,"org.easymock.tests2.DependencyTest.testInterfaceMocking":137,"org.easymock.samples.BasicClassMockTest.testPrintContent":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":188,"org.easymock.samples.ExampleTest.addDocument":142,"org.easymock.tests2.DelegateToTest.testStubDelegate":102,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":258,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":32,"org.easymock.tests2.AnswerTest.stubAnswer":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":155,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":10,"org.easymock.tests2.UsageConstraintsTest.greaterThan":68,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":170,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":317,"org.easymock.tests.UsageVarargTest.varargLongAccepted":198,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":162,"org.easymock.samples.ExampleTest.voteForRemoval":140,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":40,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":220,"org.easymock.tests.UsageExpectAndReturnTest.floatType":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":315,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":121,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":276,"org.easymock.tests2.ConstraintsToStringTest.orToString":4,"org.easymock.tests.UsageThrowableTest.noUpperLimit":253,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":69,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":14,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":52,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":109,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":168,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":88,"org.easymock.tests2.SerializationTest.test":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":301,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":254,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":203,"org.easymock.tests2.UsageConstraintsTest.testSame":57,"org.easymock.samples.SupportTest.addDocument":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":150,"org.easymock.tests2.CaptureTest.testCaptureFirst":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":302,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":120,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":349,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":16,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":209,"org.easymock.tests.GenericTest.testPackageScope":190,"org.easymock.tests2.CaptureTest.testCapture2_2446744":95,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":42,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":200,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":332,"org.easymock.tests2.NameTest.nameForMock":47,"org.easymock.tests.UsageExpectAndReturnTest.longType":205,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":185,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":214,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":293,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":238,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":180,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":206,"org.easymock.tests.UsageCallCountTest.tooManyCalls":333,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":236,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":172,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":267,"org.easymock.tests2.MockedExceptionTest.testRealException":100,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":18,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":227,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":355,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":176,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":122,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":266,"org.easymock.tests2.UsageConstraintsTest.testContains":63,"org.easymock.tests2.NameTest.nameForStrictMock":48,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":99,"org.easymock.tests2.UsageConstraintsTest.testFind":55,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":157,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":132,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":45,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":158,"org.easymock.tests.UsageExpectAndReturnTest.object":212,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":70,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":134,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":294,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":307,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":196,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":358,"org.easymock.tests.UsageTest.exactCallCountByLastCall":249,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":27,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":282,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":300,"org.easymock.tests2.CaptureTest.testCaptureRightOne":93,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":335,"org.easymock.tests2.UsageConstraintsTest.testOr":58,"org.easymock.tests.UsageRangeTest.combination":169,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":218,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":129,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":328,"org.easymock.tests.UsageTest.wrongArguments":244,"org.easymock.tests.MockClassControlTest.testHashCode":363,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":271,"org.easymock.tests2.EasyMockSupportTest.testVerify":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":215,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":341,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":327,"org.easymock.tests.UsageVarargTest.varargShortAccepted":197,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":105,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":82,"org.easymock.tests2.UsageConstraintsTest.cmpTo":62,"org.easymock.tests.UsageVarargTest.varargCharAccepted":195,"org.easymock.tests2.CaptureTest.testCaptureMultiple":278,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":33,"org.easymock.tests2.UsageTest.openCallCountByLastCall":114,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":115,"org.easymock.tests.DefaultClassInstantiatorTest.object":345,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":310,"org.easymock.tests2.CaptureTest.testCaptureFromStub":94,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":346,"org.easymock.tests.UsageTest.unexpectedCallWithArray":243,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":356,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":19,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":229,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":255,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":160,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":269,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":273,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":216,"org.easymock.tests2.CaptureTest.testCapture":279,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":362,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":316,"org.easymock.tests2.UsageConstraintsTest.constraints":53,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":161,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":228,"org.easymock.samples.ExampleTest.addAndChangeDocument":144,"org.easymock.tests2.ConstraintsToStringTest.notToString":6,"org.easymock.tests.CapturesMatcherTest.test":334,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":219,"org.easymock.tests.UsageStrictMockTest.testVerify":163,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":323,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":292,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":7,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":186,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":89,"org.easymock.tests2.UsageTest.resumeIfFailure":119,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":147,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":208,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":148,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":305,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":193}}]
