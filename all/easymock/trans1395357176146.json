[{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:36","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[32,33,34,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[55,56,57,58,59,60,38,61,62,63,64,65,66,67,39,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,40,83,84,85,86,41,42,87,88,43,44,89,45,46,90,91,92,93,94,95,96,97,98,99,100,101,102,103,47,104,105,106,48,107,108,49,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,50,138,139,51,140,141,142,52,53,54],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:382","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n    if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n        java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,55,56,172,173,174,175,176,177,57,58,178,59,179,60,38,61,62,63,180,64,65,66,67,181,39,68,69,70,71,72,73,182,183,184,185,186,187,188,189,190,191,11,192,12,13,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,74,75,76,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,77,79,80,82,40,83,84,86,41,42,87,43,227,228,14,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,44,245,89,45,46,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,91,92,93,94,273,95,96,274,275,276,277,278,279,280,97,98,281,99,100,101,102,282,103,47,104,105,106,48,107,108,49,283,284,285,286,287,288,289,290,291,292,293,109,110,111,112,113,114,115,116,117,118,119,120,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,121,325,326,20,21,327,22,23,328,329,24,25,26,330,331,332,333,334,335,122,123,124,125,126,336,127,337,338,128,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,27,28,381,382,383,384,385,386,387,388,389,390,391,392,393,32,394,395,396,397,398,399,400,401,402,403,404,129,405,406,130,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,29,131,132,133,134,135,136,137,33,34,426,427,428,429,430,431,35,432,433,434,435,436,437,36,438,439,440,441,442,37,30,31,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,50,138,139,51,140,480,481,482,483,484,485,486,487,488,489,490,141,142,491,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[239,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[135,492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[359,447,450,451],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,493,9,494,14,229,235,236,15,17,495,20,27,28,381,384,385],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[161,231,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[161],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:78","sourceCode":"final java.lang.reflect.Method[] java.lang.reflect.Method[] = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getAllDeclaredMethods(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[143,144,145,146,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,176,184,187,188,189,190,191,11,192,12,13,193,194,195,74,75,76,208,222,223,224,225,226,77,79,40,83,42,87,43,227,228,14,229,230,231,232,233,234,235,236,237,238,240,241,242,244,44,245,89,45,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,496,91,92,93,95,96,274,275,276,277,278,280,97,98,281,99,100,101,102,103,105,106,48,107,284,285,286,287,289,290,291,109,110,111,112,113,114,115,116,119,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,317,318,319,320,321,322,323,324,121,325,326,20,21,327,22,23,328,329,24,25,26,125,126,127,342,343,344,345,346,347,348,349,350,375,376,377,378,379,380,27,28,381,382,383,384,385,386,387,388,389,390,391,392,393,32,394,395,396,397,398,399,400,401,402,403,409,410,411,413,414,415,416,417,418,419,420,421,422,423,424,425,29,131,33,34,426,427,428,429,430,431,35,432,433,434,435,436,437,36,438,439,440,441,442,37,31,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,138,139,481,482,483,484,485,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[44,245,89],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[158],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[50],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[40,84,86,497,54],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[44,245,89,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[83,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[194,345,366,373],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[5,7,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[187,260,278,280,364],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[199,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[499],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[501],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[151,163,12,13,232,233,311,22,23,24,347,352,382,383,397,448,449,473],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[161,231,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[150],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":146,"org.easymock.tests2.UsageTest.argumentsOrdered":236,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":380,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":361,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":231,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":491,"org.easymock.tests2.DelegateToTest.testReturnException":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":320,"org.easymock.tests.MockingTest.testPartialClassMocking":125,"org.easymock.tests.MockClassControlTest.testToString":111,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":283,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":452,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":38,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":177,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":153,"org.easymock.tests2.UsageTest.wrongArguments":229,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":342,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":389,"org.easymock.samples.ExampleTest.answerVsDelegate":482,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":130,"org.easymock.tests2.UsageConstraintsTest.testNull":149,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":338,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":99,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":116,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":218,"org.easymock.tests2.CaptureTest.testPrimitive":249,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":346,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":471,"org.easymock.tests.UsageTest.moreThanOneArgument":27,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":393,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":447,"org.easymock.tests.UsageTest.argumentsOrdered":385,"org.easymock.tests.UsageVarargTest.varargIntAccepted":411,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":421,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":206,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":425,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":6,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":266,"org.easymock.tests.ReplayStateInvalidUsageTest.times":302,"org.easymock.tests2.DependencyTest.testClassMocking":174,"org.easymock.tests2.AnswerTest.answer":184,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":277,"org.easymock.tests2.CaptureTest.testAnd":246,"org.easymock.tests2.UsageTest.strictResetToDefault":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":105,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":349,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":451,"org.easymock.tests2.DelegateToTest.testDelegate":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":467,"org.easymock.tests.LimitationsTest.mockFinalMethod":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":379,"org.easymock.tests2.DependencyTest.testClassMockingSupport":175,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":30,"org.easymock.tests2.CaptureTest.testCapture1_2446744":250,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":282,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":465,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":275,"org.easymock.tests.UsageThrowableTest.throwError":472,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":296,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":406,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":183,"org.easymock.samples.PartialClassMockTest.testGetArea":54,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":297,"org.easymock.tests.MockingTest.testInterfaceMocking":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":422,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":64,"org.easymock.tests2.UsageTest.niceToStrict":230,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":293,"org.easymock.tests2.ThreadingTest.testChangeDefault":0,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":40,"org.easymock.tests2.MockBuilderTest.testCreateMock":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":70,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":269,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":461,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":3,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":214,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":335,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":395,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":387,"org.easymock.tests.UsageOverloadedMethodTest.overloading":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":72,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":159,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":434,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":309,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":158,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":255,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":412,"org.easymock.tests.MockClassControlTest.testEquals":115,"org.easymock.tests2.EasyMockSupportClassTest.testAll":59,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":139,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":469,"org.easymock.tests2.CaptureTest.testCaptureAll":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":377,"org.easymock.tests.MockNameTest.defaultName":306,"org.easymock.tests2.UsageConstraintsTest.testMatches":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":32,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":294,"org.easymock.samples.ExampleTest.voteForRemovals":486,"org.easymock.tests.UsageVarargTest.allKinds":420,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":24,"org.easymock.samples.BasicClassMockTest.testPrintContent":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":378,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":478,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":203,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":324,"org.easymock.tests2.UsageConstraintsTest.greaterThan":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":348,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":107,"org.easymock.samples.ExampleTest.voteForRemoval":483,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":137,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":108,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":223,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":102,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":121,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":227,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":211,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":319,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":239,"org.easymock.tests2.CaptureTest.testCaptureFirst":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":212,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":431,"org.easymock.tests2.UsageTest.moreThanOneArgument":14,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":225,"org.easymock.tests2.CaptureTest.testCapture2_2446744":258,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":369,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":419,"org.easymock.tests.GenericTest.testBridgedEquals":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":402,"org.easymock.tests.UsageExpectAndReturnTest.longType":427,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":375,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":497,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":470,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":404,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":167,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":468,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":445,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":391,"org.easymock.tests.UsageCallCountTest.tooManyCalls":403,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":16,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":71,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":35,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":271,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":457,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":477,"org.easymock.tests.MockingTest.testNiceClassMocking":128,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":92,"org.easymock.tests.MockingTest.testClassMocking":123,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":396,"org.easymock.tests2.UsageConstraintsTest.testContains":157,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":76,"org.easymock.tests2.UsageConstraintsTest.testFind":148,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":311,"org.easymock.tests.MockTypeTest.fromEasyMockClass":405,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":280,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":325,"org.easymock.tests.UsageExpectAndReturnTest.object":433,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":217,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":414,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":291,"org.easymock.tests.UsageTest.exactCallCountByLastCall":386,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":448,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":339,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":495,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":438,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":409,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":314,"org.easymock.tests.MockClassControlTest.testHashCode":114,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":197,"org.easymock.tests2.EasyMockSupportTest.testVerify":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":66,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":5,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":449,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":312,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":274,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":496,"org.easymock.tests.UsageVarargTest.varargCharAccepted":413,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":374,"org.easymock.tests2.UsageTest.openCallCountByLastCall":232,"org.easymock.tests.DefaultClassInstantiatorTest.object":131,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":220,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":333,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":289,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":19,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":475,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":264,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":196,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":113,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":106,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":458,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":439,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":444,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":112,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":73,"org.easymock.tests2.UsageTest.resumeIfFailure":237,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":322,"org.easymock.tests2.StubTest.stubWithReturnValue":195,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":85,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":432,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":168,"org.easymock.tests2.SerializationTest.testAllMockedMethod":89,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":367,"org.easymock.samples.SupportTest.voteForRemovals":490,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":9,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":464,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":498,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":373,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":185,"org.easymock.tests.UsageExpectAndThrowTest.object":462,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":341,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":165,"org.easymock.tests2.DelegateToTest.testWrongClass":242,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":442,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":37,"org.easymock.tests.UsageStrictMockTest.range":22,"org.easymock.samples.ConstructorCalledMockTest.testTax":52,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":172,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":216,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":463,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":84,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":57,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":388,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":15,"org.easymock.tests2.CaptureTest.testCaptureNone":254,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":332,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests.UsageVerifyTest.twoReturns":26,"org.easymock.tests.UsageVarargTest.varargByteAccepted":418,"org.easymock.tests2.ThreadingTest.testThreadSafe":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":68,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":400,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":141,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":292,"org.easymock.tests2.CaptureTest.testCapture_2617107":248,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":494,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":443,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":371,"org.easymock.tests2.UsageConstraintsTest.any":155,"org.easymock.tests2.StubTest.stub":194,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":446,"org.easymock.tests.UsageExpectAndThrowTest.longType":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":372,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":135,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":300,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":192,"org.easymock.tests2.SerializationTest.testClass":44,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":201,"org.easymock.tests.LimitationsTest.mockNativeMethod":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":441,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":51,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":263,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":193,"org.easymock.tests2.NameTest.nameForMocksControl":287,"org.easymock.tests2.MockedExceptionTest.testMockedException":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":60,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":383,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":456,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":127,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":279,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":97,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":86,"org.easymock.tests.MockingTest.testNicePartialClassMocking":126,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":101,"org.easymock.tests2.CaptureTest.testCaptureLast":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":261,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":31,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":96,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":166,"org.easymock.tests.MockingTest.testTwoMocks":124,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":33,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":460,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":235,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":170,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":1,"org.easymock.samples.ExampleTest.removeNonExistingDocument":487,"org.easymock.tests.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":268,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":298,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":198,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":133,"org.easymock.tests2.ConstraintsToStringTest.andToString":8,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":224,"org.easymock.tests2.MockBuilderTest.testCreateMockString":43,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":109,"org.easymock.tests.UsageExpectAndThrowTest.floatType":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":61,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":178,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":187,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":90,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":39,"org.easymock.samples.ExampleTest.voteAgainstRemoval":484,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":362,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":48,"org.easymock.tests.LimitationsTest.privateConstructor":118,"org.easymock.tests2.UsageConstraintsTest.testNotNull":169,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":479,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":74,"org.easymock.tests2.UsageTest.defaultResetToNice":234,"org.easymock.samples.ExampleTest.voteAgainstRemovals":481,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":363,"org.easymock.tests.UsageVarargTest.differentLength":415,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":262,"org.easymock.tests2.CallbackTest.callback":260,"org.easymock.tests2.UsageConstraintsTest.equals":147,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":47,"org.easymock.tests.UsageTest.openCallCountByLastCall":382,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":501,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":344,"org.easymock.tests.UsageCallCountTest.tooFewCalls":398,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":94,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":390,"org.easymock.tests.UsageThrowableTest.throwCheckedException":476,"org.easymock.tests.MockingTest.testStrictClassMocking":122,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":17,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":95,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":308,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":267,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":303,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":273,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":189,"org.easymock.tests2.CompareToTest.testGreateOrEqual":499,"org.easymock.tests.ObjectMethodsTest.testHashCode":290,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":226,"org.easymock.tests2.NameTest.nameForNiceMock":286,"org.easymock.tests2.DependencyTest.testInterfaceMocking":176,"org.easymock.samples.ExampleTest.addDocument":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":182,"org.easymock.tests2.DelegateToTest.testStubDelegate":241,"org.easymock.tests2.AnswerTest.stubAnswer":188,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests.UsageVarargTest.varargLongAccepted":417,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":440,"org.easymock.tests.UsageExpectAndReturnTest.floatType":426,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":45,"org.easymock.tests2.ConstraintsToStringTest.orToString":2,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":53,"org.easymock.tests.UsageThrowableTest.noUpperLimit":473,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":205,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":144,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":55,"org.easymock.tests2.SerializationTest.test":245,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":251,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":492,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":132,"org.easymock.tests2.UsageConstraintsTest.testSame":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":34,"org.easymock.samples.SupportTest.addDocument":489,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":62,"org.easymock.tests.GenericTest.testPackageScope":138,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":204,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":337,"org.easymock.tests2.NameTest.nameForMock":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":435,"org.easymock.tests2.UsageStrictMockTest.differentMethods":13,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":104,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":428,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":466,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":350,"org.easymock.tests2.MockedExceptionTest.testRealException":208,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":408,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":18,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":364,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":343,"org.easymock.tests2.NameTest.nameForStrictMock":285,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":82,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":278,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":100,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":56,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":164,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":134,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":79,"org.easymock.tests2.UsageStrictMockTest.range":12,"org.easymock.tests2.UsageConstraintsTest.lessThan":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":200,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":65,"org.easymock.tests2.CaptureTest.testCaptureRightOne":256,"org.easymock.tests2.UsageConstraintsTest.testOr":151,"org.easymock.tests.UsageRangeTest.combination":347,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":98,"org.easymock.tests.UsageTest.wrongArguments":381,"org.easymock.tests2.MockBuilderTest.testWithConstructor":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":63,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":429,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":352,"org.easymock.tests.UsageVarargTest.varargShortAccepted":416,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":136,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":401,"org.easymock.tests2.UsageConstraintsTest.cmpTo":156,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":354,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":233,"org.easymock.tests2.CaptureTest.testCaptureFromStub":257,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":295,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":80,"org.easymock.tests.UsageTest.unexpectedCallWithArray":28,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":399,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":437,"org.easymock.tests2.UsageConstraintsTest.constraints":145,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":327,"org.easymock.samples.ExampleTest.addAndChangeDocument":488,"org.easymock.tests2.ConstraintsToStringTest.notToString":4,"org.easymock.tests.UsageStrictMockTest.testVerify":329,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":480,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":326,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":376,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":430,"org.easymock.tests.LimitationsTest.abstractClass":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":424,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":215}}]
