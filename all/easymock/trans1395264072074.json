[{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[6,7,8,9,10,11,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[13,14,15,11,16,17,12,18,19,20,21,22,23,24,25],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,13,13,14,14,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,15,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,25,341,342,343],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[344,38,39,40,345],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[26,27,28,29,30,31,346,32,33,34,35,347,36,37,344,38,39,40,345,41,42,43,44,45,46,348,349,350,351,352,353,354,355,356,357,358,359,360,361,47,362,48,49,0,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,363,364,365,366,84,367,85,86,3,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,368,369,370,371,372,126,373,127,128,374,129,375,130,131,132,376,133,134,135,136,137,138,139,140,141,142,143,377,378,379,380,381,382,144,383,384,385,145,146,386,147,387,388,389,148,149,150,151,152,153,390,154,155,391,392,393,394,395,156,157,396,397,398,399,400,401,402,403,404,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,405,406,407,408,409,410,411,412,413,414,415,188,189,190,191,192,193,194,195,196,197,198,416,199,13,13,14,14,200,201,202,203,204,205,206,417,418,419,420,421,207,422,423,424,425,426,427,208,209,210,211,212,213,214,215,216,217,218,428,429,430,431,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,15,11,432,252,433,253,434,254,18,435,436,257,437,258,438,439,440,441,442,443,259,444,445,260,446,447,261,262,263,264,265,266,448,267,24,449,450,268,269,270,451,271,272,273,274,275,276,277,452,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,306,308,309,310,311,453,454,455,456,457,458,312,459,460,461,462,463,464,465,466,467,468,313,314,315,316,469,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,25,341,342,343],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[344,38,39,40,345,360,361,47,362,120,382,383,384,385,145,146,147,389,470,394,397,398,399,400,401,402,403,404,409,410,411,412,413,414,415,13,13,14,14,200,203,204,471,428,429,219,220,221,222,224,225,239,240,241,15,11,472,473,252,474,433,253,434,254,255,18,435,256,475,476,436,477,478,257,479,437,258,480,438,439,481,482,440,441,442,443,259,483,444,484,485,445,260,446,447,261,262,264,265,266,448,267,24,449,450,268,269,270,451,486,25,342],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[487,25,341,342],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[31,32,33,347,36,37,46,48,0,50,51,52,53,54,363,364,85,86,3,87,90,91,92,373,374,129,375,135,378,381,382,470,393,488,394,489,395,396,399,400,401,181,185,186,187,207,422,210,212,213,214,215,216,220,221,224,225,226,228,229,230,231,235,236,237,238,248,249,250,251,472,252,474,254,255,435,256,476,262,450,270,486,300,302,304,305,307,308,312,459,315,330,343],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[344,345],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[6,7,8,490,491,15,11,12,18,25],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[487,25,341,342],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[13,14,19,20,21,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[13,14,492,19,20,21,493,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[344,345],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[25,341,342],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,494,86,3,87,90,91,228,229,235,236,4,495,5,496],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[0,50,52,53,55,212,214,215],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[498,499,500],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[501,6,7,8,490,9,491,15,11,12,18,22,25],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":316,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":85,"org.easymock.tests2.UsageTest.argumentsOrdered":236,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":103,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":231,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":201,"org.easymock.tests2.DelegateToTest.testReturnException":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":149,"org.easymock.tests.MockingTest.testPartialClassMocking":145,"org.easymock.tests.MockClassControlTest.testToString":399,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":432,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":481,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":161,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":258,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":6,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":322,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":41,"org.easymock.tests2.UsageTest.wrongArguments":229,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":464,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":407,"org.easymock.samples.ExampleTest.answerVsDelegate":194,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":394,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":388,"org.easymock.tests2.UsageConstraintsTest.testNull":318,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":264,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":404,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":308,"org.easymock.tests2.CaptureTest.testPrimitive":288,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":180,"org.easymock.tests.UsageTest.moreThanOneArgument":86,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":190,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":390,"org.easymock.tests.UsageTest.argumentsOrdered":91,"org.easymock.tests.UsageVarargTest.varargIntAccepted":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":121,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":472,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":426,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":125,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":500,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":312,"org.easymock.tests.ReplayStateInvalidUsageTest.times":356,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":493,"org.easymock.tests2.AnswerTest.answer":271,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":468,"org.easymock.tests2.CaptureTest.testAnd":285,"org.easymock.tests2.UsageTest.strictResetToDefault":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":450,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":189,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":303,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":392,"org.easymock.tests2.DelegateToTest.testDelegate":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":176,"org.easymock.tests.LimitationsTest.mockFinalMethod":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":372,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":363,"org.easymock.tests2.CaptureTest.testCapture1_2446744":289,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":174,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":466,"org.easymock.tests.UsageThrowableTest.throwError":56,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":350,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":488,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":192,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":447,"org.easymock.samples.PartialClassMockTest.testGetArea":200,"org.easymock.tests.MockingTest.testInterfaceMocking":386,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":122,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":482,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":162,"org.easymock.tests2.UsageTest.niceToStrict":230,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":93,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":253,"org.easymock.tests2.MockBuilderTest.testCreateMock":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":484,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":461,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":170,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":304,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":405,"org.easymock.tests.UsageOverloadedMethodTest.overloading":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":443,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":128,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":328,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":75,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":327,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":294,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":376,"org.easymock.tests.MockClassControlTest.testEquals":403,"org.easymock.tests2.EasyMockSupportClassTest.testAll":257,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":39,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":495,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":178,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":467,"org.easymock.tests2.CaptureTest.testCaptureAll":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":370,"org.easymock.tests.MockNameTest.defaultName":396,"org.easymock.tests2.UsageConstraintsTest.testMatches":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":191,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":348,"org.easymock.samples.ExampleTest.voteForRemovals":198,"org.easymock.tests.UsageVarargTest.allKinds":140,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":185,"org.easymock.samples.BasicClassMockTest.testPrintContent":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":371,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":62,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":210,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":153,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":491,"org.easymock.tests2.UsageConstraintsTest.greaterThan":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":479,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":182,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":270,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":415,"org.easymock.samples.ExampleTest.voteForRemoval":195,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":451,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":244,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":448,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":120,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":226,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":301,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":148,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":279,"org.easymock.tests2.CaptureTest.testCaptureFirst":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":302,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":375,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":71,"org.easymock.tests2.UsageTest.moreThanOneArgument":228,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":246,"org.easymock.tests2.CaptureTest.testCapture2_2446744":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":111,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":256,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":139,"org.easymock.tests.GenericTest.testBridgedEquals":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":36,"org.easymock.tests.UsageExpectAndReturnTest.longType":67,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":368,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":475,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":179,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":144,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":336,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":188,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":118,"org.easymock.tests.UsageCallCountTest.tooManyCalls":37,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":498,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":166,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":61,"org.easymock.tests.MockingTest.testNiceClassMocking":389,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":220,"org.easymock.tests.MockingTest.testClassMocking":384,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":473,"org.easymock.tests2.UsageConstraintsTest.testContains":326,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":346,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":241,"org.easymock.tests2.UsageConstraintsTest.testFind":317,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":160,"org.easymock.tests.MockTypeTest.fromEasyMockClass":393,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":48,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":278,"org.easymock.tests.UsageExpectAndReturnTest.object":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":307,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":7,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":380,"org.easymock.tests.UsageTest.exactCallCountByLastCall":92,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":98,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":154,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":366,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":494,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":11,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":130,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":80,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":127,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":418,"org.easymock.tests.MockClassControlTest.testHashCode":402,"org.easymock.tests2.EasyMockSupportTest.testVerify":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":441,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":499,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":155,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":126,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":465,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":453,"org.easymock.tests.UsageVarargTest.varargCharAccepted":133,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":116,"org.easymock.tests2.UsageTest.openCallCountByLastCall":232,"org.easymock.tests.DefaultClassInstantiatorTest.object":409,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":310,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":28,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":442,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":168,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":417,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":401,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":268,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":167,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":81,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":117,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":260,"org.easymock.tests2.UsageTest.resumeIfFailure":237,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":151,"org.easymock.tests2.StubTest.stubWithReturnValue":218,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":73,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":337,"org.easymock.tests2.SerializationTest.testAllMockedMethod":342,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":109,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":23,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.samples.SupportTest.voteForRemovals":206,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":173,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":487,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":115,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":272,"org.easymock.tests.UsageExpectAndThrowTest.object":171,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":367,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":334,"org.easymock.tests2.DelegateToTest.testWrongClass":282,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":156,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":157,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests.UsageStrictMockTest.range":52,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":430,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":219,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":172,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":436,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":90,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":406,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":1,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":143,"org.easymock.tests2.CaptureTest.testCaptureNone":293,"org.easymock.tests.UsageUnorderedTest.message":46,"org.easymock.tests.UsageVerifyTest.twoReturns":187,"org.easymock.tests.UsageVarargTest.varargByteAccepted":138,"org.easymock.tests2.ThreadingTest.testThreadSafe":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":483,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":35,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":203,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":381,"org.easymock.tests2.CaptureTest.testCapture_2617107":287,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":496,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":44,"org.easymock.tests2.UsageConstraintsTest.any":324,"org.easymock.tests2.StubTest.stub":217,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":355,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":119,"org.easymock.tests.UsageExpectAndThrowTest.longType":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":114,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":413,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":354,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":213,"org.easymock.tests2.SerializationTest.testClass":25,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests.LimitationsTest.mockNativeMethod":47,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":40,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":83,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":456,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests2.NameTest.nameForMocksControl":251,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":458,"org.easymock.tests2.MockedExceptionTest.testMockedException":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":437,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":89,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":452,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":165,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":147,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":261,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":255,"org.easymock.tests.MockingTest.testNicePartialClassMocking":146,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":266,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":501,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":454,"org.easymock.tests2.CaptureTest.testCaptureLast":292,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":364,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":225,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":321,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":335,"org.easymock.tests.MockingTest.testTwoMocks":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":169,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":235,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":339,"org.easymock.samples.ExampleTest.removeNonExistingDocument":416,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":460,"org.easymock.tests.UsageStrictMockTest.differentMethods":53,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":419,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":411,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":245,"org.easymock.tests2.MockBuilderTest.testCreateMockString":476,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":480,"org.easymock.tests.UsageExpectAndThrowTest.floatType":163,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":478,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":274,"org.easymock.tests.UsageVerifyTest.twoThrows":186,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":259,"org.easymock.samples.ExampleTest.voteAgainstRemoval":196,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":104,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":269,"org.easymock.tests.LimitationsTest.privateConstructor":361,"org.easymock.tests2.UsageConstraintsTest.testNotNull":338,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":63,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":239,"org.easymock.tests2.UsageTest.defaultResetToNice":234,"org.easymock.samples.ExampleTest.voteAgainstRemovals":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":79,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":455,"org.easymock.tests.UsageVarargTest.differentLength":135,"org.easymock.tests2.CallbackTest.callback":343,"org.easymock.tests2.UsageConstraintsTest.equals":469,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":24,"org.easymock.tests.UsageTest.openCallCountByLastCall":88,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":313,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":43,"org.easymock.tests.UsageCallCountTest.tooFewCalls":33,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":408,"org.easymock.tests.UsageThrowableTest.throwCheckedException":60,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests.MockingTest.testStrictClassMocking":383,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":27,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":459,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":221,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":223,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":276,"org.easymock.tests.ObjectMethodsTest.testHashCode":379,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":9,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":247,"org.easymock.tests2.NameTest.nameForNiceMock":250,"org.easymock.tests2.DependencyTest.testInterfaceMocking":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":8,"org.easymock.samples.ExampleTest.addDocument":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":446,"org.easymock.tests2.DelegateToTest.testStubDelegate":281,"org.easymock.tests2.AnswerTest.stubAnswer":275,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":50,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":492,"org.easymock.tests.UsageVarargTest.varargLongAccepted":137,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":102,"org.easymock.tests.UsageExpectAndReturnTest.floatType":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":15,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":425,"org.easymock.tests.UsageThrowableTest.noUpperLimit":57,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":332,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":374,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":314,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":428,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":290,"org.easymock.tests2.SerializationTest.test":341,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":65,"org.easymock.tests2.UsageConstraintsTest.testSame":319,"org.easymock.samples.SupportTest.addDocument":205,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":438,"org.easymock.tests.GenericTest.testPackageScope":38,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":97,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":424,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":387,"org.easymock.tests2.NameTest.nameForMock":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":20,"org.easymock.tests2.UsageStrictMockTest.differentMethods":215,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":449,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":175,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":184,"org.easymock.tests2.MockedExceptionTest.testRealException":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":107,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":106,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":212,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":42,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":359,"org.easymock.tests2.NameTest.nameForStrictMock":249,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":433,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":265,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":429,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":412,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":333,"org.easymock.tests.ErrorMessageTest.testGetters":497,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":252,"org.easymock.tests2.UsageStrictMockTest.range":214,"org.easymock.tests2.UsageConstraintsTest.lessThan":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":421,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":101,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":440,"org.easymock.tests2.CaptureTest.testCaptureRightOne":295,"org.easymock.tests2.UsageConstraintsTest.testOr":320,"org.easymock.tests.UsageRangeTest.combination":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":262,"org.easymock.tests.UsageTest.wrongArguments":87,"org.easymock.tests2.MockBuilderTest.testWithConstructor":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":439,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":69,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":94,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":414,"org.easymock.tests.UsageVarargTest.varargShortAccepted":136,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":347,"org.easymock.tests2.UsageConstraintsTest.cmpTo":325,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":96,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":233,"org.easymock.tests2.CaptureTest.testCaptureFromStub":296,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":349,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":474,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":34,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":19,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":78,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":51,"org.easymock.tests2.UsageConstraintsTest.constraints":315,"org.easymock.samples.ExampleTest.addAndChangeDocument":199,"org.easymock.tests.UsageStrictMockTest.testVerify":55,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":202,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":369,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":291,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":70,"org.easymock.tests.LimitationsTest.abstractClass":360,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":124,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":305}}]
