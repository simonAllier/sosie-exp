[{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[18,19],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[20],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,2,3,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,4,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,6,7,75,76,8,9,11,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[110,111,112,113,114,115,116,117,39,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,61,142,62,63,143,143,144,144,77,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,99,189,190,191,192,193,194,195,196,197,106,198,199,107,200,201,202,203,204,108,205,206,207,208],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[209,188,210,99],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[5,7,10,12,13,14,15,16,90,211,17],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:89","sourceCode":"if (!(org.easymock.internal.Injection.isMatched())) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n} ","type":"CtIfImpl"},"failures":[212,213,214,215,216,217,218,219],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[145,153,156,193,220],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[23,24,221,1,2,3,222,223,224,225,4,60,226,227,228,229,230,231,232,5,6,7,233,234,75,76,8,9,235,10,236,237,11,150,85,238,239,240,12,13,241,14,242,15,16,243,90,91,244,245,0,246,247,248,249,250,211,251,252,92,93,17,253,254,104,105],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[255,256,257,258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,224,286,287,288,289,225,290,291,292,293,206,207,208,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[238,295],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"candidateMethod","bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[3,78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[160,297,298,188,299,300],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[239,249,251,301],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[112,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,221,1,2,3,222,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,323,324,325,117,39,118,326,327,328,329,330,331,279,280,40,332,281,282,283,284,285,223,224,333,286,287,288,289,225,290,334,335,336,337,338,41,339,340,42,43,341,131,132,133,44,45,46,47,48,49,50,51,52,53,4,342,54,343,344,345,346,255,347,55,348,349,350,56,351,352,353,57,58,59,354,355,356,357,358,359,360,291,361,60,362,363,364,365,366,367,292,368,61,226,227,228,229,230,231,232,369,370,371,142,62,63,143,143,144,144,64,65,66,67,68,372,69,70,71,72,73,74,5,6,7,233,234,75,76,8,9,235,10,236,237,11,77,145,373,146,147,148,150,154,155,156,78,293,79,80,81,82,83,84,85,86,87,88,89,159,295,166,169,179,185,239,240,12,13,241,14,242,15,16,243,90,91,244,245,0,246,247,248,249,250,211,251,252,92,93,17,253,254,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,94,391,18,392,393,394,95,96,97,98,188,210,99,395,396,397,100,19,101,398,399,400,102,103,401,402,104,105,191,192,193,194,403,195,196,106,107,201,202,108,206,207,208,294,404,256,405,109,257,258],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[23,24,221,1,2,3,222,223,224,225,4,60,226,227,228,229,230,231,232,5,6,7,233,234,75,76,8,9,235,10,236,237,11,150,85,238,239,240,12,13,241,14,242,15,16,243,90,91,244,245,0,246,247,248,249,250,211,251,252,92,93,17,253,254,385,104,105],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[23,406,407,408,409,410],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[359,372,74,104,105,404,109,257,258],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[209,188,210,99],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[209,188,210,99],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[411,412,413],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[117,118,119],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[188,210,99],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[112,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,21,22,23,24,25,26,27,28,29,32,414,33,34,35,36,415,37,38,416,417,418,419,420,221,1,2,3,222,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,117,39,326,327,328,329,421,422,423,121,424,122,123,124,125,126,127,330,331,279,280,40,332,281,282,283,284,285,223,224,286,287,288,289,225,290,337,338,408,41,339,340,42,43,341,131,132,133,425,426,427,428,135,44,45,46,47,48,49,50,51,52,53,4,429,430,431,432,433,434,435,436,437,438,439,440,359,360,291,361,441,60,362,363,364,365,366,367,292,368,61,226,227,228,229,230,231,232,142,62,63,143,143,144,144,64,65,66,67,68,372,69,70,71,72,442,73,74,5,6,7,233,234,75,76,8,9,235,10,236,237,11,77,145,373,146,147,148,149,150,153,154,155,156,78,293,79,80,81,82,83,84,85,86,87,88,89,159,443,444,445,446,295,166,169,179,185,239,240,12,13,241,14,242,15,16,243,91,244,245,0,246,247,248,249,250,211,251,252,92,93,17,253,254,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,94,391,18,392,393,394,95,96,97,98,188,210,99,395,396,397,100,19,101,398,399,400,102,103,401,402,104,105,191,192,193,194,403,195,196,197,106,107,200,201,202,204,108,205,206,207,208,294,404,109,257,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":13,"org.easymock.tests2.UsageTest.argumentsOrdered":103,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":337,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":349,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":101,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":65,"org.easymock.tests2.DelegateToTest.testReturnException":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":287,"org.easymock.tests.MockingTest.testPartialClassMocking":131,"org.easymock.tests.MockClassControlTest.testToString":122,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":302,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":173,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":259,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":381,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":243,"org.easymock.tests2.UsageTest.wrongArguments":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":221,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":427,"org.easymock.samples.ExampleTest.answerVsDelegate":372,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":115,"org.easymock.tests2.UsageConstraintsTest.testNull":14,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":146,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":95,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":161,"org.easymock.tests2.CaptureTest.testPrimitive":233,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":278,"org.easymock.tests.UsageTest.moreThanOneArgument":338,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":364,"org.easymock.tests.UsageTest.argumentsOrdered":43,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":20,"org.easymock.tests.UsageVarargTest.varargIntAccepted":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":228,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":219,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":232,"org.easymock.tests.ReplayStateInvalidUsageTest.times":437,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":295,"org.easymock.tests2.AnswerTest.answer":404,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":58,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":446,"org.easymock.tests2.CaptureTest.testAnd":5,"org.easymock.tests2.UsageTest.strictResetToDefault":396,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":391,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":328,"org.easymock.tests2.DelegateToTest.testDelegate":379,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":274,"org.easymock.tests.LimitationsTest.mockFinalMethod":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":420,"org.easymock.tests2.CaptureTest.testCapture1_2446744":234,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":444,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":431,"org.easymock.tests.UsageThrowableTest.throwError":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":366,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":187,"org.easymock.samples.PartialClassMockTest.testGetArea":142,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":229,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":174,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":120,"org.easymock.tests2.UsageTest.niceToStrict":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":260,"org.easymock.tests2.ThreadingTest.testChangeDefault":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":107,"org.easymock.tests2.MockBuilderTest.testCreateMock":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":182,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":409,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":268,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":18,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":336,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":425,"org.easymock.tests.UsageOverloadedMethodTest.overloading":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":178,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":246,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":314,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":330,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":235,"org.easymock.tests2.EasyMockSupportClassTest.testAll":166,"org.easymock.tests.MockClassControlTest.testEquals":126,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":39,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":445,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":418,"org.easymock.tests2.CaptureTest.testCaptureAll":6,"org.easymock.tests2.UsageConstraintsTest.testMatches":247,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":429,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":365,"org.easymock.samples.ExampleTest.voteForRemovals":72,"org.easymock.tests.UsageVarargTest.allKinds":4,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":367,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":419,"org.easymock.samples.BasicClassMockTest.testPrintContent":63,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":284,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":83,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":290,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":378,"org.easymock.tests2.UsageConstraintsTest.greaterThan":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":167,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":327,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":156,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":141,"org.easymock.samples.ExampleTest.voteForRemoval":69,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":157,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":383,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":149,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":395,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":61,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":390,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":286,"org.easymock.tests2.CaptureTest.testCaptureFirst":11,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":94,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":402,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":310,"org.easymock.tests2.UsageTest.moreThanOneArgument":397,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":385,"org.easymock.tests2.CaptureTest.testCapture2_2446744":237,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":59,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":53,"org.easymock.tests.GenericTest.testBridgedEquals":119,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":37,"org.easymock.tests.UsageExpectAndReturnTest.longType":306,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":416,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":388,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":277,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":92,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":370,"org.easymock.tests.UsageCallCountTest.tooManyCalls":38,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":264,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":283,"org.easymock.tests.MockingTest.testNiceClassMocking":134,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":192,"org.easymock.tests.MockingTest.testClassMocking":129,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":414,"org.easymock.tests2.UsageConstraintsTest.testContains":245,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":208,"org.easymock.tests2.UsageConstraintsTest.testFind":241,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":279,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":105,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":21,"org.easymock.tests.UsageExpectAndReturnTest.object":313,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":394,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":48,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":423,"org.easymock.tests.UsageTest.exactCallCountByLastCall":341,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":30,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":160,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":44,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":319,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":360,"org.easymock.tests.MockClassControlTest.testHashCode":125,"org.easymock.tests2.EasyMockSupportTest.testVerify":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":176,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":31,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":335,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":443,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":238,"org.easymock.tests.UsageVarargTest.varargCharAccepted":47,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":358,"org.easymock.tests2.UsageTest.openCallCountByLastCall":398,"org.easymock.tests.DefaultClassInstantiatorTest.object":135,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":97,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":334,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":177,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":266,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":162,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":281,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":154,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":124,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":265,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":185,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":123,"org.easymock.tests2.UsageTest.resumeIfFailure":401,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":289,"org.easymock.tests2.StubTest.stubWithReturnValue":293,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":299,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":312,"org.easymock.tests2.SerializationTest.testAllMockedMethod":99,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":57,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":410,"org.easymock.samples.SupportTest.voteForRemovals":67,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":271,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":209,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":357,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":256,"org.easymock.tests.UsageExpectAndThrowTest.object":269,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":251,"org.easymock.tests2.DelegateToTest.testWrongClass":377,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":226,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":227,"org.easymock.samples.ConstructorCalledMockTest.testTax":143,"org.easymock.tests.UsageStrictMockTest.range":26,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":393,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":191,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":270,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":201,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":163,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":426,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":406,"org.easymock.tests2.CaptureTest.testCaptureNone":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":325,"org.easymock.tests.UsageUnorderedTest.message":60,"org.easymock.tests.UsageVerifyTest.twoReturns":368,"org.easymock.tests.UsageVarargTest.varargByteAccepted":52,"org.easymock.tests2.ThreadingTest.testThreadSafe":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":180,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":36,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":62,"org.easymock.tests2.CaptureTest.testCapture_2617107":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":355,"org.easymock.tests2.UsageConstraintsTest.any":91,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":436,"org.easymock.tests2.StubTest.stub":78,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":371,"org.easymock.tests.UsageExpectAndThrowTest.longType":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":356,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":139,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":435,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":86,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":387,"org.easymock.tests2.SerializationTest.testClass":188,"org.easymock.tests.LimitationsTest.mockNativeMethod":112,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":118,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":322,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":89,"org.easymock.tests2.NameTest.nameForMocksControl":82,"org.easymock.tests2.MockedExceptionTest.testMockedException":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":168,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":340,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":263,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":77,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":202,"org.easymock.tests.MockingTest.testNicePartialClassMocking":132,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":148,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":297,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":196,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":252,"org.easymock.tests.MockingTest.testTwoMocks":130,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":267,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":102,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":253,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":413,"org.easymock.samples.ExampleTest.removeNonExistingDocument":442,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":433,"org.easymock.tests.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":213,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":137,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":384,"org.easymock.tests2.MockBuilderTest.testCreateMockString":205,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":170,"org.easymock.tests.UsageExpectAndThrowTest.floatType":261,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":165,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":109,"org.easymock.tests.UsageVerifyTest.twoThrows":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":179,"org.easymock.samples.ExampleTest.voteAgainstRemoval":70,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":350,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":155,"org.easymock.tests.LimitationsTest.privateConstructor":111,"org.easymock.tests2.UsageConstraintsTest.testNotNull":17,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":206,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":285,"org.easymock.tests2.UsageTest.defaultResetToNice":400,"org.easymock.samples.ExampleTest.voteAgainstRemovals":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":318,"org.easymock.tests.UsageVarargTest.differentLength":49,"org.easymock.tests2.CallbackTest.callback":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":151,"org.easymock.tests.UsageTest.openCallCountByLastCall":339,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":2,"org.easymock.tests.UsageCallCountTest.tooFewCalls":34,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":194,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":428,"org.easymock.tests.UsageThrowableTest.throwCheckedException":282,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":407,"org.easymock.tests.MockingTest.testStrictClassMocking":128,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":195,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":224,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":193,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":438,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":403,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":258,"org.easymock.tests.ObjectMethodsTest.testHashCode":422,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":298,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":386,"org.easymock.tests2.NameTest.nameForNiceMock":81,"org.easymock.tests2.DependencyTest.testInterfaceMocking":380,"org.easymock.samples.ExampleTest.addDocument":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":186,"org.easymock.tests2.DelegateToTest.testStubDelegate":376,"org.easymock.tests2.AnswerTest.stubAnswer":257,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":24,"org.easymock.tests.UsageVarargTest.varargLongAccepted":51,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":348,"org.easymock.tests.UsageExpectAndReturnTest.floatType":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":159,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":144,"org.easymock.tests.UsageThrowableTest.noUpperLimit":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":218,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":250,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":240,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":189,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":75,"org.easymock.tests2.SerializationTest.test":210,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":136,"org.easymock.tests2.UsageConstraintsTest.testSame":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":304,"org.easymock.samples.SupportTest.addDocument":66,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":171,"org.easymock.tests.GenericTest.testPackageScope":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.NameTest.nameForMock":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":315,"org.easymock.tests2.UsageStrictMockTest.differentMethods":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":273,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":329,"org.easymock.tests2.MockedExceptionTest.testRealException":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":352,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":300,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":351,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":1,"org.easymock.tests2.NameTest.nameForStrictMock":80,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":199,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":147,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":190,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":138,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":211,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":106,"org.easymock.tests2.UsageStrictMockTest.range":87,"org.easymock.tests2.UsageConstraintsTest.lessThan":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":216,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":175,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":15,"org.easymock.tests.UsageRangeTest.combination":326,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":145,"org.easymock.tests.UsageTest.wrongArguments":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":172,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":424,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":54,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":316,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":140,"org.easymock.tests.UsageVarargTest.varargShortAccepted":50,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":415,"org.easymock.tests2.UsageConstraintsTest.cmpTo":244,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":344,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":399,"org.easymock.tests2.CaptureTest.testCaptureFromStub":236,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":430,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":198,"org.easymock.tests.UsageTest.unexpectedCallWithArray":408,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":317,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":25,"org.easymock.tests2.UsageConstraintsTest.constraints":12,"org.easymock.samples.ExampleTest.addAndChangeDocument":73,"org.easymock.tests.UsageStrictMockTest.testVerify":29,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":64,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":417,"org.easymock.tests2.CompareToTest.testGreateThan":301,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":76,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":230,"org.easymock.tests.LimitationsTest.abstractClass":110,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":231,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":392,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":45}}]
