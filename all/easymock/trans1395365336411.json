[{"position":"org.easymock.internal.ReflectionUtils:107","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,35,36,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[110],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[110],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[111,112,113,114,115,116,117,118,119,120,121,122,123,6,7,8,12,15,17,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,37,45,47,48,179,180,181,182,183,58,61,71,77,184,185,186,187,110,188,189,190,191,192,193,80,81,194,82,83,84,86,91,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,97,235,236,237,238,102,239,104,105,106,107,240,108,109,241,242,243,244,245,246,247,248,249,250,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[2,5,6,7,8,12,15,16,17,28,35,35,36,36,37,38,39,40,42,45,46,47,48,50,51,53,58,61,71,77,80,81,82,83,84,85,86,89,90,91,92,97,101,102,103,104,105,106,107,108,109],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[86,220],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[253,254,255,256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[257,258,259,260,261,262],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[217,218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[263,264,222],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[230],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[265,266,267,268,269,270,271,272,273,274,275,2,116,276,117,277,118,119,120,121,122,123,278,257,279,280,6,7,8,12,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,263,15,16,297,298,299,300,301,302,127,128,303,304,129,130,305,306,131,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,264,133,329,134,135,330,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,331,167,168,169,332,333,170,334,335,336,337,338,171,172,173,174,258,175,176,339,177,340,341,342,178,35,36,343,37,38,39,40,42,45,46,47,48,50,51,53,179,180,182,183,344,345,346,347,58,61,71,77,348,349,350,184,185,186,187,110,188,351,189,352,190,191,353,354,355,192,193,80,81,194,82,83,84,85,86,89,90,91,92,356,195,196,197,198,199,200,201,357,202,203,204,205,358,359,360,206,361,207,208,362,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,363,231,232,233,234,97,235,236,364,237,365,99,100,101,366,238,102,239,103,104,105,106,107,240,108,109,259,241,260,262,242,243,367,244,245,368,369,246,247,248,249,370,250,251],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[265,266,267,268,269,270,271,272,273,274,275,2,116,276,117,277,118,119,120,121,122,123,278,257,279,280,6,7,8,12,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,263,15,16,297,298,299,300,301,302,127,128,303,304,129,130,305,306,131,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,264,133,329,134,135,330,136,137,371,371,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,331,167,168,169,332,333,170,334,335,336,337,338,171,172,173,174,258,175,176,339,177,340,341,342,178,35,36,343,37,38,39,40,42,45,46,47,48,50,51,53,179,180,181,182,183,344,345,346,347,58,61,71,77,348,349,350,184,185,186,187,110,188,351,189,352,190,191,353,354,355,192,193,80,81,194,82,83,84,85,86,89,90,91,92,356,195,196,197,198,199,200,201,357,202,203,204,205,358,359,360,206,361,207,208,362,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,363,231,232,233,234,97,235,236,364,237,365,99,100,101,366,238,102,239,103,104,105,106,107,240,108,109,259,241,260,262,242,243,367,244,245,368,369,246,247,248,249,370,250,251],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[225],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[372,276,281,282,283,284,285,286,373,374,375,332,184,99,100,101,366],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[376,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[35,36,378,379,380,381,382,87],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[264,133,134,135,383,82,84,206,207,208],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[384],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[385],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[225],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":212,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":127,"org.easymock.tests2.UsageTest.argumentsOrdered":355,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":204,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":352,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":343,"org.easymock.tests2.DelegateToTest.testReturnException":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":282,"org.easymock.tests.MockingTest.testPartialClassMocking":6,"org.easymock.tests.MockClassControlTest.testToString":29,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":65,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":307,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":186,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":168,"org.easymock.tests2.UsageTest.wrongArguments":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":274,"org.easymock.samples.ExampleTest.answerVsDelegate":258,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":1,"org.easymock.tests2.UsageConstraintsTest.testNull":214,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":82,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":34,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":203,"org.easymock.tests2.CaptureTest.testPrimitive":244,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":170,"org.easymock.tests.UsageTest.moreThanOneArgument":128,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":326,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":336,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":254,"org.easymock.tests.UsageTest.argumentsOrdered":306,"org.easymock.tests.UsageVarargTest.varargIntAccepted":289,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":161,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":40,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":165,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":235,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":382,"org.easymock.tests2.AnswerTest.answer":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":347,"org.easymock.tests2.CaptureTest.testAnd":242,"org.easymock.tests2.UsageTest.strictResetToDefault":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":335,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":199,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":256,"org.easymock.tests2.DelegateToTest.testDelegate":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":322,"org.easymock.tests.LimitationsTest.mockFinalMethod":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":302,"org.easymock.tests2.CaptureTest.testCapture1_2446744":245,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":345,"org.easymock.tests.UsageThrowableTest.throwError":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":338,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":79,"org.easymock.samples.PartialClassMockTest.testGetArea":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":162,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":125,"org.easymock.tests2.UsageTest.niceToStrict":189,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":308,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":45,"org.easymock.tests2.MockBuilderTest.testCreateMock":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":74,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":316,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":272,"org.easymock.tests.UsageOverloadedMethodTest.overloading":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":76,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":223,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":279,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":149,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":222,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":248,"org.easymock.tests.MockClassControlTest.testEquals":33,"org.easymock.tests2.EasyMockSupportClassTest.testAll":58,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":324,"org.easymock.tests2.CaptureTest.testCaptureAll":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":346,"org.easymock.tests2.UsageConstraintsTest.testMatches":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":337,"org.easymock.samples.ExampleTest.voteForRemovals":177,"org.easymock.tests.UsageVarargTest.allKinds":263,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":166,"org.easymock.samples.BasicClassMockTest.testPrintContent":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":301,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":122,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":359,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":286,"org.easymock.tests2.UsageConstraintsTest.greaterThan":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":59,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.samples.ExampleTest.voteForRemoval":175,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":25,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":180,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":85,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":2,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":197,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":281,"org.easymock.tests2.CaptureTest.testCaptureFirst":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":198,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":280,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":145,"org.easymock.tests2.UsageTest.moreThanOneArgument":188,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":182,"org.easymock.tests2.CaptureTest.testCapture2_2446744":250,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":376,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":296,"org.easymock.tests.GenericTest.testBridgedEquals":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":270,"org.easymock.tests.UsageExpectAndReturnTest.longType":141,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":298,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":325,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":363,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":334,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":374,"org.easymock.tests.UsageCallCountTest.tooManyCalls":271,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":312,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":121,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":105,"org.easymock.tests.MockingTest.testNiceClassMocking":9,"org.easymock.tests.MockingTest.testClassMocking":4,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":41,"org.easymock.tests2.UsageConstraintsTest.testContains":221,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":101,"org.easymock.tests2.UsageConstraintsTest.testFind":213,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":173,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":327,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":349,"org.easymock.tests.UsageExpectAndReturnTest.object":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":202,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":291,"org.easymock.tests.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":154,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":257,"org.easymock.tests.MockClassControlTest.testHashCode":32,"org.easymock.tests2.EasyMockSupportTest.testVerify":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":68,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":377,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":344,"org.easymock.tests.UsageVarargTest.varargCharAccepted":290,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":115,"org.easymock.tests2.UsageTest.openCallCountByLastCall":190,"org.easymock.tests.DefaultClassInstantiatorTest.object":19,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":314,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":119,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":31,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":313,"org.easymock.tests.CapturesMatcherTest.test":371,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":155,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":373,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":77,"org.easymock.tests2.UsageTest.resumeIfFailure":192,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":284,"org.easymock.tests2.StubTest.stubWithReturnValue":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":147,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":231,"org.easymock.tests2.SerializationTest.testAllMockedMethod":103,"org.easymock.samples.SupportTest.voteForRemovals":178,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":14,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":319,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":384,"org.easymock.tests.UsageExpectAndThrowTest.object":317,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":229,"org.easymock.tests2.DelegateToTest.testWrongClass":260,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":136,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":137,"org.easymock.tests.UsageStrictMockTest.range":134,"org.easymock.samples.ConstructorCalledMockTest.testTax":35,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":104,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":318,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":55,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":305,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":273,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":126,"org.easymock.tests2.CaptureTest.testCaptureNone":247,"org.easymock.tests.UsageUnorderedTest.message":297,"org.easymock.tests.UsageVerifyTest.twoReturns":167,"org.easymock.tests.UsageVarargTest.varargByteAccepted":295,"org.easymock.tests2.ThreadingTest.testThreadSafe":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":72,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":268,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":38,"org.easymock.tests2.CaptureTest.testCapture_2617107":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":333,"org.easymock.tests2.UsageConstraintsTest.any":219,"org.easymock.tests2.StubTest.stub":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":283,"org.easymock.tests.UsageExpectAndThrowTest.longType":310,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":23,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":361,"org.easymock.tests2.SerializationTest.testClass":102,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":238,"org.easymock.tests.LimitationsTest.mockNativeMethod":12,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":157,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":17,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":362,"org.easymock.tests2.MockedExceptionTest.testMockedException":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":60,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":130,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":8,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":311,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":80,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":48,"org.easymock.tests.MockingTest.testNicePartialClassMocking":7,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":84,"org.easymock.tests2.CaptureTest.testCaptureLast":246,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":109,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":217,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":230,"org.easymock.tests.MockingTest.testTwoMocks":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":138,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":315,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":354,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":233,"org.easymock.tests.UsageStrictMockTest.differentMethods":135,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":21,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":181,"org.easymock.tests2.MockBuilderTest.testCreateMockString":53,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":62,"org.easymock.tests.UsageExpectAndThrowTest.floatType":309,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":57,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":364,"org.easymock.tests.UsageVerifyTest.twoThrows":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":71,"org.easymock.samples.ExampleTest.voteAgainstRemoval":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":112,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests.LimitationsTest.privateConstructor":11,"org.easymock.tests2.UsageConstraintsTest.testNotNull":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":123,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":99,"org.easymock.tests2.UsageTest.defaultResetToNice":353,"org.easymock.samples.ExampleTest.voteAgainstRemovals":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":153,"org.easymock.tests.UsageVarargTest.differentLength":292,"org.easymock.tests2.CallbackTest.callback":356,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":87,"org.easymock.tests.UsageTest.openCallCountByLastCall":129,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":332,"org.easymock.tests.UsageCallCountTest.tooFewCalls":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":107,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":275,"org.easymock.tests.UsageThrowableTest.throwCheckedException":120,"org.easymock.tests.MockingTest.testStrictClassMocking":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":108,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":276,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":240,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":365,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":183,"org.easymock.tests2.DependencyTest.testInterfaceMocking":185,"org.easymock.samples.ExampleTest.addDocument":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":78,"org.easymock.tests2.DelegateToTest.testStubDelegate":241,"org.easymock.tests2.AnswerTest.stubAnswer":237,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":133,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":378,"org.easymock.tests.UsageVarargTest.varargLongAccepted":294,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":111,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":156,"org.easymock.tests.UsageExpectAndReturnTest.floatType":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":97,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":36,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":227,"org.easymock.tests.UsageThrowableTest.noUpperLimit":277,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":210,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":95,"org.easymock.tests2.SerializationTest.test":239,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":368,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":139,"org.easymock.tests2.UsageConstraintsTest.testSame":215,"org.easymock.samples.SupportTest.addDocument":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":63,"org.easymock.tests.GenericTest.testPackageScope":15,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":150,"org.easymock.tests2.UsageStrictMockTest.differentMethods":208,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":142,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":321,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":160,"org.easymock.tests2.MockedExceptionTest.testRealException":366,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":385,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":169,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":44,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":83,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":96,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":22,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":228,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":207,"org.easymock.tests2.UsageConstraintsTest.lessThan":234,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":67,"org.easymock.tests2.CaptureTest.testCaptureRightOne":249,"org.easymock.tests2.UsageConstraintsTest.testOr":216,"org.easymock.tests.UsageRangeTest.combination":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":81,"org.easymock.tests.UsageTest.wrongArguments":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":64,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":28,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":151,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":24,"org.easymock.tests.UsageVarargTest.varargShortAccepted":293,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":269,"org.easymock.tests2.UsageConstraintsTest.cmpTo":220,"org.easymock.tests2.CompareToTest.testLessThan":252,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":191,"org.easymock.tests2.CaptureTest.testCaptureFromStub":370,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":43,"org.easymock.tests.UsageTest.unexpectedCallWithArray":303,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":267,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":379,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":152,"org.easymock.tests2.UsageConstraintsTest.constraints":211,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":329,"org.easymock.samples.ExampleTest.addAndChangeDocument":340,"org.easymock.tests.UsageStrictMockTest.testVerify":383,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":341,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":328,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":299,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":163,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":54,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":144,"org.easymock.tests.LimitationsTest.abstractClass":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":201,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":288}}]
