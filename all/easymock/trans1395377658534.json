[{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.internal.Range:44","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[2,9,13,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[47,48,49,51,52,53,54,55,56,62,67,68,70,76,78,79,80,81,83,101,110,111,112,113,114,115,116,117,118,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,154,156,157,158,159,160,161,163,164,172,182,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,229,230,231,232,233,242,243,244,245,246,248,249,251,252,255,273,281,283,284,286,287,288,318,320,322,330,332,333,334,335,336,337,338,339,341,342,344,345,347,348,350,362,376,378,379,380,381,382,391,392,393,394,396,397,398,399,400,401,403,404,405,406,407,408,409,410,411,412,413,414,416,417,418,419,420,435,438,439,440,457,458,461,462,466,467,470,471,472,474,475,476,477,478,479,480,481,482,484,485,486,487,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[394,396],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1726","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[356],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[164,196,197,204,211,245],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[393,394,397,399,400,402,412,417,475,477,485],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[27,28,29,30,31,32,33,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,63,67,68,70,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,110,111,112,113,114,115,116,117,118,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,154,155,156,157,158,159,160,161,163,164,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,269,273,274,275,277,280,281,283,284,285,287,288,289,290,291,292,296,299,309,315,318,320,321,322,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,356,357,358,359,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,391,392,393,394,396,397,398,399,400,401,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,428,435,438,439,440,441,442,443,444,450,457,458,459,460,461,462,463,465,466,467,470,471,472,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[489,410],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[336],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[406],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[10,12,21,22,24,107,108,109,143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[199,205,212,213,224,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[412],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1660","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[150,490],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[96],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[340],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":394,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":110,"org.easymock.tests2.UsageTest.argumentsOrdered":342,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":373,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":11,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":337,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":263,"org.easymock.tests2.DelegateToTest.testReturnException":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":79,"org.easymock.tests.MockingTest.testPartialClassMocking":67,"org.easymock.tests.MockClassControlTest.testToString":236,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":323,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":20,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":122,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":299,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":331,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":401,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":229,"org.easymock.tests2.UsageTest.wrongArguments":335,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":434,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":44,"org.easymock.samples.ExampleTest.answerVsDelegate":251,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":39,"org.easymock.tests2.UsageConstraintsTest.testNull":397,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":72,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":348,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":241,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":372,"org.easymock.tests2.CaptureTest.testPrimitive":478,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":141,"org.easymock.tests.UsageTest.moreThanOneArgument":111,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":244,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":191,"org.easymock.tests.UsageTest.argumentsOrdered":117,"org.easymock.tests.UsageVarargTest.varargIntAccepted":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":220,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":385,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":224,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":428,"org.easymock.tests.ReplayStateInvalidUsageTest.times":186,"org.easymock.tests2.DependencyTest.testClassMocking":328,"org.easymock.tests2.AnswerTest.answer":435,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":18,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":292,"org.easymock.tests2.CaptureTest.testAnd":475,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":36,"org.easymock.tests2.UsageTest.strictResetToDefault":333,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":271,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":243,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":367,"org.easymock.tests2.DelegateToTest.testDelegate":474,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":137,"org.easymock.tests.LimitationsTest.mockFinalMethod":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":82,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":106,"org.easymock.tests2.DependencyTest.testClassMockingSupport":329,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":171,"org.easymock.tests2.CaptureTest.testCapture1_2446744":479,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":352,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":135,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":290,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":180,"org.easymock.tests.UsageThrowableTest.throwError":49,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":38,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":456,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":317,"org.easymock.samples.PartialClassMockTest.testGetArea":264,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":181,"org.easymock.tests.MockingTest.testInterfaceMocking":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":221,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":108,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":170,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":304,"org.easymock.tests2.UsageTest.niceToStrict":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":1,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":273,"org.easymock.tests2.MockBuilderTest.testCreateMock":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":312,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":431,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":131,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":368,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":35,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":121,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":42,"org.easymock.tests.UsageOverloadedMethodTest.overloading":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":314,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":407,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":60,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":207,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":247,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":406,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":484,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":87,"org.easymock.tests.MockClassControlTest.testEquals":240,"org.easymock.tests2.EasyMockSupportClassTest.testAll":296,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":98,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":139,"org.easymock.tests2.CaptureTest.testCaptureAll":476,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":104,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":291,"org.easymock.tests.MockNameTest.defaultName":177,"org.easymock.tests2.UsageConstraintsTest.testMatches":408,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":245,"org.easymock.samples.ExampleTest.voteForRemovals":255,"org.easymock.tests.UsageVarargTest.allKinds":95,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":105,"org.easymock.samples.BasicClassMockTest.testPrintContent":266,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":55,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":376,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":473,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":83,"org.easymock.tests2.UsageConstraintsTest.greaterThan":410,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":297,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":217,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":359,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":153,"org.easymock.samples.ExampleTest.voteForRemoval":252,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":360,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":351,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":46,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":332,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":365,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":78,"org.easymock.tests2.CaptureTest.testCaptureFirst":488,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":366,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":344,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":203,"org.easymock.tests2.CaptureTest.testCapture2_2446744":487,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":287,"org.easymock.tests2.UsageTest.moreThanOneArgument":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":281,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":94,"org.easymock.tests.GenericTest.testBridgedEquals":100,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":32,"org.easymock.tests.UsageExpectAndReturnTest.longType":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":102,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":363,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":140,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":415,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":138,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":242,"org.easymock.tests.UsageCallCountTest.tooManyCalls":33,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":313,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":433,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":54,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":461,"org.easymock.tests.MockingTest.testNiceClassMocking":73,"org.easymock.tests.MockingTest.testClassMocking":65,"org.easymock.tests2.UsageConstraintsTest.testContains":405,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":26,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":443,"org.easymock.tests2.UsageConstraintsTest.testFind":396,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":249,"org.easymock.tests.MockTypeTest.fromEasyMockClass":37,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":154,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":320,"org.easymock.tests.UsageExpectAndReturnTest.object":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":371,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":89,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":168,"org.easymock.tests.UsageTest.exactCallCountByLastCall":118,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":6,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":142,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":421,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":212,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":59,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":446,"org.easymock.tests.MockClassControlTest.testHashCode":239,"org.easymock.tests2.EasyMockSupportTest.testVerify":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":306,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":193,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":120,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":57,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":289,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":390,"org.easymock.tests.UsageVarargTest.varargCharAccepted":88,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":145,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":24,"org.easymock.tests2.UsageTest.openCallCountByLastCall":338,"org.easymock.tests.DefaultClassInstantiatorTest.object":146,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":374,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":119,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":166,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":426,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":445,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":238,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":357,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":128,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":174,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":315,"org.easymock.tests2.UsageTest.resumeIfFailure":343,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":34,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":81,"org.easymock.tests2.StubTest.stubWithReturnValue":322,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":276,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":416,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":205,"org.easymock.tests2.SerializationTest.testAllMockedMethod":459,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":17,"org.easymock.samples.SupportTest.voteForRemovals":260,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":134,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":23,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":436,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":144,"org.easymock.tests.UsageExpectAndThrowTest.object":132,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":413,"org.easymock.tests2.DelegateToTest.testWrongClass":472,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":164,"org.easymock.tests.UsageStrictMockTest.range":159,"org.easymock.samples.ConstructorCalledMockTest.testTax":261,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":388,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":370,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":460,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":133,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":275,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":188,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":43,"org.easymock.tests2.CaptureTest.testCaptureNone":483,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":109,"org.easymock.tests.UsageUnorderedTest.message":101,"org.easymock.tests.UsageVerifyTest.twoReturns":227,"org.easymock.tests.UsageVarargTest.varargByteAccepted":93,"org.easymock.tests2.ThreadingTest.testThreadSafe":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":310,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":30,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":169,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":265,"org.easymock.tests2.CaptureTest.testCapture_2617107":477,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":232,"org.easymock.tests2.UsageConstraintsTest.any":403,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":185,"org.easymock.tests2.StubTest.stub":321,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":176,"org.easymock.tests.UsageExpectAndThrowTest.longType":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":80,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":150,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":184,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":379,"org.easymock.tests2.SerializationTest.testClass":457,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":450,"org.easymock.tests.LimitationsTest.mockNativeMethod":76,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":99,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":215,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":425,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":382,"org.easymock.tests2.NameTest.nameForMocksControl":327,"org.easymock.tests2.MockedExceptionTest.testMockedException":442,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":298,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":115,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":126,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":70,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":319,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":345,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":277,"org.easymock.tests.MockingTest.testNicePartialClassMocking":68,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":350,"org.easymock.tests2.CompareToTest.testNotComparable":0,"org.easymock.tests2.CaptureTest.testCaptureLast":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":423,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":172,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":467,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":400,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":414,"org.easymock.tests.MockingTest.testTwoMocks":66,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":130,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":341,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":418,"org.easymock.samples.ExampleTest.removeNonExistingDocument":256,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":430,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":182,"org.easymock.tests.UsageStrictMockTest.differentMethods":160,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":447,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":148,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":286,"org.easymock.tests2.MockBuilderTest.testCreateMockString":283,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":234,"org.easymock.tests.UsageExpectAndThrowTest.floatType":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":300,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":295,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":438,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":422,"org.easymock.tests.UsageVerifyTest.twoThrows":226,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":309,"org.easymock.samples.ExampleTest.voteAgainstRemoval":253,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":12,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":358,"org.easymock.tests.LimitationsTest.privateConstructor":75,"org.easymock.tests2.UsageConstraintsTest.testNotNull":417,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":441,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":56,"org.easymock.tests2.UsageTest.defaultResetToNice":340,"org.easymock.samples.ExampleTest.voteAgainstRemovals":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":211,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":424,"org.easymock.tests.UsageVarargTest.differentLength":90,"org.easymock.tests2.CallbackTest.callback":362,"org.easymock.tests2.UsageConstraintsTest.equals":395,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":354,"org.easymock.tests.UsageTest.openCallCountByLastCall":114,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":391,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":231,"org.easymock.tests.UsageCallCountTest.tooFewCalls":28,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":463,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":45,"org.easymock.tests.UsageThrowableTest.throwCheckedException":53,"org.easymock.tests.MockingTest.testStrictClassMocking":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":466,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":48,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":462,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":429,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":465,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":440,"org.easymock.tests.ObjectMethodsTest.testHashCode":167,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":288,"org.easymock.tests2.NameTest.nameForNiceMock":326,"org.easymock.tests2.DependencyTest.testInterfaceMocking":330,"org.easymock.samples.ExampleTest.addDocument":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":311,"org.easymock.tests2.DelegateToTest.testStubDelegate":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":316,"org.easymock.tests2.AnswerTest.stubAnswer":439,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":157,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":278,"org.easymock.tests.UsageVarargTest.varargLongAccepted":92,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":10,"org.easymock.tests.UsageExpectAndReturnTest.floatType":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":420,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":454,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":411,"org.easymock.tests.UsageThrowableTest.noUpperLimit":50,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":61,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":392,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":383,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":480,"org.easymock.tests2.SerializationTest.test":458,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":490,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":147,"org.easymock.tests2.UsageConstraintsTest.testSame":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":197,"org.easymock.samples.SupportTest.addDocument":259,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":464,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":301,"org.easymock.tests.GenericTest.testPackageScope":97,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":5,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":453,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":71,"org.easymock.tests2.NameTest.nameForMock":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":208,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":282,"org.easymock.tests2.UsageStrictMockTest.differentMethods":381,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":355,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":136,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":165,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":219,"org.easymock.tests2.MockedExceptionTest.testRealException":444,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":41,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":14,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":378,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":230,"org.easymock.tests2.NameTest.nameForStrictMock":325,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":272,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":318,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":349,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":387,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":412,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":149,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":269,"org.easymock.tests2.UsageStrictMockTest.range":380,"org.easymock.tests2.UsageConstraintsTest.lessThan":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":9,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":364,"org.easymock.tests2.CaptureTest.testCaptureRightOne":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":305,"org.easymock.tests2.UsageConstraintsTest.testOr":399,"org.easymock.tests.UsageRangeTest.combination":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":346,"org.easymock.tests.UsageTest.wrongArguments":113,"org.easymock.tests2.MockBuilderTest.testWithConstructor":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":302,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":2,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":209,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":151,"org.easymock.tests.UsageVarargTest.varargShortAccepted":91,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":31,"org.easymock.tests2.UsageConstraintsTest.cmpTo":404,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":4,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":339,"org.easymock.tests2.CaptureTest.testCaptureFromStub":486,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":179,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":270,"org.easymock.tests.UsageTest.unexpectedCallWithArray":112,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":156,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":210,"org.easymock.tests2.UsageConstraintsTest.constraints":393,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":158,"org.easymock.samples.ExampleTest.addAndChangeDocument":257,"org.easymock.tests.UsageStrictMockTest.testVerify":162,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":258,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":155,"org.easymock.tests2.CompareToTest.testGreateThan":489,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":103,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":222,"org.easymock.tests.LimitationsTest.abstractClass":74,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":202,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":223,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":85,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":369}}]
