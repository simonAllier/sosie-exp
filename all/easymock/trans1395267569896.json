[{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[5,6,7,8,9,10,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"position":"org.easymock.internal.LastControl:95","failures":[14,15,16,17,18,19,20,21,22,23,24],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[15,17,19],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[26,27,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[30,31],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,14,15,53,16,54,17,18,55,56,57,58,59,60,61,62,63,64,20,65,66,67,68,21,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,22,1,23,84,85,86,87,88,89,90,24,2,3,91,92,93,94,95,96,97,98,99,100,101,102,103,104,30,31,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,26,27,28,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,4,4,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[308],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[14,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[309,14,55,60,70],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[55],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[115,121,122,167,221,310,227,228,231,232,240,289,290,302,305],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[16,67,105,266],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:252","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[312],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[313,314,315,316,317,318,319,320],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[62,96,117,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[161,162],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[321],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[322,323,324,325,227,302],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[326],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[32,33,33,34,34,43,44,48,5,327,75,76,328,329,77,78,79,80,330,81,82,331,83,92,93,95,96,97,98,99,332,333,100,101,102,103,334,335,107,108,109,336,337,135,136,137,138,140,141,338,339,340,341,342,343,155,344,345,156,346,347,348,349,350,351,311,352,353,157,354,355,356,357,358,158,359,360,26,28,361,362,363,210,211,212,364,365,366,234,367,368,369,370,371,372,373,12,251,252,374,13,375,376,377,378,379,380,381,382,383,267,384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.MocksControl:190","failures":[15,18,55,56,59,20,65,66,68,82,24,93,102,116,117,122,127,143,145,147,148,151,152,153,163,167,168,222,232,240,243,244,246,247,248,249,250,254,289,300,305,306],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[26,27,28,29],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[16,67,105,266],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[92,95,96,97,99,135,138,13,381],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[22,23,84,85,86,87,88,90,385,24,2,91],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[26,27,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[161,162],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[32,35,37,38,40,47,48,76,77,79,80,82,92,93,94,95,96,97,99,101,102,103,105,125,126,130,135,136,137,138,139,140,141,155,156,157,158,165,167,168,190,191,192,193,194,195,198,199,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,222,386,223,224,267,268,277,278,279,280,281,298,299,303,305,306],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[115,121,122,167,221,310,227,228,231,232,240,289,290,302,305],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":15,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":225,"org.easymock.tests2.UsageTest.argumentsOrdered":122,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":285,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":117,"org.easymock.tests2.StubTest.stubWithReturnValue":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":199,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":68,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":42,"org.easymock.tests2.SerializationTest.testAllMockedMethod":28,"org.easymock.tests2.DelegateToTest.testReturnException":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":283,"org.easymock.tests.MockingTest.testPartialClassMocking":210,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":323,"org.easymock.samples.SupportTest.voteForRemovals":47,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":12,"org.easymock.tests.MockClassControlTest.testToString":376,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":29,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":156,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":170,"org.easymock.tests.UsageExpectAndThrowTest.object":180,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":65,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":7,"org.easymock.tests2.DelegateToTest.testWrongClass":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":298,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":299,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":268,"org.easymock.tests2.UsageTest.wrongArguments":115,"org.easymock.tests.UsageStrictMockTest.range":305,"org.easymock.samples.ConstructorCalledMockTest.testTax":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":275,"org.easymock.samples.ExampleTest.answerVsDelegate":36,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":135,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":316,"org.easymock.tests2.UsageConstraintsTest.testNull":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":95,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":181,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":381,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":79,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":151,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":338,"org.easymock.tests2.CaptureTest.testPrimitive":84,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":341,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":231,"org.easymock.tests.UsageTest.moreThanOneArgument":226,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":274,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":94,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":215,"org.easymock.tests2.CaptureTest.testCaptureNone":89,"org.easymock.tests.UsageUnorderedTest.message":240,"org.easymock.tests.UsageVerifyTest.twoReturns":290,"org.easymock.tests.UsageVarargTest.varargByteAccepted":264,"org.easymock.tests2.ThreadingTest.testThreadSafe":104,"org.easymock.tests.UsageTest.argumentsOrdered":232,"org.easymock.tests.UsageVarargTest.varargIntAccepted":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":354,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":294,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":277,"org.easymock.tests2.CaptureTest.testCapture_2617107":23,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":75,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":271,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":78,"org.easymock.tests2.UsageConstraintsTest.any":56,"org.easymock.tests2.StubTest.stub":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":284,"org.easymock.tests.UsageExpectAndThrowTest.longType":173,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":371,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":312,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":111,"org.easymock.tests.LimitationsTest.mockNativeMethod":267,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":374,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":209,"org.easymock.tests2.AnswerTest.answer":159,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":19,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":74,"org.easymock.tests2.CaptureTest.testAnd":22,"org.easymock.tests2.UsageTest.strictResetToDefault":113,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":100,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":169,"org.easymock.tests2.MockedExceptionTest.testMockedException":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":146,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":230,"org.easymock.tests2.DelegateToTest.testDelegate":132,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":212,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":174,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":80,"org.easymock.tests.MockingTest.testNicePartialClassMocking":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":185,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":97,"org.easymock.tests.LimitationsTest.mockFinalMethod":384,"org.easymock.tests2.CaptureTest.testCaptureLast":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":286,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":239,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":66,"org.easymock.tests.MockingTest.testTwoMocks":363,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":25,"org.easymock.tests2.CaptureTest.testCapture1_2446744":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":183,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":72,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":178,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":69,"org.easymock.tests.UsageThrowableTest.throwError":243,"org.easymock.tests.UsageStrictMockTest.differentMethods":306,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":369,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":31,"org.easymock.tests2.MockBuilderTest.testCreateMockString":83,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":217,"org.easymock.tests.UsageExpectAndThrowTest.floatType":172,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":343,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":160,"org.easymock.tests.UsageVerifyTest.twoThrows":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":157,"org.easymock.samples.PartialClassMockTest.testGetArea":32,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":278,"org.easymock.samples.ExampleTest.voteAgainstRemoval":38,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":350,"org.easymock.tests2.UsageTest.niceToStrict":116,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":171,"org.easymock.tests.LimitationsTest.privateConstructor":383,"org.easymock.tests2.UsageConstraintsTest.testNotNull":21,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":250,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":107,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":320,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":77,"org.easymock.tests2.MockBuilderTest.testCreateMock":81,"org.easymock.tests2.UsageTest.defaultResetToNice":120,"org.easymock.samples.ExampleTest.voteAgainstRemovals":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":356,"org.easymock.tests.UsageVarargTest.differentLength":261,"org.easymock.tests2.CallbackTest.callback":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":332,"org.easymock.tests.UsageTest.openCallCountByLastCall":229,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":322,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":179,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":147,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":326,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":273,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":270,"org.easymock.tests.UsageCallCountTest.tooFewCalls":292,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":317,"org.easymock.tests.UsageOverloadedMethodTest.overloading":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":353,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":220,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":60,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":253,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":201,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":138,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":59,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":276,"org.easymock.tests.UsageThrowableTest.throwCheckedException":247,"org.easymock.tests.MockClassControlTest.testEquals":380,"org.easymock.tests2.EasyMockSupportClassTest.testAll":155,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":252,"org.easymock.tests.MockingTest.testStrictClassMocking":361,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":325,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":187,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":73,"org.easymock.tests2.CaptureTest.testCaptureAll":1,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":242,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":140,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":137,"org.easymock.tests2.UsageConstraintsTest.testMatches":61,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":139,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":216,"org.easymock.tests2.CompareToTest.testGreateOrEqual":309,"org.easymock.samples.ExampleTest.voteForRemovals":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":10,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":106,"org.easymock.tests.UsageVarargTest.allKinds":266,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":288,"org.easymock.tests2.DependencyTest.testInterfaceMocking":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":238,"org.easymock.samples.BasicClassMockTest.testPrintContent":44,"org.easymock.samples.ExampleTest.addDocument":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.DelegateToTest.testStubDelegate":130,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":249,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests2.AnswerTest.stubAnswer":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":287,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":303,"org.easymock.tests2.UsageConstraintsTest.greaterThan":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":386,"org.easymock.tests.UsageVarargTest.varargLongAccepted":263,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":103,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":307,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":373,"org.easymock.samples.ExampleTest.voteForRemoval":37,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":334,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":30,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":208,"org.easymock.tests.UsageExpectAndReturnTest.floatType":192,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":98,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":34,"org.easymock.tests.UsageThrowableTest.noUpperLimit":244,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":64,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":234,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":52,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":112,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":336,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":86,"org.easymock.tests2.SerializationTest.test":27,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":330,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":144,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":245,"org.easymock.tests2.UsageConstraintsTest.testSame":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":342,"org.easymock.samples.SupportTest.addDocument":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":282,"org.easymock.tests2.CaptureTest.testCaptureFirst":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":145,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":124,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":221,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":347,"org.easymock.tests.GenericTest.testPackageScope":251,"org.easymock.tests2.CaptureTest.testCapture2_2446744":3,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":105,"org.easymock.tests2.UsageTest.moreThanOneArgument":114,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":82,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":265,"org.easymock.tests.GenericTest.testBridgedEquals":13,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":318,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":315,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":296,"org.easymock.tests.UsageExpectAndReturnTest.longType":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":235,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":202,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":188,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":67,"org.easymock.tests2.UsageStrictMockTest.differentMethods":168,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":213,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":333,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":194,"org.easymock.tests.UsageCallCountTest.tooManyCalls":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":184,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":224,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":357,"org.easymock.tests2.MockedExceptionTest.testRealException":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":198,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":165,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":248,"org.easymock.tests.MockingTest.testNiceClassMocking":364,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":136,"org.easymock.tests.MockingTest.testClassMocking":362,"org.easymock.tests2.UsageConstraintsTest.testContains":58,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":109,"org.easymock.tests2.UsageConstraintsTest.testFind":53,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":255,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":314,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":96,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":300,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":50,"org.easymock.tests.UsageExpectAndReturnTest.object":200,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":337,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":370,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":20,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":76,"org.easymock.tests2.UsageStrictMockTest.range":167,"org.easymock.tests2.UsageConstraintsTest.lessThan":70,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":150,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":260,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":8,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":319,"org.easymock.tests.UsageTest.exactCallCountByLastCall":233,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":327,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":241,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":351,"org.easymock.tests2.CaptureTest.testCaptureRightOne":24,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":321,"org.easymock.tests2.UsageConstraintsTest.testOr":17,"org.easymock.tests.UsageRangeTest.combination":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":256,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":93,"org.easymock.tests.UsageTest.wrongArguments":228,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":219,"org.easymock.tests.MockClassControlTest.testHashCode":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":195,"org.easymock.tests2.EasyMockSupportTest.testVerify":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":311,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":372,"org.easymock.tests.UsageVarargTest.varargShortAccepted":262,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":218,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":71,"org.easymock.tests2.UsageConstraintsTest.cmpTo":57,"org.easymock.tests.UsageVarargTest.varargCharAccepted":259,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":164,"org.easymock.tests2.UsageTest.openCallCountByLastCall":118,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests.DefaultClassInstantiatorTest.object":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":313,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":153,"org.easymock.tests2.CaptureTest.testCaptureFromStub":2,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":328,"org.easymock.tests.UsageTest.unexpectedCallWithArray":227,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":177,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":340,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":302,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":246,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":293,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":204,"org.easymock.tests2.CaptureTest.testCapture":385,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":378,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":304,"org.easymock.tests2.UsageConstraintsTest.constraints":14,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":101,"org.easymock.samples.ExampleTest.addAndChangeDocument":41,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":176,"org.easymock.tests.CapturesMatcherTest.test":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":207,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":45,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":377,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":236,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":87,"org.easymock.tests2.UsageTest.resumeIfFailure":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":279,"org.easymock.tests.LimitationsTest.abstractClass":382,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":365,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":196,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":280,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":148}}]
