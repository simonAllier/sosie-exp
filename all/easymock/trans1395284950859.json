[{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[19,20],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[21,22,23,15,24,25,26,19,27,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[30],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:210","sourceCode":"return org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[0,1,2,31,3,4,32,5,6,33],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[35,36,37],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[38,39,34,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,77,78,78,79,80,14,81,82,25,83,26,84,16,85,17,86,29,87,18],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[60,88,89,61,62,90,91,63,92,93,94,64,65,66,67,68,69,95,96,97,98,70,71,79,99,100,101,102,103,104,105,21,106,22,107,108,109,110,111,112,113,23,80,114,115,116,117,118,14,81,15,24,82,25,83,26,19,20,27,119,120,84,121,16,85,122,17,86,28,123,124,125,126,29,87,18,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[13,14,17,126],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[77,78,127,128,129,130,5,131,132,6,35,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,37],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[59],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[162,7,163,164,8,165],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[166,37,167,168],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[121],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[169,0,1,2,31,3,32,130,5,6,35,33,37],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[170,171,172,173],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[174,175,176,177,178],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[166,37,167,168],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[130,5,6,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[60,88,89,179,180,181,182,183,184,185,186,187,188,189,59,190,191,192,193,61,62,90,91,63,92,93,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,94,64,211,174,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,38,39,34,40,41,42,43,44,45,46,47,48,49,50,51,52,258,53,54,55,56,57,259,58,260,261,262,263,65,66,67,68,69,95,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,96,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,97,98,310,311,312,313,314,315,316,317,318,319,320,321,322,70,71,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,176,177,360,361,362,363,162,7,163,164,364,8,165,72,73,74,75,76,365,366,367,368,369,370,371,372,77,78,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,79,99,178,398,399,400,401,402,403,404,405,406,407,127,408,409,410,411,128,129,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,100,432,130,5,433,434,435,436,437,438,439,440,441,171,442,443,444,445,35,446,447,448,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,449,450,451,452,453,454,455,456,101,457,458,102,172,173,459,460,461,462,463,464,465,466,467,103,468,104,105,469,470,471,472,473,21,106,22,107,108,109,110,111,112,113,23,80,114,115,116,474,475,476,477,478,479,480,481,482,483,484,485,117,486,487,488,489,490,118,491,492,493,494,495,496,497,498,499,500,14,81,15,24,501,82,25,83,26,19,20,27,119,120,84,121,16,85,122,17,86,28,123,124,125,126,29,87,18,37,167,168,502],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[503],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:205","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[270,366,469,471,473],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":24,"org.easymock.tests2.UsageTest.argumentsOrdered":422,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":249,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":47,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":417,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":374,"org.easymock.tests2.DelegateToTest.testReturnException":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":307,"org.easymock.tests.MockingTest.testPartialClassMocking":299,"org.easymock.tests.MockClassControlTest.testToString":326,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":433,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":145,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":335,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":395,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":0,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":20,"org.easymock.tests2.UsageTest.wrongArguments":415,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":61,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":496,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":362,"org.easymock.samples.ExampleTest.answerVsDelegate":366,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":320,"org.easymock.tests2.UsageConstraintsTest.testNull":25,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":304,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":452,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":482,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":331,"org.easymock.tests2.CaptureTest.testPrimitive":107,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":63,"org.easymock.tests.UsageTest.moreThanOneArgument":250,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":354,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":451,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":74,"org.easymock.tests.UsageTest.argumentsOrdered":256,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":310,"org.easymock.tests.UsageVarargTest.varargIntAccepted":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":52,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":65,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":438,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":390,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":69,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":118,"org.easymock.tests.ReplayStateInvalidUsageTest.times":201,"org.easymock.tests2.DependencyTest.testClassMocking":392,"org.easymock.tests2.AnswerTest.answer":462,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":53,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":500,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":317,"org.easymock.tests2.UsageTest.strictResetToDefault":413,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":477,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":357,"org.easymock.tests2.DelegateToTest.testDelegate":473,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":314,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":350,"org.easymock.tests.LimitationsTest.mockFinalMethod":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":267,"org.easymock.tests2.DependencyTest.testClassMockingSupport":393,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":243,"org.easymock.tests2.CaptureTest.testCapture1_2446744":108,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":456,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":498,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":195,"org.easymock.tests.UsageThrowableTest.throwError":215,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":319,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":76,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":159,"org.easymock.samples.PartialClassMockTest.testGetArea":373,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":196,"org.easymock.tests.MockingTest.testInterfaceMocking":301,"org.easymock.tests2.CompareToTest.testLessOrEqual":13,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":66,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":287,"org.easymock.tests2.UsageTest.niceToStrict":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":146,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":38,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":171,"org.easymock.tests2.MockBuilderTest.testCreateMock":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":154,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":344,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":478,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":316,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":180,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":181,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":360,"org.easymock.tests.UsageOverloadedMethodTest.overloading":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":150,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":16,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":234,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":332,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":121,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":113,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":278,"org.easymock.tests2.EasyMockSupportClassTest.testAll":138,"org.easymock.tests.MockClassControlTest.testEquals":330,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":191,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":499,"org.easymock.tests2.CaptureTest.testCaptureAll":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":265,"org.easymock.tests.MockNameTest.defaultName":323,"org.easymock.tests2.UsageConstraintsTest.testMatches":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":75,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":93,"org.easymock.samples.ExampleTest.voteForRemovals":370,"org.easymock.tests.UsageVarargTest.allKinds":96,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":359,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":266,"org.easymock.samples.BasicClassMockTest.testPrintContent":377,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":221,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":396,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":32,"org.easymock.tests2.UsageConstraintsTest.greaterThan":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":139,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":356,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":459,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":165,"org.easymock.samples.ExampleTest.voteForRemoval":367,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":460,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":430,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":321,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":455,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":412,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":263,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":475,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":306,"org.easymock.tests2.CaptureTest.testCaptureFirst":115,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":476,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":424,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":274,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":230,"org.easymock.tests2.UsageTest.moreThanOneArgument":414,"org.easymock.tests2.CaptureTest.testCapture2_2446744":114,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":100,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":54,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":285,"org.easymock.tests.GenericTest.testBridgedEquals":193,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":188,"org.easymock.tests.UsageExpectAndReturnTest.longType":226,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":353,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":125,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":295,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":72,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":261,"org.easymock.tests.UsageCallCountTest.tooManyCalls":189,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":155,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":231,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":495,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":340,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":220,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":407,"org.easymock.tests.MockingTest.testNiceClassMocking":305,"org.easymock.tests.MockingTest.testClassMocking":297,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":182,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":170,"org.easymock.tests2.UsageConstraintsTest.testContains":84,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":427,"org.easymock.tests2.UsageConstraintsTest.testFind":82,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":334,"org.easymock.tests.MockTypeTest.fromEasyMockClass":318,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":104,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":209,"org.easymock.tests.UsageExpectAndReturnTest.object":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":494,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":481,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":1,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":280,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":292,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":30,"org.easymock.tests.UsageTest.exactCallCountByLastCall":257,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":42,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":246,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":311,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":239,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":275,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":270,"org.easymock.tests.MockClassControlTest.testHashCode":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":381,"org.easymock.tests2.EasyMockSupportTest.testVerify":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":148,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":312,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":179,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":497,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":117,"org.easymock.tests.UsageVarargTest.varargCharAccepted":279,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":58,"org.easymock.tests2.UsageTest.openCallCountByLastCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":484,"org.easymock.tests.DefaultClassInstantiatorTest.object":162,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":89,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":149,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":489,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":380,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":172,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":341,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":240,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":157,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":327,"org.easymock.tests2.UsageTest.resumeIfFailure":423,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":309,"org.easymock.tests2.StubTest.stubWithReturnValue":401,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":126,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":232,"org.easymock.tests2.SerializationTest.testAllMockedMethod":168,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":258,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":36,"org.easymock.samples.SupportTest.voteForRemovals":379,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":347,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":166,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":259,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":463,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":248,"org.easymock.tests.UsageExpectAndThrowTest.object":345,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":123,"org.easymock.tests2.DelegateToTest.testWrongClass":471,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":70,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":71,"org.easymock.tests.UsageStrictMockTest.range":174,"org.easymock.samples.ConstructorCalledMockTest.testTax":77,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":404,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":480,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":346,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":135,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":203,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":255,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":361,"org.easymock.tests2.CaptureTest.testCaptureNone":112,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":288,"org.easymock.tests.UsageUnorderedTest.message":92,"org.easymock.tests.UsageVerifyTest.twoReturns":177,"org.easymock.tests.UsageVarargTest.varargByteAccepted":284,"org.easymock.tests2.ThreadingTest.testThreadSafe":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":152,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":186,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":293,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":376,"org.easymock.tests2.CaptureTest.testCapture_2617107":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":91,"org.easymock.tests2.UsageConstraintsTest.any":119,"org.easymock.tests2.StubTest.stub":400,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":200,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":308,"org.easymock.tests.UsageExpectAndThrowTest.longType":338,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":364,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":199,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":99,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":385,"org.easymock.tests2.SerializationTest.testClass":37,"org.easymock.tests.LimitationsTest.mockNativeMethod":207,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":192,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":242,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":488,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":399,"org.easymock.tests2.NameTest.nameForMocksControl":437,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":490,"org.easymock.tests2.MockedExceptionTest.testMockedException":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":140,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":254,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":468,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":302,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":339,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":449,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":444,"org.easymock.tests.MockingTest.testNicePartialClassMocking":300,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":454,"org.easymock.tests2.CompareToTest.testNotComparable":503,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":486,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":169,"org.easymock.tests2.CaptureTest.testCaptureLast":111,"org.easymock.tests2.CompareToTest.testCompareEqual":11,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":244,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":128,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":19,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":124,"org.easymock.tests.MockingTest.testTwoMocks":298,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":343,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":421,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":87,"org.easymock.samples.ExampleTest.removeNonExistingDocument":371,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":492,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":197,"org.easymock.tests.UsageStrictMockTest.differentMethods":212,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":382,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":163,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":431,"org.easymock.tests2.MockBuilderTest.testCreateMockString":448,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":142,"org.easymock.tests.UsageExpectAndThrowTest.floatType":337,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":137,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":465,"org.easymock.tests.UsageVerifyTest.twoThrows":176,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":151,"org.easymock.samples.ExampleTest.voteAgainstRemoval":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":48,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":286,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":173,"org.easymock.tests.LimitationsTest.privateConstructor":206,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":161,"org.easymock.tests2.UsageConstraintsTest.testNotNull":29,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":425,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":222,"org.easymock.tests2.UsageTest.defaultResetToNice":420,"org.easymock.samples.ExampleTest.voteAgainstRemovals":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":238,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":487,"org.easymock.tests.UsageVarargTest.differentLength":281,"org.easymock.tests2.CallbackTest.callback":502,"org.easymock.tests2.UsageConstraintsTest.equals":501,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":457,"org.easymock.tests.UsageTest.openCallCountByLastCall":253,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":90,"org.easymock.tests.UsageCallCountTest.tooFewCalls":184,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":408,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":363,"org.easymock.tests.UsageThrowableTest.throwCheckedException":219,"org.easymock.tests.MockingTest.testStrictClassMocking":296,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":411,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":491,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":127,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":410,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":467,"org.easymock.tests2.CompareToTest.testGreateOrEqual":12,"org.easymock.tests.ObjectMethodsTest.testHashCode":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":3,"org.easymock.tests2.NameTest.nameForNiceMock":436,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":432,"org.easymock.tests2.DependencyTest.testInterfaceMocking":394,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":2,"org.easymock.samples.ExampleTest.addDocument":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":153,"org.easymock.tests2.DelegateToTest.testStubDelegate":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":158,"org.easymock.tests2.AnswerTest.stubAnswer":466,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":64,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":445,"org.easymock.tests.UsageVarargTest.varargLongAccepted":283,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":46,"org.easymock.tests.UsageExpectAndReturnTest.floatType":225,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":241,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":130,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":389,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":86,"org.easymock.tests.UsageThrowableTest.noUpperLimit":216,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":272,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":81,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":402,"org.easymock.tests2.SerializationTest.test":167,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":109,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":7,"org.easymock.tests2.UsageConstraintsTest.testSame":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":224,"org.easymock.samples.SupportTest.addDocument":378,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":409,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":143,"org.easymock.tests.GenericTest.testPackageScope":190,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":41,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":388,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":303,"org.easymock.tests2.NameTest.nameForMock":434,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":235,"org.easymock.tests2.UsageStrictMockTest.differentMethods":398,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":134,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":458,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":227,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":349,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":289,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":358,"org.easymock.tests2.MockedExceptionTest.testRealException":428,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":322,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":50,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":62,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":204,"org.easymock.tests2.NameTest.nameForStrictMock":435,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":441,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":103,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":453,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":403,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":164,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":28,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":439,"org.easymock.tests2.UsageStrictMockTest.range":178,"org.easymock.tests2.UsageConstraintsTest.lessThan":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":384,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":147,"org.easymock.tests2.CaptureTest.testCaptureRightOne":23,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":355,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":450,"org.easymock.tests.UsageTest.wrongArguments":252,"org.easymock.tests2.MockBuilderTest.testWithConstructor":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":144,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":236,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":8,"org.easymock.tests.UsageVarargTest.varargShortAccepted":282,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":187,"org.easymock.tests2.UsageConstraintsTest.cmpTo":120,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":464,"org.easymock.tests2.CompareToTest.testLessThan":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":40,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":419,"org.easymock.tests2.CaptureTest.testCaptureFromStub":80,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":194,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":440,"org.easymock.tests.UsageTest.unexpectedCallWithArray":251,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":185,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":237,"org.easymock.tests2.UsageConstraintsTest.constraints":15,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.samples.ExampleTest.addAndChangeDocument":372,"org.easymock.tests.UsageStrictMockTest.testVerify":214,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":375,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":210,"org.easymock.tests2.CompareToTest.testGreateThan":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":264,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":67,"org.easymock.tests.LimitationsTest.abstractClass":205,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":68,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":479,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":175,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":276}}]
