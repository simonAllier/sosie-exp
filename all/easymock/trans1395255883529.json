[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[9,10,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[14,15,16],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[17,18,19,20,21,22,23,27,24,12,25,28,29,30,26,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[12,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[33,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.RecordState:243","failures":[36,37,38,39,9,40,17,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,10,11,12,61,62,63,64,65,66,67,68,69,70,71,1,2,72,73,74,3,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[26,31,114,115],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[116,117,27,118,119],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[120,121,36,122,37,38,123,39,124,125,9,126,40,127,128,129,130,17,18,131,132,133,134,135,41,136,137,42,138,139,140,141,142,143,144,145,146,43,147,148,149,150,151,44,152,153,116,154,117,155,156,157,158,159,160,161,162,45,163,164,165,46,166,47,48,167,27,168,169,170,171,172,173,174,175,176,177,178,179,180,49,50,51,52,53,54,181,15,55,182,183,184,56,57,58,185,186,187,188,189,118,190,191,192,193,59,194,195,196,197,198,199,200,33,201,202,203,204,205,206,207,208,209,210,60,211,212,213,10,214,11,24,12,215,25,28,61,216,29,217,218,219,220,221,30,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,62,63,26,31,114,64,65,66,67,263,68,69,70,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,71,312,313,314,315,316,317,32,318,319,320,321,322,323,324,325,0,1,2,326,327,328,72,329,73,74,330,331,332,333,334,335,336,337,338,339,340,341,3,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,4,361,5,362,119,363,34,364,365,366,367,6,7,35,8,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,75,76,77,78,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,79,418,80,419,420,421,422,81,82,423,424,83,425,84,85,86,87,88,426,427,428,89,90,429,91,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,92,93,94,95,448,449,450,451,452,453,454,96,455,456,457,458,97,98,99,100,101,102,459,460,103,104,461,105,106,107,462,108,109,110,111,112,113,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[18,19,20,21,497,498,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[36,122,37,38,123,39,124,125,17,132,41,116,117,156,157,158,159,160,161,162,45,163,164,165,46,166,47,48,167,27,49,50,51,52,53,54,181,55,183,184,56,57,58,185,187,118,190,191,193,59,194,196,197,198,199,200,33,201,203,204,205,206,208,209,60,211,213,10,214,28,61,29,228,229,230,231,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,62,26,31,114,65,66,69,70,265,266,267,268,269,270,271,272,273,274,275,276,277,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,32,320,321,322,323,324,325,326,327,328,72,329,73,74,330,331,333,334,335,336,337,338,339,340,343,344,345,346,347,348,349,350,351,369,377,378,379,381,382,383,75,76,77,78,386,387,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,79,418,81,82,83,84,85,86,87,88,426,427,89,90,429,91,430,431,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,92,93,94,95,448,96,455,456,457,458,97,98,99,100,101,102,459,460,103,104,461,105,106,107,462,108,109,110,111,112,113,463,464,465,466,467,468,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[499,500],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[454],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[222,284,321],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[439],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[228,230,247,253,501],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[36,122,37,38,39,125,9,40,164,165,46,166,47,48,167,27,168,169,170,171,173,174,177,178,179,50,53,57,190,59,196,33,201,10,61,228,229,231,233,234,235,236,237,238,240,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,266,269,270,274,275,291,292,293,294,295,296,297,298,299,300,302,303,304,305,307,308,309,310,311,316,325,326,327,72,329,73,74,330,346,348,351,378,75,81,82,84,85,86,87,88,433,96,455,456,457,458,463,466,467,468,470,471,473,474,475,476,477,478,491,492],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"failures":[120,120,121,121,9,127,128,17,18,133,134,135,41,136,137,42,138,139,140,141,142,143,144,145,146,43,147,148,149,150,151,44,152,153,49,50,52,53,54,181,55,182,183,184,56,57,58,185,186,197,198,199,202,206,209,60,211,213,10,214,11,12,25,28,61,29,26,114,64,65,66,67,69,70,32,322,333,334,335,336,337,338,339,340,369,370,371,372,373,374,376,417,79,418,80,419,423,424,83,425,426,427,428,89,90,91,432,465],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[190,191],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[120,121,36,122,37,38,123,39,124,125,9,126,40,127,128,129,130,17,18,131,132,133,134,135,41,136,137,42,138,139,140,141,142,143,144,145,146,43,147,148,149,150,151,44,152,153,116,154,117,155,156,157,158,159,160,161,162,45,163,164,165,46,166,47,48,167,27,168,169,170,171,172,173,174,175,176,177,178,179,180,49,50,51,52,53,54,181,15,55,182,183,184,56,57,58,185,186,187,188,189,118,190,191,192,193,59,194,195,196,197,198,199,200,33,201,202,203,204,205,206,207,208,209,210,60,211,212,213,10,214,11,24,12,215,25,28,61,216,29,217,218,219,220,221,30,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,62,63,26,31,114,64,65,66,67,263,68,69,70,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,71,312,313,314,315,316,317,32,318,319,320,321,322,323,324,325,0,1,2,326,327,328,72,329,73,74,330,331,332,333,334,335,336,337,338,339,340,341,3,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,4,361,5,362,119,363,34,364,365,366,367,6,7,35,8,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,75,76,77,78,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,79,418,80,419,420,421,422,81,82,423,424,83,425,84,85,86,87,88,426,427,428,89,90,429,91,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,92,93,94,95,448,449,450,451,452,453,454,96,455,456,457,458,97,98,99,100,101,102,459,460,103,104,461,105,106,107,462,108,109,110,111,112,113,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[120,120,121,121,9,127,128,17,41,42,43,44,502,503,49,50,52,53,54,181,55,184,56,57,58,199,209,504,60,211,10,214,11,12,28,61,13,29,26,114,64,65,66,67,69,70,32,322,334,79,418,80,83,428,89,90,91,465],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[505],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[230,292,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[120,120,121,121,36,122,37,38,123,39,125,9,126,40,127,128,129,130,17,41,42,43,44,116,117,156,157,158,159,160,161,162,45,163,164,165,46,166,47,48,167,27,168,169,170,171,172,173,174,175,176,177,178,179,180,49,50,51,52,53,54,55,184,57,187,118,190,191,193,59,194,196,197,198,199,200,33,201,209,10,214,11,12,61,29,30,228,229,230,231,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,62,63,26,31,114,64,65,66,67,68,69,70,265,266,267,268,269,270,271,272,273,274,275,276,277,283,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,325,326,327,328,72,329,73,74,330,331,334,343,344,345,346,347,348,377,378,379,75,76,77,78,391,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,79,418,81,82,83,84,85,86,87,88,89,90,91,437,439,440,442,445,447,92,93,94,95,448,96,455,456,457,458,97,98,99,100,101,102,459,460,103,104,461,105,106,107,462,108,109,110,111,112,463,464,465,466,467,468,470,471,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[88,93,100,104,109,110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":231,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":485,"org.easymock.tests2.UsageTest.argumentsOrdered":275,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":178,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":361,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":270,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":130,"org.easymock.tests2.DelegateToTest.testReturnException":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":313,"org.easymock.tests.MockingTest.testPartialClassMocking":89,"org.easymock.tests.MockClassControlTest.testToString":335,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":155,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":3,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":397,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":42,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":63,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":19,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":238,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":96,"org.easymock.tests2.UsageTest.wrongArguments":268,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":395,"org.easymock.samples.ExampleTest.answerVsDelegate":122,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":322,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":431,"org.easymock.tests2.UsageConstraintsTest.testNull":234,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":52,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":177,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":340,"org.easymock.tests2.CaptureTest.testPrimitive":293,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":458,"org.easymock.tests.UsageTest.moreThanOneArgument":486,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":416,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":94,"org.easymock.tests.UsageTest.argumentsOrdered":492,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":450,"org.easymock.tests.UsageVarargTest.varargIntAccepted":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":209,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":288,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":88,"org.easymock.tests.ReplayStateInvalidUsageTest.times":444,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":30,"org.easymock.tests2.DependencyTest.testClassMocking":261,"org.easymock.tests2.AnswerTest.answer":187,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":260,"org.easymock.tests2.CaptureTest.testAnd":290,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":319,"org.easymock.tests2.UsageTest.strictResetToDefault":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":77,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":454,"org.easymock.tests2.DelegateToTest.testDelegate":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":412,"org.easymock.tests.LimitationsTest.mockFinalMethod":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":484,"org.easymock.tests2.DependencyTest.testClassMockingSupport":262,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":433,"org.easymock.tests2.CaptureTest.testCapture1_2446744":294,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":258,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":438,"org.easymock.tests.UsageThrowableTest.throwError":304,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":321,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":449,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":153,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":439,"org.easymock.tests.MockingTest.testInterfaceMocking":429,"org.easymock.tests2.CompareToTest.testLessOrEqual":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":85,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":1,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":398,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":142,"org.easymock.tests2.UsageTest.niceToStrict":269,"org.easymock.tests2.ThreadingTest.testChangeDefault":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":352,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":10,"org.easymock.tests2.MockBuilderTest.testCreateMock":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":149,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":224,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":406,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":173,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":318,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":496,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":393,"org.easymock.tests.UsageOverloadedMethodTest.overloading":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":146,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":389,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":244,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":105,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":243,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":299,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":469,"org.easymock.tests2.EasyMockSupportClassTest.testAll":41,"org.easymock.tests.MockClassControlTest.testEquals":339,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":418,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":414,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":502,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":482,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":259,"org.easymock.tests2.CaptureTest.testCaptureAll":291,"org.easymock.tests.MockNameTest.defaultName":332,"org.easymock.tests2.UsageConstraintsTest.testMatches":245,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":436,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":95,"org.easymock.samples.ExampleTest.voteForRemovals":39,"org.easymock.tests.UsageVarargTest.allKinds":477,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":377,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":483,"org.easymock.samples.BasicClassMockTest.testPrintContent":128,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":310,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":164,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":317,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":23,"org.easymock.tests2.UsageConstraintsTest.greaterThan":247,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":136,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":76,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":58,"org.easymock.samples.ExampleTest.voteForRemoval":37,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":376,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":185,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":161,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":323,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":181,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":465,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":265,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":170,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":312,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":192,"org.easymock.tests2.CaptureTest.testCaptureFirst":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":171,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":277,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":460,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":45,"org.easymock.tests2.UsageTest.moreThanOneArgument":267,"org.easymock.tests2.CaptureTest.testCapture2_2446744":302,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":366,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":476,"org.easymock.tests.GenericTest.testBridgedEquals":419,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":350,"org.easymock.tests.UsageExpectAndReturnTest.longType":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":480,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":415,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":13,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":71,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":252,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":413,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":92,"org.easymock.tests.UsageCallCountTest.tooManyCalls":351,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":402,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":309,"org.easymock.tests.MockingTest.testNiceClassMocking":432,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":65,"org.easymock.tests.MockingTest.testClassMocking":427,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":504,"org.easymock.tests2.UsageConstraintsTest.testContains":242,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":344,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":199,"org.easymock.tests2.UsageConstraintsTest.testFind":233,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":464,"org.easymock.tests.MockTypeTest.fromEasyMockClass":320,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":117,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":326,"org.easymock.tests.UsageExpectAndReturnTest.object":461,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":176,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":471,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":20,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":383,"org.easymock.tests.UsageTest.exactCallCountByLastCall":493,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":451,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":341,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":18,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":466,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":109,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":388,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":279,"org.easymock.tests.MockClassControlTest.testHashCode":338,"org.easymock.tests2.EasyMockSupportTest.testVerify":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":144,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":452,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":495,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":386,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":257,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":132,"org.easymock.tests.UsageVarargTest.varargCharAccepted":470,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":368,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":8,"org.easymock.tests2.UsageTest.openCallCountByLastCall":271,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":179,"org.easymock.tests.DefaultClassInstantiatorTest.object":369,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":494,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":381,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":145,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":220,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":278,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":56,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":337,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":403,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":110,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":44,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":336,"org.easymock.tests2.UsageTest.resumeIfFailure":276,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":315,"org.easymock.tests2.StubTest.stubWithReturnValue":201,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":104,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":253,"org.easymock.tests2.SerializationTest.testAllMockedMethod":114,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":364,"org.easymock.samples.SupportTest.voteForRemovals":40,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":417,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":409,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":115,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":35,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":188,"org.easymock.tests.UsageExpectAndThrowTest.object":407,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":342,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":250,"org.easymock.tests2.DelegateToTest.testWrongClass":194,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":81,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":82,"org.easymock.samples.ConstructorCalledMockTest.testTax":120,"org.easymock.tests.UsageStrictMockTest.range":73,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":207,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":175,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":408,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":11,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":491,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":133,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":394,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":2,"org.easymock.tests2.CaptureTest.testCaptureNone":298,"org.easymock.tests.UsageUnorderedTest.message":325,"org.easymock.tests.UsageVerifyTest.twoReturns":379,"org.easymock.tests.UsageVarargTest.varargByteAccepted":475,"org.easymock.tests2.ThreadingTest.testThreadSafe":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":147,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":348,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":384,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":127,"org.easymock.tests2.CaptureTest.testCapture_2617107":292,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":6,"org.easymock.tests2.UsageConstraintsTest.any":240,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":443,"org.easymock.tests2.StubTest.stub":33,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":422,"org.easymock.tests.UsageExpectAndThrowTest.longType":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":314,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":373,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":442,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":283,"org.easymock.tests.LimitationsTest.mockNativeMethod":83,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":112,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":80,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":219,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":167,"org.easymock.tests2.NameTest.nameForMocksControl":159,"org.easymock.tests2.MockedExceptionTest.testMockedException":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":137,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":490,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":401,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":154,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":91,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":12,"org.easymock.tests.MockingTest.testNicePartialClassMocking":90,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":54,"org.easymock.tests2.CompareToTest.testNotComparable":505,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":217,"org.easymock.tests2.CaptureTest.testCaptureLast":297,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":434,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":70,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":237,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":251,"org.easymock.tests.MockingTest.testTwoMocks":428,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":405,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":274,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":255,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":16,"org.easymock.samples.ExampleTest.removeNonExistingDocument":124,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":440,"org.easymock.tests.UsageStrictMockTest.differentMethods":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":280,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":500,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":371,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":162,"org.easymock.tests2.MockBuilderTest.testCreateMockString":29,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":333,"org.easymock.tests.UsageExpectAndThrowTest.floatType":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":138,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":135,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":131,"org.easymock.tests.UsageVerifyTest.twoThrows":378,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":43,"org.easymock.samples.ExampleTest.voteAgainstRemoval":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":0,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":57,"org.easymock.tests.LimitationsTest.privateConstructor":424,"org.easymock.tests2.UsageConstraintsTest.testNotNull":254,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":197,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":311,"org.easymock.tests2.UsageTest.defaultResetToNice":273,"org.easymock.samples.ExampleTest.voteAgainstRemovals":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":362,"org.easymock.tests.UsageVarargTest.differentLength":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":218,"org.easymock.tests2.CallbackTest.callback":27,"org.easymock.tests2.UsageConstraintsTest.equals":232,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":182,"org.easymock.tests.UsageTest.openCallCountByLastCall":489,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":456,"org.easymock.tests.UsageCallCountTest.tooFewCalls":346,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":67,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":396,"org.easymock.tests.UsageThrowableTest.throwCheckedException":308,"org.easymock.tests.MockingTest.testStrictClassMocking":426,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":479,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":69,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":222,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":445,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":68,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":191,"org.easymock.tests.ObjectMethodsTest.testHashCode":382,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":497,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":163,"org.easymock.tests2.NameTest.nameForNiceMock":158,"org.easymock.tests2.DependencyTest.testInterfaceMocking":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":21,"org.easymock.samples.ExampleTest.addDocument":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":152,"org.easymock.tests2.DelegateToTest.testStubDelegate":59,"org.easymock.tests2.AnswerTest.stubAnswer":190,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":72,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":215,"org.easymock.tests.UsageVarargTest.varargLongAccepted":474,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":4,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":111,"org.easymock.tests.UsageExpectAndReturnTest.floatType":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":17,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":121,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":248,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":287,"org.easymock.tests.UsageThrowableTest.noUpperLimit":305,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":229,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":202,"org.easymock.tests2.SerializationTest.test":31,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":295,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":98,"org.easymock.tests2.UsageConstraintsTest.testSame":235,"org.easymock.samples.SupportTest.addDocument":126,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":263,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":139,"org.easymock.tests.GenericTest.testPackageScope":79,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":286,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":430,"org.easymock.tests2.NameTest.nameForMock":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":106,"org.easymock.tests2.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":216,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":101,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":411,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":380,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":78,"org.easymock.tests2.MockedExceptionTest.testRealException":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":324,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":119,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":455,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":447,"org.easymock.tests2.NameTest.nameForStrictMock":157,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":213,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":116,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":53,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":206,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":249,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":372,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":60,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests2.UsageConstraintsTest.lessThan":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":282,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":143,"org.easymock.tests2.CaptureTest.testCaptureRightOne":300,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":499,"org.easymock.tests2.UsageConstraintsTest.testOr":236,"org.easymock.tests.UsageRangeTest.combination":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageTest.wrongArguments":488,"org.easymock.tests2.MockBuilderTest.testWithConstructor":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":140,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":353,"org.easymock.tests.UsageVarargTest.varargShortAccepted":473,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":374,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":349,"org.easymock.tests2.UsageConstraintsTest.cmpTo":241,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":355,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":272,"org.easymock.tests2.CaptureTest.testCaptureFromStub":301,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":437,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":211,"org.easymock.tests.UsageTest.unexpectedCallWithArray":487,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":347,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":462,"org.easymock.tests2.UsageConstraintsTest.constraints":230,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":329,"org.easymock.samples.ExampleTest.addAndChangeDocument":125,"org.easymock.tests.UsageStrictMockTest.testVerify":331,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":129,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":481,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":296,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":503,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":86,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":459,"org.easymock.tests.LimitationsTest.abstractClass":423,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":87,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":174}}]
