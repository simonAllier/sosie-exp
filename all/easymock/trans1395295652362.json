[{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,0,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[2,246,14,15,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,48,49,50,51,56,57,247,59,61,63,65,66,69,70,71,72,75,79,80,81,82,85,86,88,90,92,0,95,96,98,99,101,107,109,110,116,248,125,127,129,130,133,135,136,137,138,140,141,142,143,145,146,147,148,152,153,154,155,156,158,159,162,164,165,166,167,169,170,171,172,174,175,176,177,195,198,199,200,201,202,205,206,207,208,220,221,224,226,249,227,228,233,235,236,238,239,241,242,244,245],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[27,28,30,32,33,250,44,49,62,64,72],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[251,252,253,254,255,256],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[257,258,259,260,261,262],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[78,263,223,264,265],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[266,225],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[267,268,269,270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[28,32],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[271],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[10,11,246,251,251,252,252,21,273,274,275,276,277,278,279,280,247,281,282,283,284,285,286,287,288,77,103,289,290,104,291,292,112,113,115,116,117,293,118,294,295,248,296,120,297,298,299,300,271,301,302,149,150,303,157,304,305,306,213],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[307,308,309,310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[265],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[288,76,77,311],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[288,76,77],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[42,312],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[19,20,21,22,79,94,99,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,195,197,198,199,200,201,202,313,307,308,205,208,222,223,314,309,310,231,239,245],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[288,76,77,311],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[315,63,73,74,316],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[317,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[318],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[319,56,57,320],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,246,12,13,14,15,16,17,18,321,322,323,324,21,23,24,25,26,27,28,29,30,31,32,33,34,250,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,273,54,55,56,57,279,247,282,283,285,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,288,76,77,78,79,80,81,82,83,84,85,86,325,87,88,89,90,91,92,93,94,0,95,326,96,97,98,99,327,100,328,101,102,103,289,290,104,105,291,292,329,106,107,108,109,110,111,112,113,114,115,116,117,118,295,248,296,119,120,297,298,299,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,271,301,302,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,183,184,185,186,187,188,189,330,190,191,192,193,194,195,196,197,198,199,200,201,202,205,206,331,207,208,209,332,210,213,333,214,215,216,217,218,219,220,221,222,223,224,334,225,226,249,227,228,229,230,231,335,336,232,337,233,234,235,236,237,338,238,239,240,241,242,243,244,245],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,3,4,6,246,13,14,15,16,17,18,21,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,273,56,279,247,282,283,285,59,62,63,65,66,69,70,71,72,74,75,288,76,79,80,81,82,83,84,85,86,325,87,88,89,90,93,94,0,95,96,98,99,327,101,102,103,289,290,104,105,291,292,107,109,110,112,113,114,115,116,117,118,295,248,296,119,120,297,298,299,127,271,301,302,149,303,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,195,197,198,199,200,201,202,339,340,205,206,207,208,210,220,221,224,341,226,249,227,228,335,233,235,236,238,240,241,242,243,244,245],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[25,42,48,342],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[343,151],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[344],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[25,27,42,48,342],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[345,346,347,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":28,"org.easymock.tests2.UsageTest.argumentsOrdered":328,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":205,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":124,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":97,"org.easymock.tests2.StubTest.stubWithReturnValue":79,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":48,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":167,"org.easymock.tests2.SerializationTest.testAllMockedMethod":77,"org.easymock.tests2.DelegateToTest.testReturnException":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":122,"org.easymock.tests.MockingTest.testPartialClassMocking":271,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":343,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":141,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":311,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":297,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":265,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":129,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":319,"org.easymock.tests.UsageExpectAndThrowTest.object":139,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":53,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":45,"org.easymock.tests2.DelegateToTest.testWrongClass":60,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":242,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":34,"org.easymock.tests2.UsageTest.wrongArguments":326,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":220,"org.easymock.samples.ConstructorCalledMockTest.testTax":251,"org.easymock.tests.UsageStrictMockTest.range":235,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":325,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":103,"org.easymock.tests2.UsageConstraintsTest.testNull":30,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":282,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":204,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":88,"org.easymock.tests2.CaptureTest.testPrimitive":65,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":224,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":209,"org.easymock.tests.UsageTest.moreThanOneArgument":206,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":148,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":180,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":340,"org.easymock.tests2.CaptureTest.testCaptureNone":70,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":272,"org.easymock.tests.UsageUnorderedTest.message":225,"org.easymock.tests.UsageVerifyTest.twoReturns":240,"org.easymock.tests.UsageVarargTest.varargByteAccepted":192,"org.easymock.tests2.ThreadingTest.testThreadSafe":14,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":345,"org.easymock.tests.UsageTest.argumentsOrdered":332,"org.easymock.tests.UsageVarargTest.varargIntAccepted":187,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":217,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":264,"org.easymock.tests2.CaptureTest.testCapture_2617107":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":152,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":277,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":223,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":281,"org.easymock.tests2.UsageConstraintsTest.any":35,"org.easymock.tests2.StubTest.stub":78,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":123,"org.easymock.tests.UsageExpectAndThrowTest.longType":132,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":108,"org.easymock.tests2.SerializationTest.testClass":288,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":93,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests.LimitationsTest.mockNativeMethod":157,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":303,"org.easymock.tests2.AnswerTest.answer":54,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":177,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":250,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":276,"org.easymock.tests2.CaptureTest.testAnd":62,"org.easymock.tests2.UsageTest.strictResetToDefault":0,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":294,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":111,"org.easymock.tests2.NameTest.nameForMocksControl":324,"org.easymock.tests2.MockedExceptionTest.testMockedException":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":84,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":347,"org.easymock.tests2.DelegateToTest.testDelegate":61,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":302,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":133,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":283,"org.easymock.tests.MockingTest.testNicePartialClassMocking":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":144,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":117,"org.easymock.tests2.CompareToTest.testCompareEqual":344,"org.easymock.tests2.CaptureTest.testCaptureLast":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":292,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":33,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":46,"org.easymock.tests.MockingTest.testTwoMocks":300,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":334,"org.easymock.tests2.CaptureTest.testCapture1_2446744":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":158,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":137,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":50,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":263,"org.easymock.tests.UsageThrowableTest.throwError":195,"org.easymock.tests.UsageStrictMockTest.differentMethods":236,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":259,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":16,"org.easymock.tests2.MockBuilderTest.testCreateMockString":287,"org.easymock.tests.UsageExpectAndThrowTest.floatType":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":182,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":41,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":55,"org.easymock.tests.UsageVerifyTest.twoThrows":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":298,"org.easymock.samples.PartialClassMockTest.testGetArea":246,"org.easymock.tests2.CompareToTest.testLessOrEqual":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":153,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":339,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":248,"org.easymock.tests2.UsageTest.niceToStrict":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":130,"org.easymock.tests2.UsageConstraintsTest.testNotNull":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":202,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":19,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":247,"org.easymock.tests2.UsageTest.defaultResetToNice":327,"org.easymock.tests2.MockBuilderTest.testCreateMock":284,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":173,"org.easymock.tests.UsageVarargTest.differentLength":330,"org.easymock.tests2.CallbackTest.callback":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":256,"org.easymock.tests.UsageTest.openCallCountByLastCall":207,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":138,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":85,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":25,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":333,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":222,"org.easymock.tests.UsageCallCountTest.tooFewCalls":215,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":268,"org.easymock.tests.UsageOverloadedMethodTest.overloading":244,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":231,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":39,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":243,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":104,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":169,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":38,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":71,"org.easymock.tests.UsageThrowableTest.throwCheckedException":199,"org.easymock.tests.MockClassControlTest.testEquals":203,"org.easymock.tests2.EasyMockSupportClassTest.testAll":120,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":150,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":146,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":274,"org.easymock.tests2.CaptureTest.testCaptureAll":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":291,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":128,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":290,"org.easymock.tests2.UsageConstraintsTest.testMatches":40,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":105,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":57,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":181,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests2.NameTest.nameForNiceMock":323,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":18,"org.easymock.tests.UsageVarargTest.allKinds":194,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":238,"org.easymock.tests2.DependencyTest.testInterfaceMocking":52,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.DelegateToTest.testStubDelegate":59,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":201,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":329,"org.easymock.tests2.AnswerTest.stubAnswer":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":126,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":233,"org.easymock.tests2.UsageConstraintsTest.greaterThan":42,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":296,"org.easymock.tests.UsageVarargTest.varargLongAccepted":191,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":237,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":262,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":15,"org.easymock.tests.UsageExpectAndReturnTest.floatType":160,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":176,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":273,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":252,"org.easymock.tests.UsageThrowableTest.noUpperLimit":196,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":43,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":213,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":94,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":26,"org.easymock.tests2.SerializationTest.test":76,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":67,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":82,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":197,"org.easymock.tests2.UsageConstraintsTest.testSame":31,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":159,"org.easymock.samples.SupportTest.addDocument":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":121,"org.easymock.tests2.CaptureTest.testCaptureFirst":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":83,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":102,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":165,"org.easymock.tests.GenericTest.testPackageScope":149,"org.easymock.tests2.UsageTest.moreThanOneArgument":95,"org.easymock.tests2.CaptureTest.testCapture2_2446744":74,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":17,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":346,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":285,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":193,"org.easymock.tests.GenericTest.testBridgedEquals":151,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":269,"org.easymock.tests2.NameTest.nameForMock":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":218,"org.easymock.tests.UsageExpectAndReturnTest.longType":161,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":80,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":170,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":47,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":255,"org.easymock.tests2.UsageStrictMockTest.differentMethods":110,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":307,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":178,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":162,"org.easymock.tests.UsageCallCountTest.tooManyCalls":219,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":143,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":228,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":214,"org.easymock.tests2.MockedExceptionTest.testRealException":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":166,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":107,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":221,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":200,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":289,"org.easymock.tests2.NameTest.nameForStrictMock":322,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":278,"org.easymock.tests2.UsageConstraintsTest.testContains":37,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":21,"org.easymock.tests2.UsageConstraintsTest.testFind":29,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":267,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":23,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":116,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":336,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":24,"org.easymock.tests.UsageExpectAndReturnTest.object":168,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":266,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":260,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":118,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":279,"org.easymock.tests2.UsageStrictMockTest.range":109,"org.easymock.tests2.UsageConstraintsTest.lessThan":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":87,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":189,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":212,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":270,"org.easymock.tests.UsageTest.exactCallCountByLastCall":210,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":81,"org.easymock.tests2.CaptureTest.testCaptureRightOne":72,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":183,"org.easymock.tests2.UsageConstraintsTest.testOr":32,"org.easymock.tests.UsageRangeTest.combination":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":113,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":174,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":185,"org.easymock.tests.UsageTest.wrongArguments":331,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":230,"org.easymock.tests2.MockBuilderTest.testWithConstructor":253,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":304,"org.easymock.tests2.EasyMockSupportTest.testVerify":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":171,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":184,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":309,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":261,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":229,"org.easymock.tests.UsageVarargTest.varargShortAccepted":190,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":317,"org.easymock.tests2.UsageConstraintsTest.cmpTo":36,"org.easymock.tests.UsageVarargTest.varargCharAccepted":188,"org.easymock.tests2.CaptureTest.testCaptureMultiple":315,"org.easymock.tests2.CompareToTest.testLessThan":318,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":106,"org.easymock.tests2.UsageTest.openCallCountByLastCall":98,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":99,"org.easymock.tests.DefaultClassInstantiatorTest.object":257,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":90,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":314,"org.easymock.tests2.CaptureTest.testCaptureFromStub":73,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":136,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":337,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":198,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":216,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":172,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":295,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":234,"org.easymock.tests2.UsageConstraintsTest.constraints":27,"org.easymock.samples.ExampleTest.addAndChangeDocument":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":135,"org.easymock.tests.CapturesMatcherTest.test":316,"org.easymock.tests.UsageStrictMockTest.testVerify":338,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":175,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":313,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":299,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":232,"org.easymock.tests2.CompareToTest.testGreateThan":312,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":68,"org.easymock.tests2.UsageTest.resumeIfFailure":101,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":154,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":305,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":164,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":86,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":186}}]
