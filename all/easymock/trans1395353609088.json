[{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[0,1,2],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[8,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[9,10,11,12],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[13,14,15,16,17],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[20,21,22,23,24,25],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[26,13,27,28,29,30,31,32,33,34,35,22,36,14,37,38,15,16,39,40,41,42,43],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[18,19],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[49,50,51,52,53,54],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:280","failures":[55,8,56,7,57,58,59,60],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[61,62,63],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:136","sourceCode":"if (java.lang.reflect.Method.isVarArgs()) {\n    int = java.lang.Math.java.lang.Math.min(int, ((java.lang.Class<?>[].int) - 1));\n} ","type":"CtIfImpl"},"failures":[64,65,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[26,13,27,28,29,30,31,32,33,34,35,22,36,14,37,38,15,16,39,40,41,42,67],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matching"}},{"transplant":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[68,69,70,71],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[13,27,72,14,37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[73,73,74,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,72,44,45,89,90,91,92,49,93,46,94,95,96,47,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,9,11,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,18,141,142,143,19,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:55","sourceCode":"return org.easymock.internal.matchers.Equals.matches(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[174,55,175,176,177,178,179,180,73,74,181,75,182,183,184,76,77,185,186,187,188,78,79,189,190,191,192,193,194,195,26,196,13,27,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,3,220,221,68,222,4,223,224,225,226,227,228,229,230,231,5,232,233,234,235,6,236,237,69,238,70,239,240,241,242,243,244,245,71,246,247,248,249,250,251,252,253,254,255,80,81,256,82,83,84,85,0,86,87,88,72,44,45,89,90,91,92,49,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,93,94,95,96,47,97,98,99,275,100,101,102,104,276,277,28,29,278,279,280,281,282,30,31,283,284,105,106,107,285,286,287,288,289,290,291,292,293,294,295,296,297,108,109,110,111,298,299,112,113,300,9,10,11,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,301,32,33,34,35,8,56,7,57,58,59,302,303,304,305,306,307,308,18,141,142,143,19,309,310,311,312,313,144,145,146,147,148,149,150,314,315,22,36,316,14,37,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,38,15,16,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,151,152,153,154,155,381,156,382,383,157,384,385,386,387,388,389,390,391,392,393,394,158,159,395,396,397,398,160,399,400,161,162,163,164,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,165,166,167,168,169,170,171,172,422,423,424,425,39,25,40,426,427,41,42,428,64,429,430,431,432,433,434,435,436,437,438,65,66,439,440,441,442,443,444,173,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,43,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,60,495,496,497,498],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[255,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[20,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[141,143,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":217,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":425,"org.easymock.tests2.UsageTest.argumentsOrdered":31,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":272,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":367,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":279,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":182,"org.easymock.tests2.DelegateToTest.testReturnException":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":340,"org.easymock.tests.MockingTest.testPartialClassMocking":154,"org.easymock.tests.MockClassControlTest.testToString":167,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":301,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":350,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":457,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":120,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":67,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":51,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":445,"org.easymock.tests2.UsageTest.wrongArguments":29,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":307,"org.easymock.samples.ExampleTest.answerVsDelegate":55,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":160,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":383,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":82,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":172,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":271,"org.easymock.tests2.CaptureTest.testPrimitive":239,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":449,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":476,"org.easymock.tests.UsageTest.moreThanOneArgument":39,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":311,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":485,"org.easymock.tests.UsageTest.argumentsOrdered":42,"org.easymock.tests.UsageVarargTest.varargIntAccepted":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":66,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":296,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":442,"org.easymock.tests.ReplayStateInvalidUsageTest.times":418,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests2.DependencyTest.testClassMocking":185,"org.easymock.tests2.AnswerTest.answer":249,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":374,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":201,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":396,"org.easymock.tests2.CaptureTest.testAnd":69,"org.easymock.tests2.UsageTest.strictResetToDefault":277,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":347,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":489,"org.easymock.tests2.DelegateToTest.testDelegate":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":472,"org.easymock.tests.LimitationsTest.mockFinalMethod":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":343,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":456,"org.easymock.tests2.DependencyTest.testClassMockingSupport":186,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":354,"org.easymock.tests2.CaptureTest.testCapture1_2446744":240,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":470,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":199,"org.easymock.tests.UsageThrowableTest.throwError":477,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":412,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":398,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":138,"org.easymock.samples.PartialClassMockTest.testGetArea":75,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":413,"org.easymock.tests.MockingTest.testInterfaceMocking":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":439,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":385,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":458,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":125,"org.easymock.tests2.UsageTest.niceToStrict":278,"org.easymock.tests2.ThreadingTest.testChangeDefault":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":47,"org.easymock.tests2.MockBuilderTest.testCreateMock":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":133,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":210,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":466,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":20,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":267,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":395,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":492,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":401,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":305,"org.easymock.tests.UsageOverloadedMethodTest.overloading":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":129,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":495,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":227,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":387,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":330,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":226,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":245,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":431,"org.easymock.tests.MockClassControlTest.testEquals":171,"org.easymock.tests2.EasyMockSupportClassTest.testAll":117,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":142,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":474,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":454,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":200,"org.easymock.tests2.CaptureTest.testCaptureAll":238,"org.easymock.tests.MockNameTest.defaultName":444,"org.easymock.tests2.UsageConstraintsTest.testMatches":228,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":410,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":312,"org.easymock.samples.ExampleTest.voteForRemovals":178,"org.easymock.tests.UsageVarargTest.allKinds":65,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":455,"org.easymock.samples.BasicClassMockTest.testPrintContent":77,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":483,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":194,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":344,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":54,"org.easymock.tests2.UsageConstraintsTest.greaterThan":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":118,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":346,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":89,"org.easymock.samples.ExampleTest.voteForRemoval":175,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":150,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":90,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":258,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":399,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":85,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":173,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":276,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":264,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":339,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":8,"org.easymock.tests2.CaptureTest.testCaptureFirst":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":265,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":284,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":498,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":326,"org.easymock.tests2.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.CaptureTest.testCapture2_2446744":247,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":260,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":375,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":438,"org.easymock.tests.GenericTest.testBridgedEquals":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":408,"org.easymock.tests.UsageExpectAndReturnTest.longType":322,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":452,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":262,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":475,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":103,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":443,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":234,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":473,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":309,"org.easymock.tests.UsageCallCountTest.tooManyCalls":409,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":134,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":327,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":462,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":482,"org.easymock.tests.MockingTest.testNiceClassMocking":157,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":109,"org.easymock.tests.MockingTest.testClassMocking":152,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":402,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":46,"org.easymock.tests2.UsageConstraintsTest.testContains":225,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":107,"org.easymock.tests2.UsageConstraintsTest.testFind":219,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":389,"org.easymock.tests.MockTypeTest.fromEasyMockClass":397,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":193,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":314,"org.easymock.tests.UsageExpectAndReturnTest.object":329,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":86,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":270,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":433,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":52,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":393,"org.easymock.tests.UsageTest.exactCallCountByLastCall":428,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":486,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":349,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":49,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":64,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":335,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":60,"org.easymock.tests.MockClassControlTest.testHashCode":170,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":287,"org.easymock.tests2.EasyMockSupportTest.testVerify":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":127,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":487,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":493,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":491,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":198,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":255,"org.easymock.tests.UsageVarargTest.varargCharAccepted":432,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":380,"org.easymock.tests2.UsageTest.openCallCountByLastCall":280,"org.easymock.tests.DefaultClassInstantiatorTest.object":144,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":273,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":490,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":391,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":128,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":480,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":205,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":286,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":169,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":44,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":463,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":336,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":422,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":136,"org.easymock.tests2.UsageTest.resumeIfFailure":283,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":342,"org.easymock.tests2.StubTest.stubWithReturnValue":304,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":50,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":235,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":328,"org.easymock.tests2.SerializationTest.testAllMockedMethod":11,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":373,"org.easymock.samples.SupportTest.voteForRemovals":184,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":21,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":289,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":469,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":12,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":379,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":250,"org.easymock.tests.UsageExpectAndThrowTest.object":467,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":351,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":232,"org.easymock.tests2.DelegateToTest.testWrongClass":57,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":450,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":451,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":73,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":189,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":468,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":98,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":114,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":306,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":23,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":386,"org.easymock.tests2.CaptureTest.testCaptureNone":244,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":62,"org.easymock.tests.UsageUnorderedTest.message":43,"org.easymock.tests.UsageVerifyTest.twoReturns":16,"org.easymock.tests.UsageVarargTest.varargByteAccepted":437,"org.easymock.tests2.ThreadingTest.testThreadSafe":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":131,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":406,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":394,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":76,"org.easymock.tests2.CaptureTest.testCapture_2617107":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":356,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":377,"org.easymock.tests2.UsageConstraintsTest.any":223,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":417,"org.easymock.tests2.StubTest.stub":303,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":424,"org.easymock.tests.UsageExpectAndThrowTest.longType":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":378,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":148,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":416,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":196,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":291,"org.easymock.tests.LimitationsTest.mockNativeMethod":163,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":143,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":338,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":204,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":197,"org.easymock.tests2.NameTest.nameForMocksControl":35,"org.easymock.tests2.MockedExceptionTest.testMockedException":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":119,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":427,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":461,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":156,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":192,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":80,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":99,"org.easymock.tests.MockingTest.testNicePartialClassMocking":155,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":84,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":202,"org.easymock.tests2.CaptureTest.testCaptureLast":243,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":355,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":113,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":68,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":233,"org.easymock.tests.MockingTest.testTwoMocks":153,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":300,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":465,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":236,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":2,"org.easymock.samples.ExampleTest.removeNonExistingDocument":179,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":414,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":209,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":288,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":146,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":63,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":259,"org.easymock.tests2.MockBuilderTest.testCreateMockString":104,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":165,"org.easymock.tests.UsageExpectAndThrowTest.floatType":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":121,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":116,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":252,"org.easymock.tests.UsageVerifyTest.twoThrows":15,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":130,"org.easymock.samples.ExampleTest.voteAgainstRemoval":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":368,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":45,"org.easymock.tests.LimitationsTest.privateConstructor":162,"org.easymock.tests2.UsageConstraintsTest.testNotNull":6,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":484,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":105,"org.easymock.tests2.UsageTest.defaultResetToNice":282,"org.easymock.samples.ExampleTest.voteAgainstRemovals":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":369,"org.easymock.tests.UsageVarargTest.differentLength":434,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":203,"org.easymock.tests2.CallbackTest.callback":302,"org.easymock.tests2.UsageConstraintsTest.equals":218,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":87,"org.easymock.tests.UsageTest.openCallCountByLastCall":426,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":447,"org.easymock.tests.UsageCallCountTest.tooFewCalls":404,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":111,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":308,"org.easymock.tests.UsageThrowableTest.throwCheckedException":481,"org.easymock.tests.MockingTest.testStrictClassMocking":151,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":24,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":112,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":353,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":208,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":419,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":299,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":254,"org.easymock.tests.ObjectMethodsTest.testHashCode":392,"org.easymock.tests2.NameTest.nameForNiceMock":34,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":261,"org.easymock.tests2.DependencyTest.testInterfaceMocking":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":53,"org.easymock.samples.ExampleTest.addDocument":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":137,"org.easymock.tests2.DelegateToTest.testStubDelegate":7,"org.easymock.tests2.AnswerTest.stubAnswer":253,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":36,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":275,"org.easymock.tests.UsageVarargTest.varargLongAccepted":436,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":366,"org.easymock.tests.UsageExpectAndReturnTest.floatType":321,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":337,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":92,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":74,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":496,"org.easymock.tests.UsageThrowableTest.noUpperLimit":478,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":295,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":215,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":78,"org.easymock.tests2.SerializationTest.test":10,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":241,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":145,"org.easymock.tests2.UsageConstraintsTest.testSame":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":320,"org.easymock.samples.SupportTest.addDocument":183,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":298,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":122,"org.easymock.tests.GenericTest.testPackageScope":141,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":294,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":382,"org.easymock.tests2.NameTest.nameForMock":32,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":331,"org.easymock.tests2.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":471,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":390,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":348,"org.easymock.tests2.MockedExceptionTest.testRealException":285,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":400,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":370,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":446,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":421,"org.easymock.tests2.NameTest.nameForStrictMock":33,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":96,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":83,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":79,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":147,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":5,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":94,"org.easymock.tests2.UsageStrictMockTest.range":13,"org.easymock.tests2.UsageConstraintsTest.lessThan":237,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":290,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":126,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":61,"org.easymock.tests2.UsageConstraintsTest.testOr":221,"org.easymock.tests.UsageRangeTest.combination":345,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":81,"org.easymock.tests.UsageTest.wrongArguments":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":123,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":358,"org.easymock.tests.UsageVarargTest.varargShortAccepted":435,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":149,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":407,"org.easymock.tests2.UsageConstraintsTest.cmpTo":224,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":360,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":281,"org.easymock.tests2.CaptureTest.testCaptureFromStub":246,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":411,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":95,"org.easymock.tests.UsageTest.unexpectedCallWithArray":25,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":405,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":333,"org.easymock.tests2.UsageConstraintsTest.constraints":216,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.samples.ExampleTest.addAndChangeDocument":180,"org.easymock.tests.UsageStrictMockTest.testVerify":318,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":181,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":453,"org.easymock.tests2.CompareToTest.testGreateThan":48,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":242,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":440,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":140,"org.easymock.tests.LimitationsTest.abstractClass":161,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":325,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":441,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":429,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":17,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":268}}]
