[{"position":"org.easymock.internal.RecordState:108","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[37,38],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[63,64,65,66,67,54,68,69,70,71,72,55,73,74,56,57,58,75,76,76,77,77,78,79,80,81,82,60,83,61,84,85,86,87,88,89,90,91,62,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.LastControl:61","failures":[114,115,116,117,118,0,119,120,121,122,123,124,125,126,127,128,11,129,130,131,132,106,133,134,40,41,42,43,44,45,46,47,135,48,49,50,51,52,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[165,112,166,113],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[165,112,166,113],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[40,42,49,139,140,142,144,145,147,157,162],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[167],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[157],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[145],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[120,121,168,169,170,171,172,173,33,174,175,176,177,178],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[114,115,179,180,181,182,183,184,185,186,187,63,64,116,117,118,0,119,120,188,189,190,191,192,193,194,195,196,197,198,199,66,200,201,121,122,202,168,203,204,205,1,206,2,3,4,5,6,7,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,8,227,170,171,228,9,172,173,229,67,123,124,125,126,127,230,231,232,233,234,235,236,10,237,238,239,240,241,242,243,244,245,246,247,248,128,249,250,251,69,70,71,252,253,254,255,11,256,129,130,73,74,56,57,58,75,257,258,259,260,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,261,262,263,264,265,33,174,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,76,77,78,284,285,79,80,286,287,288,289,290,291,292,131,293,175,294,295,296,34,81,82,60,83,297,61,84,35,298,299,176,300,301,302,36,303,177,178,304,305,306,307,85,308,309,310,311,132,312,86,313,314,315,316,87,88,90,91,62,92,93,94,95,96,97,98,99,100,101,317,102,103,104,105,106,107,108,109,110,318,319,37,38,133,134,320,321,322,323,40,41,42,43,44,45,46,47,135,48,49,50,51,52,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,112,166,113,342],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[62],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[142,147,157,162],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[157,158],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[355,155],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[356,152],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[357,152,159,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[165,112,166,113],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:70","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : org.easymock.internal.InjectionPlan.getTestSubjectFields()) {\n    java.lang.reflect.Field.setAccessible(true);\n    java.lang.Object java.lang.Object;\n    try {\n        java.lang.Object = java.lang.reflect.Field.get(java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n    }\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass();\n    while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n        org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n        java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n    }\n}","type":"CtForEachImpl"},"failures":[284,285,358,359,360,361,353,362,363,364,365,366,367,368,354,369,370,371],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[63,64,65,167,66,67,54,68,69,70,71,72,55,73,74,56,57,58,75,257,258,76,76,77,77,78,79,80,81,82,60,83,61,84,85,86,87,88,89,90,91,62,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"position":"org.easymock.Capture:82","failures":[40,42,43,44,45,46,47,48,372,49,50,52],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[372],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[114,115,373,374,375,179,180,181,182,183,184,185,186,187,376,63,64,65,167,53,116,117,118,0,119,120,188,189,190,191,192,193,194,195,196,197,198,199,377,378,66,379,200,201,121,122,202,168,203,204,205,1,206,2,3,4,5,6,7,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,343,344,380,381,382,383,8,227,170,171,228,9,172,173,229,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,67,123,124,125,126,127,230,231,232,233,234,235,345,236,10,346,237,238,239,240,241,411,242,243,244,245,246,247,248,128,412,413,414,415,249,250,251,347,54,416,417,418,68,69,70,419,71,420,421,422,252,253,254,255,11,256,423,424,425,426,427,72,428,429,348,349,55,350,351,129,130,352,73,74,56,57,58,75,257,258,259,260,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,261,262,263,264,265,33,174,266,267,268,269,430,270,431,432,433,434,435,436,437,271,272,273,274,275,276,277,278,279,280,281,282,283,76,77,78,284,285,79,80,286,287,358,359,360,438,361,288,353,362,363,439,440,364,441,442,289,290,291,292,131,293,175,294,295,296,34,59,443,444,445,446,447,448,81,82,60,83,449,297,61,84,450,35,298,299,176,300,301,302,36,303,177,178,304,305,306,307,85,308,309,310,311,132,312,86,451,452,453,313,314,315,316,87,454,88,89,455,456,90,91,62,457,92,458,459,93,94,460,95,461,462,463,96,464,465,97,466,467,468,469,470,471,472,473,474,98,475,476,477,478,479,99,480,481,100,101,317,102,103,104,105,482,106,483,484,107,108,109,110,485,111,318,486,487,319,37,38,133,488,134,489,320,321,322,490,323,40,41,42,43,44,45,46,47,135,48,49,50,51,52,324,325,326,327,328,329,330,331,332,333,334,335,336,136,365,366,367,491,368,337,354,369,370,492,493,371,338,339,340,341,137,138,139,140,494,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,112,166,113,342],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[450],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[165,112,166,113],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[431,435],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[376],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[63],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":140,"org.easymock.tests2.UsageTest.argumentsOrdered":178,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":8,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":334,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":394,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":301,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":284,"org.easymock.tests2.DelegateToTest.testReturnException":320,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":253,"org.easymock.tests.MockingTest.testPartialClassMocking":69,"org.easymock.tests.MockClassControlTest.testToString":56,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":453,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":13,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":290,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":146,"org.easymock.tests2.UsageTest.wrongArguments":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":116,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":268,"org.easymock.samples.ExampleTest.answerVsDelegate":277,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":55,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":421,"org.easymock.tests2.UsageConstraintsTest.testNull":142,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":102,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":258,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":333,"org.easymock.tests2.CaptureTest.testPrimitive":43,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":119,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":32,"org.easymock.tests.UsageTest.moreThanOneArgument":227,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":273,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":423,"org.easymock.tests.UsageTest.argumentsOrdered":173,"org.easymock.tests.UsageVarargTest.varargIntAccepted":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":123,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":444,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":440,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":386,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":127,"org.easymock.tests.ReplayStateInvalidUsageTest.times":196,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":337,"org.easymock.tests2.DependencyTest.testClassMocking":441,"org.easymock.tests2.AnswerTest.answer":318,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":401,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":341,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":429,"org.easymock.tests2.CaptureTest.testAnd":40,"org.easymock.tests2.UsageTest.strictResetToDefault":298,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":455,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":107,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":272,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":328,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":427,"org.easymock.tests2.DelegateToTest.testDelegate":323,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":28,"org.easymock.tests.LimitationsTest.mockFinalMethod":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":11,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":234,"org.easymock.tests2.DependencyTest.testClassMockingSupport":442,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":343,"org.easymock.tests2.CaptureTest.testCapture1_2446744":44,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":482,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":339,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":190,"org.easymock.tests.UsageThrowableTest.throwError":1,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":349,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":53,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":481,"org.easymock.samples.PartialClassMockTest.testGetArea":78,"org.easymock.tests.MockingTest.testInterfaceMocking":419,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":124,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":470,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":14,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":54,"org.easymock.tests2.UsageTest.niceToStrict":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":90,"org.easymock.tests2.MockBuilderTest.testCreateMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":477,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":370,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":22,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":329,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":428,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":375,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":179,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":266,"org.easymock.tests.UsageOverloadedMethodTest.overloading":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":474,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":152,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":218,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":259,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":151,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":48,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":411,"org.easymock.tests2.EasyMockSupportClassTest.testAll":96,"org.easymock.tests.MockClassControlTest.testEquals":257,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":30,"org.easymock.tests2.CaptureTest.testCaptureAll":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":232,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":340,"org.easymock.tests.MockNameTest.defaultName":352,"org.easymock.tests2.UsageConstraintsTest.testMatches":153,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":274,"org.easymock.samples.ExampleTest.voteForRemovals":281,"org.easymock.tests.UsageVarargTest.allKinds":128,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":265,"org.easymock.samples.BasicClassMockTest.testPrintContent":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":233,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":6,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":291,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":490,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":362,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":436,"org.easymock.tests2.UsageConstraintsTest.greaterThan":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":262,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":110,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":437,"org.easymock.samples.ExampleTest.voteForRemoval":278,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":485,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":310,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":350,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":105,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":67,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":326,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":252,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":489,"org.easymock.tests2.CaptureTest.testCaptureFirst":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":327,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":305,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":214,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":132,"org.easymock.tests2.CaptureTest.testCapture2_2446744":51,"org.easymock.tests2.UsageTest.moreThanOneArgument":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":402,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":94,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":248,"org.easymock.tests.GenericTest.testBridgedEquals":167,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":186,"org.easymock.tests.UsageExpectAndReturnTest.longType":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":230,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":324,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":31,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":416,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":29,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":409,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":271,"org.easymock.tests.UsageCallCountTest.tooManyCalls":187,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":215,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":493,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":5,"org.easymock.tests.MockingTest.testNiceClassMocking":422,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":82,"org.easymock.tests.MockingTest.testClassMocking":418,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":180,"org.easymock.tests2.UsageConstraintsTest.testContains":150,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":85,"org.easymock.tests2.UsageConstraintsTest.testFind":141,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":12,"org.easymock.tests.MockTypeTest.fromEasyMockClass":348,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":134,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":200,"org.easymock.tests.UsageExpectAndReturnTest.object":217,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":492,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":332,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":243,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":251,"org.easymock.tests.UsageTest.exactCallCountByLastCall":229,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":424,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":381,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":451,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":223,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":239,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":236,"org.easymock.tests.MockClassControlTest.testHashCode":75,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":359,"org.easymock.tests2.EasyMockSupportTest.testVerify":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":472,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":425,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":235,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":374,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":338,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":136,"org.easymock.tests.UsageVarargTest.varargCharAccepted":242,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":430,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":407,"org.easymock.tests2.UsageTest.openCallCountByLastCall":302,"org.easymock.tests.DefaultClassInstantiatorTest.object":270,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":373,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":249,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":473,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":491,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":358,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":108,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":58,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":19,"org.easymock.tests.CapturesMatcherTest.test":39,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":224,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":99,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":57,"org.easymock.tests2.UsageTest.resumeIfFailure":304,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":72,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":255,"org.easymock.tests2.StubTest.stubWithReturnValue":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":457,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":161,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":216,"org.easymock.tests2.SerializationTest.testAllMockedMethod":113,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":400,"org.easymock.samples.SupportTest.voteForRemovals":287,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":376,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":438,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":25,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":165,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":406,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":486,"org.easymock.tests.UsageExpectAndThrowTest.object":23,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":383,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":158,"org.easymock.tests2.DelegateToTest.testWrongClass":322,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":129,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":130,"org.easymock.tests.UsageStrictMockTest.range":168,"org.easymock.samples.ConstructorCalledMockTest.testTax":76,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":447,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":331,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":24,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":461,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":172,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":198,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":414,"org.easymock.tests2.CaptureTest.testCaptureNone":135,"org.easymock.tests.UsageUnorderedTest.message":120,"org.easymock.tests.UsageVerifyTest.twoReturns":174,"org.easymock.tests.UsageVarargTest.varargByteAccepted":247,"org.easymock.tests2.ThreadingTest.testThreadSafe":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":475,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":184,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":79,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":347,"org.easymock.tests2.CaptureTest.testCapture_2617107":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":404,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":0,"org.easymock.tests2.UsageConstraintsTest.any":148,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":195,"org.easymock.tests2.StubTest.stub":296,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":405,"org.easymock.tests.UsageExpectAndThrowTest.longType":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":254,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":434,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":194,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":293,"org.easymock.tests2.SerializationTest.testClass":112,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests.LimitationsTest.mockNativeMethod":66,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":65,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":226,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":367,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":295,"org.easymock.tests2.NameTest.nameForMocksControl":316,"org.easymock.tests2.MockedExceptionTest.testMockedException":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":465,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":9,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":488,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":17,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":71,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":92,"org.easymock.tests.MockingTest.testNicePartialClassMocking":70,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":104,"org.easymock.tests2.CaptureTest.testCaptureLast":47,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":365,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":344,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":145,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":84,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":159,"org.easymock.tests.MockingTest.testTwoMocks":68,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":450,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":21,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":177,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":163,"org.easymock.samples.ExampleTest.removeNonExistingDocument":282,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":192,"org.easymock.tests.UsageStrictMockTest.differentMethods":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":360,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":432,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":311,"org.easymock.tests2.MockBuilderTest.testCreateMockString":95,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":466,"org.easymock.tests.UsageExpectAndThrowTest.floatType":15,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":463,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":319,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":452,"org.easymock.tests.UsageVerifyTest.twoThrows":33,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":98,"org.easymock.samples.ExampleTest.voteAgainstRemoval":279,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":395,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":109,"org.easymock.tests.LimitationsTest.privateConstructor":378,"org.easymock.tests2.UsageConstraintsTest.testNotNull":162,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":7,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":306,"org.easymock.tests2.UsageTest.defaultResetToNice":303,"org.easymock.samples.ExampleTest.voteAgainstRemovals":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":222,"org.easymock.tests.UsageVarargTest.differentLength":244,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":366,"org.easymock.tests2.CallbackTest.callback":342,"org.easymock.tests2.UsageConstraintsTest.equals":494,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":483,"org.easymock.tests.UsageTest.openCallCountByLastCall":228,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":137,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":118,"org.easymock.tests.UsageCallCountTest.tooFewCalls":182,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":269,"org.easymock.tests.UsageThrowableTest.throwCheckedException":4,"org.easymock.tests.MockingTest.testStrictClassMocking":417,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":115,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":61,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":354,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":197,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":297,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":38,"org.easymock.tests.ObjectMethodsTest.testHashCode":250,"org.easymock.tests2.CompareToTest.testGreateOrEqual":356,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":312,"org.easymock.tests2.NameTest.nameForNiceMock":315,"org.easymock.tests2.DependencyTest.testInterfaceMocking":289,"org.easymock.samples.ExampleTest.addDocument":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":480,"org.easymock.tests2.DelegateToTest.testStubDelegate":321,"org.easymock.tests2.AnswerTest.stubAnswer":37,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":122,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":458,"org.easymock.tests.UsageVarargTest.varargLongAccepted":246,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndReturnTest.floatType":209,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":225,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":86,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":439,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":156,"org.easymock.tests.UsageThrowableTest.noUpperLimit":206,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":138,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":59,"org.easymock.tests2.SerializationTest.test":166,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":45,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":431,"org.easymock.tests2.UsageConstraintsTest.testSame":143,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":208,"org.easymock.samples.SupportTest.addDocument":286,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":449,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":467,"org.easymock.tests.GenericTest.testPackageScope":63,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":388,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":420,"org.easymock.tests2.NameTest.nameForMock":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":219,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":460,"org.easymock.tests2.UsageStrictMockTest.differentMethods":294,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":484,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":211,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":27,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":415,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":264,"org.easymock.tests2.MockedExceptionTest.testRealException":308,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":351,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":397,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":117,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":199,"org.easymock.tests2.NameTest.nameForStrictMock":314,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":456,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":133,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":446,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":433,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":157,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":88,"org.easymock.tests2.UsageStrictMockTest.range":175,"org.easymock.tests2.UsageConstraintsTest.lessThan":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":392,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":471,"org.easymock.tests2.CaptureTest.testCaptureRightOne":49,"org.easymock.tests2.UsageConstraintsTest.testOr":144,"org.easymock.tests.UsageRangeTest.combination":261,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":101,"org.easymock.tests.UsageTest.wrongArguments":171,"org.easymock.tests2.MockBuilderTest.testWithConstructor":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":468,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":220,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":435,"org.easymock.tests.UsageVarargTest.varargShortAccepted":245,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":185,"org.easymock.tests2.UsageConstraintsTest.cmpTo":149,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":487,"org.easymock.tests2.CompareToTest.testLessThan":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":387,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":36,"org.easymock.tests2.CaptureTest.testCaptureFromStub":50,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":189,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":89,"org.easymock.tests.UsageTest.unexpectedCallWithArray":170,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":121,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":183,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":221,"org.easymock.tests2.CaptureTest.testCapture":372,"org.easymock.tests2.UsageConstraintsTest.constraints":139,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":202,"org.easymock.samples.ExampleTest.addAndChangeDocument":283,"org.easymock.tests.UsageStrictMockTest.testVerify":205,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":285,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":231,"org.easymock.tests2.CompareToTest.testGreateThan":355,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":125,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":213,"org.easymock.tests.LimitationsTest.abstractClass":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":126,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":330}}]
