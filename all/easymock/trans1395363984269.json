[{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[158,159],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1688","sourceCode":"return null","type":"CtReturnImpl"},"failures":[152,153,264,411,412],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[48,49,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[478,479,480,481,264,471],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[11,11,12,12,175],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[478,479,480,481,264,471],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[116,451],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[482],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[11,11,12,12,39,40,48,84,186],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[61,63,71,139,140,143,145,146,148,158,163],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[2,3,4,5,6,8,10,11,11,12,12,14,18,19,20,21,22,28,37,38,39,43,45,46,48,49,51,52,53,54,55,57,58,59,61,62,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,83,87,88,89,92,94,95,96,97,98,104,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,171,172,173,174,175,176,178,181,183,184,188,194,195,196,198,200,201,202,205,206,210,213,223,229,232,233,234,235,240,241,242,243,244,245,246,247,249,252,254,255,256,257,258,259,260,261,265,267,268,271,272,273,287,288,289,290,291,292,303,311,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,347,349,350,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,377,379,380,381,382,383,384,385,392,393,394,395,396,397,398,399,412,413,414,415,416,417,418,422,423,425,437,438,439,440,457,463,465,466,467,468,469,470,473,474,477],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[155],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,28,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,86,87,88,89,92,94,95,96,97,98,104,112,113,114,115,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,171,174,175,176,177,178,181,182,183,184,187,188,189,194,195,196,197,198,199,200,201,202,203,204,205,206,210,213,223,229,236,237,238,239,240,241,242,243,244,245,246,247,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,287,288,289,290,291,292,303,304,305,306,307,308,309,311,312,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,347,349,350,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,377,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,422,423,425,437,465,467,468,469,470,471,472,473,474,475,476,477],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[1,2,3,5,6,7,8,10,13,14,15,16,17,21,22,28,37,38,39,42,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,61,62,63,64,66,67,68,69,70,71,74,75,76,77,78,79,80,83,88,97,104,117,119,121,122,123,124,125,126,127,128,130,131,132,133,134,140,146,147,149,150,152,155,158,159,160,161,162,174,181,183,184,195,197,198,199,203,204,210,213,223,229,241,251,252,254,255,257,258,259,260,261,263,264,266,267,268,269,304,305,306,308,309,311,312,317,318,320,325,330,347,349,350,352,356,357,359,364,369,374,377,392,393,394,395,397,398,400,401,402,404,405,407,408,409,410,411,422,423,425,437,465,472,475,476],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[11,11,12,12,14,15,16,39,48,50,52,53,54,55,58,59,75,76,78,79,80,81,83,86,87,88,89,91,97,177,178,179,181,182,183,184,187,188,189,210,213,223,229,286,293,298,311,312,313,377,421,422,423,425,430,431,432,433,437],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[48,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[143,148,158,163],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[483,139,147,153,165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3,5,6,8,14,18,19,20,21,22,28,37,38,39,43,45,46,48,49,52,53,54,55,57,58,59,61,62,64,65,68,69,70,71,73,74,75,76,77,78,79,80,83,87,88,89,97,104,118,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,140,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,171,175,178,181,183,184,188,194,195,196,198,200,201,202,205,206,210,213,223,229,233,234,235,236,240,242,243,244,245,246,247,249,254,256,257,258,259,260,261,265,267,268,311,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,352,377,384,392,393,396,397,398,399,412,413,422,423,425,465,466,467,468,469,470,473,474,477],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[478,479,480,481,264,471],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[39,40,48,84,88,91,181,185,186,187,189,310,313],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":140,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":469,"org.easymock.tests2.UsageTest.argumentsOrdered":204,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":451,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":199,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":13,"org.easymock.tests2.DelegateToTest.testReturnException":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":288,"org.easymock.tests.MockingTest.testPartialClassMocking":422,"org.easymock.tests.MockClassControlTest.testToString":431,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":166,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":217,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":213,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":354,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":38,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":392,"org.easymock.tests2.UsageTest.wrongArguments":197,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":238,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":298,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":427,"org.easymock.tests2.UsageConstraintsTest.testNull":143,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":78,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":436,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":131,"org.easymock.tests2.CaptureTest.testPrimitive":64,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":396,"org.easymock.tests.UsageTest.moreThanOneArgument":470,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":373,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":416,"org.easymock.tests.UsageTest.argumentsOrdered":476,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":379,"org.easymock.tests.UsageVarargTest.varargIntAccepted":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":243,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":109,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":247,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":28,"org.easymock.tests.ReplayStateInvalidUsageTest.times":343,"org.easymock.tests2.DependencyTest.testClassMocking":35,"org.easymock.tests2.AnswerTest.answer":171,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":458,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":115,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":295,"org.easymock.tests2.UsageTest.strictResetToDefault":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":415,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":126,"org.easymock.tests2.DelegateToTest.testDelegate":121,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":383,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":369,"org.easymock.tests.LimitationsTest.mockFinalMethod":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":391,"org.easymock.tests2.DependencyTest.testClassMockingSupport":36,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":251,"org.easymock.tests2.CaptureTest.testCapture1_2446744":65,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":367,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":113,"org.easymock.tests.UsageThrowableTest.throwError":254,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":337,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":297,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":418,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":231,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.MockingTest.testInterfaceMocking":424,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":244,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":234,"org.easymock.tests2.UsageTest.niceToStrict":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":218,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":181,"org.easymock.tests2.MockBuilderTest.testCreateMock":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":226,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":31,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":478,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":363,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":127,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":294,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":440,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":236,"org.easymock.tests.UsageOverloadedMethodTest.overloading":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":228,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":153,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":350,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":397,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":326,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":152,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":70,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":403,"org.easymock.tests.MockClassControlTest.testEquals":435,"org.easymock.tests2.EasyMockSupportClassTest.testAll":210,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":312,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":371,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":389,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":114,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests.MockNameTest.defaultName":386,"org.easymock.tests2.UsageConstraintsTest.testMatches":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":417,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":335,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":411,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":390,"org.easymock.samples.BasicClassMockTest.testPrintContent":16,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":260,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":41,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":292,"org.easymock.tests2.UsageConstraintsTest.greaterThan":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":466,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":89,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":280,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":19,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":90,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":0,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":81,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":437,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":194,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":124,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":287,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":116,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":125,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":206,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":322,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":21,"org.easymock.tests2.CaptureTest.testCapture2_2446744":73,"org.easymock.tests2.UsageTest.moreThanOneArgument":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":459,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":188,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":410,"org.easymock.tests.GenericTest.testBridgedEquals":314,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":308,"org.easymock.tests.UsageExpectAndReturnTest.longType":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":387,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":372,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":161,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":232,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":414,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":272,"org.easymock.tests.UsageCallCountTest.tooManyCalls":309,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":227,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":323,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":33,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":359,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":259,"org.easymock.tests.MockingTest.testNiceClassMocking":428,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":53,"org.easymock.tests.MockingTest.testClassMocking":420,"org.easymock.tests2.UsageConstraintsTest.testContains":151,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":302,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":97,"org.easymock.tests2.UsageConstraintsTest.testFind":142,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":399,"org.easymock.tests.MockTypeTest.fromEasyMockClass":296,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":94,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":262,"org.easymock.tests.UsageExpectAndReturnTest.object":325,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":83,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":32,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":130,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":405,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":284,"org.easymock.tests.UsageTest.exactCallCountByLastCall":477,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":248,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":40,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":400,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":331,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":349,"org.easymock.tests.MockClassControlTest.testHashCode":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":100,"org.easymock.tests2.EasyMockSupportTest.testVerify":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":220,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":381,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":439,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":347,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":112,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":111,"org.easymock.tests.UsageVarargTest.varargCharAccepted":404,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":464,"org.easymock.tests2.UsageTest.openCallCountByLastCall":200,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":133,"org.easymock.tests.DefaultClassInstantiatorTest.object":274,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":438,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":361,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":26,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":99,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":433,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":87,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":360,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":332,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":271,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":229,"org.easymock.tests2.UsageTest.resumeIfFailure":205,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":290,"org.easymock.tests2.StubTest.stubWithReturnValue":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":324,"org.easymock.tests2.SerializationTest.testAllMockedMethod":50,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":457,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":479,"org.easymock.samples.SupportTest.voteForRemovals":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":310,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":102,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":366,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":463,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":172,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":250,"org.easymock.tests.UsageExpectAndThrowTest.object":364,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":159,"org.easymock.tests2.DelegateToTest.testWrongClass":119,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":412,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":413,"org.easymock.samples.ConstructorCalledMockTest.testTax":11,"org.easymock.tests.UsageStrictMockTest.range":267,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":192,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":129,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":365,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":183,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":207,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":237,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":480,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":235,"org.easymock.tests.UsageUnorderedTest.message":374,"org.easymock.tests.UsageVerifyTest.twoReturns":242,"org.easymock.tests.UsageVarargTest.varargByteAccepted":409,"org.easymock.tests2.ThreadingTest.testThreadSafe":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":224,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":306,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":15,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":285,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":395,"org.easymock.tests2.UsageConstraintsTest.any":149,"org.easymock.tests2.StubTest.stub":135,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":342,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":289,"org.easymock.tests.UsageExpectAndThrowTest.longType":357,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":278,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":341,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":44,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":104,"org.easymock.tests2.SerializationTest.testClass":48,"org.easymock.tests.LimitationsTest.mockNativeMethod":377,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":313,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":334,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":25,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":47,"org.easymock.tests2.NameTest.nameForMocksControl":170,"org.easymock.tests2.MockedExceptionTest.testMockedException":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":212,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":474,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":425,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":358,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":75,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":184,"org.easymock.tests.MockingTest.testNicePartialClassMocking":423,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":80,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":23,"org.easymock.tests2.CaptureTest.testCaptureLast":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":252,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":146,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":59,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":160,"org.easymock.tests.MockingTest.testTwoMocks":421,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":315,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":362,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":203,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":164,"org.easymock.samples.ExampleTest.removeNonExistingDocument":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":30,"org.easymock.tests.UsageStrictMockTest.differentMethods":268,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":101,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":276,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":20,"org.easymock.tests2.MockBuilderTest.testCreateMockString":189,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":214,"org.easymock.tests.UsageExpectAndThrowTest.floatType":356,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":209,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":174,"org.easymock.tests.UsageVerifyTest.twoThrows":241,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":223,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":233,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests.LimitationsTest.privateConstructor":376,"org.easymock.tests2.UsageConstraintsTest.testNotNull":163,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":261,"org.easymock.tests2.UsageTest.defaultResetToNice":202,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":330,"org.easymock.tests.UsageVarargTest.differentLength":406,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":24,"org.easymock.tests2.CallbackTest.callback":51,"org.easymock.tests2.UsageConstraintsTest.equals":141,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":84,"org.easymock.tests.UsageTest.openCallCountByLastCall":473,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":137,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":394,"org.easymock.tests.UsageCallCountTest.tooFewCalls":304,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":55,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":239,"org.easymock.tests.UsageThrowableTest.throwCheckedException":258,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":481,"org.easymock.tests.MockingTest.testStrictClassMocking":419,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":385,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":29,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":54,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":344,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":57,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":176,"org.easymock.tests2.CompareToTest.testGreateOrEqual":483,"org.easymock.tests.ObjectMethodsTest.testHashCode":283,"org.easymock.tests2.NameTest.nameForNiceMock":169,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":22,"org.easymock.tests2.DependencyTest.testInterfaceMocking":37,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":225,"org.easymock.tests2.DelegateToTest.testStubDelegate":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":230,"org.easymock.tests2.AnswerTest.stubAnswer":175,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":265,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":185,"org.easymock.tests.UsageVarargTest.varargLongAccepted":408,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.floatType":317,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":333,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":39,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":12,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":108,"org.easymock.tests.UsageThrowableTest.noUpperLimit":255,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":138,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":190,"org.easymock.tests2.SerializationTest.test":49,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":66,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":275,"org.easymock.tests2.UsageConstraintsTest.testSame":144,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":316,"org.easymock.samples.SupportTest.addDocument":1,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":56,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":215,"org.easymock.tests.GenericTest.testPackageScope":311,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":107,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":426,"org.easymock.tests2.NameTest.nameForMock":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":327,"org.easymock.tests2.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":85,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":319,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":368,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":281,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":468,"org.easymock.tests2.MockedExceptionTest.testRealException":98,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":454,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":393,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":346,"org.easymock.tests2.NameTest.nameForStrictMock":168,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":180,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":79,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":191,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":158,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":277,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":178,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.UsageConstraintsTest.lessThan":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":123,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":219,"org.easymock.tests2.UsageConstraintsTest.testOr":145,"org.easymock.tests.UsageRangeTest.combination":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":76,"org.easymock.tests.UsageTest.wrongArguments":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":216,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":430,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":328,"org.easymock.tests.UsageVarargTest.varargShortAccepted":407,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":279,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":307,"org.easymock.tests2.UsageConstraintsTest.cmpTo":150,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":201,"org.easymock.tests2.CaptureTest.testCaptureFromStub":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":336,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":179,"org.easymock.tests.UsageTest.unexpectedCallWithArray":471,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":305,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":329,"org.easymock.tests2.UsageConstraintsTest.constraints":139,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":266,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests.UsageStrictMockTest.testVerify":270,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":17,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":388,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":321,"org.easymock.tests.LimitationsTest.abstractClass":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":246,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":128}}]
