[{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[1,1,2,2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:117","failures":[5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[13,14,15,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[18,19,20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[23,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,5,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,22,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,6,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,7,8,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,9,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,15,10,11,281,12,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[18,19,20,21,22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[77,84,86,89,90,115,116,118,119,168,169,170,312,313,314,217,218,219,220,224,225,231,232,249,251,252],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[263],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[1,2,3,315,316,4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[257,258,261,262],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[317],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[318],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[257,262,273],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[319],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[320,321,322,323,324,325,326,18,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,25,26,27,28,29,30,31,32,33,343,344,345,346,347,348,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,5,49,50,51,349,52,53,350,351,352,54,55,353,56,354,355,356,357,358,57,359,58,59,60,61,62,63,64,65,66,360,67,68,69,70,71,72,73,74,23,75,76,361,24,77,78,79,80,81,82,311,362,363,83,84,85,86,87,88,89,90,91,364,365,366,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,367,368,369,112,370,371,372,373,374,375,113,114,115,116,117,118,119,120,121,122,123,376,124,125,126,377,378,379,127,380,19,20,21,381,128,129,130,131,132,133,134,135,136,137,22,138,382,383,384,385,386,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,387,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,6,193,194,195,196,197,198,388,389,390,1,1,2,2,391,392,393,394,199,200,395,396,201,202,397,398,399,203,204,205,206,207,208,209,210,211,212,213,214,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,0,420,421,422,423,7,424,8,215,216,425,217,218,219,220,426,427,221,428,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,429,242,4,430,243,244,245,246,431,432,9,433,434,435,436,437,438,439,440,441,442,443,444,445,247,248,249,250,251,252,253,446,447,448,449,450,254,255,256,257,318,258,259,260,261,262,263,451,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,15,16,452,453,454,455,456,457,458,459,460,461,462,463,10,464,465,11,281,12,282,283,284,285,466,467,468,469,470,471,472,473,474,475,476,477,286,287,288,478,289,290,479,480,291,292,481,293,294,295,482,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[28,29,30,32,33,38,42,64,65,66,67,68,70,71,72,73,74,76,77,86,89,90,114,115,117,118,119,120,379,127,173,192,193,194,195,196,198,388,389,390,391,393,394,201,225,227,231,232,436,442,443,444,445,248,250,251,252,253,276,288,298,299,302,303,304,305,310],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[273,274],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[332,5,6,7,8,9,10,465,11,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[262,263],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":257,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests2.UsageTest.argumentsOrdered":232,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":443,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":329,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":227,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":391,"org.easymock.tests2.DelegateToTest.testReturnException":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":59,"org.easymock.tests.MockingTest.testPartialClassMocking":54,"org.easymock.tests.MockClassControlTest.testToString":178,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":425,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":410,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":406,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":92,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":312,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":428,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":263,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":171,"org.easymock.tests2.UsageTest.wrongArguments":225,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":463,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":36,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":346,"org.easymock.tests2.UsageConstraintsTest.testNull":259,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":355,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":238,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":442,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":183,"org.easymock.tests2.CaptureTest.testPrimitive":300,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":111,"org.easymock.tests.UsageTest.moreThanOneArgument":84,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":186,"org.easymock.tests.UsageTest.argumentsOrdered":90,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":382,"org.easymock.tests.UsageVarargTest.varargIntAccepted":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":163,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":476,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":167,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":457,"org.easymock.tests.ReplayStateInvalidUsageTest.times":136,"org.easymock.tests2.DependencyTest.testClassMocking":426,"org.easymock.tests2.AnswerTest.answer":10,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":214,"org.easymock.tests2.CaptureTest.testAnd":297,"org.easymock.tests2.UsageTest.strictResetToDefault":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":437,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":161,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":386,"org.easymock.tests2.DelegateToTest.testDelegate":296,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":107,"org.easymock.tests.LimitationsTest.mockFinalMethod":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":82,"org.easymock.tests2.DependencyTest.testClassMockingSupport":427,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":379,"org.easymock.tests2.CaptureTest.testCapture1_2446744":301,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":429,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":105,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":212,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":130,"org.easymock.tests.UsageThrowableTest.throwError":41,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":345,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":477,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":188,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":423,"org.easymock.samples.PartialClassMockTest.testGetArea":392,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":131,"org.easymock.tests.MockingTest.testInterfaceMocking":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":164,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":411,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":93,"org.easymock.tests2.UsageTest.niceToStrict":226,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":201,"org.easymock.tests2.MockBuilderTest.testCreateMock":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":419,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":460,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":101,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":438,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":366,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":34,"org.easymock.tests.UsageOverloadedMethodTest.overloading":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":415,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":51,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":268,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":150,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":267,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":306,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":360,"org.easymock.tests2.EasyMockSupportClassTest.testAll":403,"org.easymock.tests.MockClassControlTest.testEquals":182,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":76,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":80,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":213,"org.easymock.tests2.CaptureTest.testCaptureAll":298,"org.easymock.tests.MockNameTest.defaultName":381,"org.easymock.tests2.UsageConstraintsTest.testMatches":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":187,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":128,"org.easymock.samples.ExampleTest.voteForRemovals":196,"org.easymock.tests.UsageVarargTest.allKinds":74,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":168,"org.easymock.samples.BasicClassMockTest.testPrintContent":394,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":81,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":47,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":247,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":482,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":63,"org.easymock.tests2.UsageConstraintsTest.greaterThan":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":404,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":160,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":246,"org.easymock.samples.ExampleTest.voteForRemoval":193,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":375,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":431,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":207,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":319,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":347,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":241,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":38,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":222,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":435,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":58,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":481,"org.easymock.tests2.CaptureTest.testCaptureFirst":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":436,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":53,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":146,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":209,"org.easymock.tests2.UsageTest.moreThanOneArgument":224,"org.easymock.tests2.CaptureTest.testCapture2_2446744":309,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":337,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":73,"org.easymock.tests.GenericTest.testBridgedEquals":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":32,"org.easymock.tests.UsageExpectAndReturnTest.longType":142,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":433,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":78,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":110,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":387,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":184,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":20,"org.easymock.tests.UsageCallCountTest.tooManyCalls":33,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":462,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":97,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":46,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":289,"org.easymock.tests.MockingTest.testNiceClassMocking":356,"org.easymock.tests.MockingTest.testClassMocking":351,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":26,"org.easymock.tests2.UsageConstraintsTest.testContains":266,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":284,"org.easymock.tests2.UsageConstraintsTest.testFind":258,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":191,"org.easymock.tests.MockTypeTest.fromEasyMockClass":344,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":113,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":8,"org.easymock.tests.UsageExpectAndReturnTest.object":149,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":441,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":68,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":126,"org.easymock.tests.UsageTest.exactCallCountByLastCall":91,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":367,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":383,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":155,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":64,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":50,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":467,"org.easymock.tests.MockClassControlTest.testHashCode":181,"org.easymock.tests2.EasyMockSupportTest.testVerify":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":413,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":384,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":5,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":211,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":450,"org.easymock.tests.UsageVarargTest.varargCharAccepted":67,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":342,"org.easymock.tests2.UsageTest.openCallCountByLastCall":228,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":444,"org.easymock.tests.DefaultClassInstantiatorTest.object":112,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":364,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":414,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":99,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":455,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":466,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":180,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":156,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":421,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":179,"org.easymock.tests2.UsageTest.resumeIfFailure":233,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":61,"org.easymock.tests2.StubTest.stubWithReturnValue":216,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":148,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":277,"org.easymock.tests2.SerializationTest.testAllMockedMethod":288,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":335,"org.easymock.samples.SupportTest.voteForRemovals":390,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":469,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":104,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":341,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":464,"org.easymock.tests.UsageExpectAndThrowTest.object":102,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":369,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":274,"org.easymock.tests2.DelegateToTest.testWrongClass":295,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":123,"org.easymock.tests.UsageStrictMockTest.range":118,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":448,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":440,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":478,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":103,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":400,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":22,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":89,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":35,"org.easymock.tests2.CaptureTest.testCaptureNone":305,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":363,"org.easymock.tests.UsageUnorderedTest.message":77,"org.easymock.tests.UsageVerifyTest.twoReturns":170,"org.easymock.tests.UsageVarargTest.varargByteAccepted":72,"org.easymock.tests2.ThreadingTest.testThreadSafe":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":417,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":30,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":393,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":377,"org.easymock.tests2.CaptureTest.testCapture_2617107":299,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":380,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":339,"org.easymock.tests2.UsageConstraintsTest.any":264,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":135,"org.easymock.tests2.StubTest.stub":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":60,"org.easymock.tests.UsageExpectAndThrowTest.longType":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":340,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":373,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":134,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":250,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":471,"org.easymock.tests2.SerializationTest.testClass":286,"org.easymock.tests.LimitationsTest.mockNativeMethod":57,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":158,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":361,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":454,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":253,"org.easymock.tests2.NameTest.nameForMocksControl":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":456,"org.easymock.tests2.MockedExceptionTest.testMockedException":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":405,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":424,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":96,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":56,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":235,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":398,"org.easymock.tests.MockingTest.testNicePartialClassMocking":55,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":452,"org.easymock.tests2.CaptureTest.testCaptureLast":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":127,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":262,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":292,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":275,"org.easymock.tests.MockingTest.testTwoMocks":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":100,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":231,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":279,"org.easymock.samples.ExampleTest.removeNonExistingDocument":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":459,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":132,"org.easymock.tests.UsageStrictMockTest.differentMethods":119,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":468,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":371,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":208,"org.easymock.tests2.MockBuilderTest.testCreateMockString":205,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":407,"org.easymock.tests.UsageExpectAndThrowTest.floatType":94,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":11,"org.easymock.tests.UsageVerifyTest.twoThrows":169,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":416,"org.easymock.samples.ExampleTest.voteAgainstRemoval":194,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":330,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":245,"org.easymock.tests.LimitationsTest.privateConstructor":358,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":17,"org.easymock.tests2.UsageConstraintsTest.testNotNull":278,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":48,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":282,"org.easymock.tests2.UsageTest.defaultResetToNice":230,"org.easymock.samples.ExampleTest.voteAgainstRemovals":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":331,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":453,"org.easymock.tests.UsageVarargTest.differentLength":69,"org.easymock.tests2.CallbackTest.callback":9,"org.easymock.tests2.UsageConstraintsTest.equals":318,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":4,"org.easymock.tests.UsageTest.openCallCountByLastCall":87,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":254,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":173,"org.easymock.tests.UsageCallCountTest.tooFewCalls":28,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":479,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":37,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":317,"org.easymock.tests.UsageThrowableTest.throwCheckedException":45,"org.easymock.tests.MockingTest.testStrictClassMocking":350,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":40,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":458,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":290,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":137,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":480,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":12,"org.easymock.tests.ObjectMethodsTest.testHashCode":125,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":210,"org.easymock.tests2.NameTest.nameForNiceMock":219,"org.easymock.tests2.DependencyTest.testInterfaceMocking":221,"org.easymock.samples.ExampleTest.addDocument":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.DelegateToTest.testStubDelegate":294,"org.easymock.tests2.AnswerTest.stubAnswer":281,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":116,"org.easymock.tests.UsageVarargTest.varargLongAccepted":71,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":328,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":157,"org.easymock.tests.UsageExpectAndReturnTest.floatType":141,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":15,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":475,"org.easymock.tests.UsageThrowableTest.noUpperLimit":42,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":272,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":255,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":446,"org.easymock.tests2.SerializationTest.test":287,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":302,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":140,"org.easymock.tests2.UsageConstraintsTest.testSame":260,"org.easymock.samples.SupportTest.addDocument":389,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":408,"org.easymock.tests.GenericTest.testPackageScope":75,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":474,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":354,"org.easymock.tests2.NameTest.nameForMock":217,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":151,"org.easymock.tests2.UsageStrictMockTest.differentMethods":252,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":315,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":430,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":143,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":106,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":376,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":162,"org.easymock.tests2.MockedExceptionTest.testRealException":285,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":14,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":172,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":138,"org.easymock.tests2.NameTest.nameForStrictMock":218,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":396,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":7,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":239,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":447,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":273,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":313,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":372,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":200,"org.easymock.tests2.UsageStrictMockTest.range":251,"org.easymock.tests2.UsageConstraintsTest.lessThan":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":470,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":412,"org.easymock.tests2.CaptureTest.testCaptureRightOne":307,"org.easymock.tests2.UsageConstraintsTest.testOr":261,"org.easymock.tests.UsageRangeTest.combination":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":236,"org.easymock.tests.UsageTest.wrongArguments":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":409,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":321,"org.easymock.tests.UsageVarargTest.varargShortAccepted":70,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":374,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":31,"org.easymock.tests2.UsageConstraintsTest.cmpTo":265,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":323,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests2.CaptureTest.testCaptureFromStub":308,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":129,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":395,"org.easymock.tests.UsageTest.unexpectedCallWithArray":85,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":115,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":29,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":3,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":153,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":117,"org.easymock.tests2.UsageConstraintsTest.constraints":256,"org.easymock.samples.ExampleTest.addAndChangeDocument":198,"org.easymock.tests.UsageStrictMockTest.testVerify":121,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":388,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":79,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":165,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":145,"org.easymock.tests.LimitationsTest.abstractClass":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":166,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":52,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":439,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":65,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":314}}]
