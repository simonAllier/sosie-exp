[{"position":"org.easymock.internal.LastControl:124","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[141,142,295,296,297,298,299,300,301,302,303,304,210,305,276],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[306],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[307,1,308,72,73,74,99,103,104,106,109,118,121,122,157,242,245,246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[87,192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[309,276,277,278],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[310,311,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[297,313,314,315,316,305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.RecordState:126","failures":[36,144,234,236,237],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:120","sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"argType":"type","paramType":"type"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[276,277,278],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[295,296,297,299,300,179,183,317,318,319,305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[320,321,322,323,324,325,326,327,328,71,72,329,86,87,88,330,331,123,136,332,333,138,141,141,142,142,152,168,169,170,171,173,174,175,176,177,178,179,180,182,183,184,185,187,188,189,190,191,192,194,196,197,198,199,200,201,210,211,216,217,218,278],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[6,164,335],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[336,337,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[339,257],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[179,317,185,192,195],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3,6,7,340,341,342,117,157,158,164,165,343,344,345,346],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[306,347],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[348,349,350,351,352,353,320,354,307,0,1,2,3,4,5,6,7,8,9,10,11,355,12,13,14,15,16,17,18,19,20,21,22,23,24,25,356,26,27,28,29,30,31,32,33,321,322,323,324,325,326,327,328,35,357,36,37,358,308,38,359,360,361,362,363,364,39,40,41,42,43,365,366,367,368,369,370,371,372,373,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,374,375,64,65,66,67,68,69,70,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,71,403,72,73,74,75,76,77,78,79,80,81,82,83,84,85,404,405,329,86,87,406,88,407,408,409,330,410,411,412,413,414,415,416,417,418,419,420,89,90,91,92,93,94,421,422,423,424,425,334,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,426,331,427,428,429,310,430,431,123,124,125,126,127,128,129,130,131,132,133,134,135,306,136,137,332,347,333,432,433,138,139,140,141,141,142,142,143,144,145,146,147,148,434,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,435,436,437,438,168,169,439,440,170,171,172,173,298,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,441,191,304,442,192,193,194,195,443,444,445,446,447,448,449,196,450,451,452,453,454,455,456,457,458,197,459,460,198,461,462,463,464,465,466,467,468,469,199,470,471,472,473,474,200,475,476,477,478,479,480,481,201,482,483,484,485,486,487,202,203,204,205,206,488,489,207,208,209,210,305,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,490,491,492,493,494,495,234,235,236,496,237,238,239,240,241,242,243,244,245,246,247,248,249,250,335,251,252,253,254,255,256,339,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,497,498,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,499,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":250,"org.easymock.tests2.UsageTest.argumentsOrdered":165,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":386,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":160,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":154,"org.easymock.tests2.DelegateToTest.testReturnException":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":29,"org.easymock.tests.MockingTest.testPartialClassMocking":86,"org.easymock.tests.MockClassControlTest.testToString":323,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":490,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":363,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":95,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":198,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":313,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":256,"org.easymock.tests2.UsageTest.wrongArguments":158,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":20,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":455,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":93,"org.easymock.samples.ExampleTest.answerVsDelegate":144,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":351,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":408,"org.easymock.tests2.UsageConstraintsTest.testNull":252,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":187,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":229,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":328,"org.easymock.tests2.CaptureTest.testPrimitive":282,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":24,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":114,"org.easymock.tests.UsageTest.moreThanOneArgument":1,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":80,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":422,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.UsageVarargTest.varargIntAccepted":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":131,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":486,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":337,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":135,"org.easymock.tests.ReplayStateInvalidUsageTest.times":417,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":196,"org.easymock.tests2.DependencyTest.testClassMocking":497,"org.easymock.tests2.AnswerTest.answer":206,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":393,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":205,"org.easymock.tests2.CaptureTest.testAnd":279,"org.easymock.tests2.UsageTest.strictResetToDefault":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":192,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":79,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":224,"org.easymock.tests2.DelegateToTest.testDelegate":237,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":110,"org.easymock.tests.LimitationsTest.mockFinalMethod":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":43,"org.easymock.tests2.DependencyTest.testClassMockingSupport":498,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":320,"org.easymock.tests2.CaptureTest.testCapture1_2446744":283,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":441,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":203,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":411,"org.easymock.tests.UsageThrowableTest.throwError":123,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":350,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":487,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":82,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":301,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":476,"org.easymock.samples.PartialClassMockTest.testGetArea":152,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":412,"org.easymock.tests.MockingTest.testInterfaceMocking":406,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":132,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":465,"org.easymock.tests2.UsageTest.niceToStrict":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":96,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":170,"org.easymock.tests2.MockBuilderTest.testCreateMock":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":452,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":104,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":343,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":225,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":91,"org.easymock.tests.UsageOverloadedMethodTest.overloading":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":37,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":55,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":83,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":260,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":311,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":288,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":355,"org.easymock.tests2.EasyMockSupportClassTest.testAll":197,"org.easymock.tests.MockClassControlTest.testEquals":327,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":137,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":112,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":344,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":41,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":204,"org.easymock.tests2.CaptureTest.testCaptureAll":280,"org.easymock.tests.MockNameTest.defaultName":421,"org.easymock.tests2.UsageConstraintsTest.testMatches":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":81,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":330,"org.easymock.samples.ExampleTest.voteForRemovals":148,"org.easymock.tests.UsageVarargTest.allKinds":19,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":72,"org.easymock.samples.BasicClassMockTest.testPrintContent":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":42,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":129,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":240,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":33,"org.easymock.tests2.UsageConstraintsTest.greaterThan":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":356,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":195,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":431,"org.easymock.samples.ExampleTest.voteForRemoval":145,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":443,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":212,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":352,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":338,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":190,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":138,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":383,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":222,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":28,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":495,"org.easymock.tests2.CaptureTest.testCaptureFirst":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":223,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":167,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":38,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":51,"org.easymock.tests2.UsageTest.moreThanOneArgument":157,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":214,"org.easymock.tests2.CaptureTest.testCapture2_2446744":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":394,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":175,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":18,"org.easymock.tests.GenericTest.testBridgedEquals":347,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":69,"org.easymock.tests.UsageExpectAndReturnTest.longType":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":39,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":220,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":113,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":400,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":269,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":78,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":360,"org.easymock.tests.UsageCallCountTest.tooManyCalls":70,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":100,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":128,"org.easymock.tests.MockingTest.testNiceClassMocking":409,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":178,"org.easymock.tests.MockingTest.testClassMocking":405,"org.easymock.tests2.UsageConstraintsTest.testContains":259,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":375,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":218,"org.easymock.tests2.UsageConstraintsTest.testFind":251,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":85,"org.easymock.tests.MockTypeTest.fromEasyMockClass":349,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":115,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":294,"org.easymock.tests.UsageExpectAndReturnTest.object":54,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":228,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":13,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":314,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":371,"org.easymock.tests.UsageTest.exactCallCountByLastCall":8,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":423,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":362,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":342,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":305,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":60,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":36,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":478,"org.easymock.tests.MockClassControlTest.testHashCode":326,"org.easymock.tests2.EasyMockSupportTest.testVerify":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":467,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":424,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":35,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":202,"org.easymock.tests.UsageVarargTest.varargCharAccepted":12,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":399,"org.easymock.tests2.UsageTest.openCallCountByLastCall":161,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":231,"org.easymock.tests.DefaultClassInstantiatorTest.object":331,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":365,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":468,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":102,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":477,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":193,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":101,"org.easymock.tests.CapturesMatcherTest.test":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":61,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":200,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":324,"org.easymock.tests2.UsageTest.resumeIfFailure":166,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":31,"org.easymock.tests2.StubTest.stubWithReturnValue":239,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":297,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":53,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":270,"org.easymock.tests2.SerializationTest.testAllMockedMethod":278,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":392,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":303,"org.easymock.samples.SupportTest.voteForRemovals":140,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":345,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":306,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":107,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":309,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":398,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":488,"org.easymock.tests.UsageExpectAndThrowTest.object":105,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":364,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":267,"org.easymock.tests2.DelegateToTest.testWrongClass":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":76,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":77,"org.easymock.samples.ConstructorCalledMockTest.testTax":141,"org.easymock.tests.UsageStrictMockTest.range":120,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":437,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":177,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":106,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":456,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":419,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":92,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":340,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":433,"org.easymock.tests2.CaptureTest.testCaptureNone":287,"org.easymock.tests.UsageUnorderedTest.message":75,"org.easymock.tests.UsageVerifyTest.twoReturns":74,"org.easymock.tests.UsageVarargTest.varargByteAccepted":17,"org.easymock.tests2.ThreadingTest.testThreadSafe":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":470,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":67,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":150,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":372,"org.easymock.tests2.CaptureTest.testCapture_2617107":281,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":346,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":23,"org.easymock.tests2.UsageConstraintsTest.any":257,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":416,"org.easymock.tests2.StubTest.stub":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":397,"org.easymock.tests.UsageExpectAndThrowTest.longType":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":30,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":310,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":415,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":243,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":201,"org.easymock.tests2.SerializationTest.testClass":276,"org.easymock.tests.LimitationsTest.mockNativeMethod":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":63,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":332,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":447,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":246,"org.easymock.tests2.NameTest.nameForMocksControl":494,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":449,"org.easymock.tests2.MockedExceptionTest.testMockedException":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":460,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":5,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":499,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":99,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":88,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":184,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":173,"org.easymock.tests.MockingTest.testNicePartialClassMocking":87,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":445,"org.easymock.tests2.CaptureTest.testCaptureLast":286,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":354,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":183,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":255,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":268,"org.easymock.tests.MockingTest.testTwoMocks":329,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":44,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":103,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":164,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":272,"org.easymock.samples.ExampleTest.removeNonExistingDocument":434,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":451,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":413,"org.easymock.tests.UsageStrictMockTest.differentMethods":121,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":479,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":428,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":213,"org.easymock.tests2.MockBuilderTest.testCreateMockString":176,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":461,"org.easymock.tests.UsageExpectAndThrowTest.floatType":97,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":458,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":207,"org.easymock.tests.UsageVerifyTest.twoThrows":73,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":199,"org.easymock.samples.ExampleTest.voteAgainstRemoval":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":333,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":194,"org.easymock.tests.LimitationsTest.privateConstructor":402,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":319,"org.easymock.tests2.UsageConstraintsTest.testNotNull":271,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":130,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":216,"org.easymock.tests2.UsageTest.defaultResetToNice":163,"org.easymock.samples.ExampleTest.voteAgainstRemovals":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":59,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":446,"org.easymock.tests.UsageVarargTest.differentLength":14,"org.easymock.tests2.CallbackTest.callback":233,"org.easymock.tests2.UsageConstraintsTest.equals":335,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":304,"org.easymock.tests.UsageTest.openCallCountByLastCall":4,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":22,"org.easymock.tests.UsageCallCountTest.tooFewCalls":65,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":180,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":94,"org.easymock.tests.UsageThrowableTest.throwCheckedException":127,"org.easymock.tests.MockingTest.testStrictClassMocking":404,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":341,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":450,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":179,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":418,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":181,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":209,"org.easymock.tests.ObjectMethodsTest.testHashCode":370,"org.easymock.tests2.NameTest.nameForNiceMock":493,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":215,"org.easymock.tests2.DependencyTest.testInterfaceMocking":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":315,"org.easymock.samples.ExampleTest.addDocument":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.DelegateToTest.testStubDelegate":235,"org.easymock.tests2.AnswerTest.stubAnswer":208,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":118,"org.easymock.tests.UsageVarargTest.varargLongAccepted":16,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndReturnTest.floatType":46,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":62,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":210,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":485,"org.easymock.tests.UsageThrowableTest.noUpperLimit":124,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":265,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":248,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":435,"org.easymock.tests2.SerializationTest.test":277,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":284,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":312,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":427,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":45,"org.easymock.tests2.UsageConstraintsTest.testSame":253,"org.easymock.samples.SupportTest.addDocument":139,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":462,"org.easymock.tests.GenericTest.testPackageScope":136,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":484,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":407,"org.easymock.tests2.NameTest.nameForMock":491,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":56,"org.easymock.tests2.UsageStrictMockTest.differentMethods":245,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":300,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":442,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":48,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":109,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":27,"org.easymock.tests2.MockedExceptionTest.testRealException":219,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":353,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":389,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":242,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":420,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":21,"org.easymock.tests2.NameTest.nameForStrictMock":492,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":440,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":293,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":188,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":436,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":429,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":266,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":169,"org.easymock.tests2.UsageStrictMockTest.range":244,"org.easymock.tests2.UsageConstraintsTest.lessThan":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":466,"org.easymock.tests2.CaptureTest.testCaptureRightOne":289,"org.easymock.tests2.UsageConstraintsTest.testOr":254,"org.easymock.tests.UsageRangeTest.combination":25,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":185,"org.easymock.tests.UsageTest.wrongArguments":3,"org.easymock.tests2.MockBuilderTest.testWithConstructor":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":463,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":49,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":377,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":430,"org.easymock.tests.UsageVarargTest.varargShortAccepted":15,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":68,"org.easymock.tests2.UsageConstraintsTest.cmpTo":258,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":379,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":162,"org.easymock.tests2.CaptureTest.testCaptureFromStub":290,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":410,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":439,"org.easymock.tests.UsageTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":117,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":66,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":299,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":58,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":119,"org.easymock.tests2.UsageConstraintsTest.constraints":249,"org.easymock.samples.ExampleTest.addAndChangeDocument":149,"org.easymock.tests.UsageStrictMockTest.testVerify":426,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":153,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":40,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":133,"org.easymock.tests.LimitationsTest.abstractClass":401,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":134,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":10,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":226}}]
