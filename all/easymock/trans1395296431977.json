[{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[3,13,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[50,51,52,53],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,0,69,70,1,2,3,71,72,73,4,5,6,7,74,75,76,77,78,79,80,81,82,50,51,52,83,8,84,85,86,9,10,87,88,11,89,90,91,92,93,94,95,96,97,12,98,99,100,101,102,103,104,105,106,107,108,109,110,111,13,112,113,114,115,116,117,118,119,120,121,14,122,123,15,16,17,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,18,147,148,149,150,151,152,153,154,19,155,156,157,21,158,159,160,23,161,162,49,163,164,24,165,25,166,167,168,169,170,171,172,173,174,175,176,26,177,28,178,179,29,30,31,180,181,182,183,184,32,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,36,37,38,248,39,249,40,41,42,250,251,252,253,254,255,256,43,44,257,258,259,260,261,262,45,263,264,265,266,267,268,269,270,271,272,46,273,274,275,276,277,278],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[279,280,68,281,282,283,284,76,285,286,77,287,288,289,290,291,292,293,294,295,78,296,297,298,299,300,79,301,302,303,304,305,50,150,154,306,307,308,309,310,311,312],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[55,92,94,313,95,314,253],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[50,51,52],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[16,32,41,43,44,316,317],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[54,55,56,57,58,59,318,60,61,62,63,64,65,66,279,280,67,68,281,319,0,69,70,1,2,3,71,72,73,4,5,6,7,320,74,75,282,283,284,76,285,286,77,287,288,289,290,291,292,293,294,295,78,296,297,298,299,300,79,301,302,321,322,80,323,81,324,82,50,51,52,83,8,84,85,86,9,10,87,88,11,89,90,91,325,92,93,94,313,95,96,97,12,98,326,99,100,101,102,103,104,105,106,107,108,109,110,111,13,112,113,114,115,116,117,118,119,120,121,14,122,123,15,16,17,124,327,125,126,127,128,129,328,329,130,131,132,133,134,135,136,137,138,139,140,141,142,143,330,144,145,146,331,332,333,18,334,335,336,337,338,147,339,340,341,342,343,344,148,149,150,151,345,152,153,154,306,346,307,19,347,308,348,155,349,156,309,157,315,310,20,21,312,22,350,351,158,159,352,353,354,355,356,357,358,160,23,161,162,49,163,359,360,164,361,362,363,24,165,25,364,365,366,367,368,369,370,166,371,372,373,374,375,376,167,168,169,170,171,172,377,378,173,379,380,381,382,383,384,385,386,387,388,389,390,391,174,175,176,26,177,27,28,178,179,29,30,31,180,181,182,183,184,32,392,393,394,185,186,395,187,396,397,398,188,189,399,190,191,400,401,402,403,404,405,406,314,407,408,409,410,411,412,413,414,415,416,417,418,419,192,420,421,422,423,424,425,426,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,427,428,429,430,431,432,433,434,435,436,437,438,213,214,215,216,217,218,219,220,439,440,441,442,443,221,222,444,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,445,446,447,448,449,450,451,452,453,454,455,243,456,244,245,246,247,35,36,37,38,248,39,249,40,41,42,250,251,252,457,253,254,458,255,459,256,43,44,460,461,462,463,464,465,466,467,468,469,470,471,472,257,473,258,259,260,261,262,45,263,264,265,474,475,476,477,478,479,480,481,266,267,482,483,268,269,270,484,271,272,46,273,274,275,276,277,485,278,486,487,488,489,490,491,492,493,494,495,496,497,48],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[183,407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[399],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[498],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[55,56,59,68,0,69,70,1,2,3,71,72,4,5,7,75,81,82,50,51,92,93,94,95,96,97,12,98,99,100,101,102,103,104,106,107,108,109,110,111,13,112,113,114,115,116,118,119,120,121,14,123,15,16,17,124,129,130,131,132,133,134,135,136,137,138,139,140,142,143,330,144,145,18,149,150,153,154,155,21,22,158,160,161,162,163,167,169,170,171,173,175,176,26,177,27,28,178,179,29,30,31,180,181,182,183,184,32,185,186,187,188,189,403,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,431,213,215,216,217,218,219,220,439,440,441,442,443,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,38,39,249,40,41,42,250,255,256,43,44,469,470,471,472,473,258,259,260,261,262,45],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[54,55,56,57,58,59,318,60,61,62,63,64,65,66,279,279,280,280,67,68,281,319,0,69,70,1,2,3,71,72,73,4,5,6,7,320,74,75,282,283,284,76,285,286,77,287,288,289,290,291,292,293,294,295,78,296,297,298,299,300,79,301,302,321,322,80,323,81,324,82,50,51,52,83,8,84,85,86,9,10,87,88,11,89,90,91,325,92,93,94,313,95,96,97,12,98,326,99,100,101,102,103,104,105,106,107,108,109,110,111,13,112,113,114,115,116,117,118,119,120,121,14,122,123,15,16,17,124,327,125,126,127,128,129,328,329,130,131,132,133,134,135,136,137,138,139,140,141,142,143,330,144,145,146,331,332,333,18,334,335,336,337,338,147,339,340,341,342,343,344,148,149,150,151,152,153,154,346,307,19,347,308,348,155,349,156,309,157,310,20,21,312,22,350,351,158,159,352,356,357,358,160,23,161,162,49,163,359,360,164,361,362,363,24,165,25,364,365,366,367,368,369,370,166,371,372,373,374,375,376,167,168,169,170,171,172,377,378,173,379,380,381,382,383,384,385,386,387,388,389,390,391,174,175,176,26,177,27,28,178,179,29,30,31,180,181,182,183,184,32,392,393,394,185,186,395,187,396,397,398,188,189,399,190,191,400,401,402,403,404,405,406,314,407,408,409,410,411,412,413,414,415,416,417,418,419,192,420,421,422,423,424,425,426,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,427,428,429,430,431,432,433,434,435,436,437,438,213,214,215,216,217,218,219,220,439,440,441,442,443,221,222,444,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,445,448,449,450,451,452,453,454,455,243,456,244,245,246,247,35,36,37,38,248,39,249,40,41,42,250,251,252,457,253,254,458,255,459,256,43,44,460,461,462,463,464,465,466,467,468,469,470,471,472,257,473,258,259,260,261,262,45,263,264,265,474,475,476,477,478,479,480,481,266,267,482,483,268,269,270,484,271,272,46,273,274,275,276,277,485,278,486,487,488,489,490,491,492,493,494,495,496,497],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[55,0,70,1,71,72,4,5,7,95,100,101,106,107,119,120,123,16,17,125,126,127,128,129,176,26,177,28,178,179,29,30,31,32,215,245,247,37,39,249,41,42,256,43,44,266,267,268,277,278],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[60,70,81,82,95,96,110,112,121,134,140,141,145,18,167,168,176,177,32,416,192,193,199,205,209,211,223,229,235,239,241],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[499,500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[70,123,17,124,125,126,127,128,177,243,244,245,249,42,250,256,43,44],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:594","sourceCode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[279,280,68,281,282,283,284,76,285,286,77,287,288,289,290,291,292,293,294,295,78,296,297,298,299,300,79,301,302,303,304,50,150,154,306,307,308,309,310,311,312],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:194","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[54,55,56,57,58,59,60,61,62,63,64,65,67,0,69,70,2,3,71,72,4,6,7,74,75,76,321,322,80,323,81,82,51,52,83,8,84,85,86,9,10,88,11,89,90,91,92,93,94,95,96,97,12,98,99,100,101,102,103,104,106,107,108,109,110,111,13,112,113,114,115,116,117,118,119,120,121,122,123,15,16,17,124,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,330,144,145,18,147,148,151,152,158,159,160,23,161,162,49,163,164,166,167,168,169,170,171,172,173,174,175,176,26,177,178,179,29,31,180,181,182,183,184,32,188,189,190,191,401,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,439,440,441,442,443,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,36,37,248,249,40,41,42,250,252,253,254,256,43,44,469,470,471,472,257,473,258,259,260,261,262,45,264,265,266,267,268,269,270,271,272,273,274,275,276,277,485,487,496,497],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[54,55,56,57,58,59,60,61,62,63,64,65,67,0,69,70,2,3,71,72,6,7,74,75,50,51,83,8,84,85,86,9,10,88,11,89,90,92,93,94,95,98,100,102,103,119,122,123,15,16,17,124,129,130,131,133,134,140,141,143,145,18,147,155,156,157,158,159,23,49,165,166,167,168,169,171,174,175,176,26,177,178,179,31,180,181,182,183,184,32,188,189,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,439,440,441,442,443,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,248,249,40,41,42,250,252,253,254,256,43,44,469,470,471,472,257,473,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[50,51,52,53],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[279,279,280,280,96,97,99,100,101,102,108,110,111,112,113,119,120,121,123,330,180,181,184,188,189,405,408,409,418,422,439,440,441,442,443,221,249,258,259,260,261,262,480],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[327],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[50,51,52,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[465,501,502],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[55,81,82,129,329,130,132,18,417,252],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[64,65,66,279,279,280,280,68,281,503,504,505,282,283,284,76,285,286,77,287,288,289,290,291,292,293,294,295,78,296,297,298,299,300,79,301,302,321,322,80,50,52,148,149,150,151,153,154,498,346,19,347,348,155,349,156,157,310,20,21,506,22,352,356,160,23,162,49,163,359,164,361,362,363,24,165,25,364,365,172,377,378,173,379,392,393,394,185,186,187,398,399,190,191,400,401,445,450,461,462,463,464,465,466,468,490,492,493,494,495,496,497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[328,131,132,410],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[54,55,56,57,58,59,318,60,61,62,63,64,65,66,279,280,67,68,281,319,0,69,70,1,2,3,71,72,73,4,5,6,7,320,74,75,282,283,284,76,285,286,77,287,288,289,290,291,292,293,294,295,78,296,297,298,299,300,79,301,302,321,322,80,323,81,324,82,50,51,52,83,8,84,85,86,9,10,87,88,11,89,90,91,325,92,93,94,313,95,96,97,12,98,326,99,100,101,102,103,104,105,106,107,108,109,110,111,13,112,113,114,115,116,117,118,119,120,121,14,122,123,15,16,17,124,327,125,126,127,128,129,328,329,130,131,132,133,134,135,136,137,138,139,140,141,142,143,330,144,145,146,331,332,333,18,334,335,336,337,338,147,339,340,341,342,343,344,148,149,150,151,345,152,153,154,306,346,307,19,347,308,348,155,349,156,309,157,315,310,20,21,312,22,350,351,158,159,352,353,354,355,356,357,358,160,23,161,162,49,163,359,360,164,361,362,363,24,165,25,364,365,366,367,368,369,370,166,371,372,373,374,375,376,167,168,169,170,171,172,377,378,173,379,380,381,382,383,384,385,386,387,388,389,390,391,174,175,176,26,177,27,28,178,179,29,30,31,180,181,182,183,184,32,392,393,394,185,186,395,187,396,397,398,188,189,399,190,191,400,401,402,403,404,405,406,314,407,408,409,410,411,412,413,414,415,416,417,418,419,192,420,421,422,423,424,425,426,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,427,428,429,430,431,432,433,434,435,436,437,438,213,214,215,216,217,218,219,220,439,440,441,442,443,221,222,444,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,445,446,447,448,449,450,451,452,453,454,455,243,456,244,245,246,247,35,36,37,38,248,39,249,40,41,42,250,251,252,457,253,254,458,255,459,256,43,44,460,461,462,463,464,465,466,467,468,469,470,471,472,257,473,258,259,260,261,262,45,263,264,265,474,475,476,477,478,479,480,481,266,267,482,483,268,269,270,484,271,272,46,273,274,275,276,277,485,278,486,487,488,489,490,491,492,493,494,495,496,497,48],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[507,508,509],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[50,51,52,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[399,401],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[0,70,1,2,3,4,5,6,7,8,9,11,12,13,14,123,15,16,17,124,18,147,150,153,19,156,20,23,25,166,26,177,27,28,29,30,31,32,402,403,444,448,450,452,243,244,245,35,36,37,38,39,249,40,41,42,250,457,458,255,459,256,43,44,45,46,278,488,489,492,493,494],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[105,106],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":98,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests2.UsageTest.argumentsOrdered":5,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":414,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":3,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":63,"org.easymock.tests2.DelegateToTest.testReturnException":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":470,"org.easymock.tests.MockingTest.testPartialClassMocking":185,"org.easymock.tests.MockClassControlTest.testToString":492,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":327,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":290,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":77,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":223,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":159,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":180,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":382,"org.easymock.samples.ExampleTest.answerVsDelegate":55,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":450,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":397,"org.easymock.tests2.UsageConstraintsTest.testNull":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":162,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":497,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":11,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":503,"org.easymock.tests2.CaptureTest.testPrimitive":136,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":184,"org.easymock.tests.UsageTest.moreThanOneArgument":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":242,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":161,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":441,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":481,"org.easymock.tests.UsageTest.argumentsOrdered":30,"org.easymock.tests.UsageVarargTest.varargIntAccepted":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":258,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":343,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":354,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":262,"org.easymock.tests.ReplayStateInvalidUsageTest.times":435,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests2.DependencyTest.testClassMocking":350,"org.easymock.tests2.AnswerTest.answer":129,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":420,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":333,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":447,"org.easymock.tests2.CaptureTest.testAnd":133,"org.easymock.tests2.UsageTest.strictResetToDefault":69,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":86,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":264,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":483,"org.easymock.tests2.DelegateToTest.testDelegate":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":238,"org.easymock.tests.LimitationsTest.mockFinalMethod":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":391,"org.easymock.tests2.DependencyTest.testClassMockingSupport":351,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":402,"org.easymock.tests2.CaptureTest.testCapture1_2446744":137,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":331,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":429,"org.easymock.tests.UsageThrowableTest.throwError":213,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":449,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":48,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":443,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":302,"org.easymock.samples.PartialClassMockTest.testGetArea":66,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":430,"org.easymock.tests.MockingTest.testInterfaceMocking":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":259,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":478,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":489,"org.easymock.tests2.UsageTest.niceToStrict":2,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":155,"org.easymock.tests2.MockBuilderTest.testCreateMock":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":298,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":373,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":232,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":9,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":446,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":455,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":243,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":380,"org.easymock.tests.UsageOverloadedMethodTest.overloading":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":300,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":110,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":254,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":204,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":501,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":109,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":142,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":484,"org.easymock.tests.MockClassControlTest.testEquals":496,"org.easymock.tests2.EasyMockSupportClassTest.testAll":76,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":191,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":240,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":504,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":389,"org.easymock.tests2.CaptureTest.testCaptureAll":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":332,"org.easymock.tests.MockNameTest.defaultName":444,"org.easymock.tests2.UsageConstraintsTest.testMatches":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":442,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":427,"org.easymock.samples.ExampleTest.voteForRemovals":59,"org.easymock.tests.UsageVarargTest.allKinds":277,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":390,"org.easymock.samples.BasicClassMockTest.testPrintContent":65,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":219,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":473,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":313,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":340,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":467,"org.easymock.tests2.UsageConstraintsTest.greaterThan":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":285,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":263,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":468,"org.easymock.samples.ExampleTest.voteForRemoval":56,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":168,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":364,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":506,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":355,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":359,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":172,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":84,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":469,"org.easymock.tests2.CaptureTest.testCaptureFirst":145,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":85,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":7,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":200,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":170,"org.easymock.tests2.CaptureTest.testCapture2_2446744":144,"org.easymock.tests2.UsageTest.moreThanOneArgument":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":421,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":21,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":276,"org.easymock.tests.GenericTest.testBridgedEquals":401,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":36,"org.easymock.tests.UsageExpectAndReturnTest.longType":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":387,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":241,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":480,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":117,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":239,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":475,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":439,"org.easymock.tests.UsageCallCountTest.tooManyCalls":37,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":299,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":228,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":218,"org.easymock.tests.MockingTest.testNiceClassMocking":398,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":149,"org.easymock.tests.MockingTest.testClassMocking":393,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":456,"org.easymock.tests2.UsageConstraintsTest.testContains":108,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":80,"org.easymock.tests2.UsageConstraintsTest.testFind":99,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":176,"org.easymock.tests.MockTypeTest.fromEasyMockClass":448,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":38,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":82,"org.easymock.tests.UsageExpectAndReturnTest.object":203,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":88,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":272,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":487,"org.easymock.tests.UsageTest.exactCallCountByLastCall":31,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":305,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":266,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":281,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":209,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":253,"org.easymock.tests.ResultTest.createThrowResultToString":509,"org.easymock.tests.MockClassControlTest.testHashCode":495,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":335,"org.easymock.tests2.EasyMockSupportTest.testVerify":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":293,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":267,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":454,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":146,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":33,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":320,"org.easymock.tests.UsageVarargTest.varargCharAccepted":271,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":460,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":426,"org.easymock.tests2.UsageTest.openCallCountByLastCall":71,"org.easymock.tests.DefaultClassInstantiatorTest.object":461,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":90,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":453,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":278,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":294,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":505,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":334,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":494,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":229,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":210,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":474,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":79,"org.easymock.tests2.UsageTest.resumeIfFailure":6,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":445,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":472,"org.easymock.tests2.StubTest.stubWithReturnValue":75,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":309,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":118,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":202,"org.easymock.tests2.SerializationTest.testAllMockedMethod":52,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":192,"org.easymock.samples.SupportTest.voteForRemovals":62,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":399,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":235,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":53,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":425,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":328,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":386,"org.easymock.tests.UsageExpectAndThrowTest.object":233,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":115,"org.easymock.tests2.DelegateToTest.testWrongClass":94,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":188,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":189,"org.easymock.tests.UsageStrictMockTest.range":41,"org.easymock.samples.ConstructorCalledMockTest.testTax":279,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":357,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":87,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":148,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":234,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":437,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":381,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":479,"org.easymock.tests2.CaptureTest.testCaptureNone":141,"org.easymock.tests.UsageUnorderedTest.message":32,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":47,"org.easymock.tests.UsageVerifyTest.twoReturns":44,"org.easymock.tests.UsageVarargTest.varargByteAccepted":275,"org.easymock.tests2.ThreadingTest.testThreadSafe":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":296,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":247,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":488,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":64,"org.easymock.tests2.CaptureTest.testCapture_2617107":135,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":423,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":183,"org.easymock.tests2.UsageConstraintsTest.any":106,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":434,"org.easymock.tests2.StubTest.stub":74,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndThrowTest.longType":226,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":465,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":433,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":147,"org.easymock.tests2.SerializationTest.testClass":50,"org.easymock.tests.LimitationsTest.mockNativeMethod":173,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":400,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":212,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":368,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":124,"org.easymock.tests2.NameTest.nameForMocksControl":128,"org.easymock.tests2.MockedExceptionTest.testMockedException":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":286,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":179,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":187,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":227,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":324,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":160,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":157,"org.easymock.tests.MockingTest.testNicePartialClassMocking":186,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":163,"org.easymock.tests2.CaptureTest.testCaptureLast":140,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":403,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":154,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":103,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":116,"org.easymock.tests.MockingTest.testTwoMocks":394,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":306,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":231,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":4,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":120,"org.easymock.samples.ExampleTest.removeNonExistingDocument":318,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":431,"org.easymock.tests.UsageStrictMockTest.differentMethods":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":336,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":500,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":463,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":169,"org.easymock.tests2.MockBuilderTest.testCreateMockString":22,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":490,"org.easymock.tests.UsageExpectAndThrowTest.floatType":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":287,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":284,"org.easymock.tests.ResultTest.createReturnResultToString":508,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":130,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":319,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":78,"org.easymock.tests.ResultTest.createDelegateResultToString":507,"org.easymock.samples.ExampleTest.voteAgainstRemoval":57,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":165,"org.easymock.tests.LimitationsTest.privateConstructor":378,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":304,"org.easymock.tests2.UsageConstraintsTest.testNotNull":119,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":220,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":321,"org.easymock.tests2.UsageTest.defaultResetToNice":73,"org.easymock.samples.ExampleTest.voteAgainstRemovals":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":208,"org.easymock.tests.UsageVarargTest.differentLength":46,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":367,"org.easymock.tests2.CallbackTest.callback":18,"org.easymock.tests2.UsageConstraintsTest.equals":326,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":361,"org.easymock.tests.UsageTest.openCallCountByLastCall":178,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":182,"org.easymock.tests.UsageCallCountTest.tooFewCalls":245,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":151,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":383,"org.easymock.tests.UsageThrowableTest.throwCheckedException":217,"org.easymock.tests.MockingTest.testStrictClassMocking":392,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":153,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":222,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":371,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":436,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":152,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":132,"org.easymock.tests.ObjectMethodsTest.testHashCode":486,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":171,"org.easymock.tests2.NameTest.nameForNiceMock":127,"org.easymock.tests2.DependencyTest.testInterfaceMocking":158,"org.easymock.samples.ExampleTest.addDocument":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":297,"org.easymock.tests2.DelegateToTest.testStubDelegate":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":301,"org.easymock.tests2.AnswerTest.stubAnswer":131,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":249,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":315,"org.easymock.tests.UsageVarargTest.varargLongAccepted":274,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.floatType":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":68,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":280,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":458,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":113,"org.easymock.tests.UsageThrowableTest.noUpperLimit":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":342,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":97,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":352,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":138,"org.easymock.tests2.SerializationTest.test":51,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":502,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":462,"org.easymock.tests2.UsageConstraintsTest.testSame":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":194,"org.easymock.samples.SupportTest.addDocument":61,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":345,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":288,"org.easymock.tests.GenericTest.testPackageScope":190,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":341,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":396,"org.easymock.tests2.NameTest.nameForMock":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":205,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":312,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":362,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":197,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":237,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":485,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":265,"org.easymock.tests2.MockedExceptionTest.testRealException":323,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":417,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":123,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":438,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":181,"org.easymock.tests2.NameTest.nameForStrictMock":126,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":348,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":81,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":356,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":464,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":114,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":316,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":19,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.UsageConstraintsTest.lessThan":121,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":338,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":8,"org.easymock.tests2.CaptureTest.testCaptureRightOne":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":292,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":499,"org.easymock.tests2.UsageConstraintsTest.testOr":102,"org.easymock.tests.UsageRangeTest.combination":45,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.UsageTest.wrongArguments":28,"org.easymock.tests2.MockBuilderTest.testWithConstructor":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":289,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":491,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":206,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":466,"org.easymock.tests.UsageVarargTest.varargShortAccepted":273,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":35,"org.easymock.tests2.UsageConstraintsTest.cmpTo":107,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":407,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":72,"org.easymock.tests2.CaptureTest.testCaptureFromStub":330,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":428,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":347,"org.easymock.tests.UsageTest.unexpectedCallWithArray":27,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":246,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":207,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":40,"org.easymock.tests2.UsageConstraintsTest.constraints":12,"org.easymock.samples.ExampleTest.addAndChangeDocument":60,"org.easymock.tests.UsageStrictMockTest.testVerify":251,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":67,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":248,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":388,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":199,"org.easymock.tests.LimitationsTest.abstractClass":377,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":10,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":269,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":317}}]
