[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"candidateParameters","i":"i"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[19,20,21,22,23,24,25,26,27],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[28],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[29,30,31,32],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[33,34],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,4,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,0,1,2,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,19,110,20,111,112,113,114,115,116,117,21,118,119,120,121,122,123,5,124,125,126,127,128,6,7,129,130,131,132,133,134,135,136,137,30,138,22,23,139,140,141,142,24,25,143,26,144,145,146,147,148,149,150,31,151,27,152,153,154,32,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,8,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,33,293,294,295,34,296,297,298,299,300,301,302,303,304,305,9,306,307,10,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,12,13,453,454,455,456,457,458,14,15,459,460,16,17,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,18,485,486,487,488,489,490,491],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:112","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[181],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[272,338,345],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[35,36,37,38,41,43,46,47,48,49,50,51,52,4,53,54,80,81,82,83,84,85,88,89,91,0,1,2,92,93,95,96,100,101,19,110,20,111,112,113,114,115,116,117,21,118,119,120,121,122,123,5,124,125,126,127,128,6,7,129,130,132,133,134,136,30,138,22,23,140,141,142,24,25,143,144,145,146,147,148,149,150,31,151,27,152,153,154,32,155,156,157,159,160,161,162,163,164,165,166,167,168,169,171,174,175,176,177,180,182,186,187,193,194,196,209,210,211,212,241,242,243,244,245,246,247,248,256,257,258,262,8,270,271,272,273,274,275,276,277,278,279,280,281,285,286,287,288,289,293,294,296,297,298,299,300,301,302,303,304,305,9,306,307,10,308,309,310,314,315,316,317,318,319,320,321,322,347,348,349,350,351,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,379,386,387,389,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,426,427,428,429,430,431,432,433,434,435,436,437,438,440,441,442,443,444,445,446,447,448,449,450,451,452,12,13,454,455,456,457,458,14,15,459,460,16,17,461,462,463,464,465,467,477,478,479,480,481,482,484,18,485,486,487,488,489,490,491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[151],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,4,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,0,1,2,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,19,110,20,111,112,113,114,115,116,117,21,118,119,120,121,122,123,5,124,125,126,127,128,6,7,129,130,131,132,133,134,135,136,137,30,138,22,23,139,140,141,142,24,25,143,26,144,145,146,147,148,149,150,31,151,27,152,153,154,32,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,8,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,33,293,294,295,34,296,297,298,299,300,301,302,303,304,305,9,306,307,10,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,12,13,453,454,455,456,457,458,14,15,459,460,16,17,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,18,485,486,487,488,489,490,491],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[86,493,494,495,496,497,189],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[283,284,291,292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[498,499,500,501,502,503,504,505,506,507,508,51,4,53,123,5,6,7,150,8,9,306,10,308,509,510,511,512,513,514,11,452,12,13,458,14,15,16,17,466,467,480,483,484,18],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,4,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,0,1,2,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,19,110,20,111,112,113,114,115,116,117,21,118,119,120,121,122,123,5,124,125,126,127,128,6,7,129,130,131,132,133,134,135,136,137,30,138,22,23,139,140,141,142,24,25,143,26,144,145,146,147,148,149,150,31,151,27,152,153,154,32,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,8,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,33,293,294,295,34,296,297,298,299,300,301,302,303,304,305,9,306,307,10,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,12,13,453,454,455,456,457,458,14,15,459,460,16,17,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,18,485,486,487,488,489,490,491],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[150],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[515,31],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[49,52,4,53,68,72,73,76,82,88,121,5,124,125,6,7,129,130,22,150,164,175,177,182,193,194,196,8,304,9,307,10,308,320,321,322,442,448,12,13,457,14,15,16,17,461],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[498,499,500,503,505,507,51,4,53,123,8,306,10,308,511,513,11,452,12,13,458,466,467],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[23,25,27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[33,293,294,295,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"leafClass"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[19,110,20,115,116,21,120,22,23,141,24,25,155,348,349,350,447],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":23,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":457,"org.easymock.tests2.UsageTest.argumentsOrdered":7,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":333,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":125,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":253,"org.easymock.tests2.DelegateToTest.testReturnException":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":487,"org.easymock.tests.MockingTest.testPartialClassMocking":386,"org.easymock.tests.MockClassControlTest.testToString":298,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":158,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":424,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":223,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":357,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":493,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":143,"org.easymock.tests2.UsageTest.wrongArguments":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":347,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":464,"org.easymock.samples.ExampleTest.answerVsDelegate":242,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":474,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":391,"org.easymock.tests2.UsageConstraintsTest.testNull":141,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":166,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":76,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":303,"org.easymock.tests2.CaptureTest.testPrimitive":111,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":351,"org.easymock.tests.UsageTest.moreThanOneArgument":458,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":376,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":287,"org.easymock.tests.UsageTest.argumentsOrdered":17,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":352,"org.easymock.tests.UsageVarargTest.varargIntAccepted":438,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":431,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":497,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":180,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":207,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":435,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":502,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":60,"org.easymock.tests.ReplayStateInvalidUsageTest.times":278,"org.easymock.tests2.DependencyTest.testClassMocking":39,"org.easymock.tests2.AnswerTest.answer":43,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":340,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":38,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":471,"org.easymock.tests2.CaptureTest.testAnd":19,"org.easymock.tests2.UsageTest.strictResetToDefault":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":184,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":286,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":71,"org.easymock.tests2.DelegateToTest.testDelegate":136,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":372,"org.easymock.tests.LimitationsTest.mockFinalMethod":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":490,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":430,"org.easymock.tests2.DependencyTest.testClassMockingSupport":40,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":466,"org.easymock.tests2.CaptureTest.testCapture1_2446744":112,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":370,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":36,"org.easymock.tests.UsageThrowableTest.throwError":393,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":272,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":473,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":208,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":237,"org.easymock.samples.PartialClassMockTest.testGetArea":254,"org.easymock.tests.MockingTest.testInterfaceMocking":388,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":273,"org.easymock.tests2.CompareToTest.testLessOrEqual":29,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":432,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":312,"org.easymock.tests2.UsageTest.niceToStrict":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":224,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":186,"org.easymock.tests2.MockBuilderTest.testCreateMock":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":232,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":63,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":366,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":72,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":470,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":284,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":462,"org.easymock.tests.UsageOverloadedMethodTest.overloading":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":234,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":482,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":148,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":412,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":147,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":117,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":439,"org.easymock.tests2.EasyMockSupportClassTest.testAll":216,"org.easymock.tests.MockClassControlTest.testEquals":302,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":294,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":374,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":428,"org.easymock.tests2.CaptureTest.testCaptureAll":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":37,"org.easymock.tests.MockNameTest.defaultName":382,"org.easymock.tests2.UsageConstraintsTest.testMatches":149,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":288,"org.easymock.samples.ExampleTest.voteForRemovals":246,"org.easymock.tests.UsageVarargTest.allKinds":447,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":452,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":429,"org.easymock.samples.BasicClassMockTest.testPrintContent":240,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":399,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":491,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":135,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":204,"org.easymock.tests2.UsageConstraintsTest.greaterThan":31,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":449,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":177,"org.easymock.samples.ExampleTest.voteForRemoval":243,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":269,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":178,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":81,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":492,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":106,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":169,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":485,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":69,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":486,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":131,"org.easymock.tests2.CaptureTest.testCaptureFirst":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":70,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":130,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":408,"org.easymock.tests2.UsageTest.moreThanOneArgument":123,"org.easymock.tests2.CaptureTest.testCapture2_2446744":119,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":83,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":341,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":446,"org.easymock.tests.GenericTest.testBridgedEquals":34,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":321,"org.easymock.tests.UsageExpectAndReturnTest.longType":404,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":426,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":375,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":453,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":154,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":291,"org.easymock.tests.UsageCallCountTest.tooManyCalls":322,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":510,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":233,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":362,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":398,"org.easymock.tests.MockingTest.testNiceClassMocking":392,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":95,"org.easymock.tests.MockingTest.testClassMocking":384,"org.easymock.tests2.UsageConstraintsTest.testContains":146,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":315,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":211,"org.easymock.tests2.UsageConstraintsTest.testFind":140,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":456,"org.easymock.tests.MockTypeTest.fromEasyMockClass":472,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":91,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests.UsageExpectAndReturnTest.object":411,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":75,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":494,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":441,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":258,"org.easymock.tests.UsageTest.exactCallCountByLastCall":461,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":353,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":514,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":86,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":436,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":417,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":481,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":198,"org.easymock.tests.MockClassControlTest.testHashCode":301,"org.easymock.tests2.EasyMockSupportTest.testVerify":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":226,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":501,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":479,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":283,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":35,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":137,"org.easymock.tests.UsageVarargTest.varargCharAccepted":440,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":261,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":346,"org.easymock.tests2.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":78,"org.easymock.tests.DefaultClassInstantiatorTest.object":262,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":282,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":256,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":227,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":364,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":396,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":58,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":197,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":175,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":300,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":363,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":418,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":290,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":235,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":299,"org.easymock.tests2.UsageTest.resumeIfFailure":129,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":469,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":489,"org.easymock.tests2.StubTest.stubWithReturnValue":93,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":189,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":410,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":32,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":339,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":506,"org.easymock.samples.SupportTest.voteForRemovals":252,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":369,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":345,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":44,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":425,"org.easymock.tests.UsageExpectAndThrowTest.object":367,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":152,"org.easymock.tests2.DelegateToTest.testWrongClass":134,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":477,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":478,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.samples.ConstructorCalledMockTest.testTax":249,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":108,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":74,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":94,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":368,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":188,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":213,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":463,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":509,"org.easymock.tests2.CaptureTest.testCaptureNone":116,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":313,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":445,"org.easymock.tests2.ThreadingTest.testThreadSafe":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":230,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":319,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":239,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":259,"org.easymock.tests2.CaptureTest.testCapture_2617107":20,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":508,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":343,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":350,"org.easymock.tests2.UsageConstraintsTest.any":144,"org.easymock.tests2.StubTest.stub":92,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":344,"org.easymock.tests.UsageExpectAndThrowTest.longType":360,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":266,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":276,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":52,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests.LimitationsTest.mockNativeMethod":379,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":420,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":295,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":57,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":54,"org.easymock.tests2.NameTest.nameForMocksControl":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":59,"org.easymock.tests2.MockedExceptionTest.testMockedException":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":218,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":460,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":389,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":90,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":361,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":190,"org.easymock.tests.MockingTest.testNicePartialClassMocking":387,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":168,"org.easymock.tests2.CaptureTest.testCaptureLast":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":55,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":467,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":101,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":25,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":153,"org.easymock.tests.MockingTest.testTwoMocks":385,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":401,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":365,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":156,"org.easymock.samples.ExampleTest.removeNonExistingDocument":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":62,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":274,"org.easymock.tests.UsageStrictMockTest.differentMethods":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":199,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":264,"org.easymock.tests2.ConstraintsToStringTest.andToString":505,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":82,"org.easymock.tests2.MockBuilderTest.testCreateMockString":196,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":220,"org.easymock.tests.UsageExpectAndThrowTest.floatType":359,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":215,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":46,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":87,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":229,"org.easymock.samples.ExampleTest.voteAgainstRemoval":244,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":334,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":176,"org.easymock.tests.LimitationsTest.privateConstructor":378,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":28,"org.easymock.tests2.UsageConstraintsTest.testNotNull":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":400,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":209,"org.easymock.tests2.UsageTest.defaultResetToNice":128,"org.easymock.samples.ExampleTest.voteAgainstRemovals":241,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":335,"org.easymock.tests.UsageVarargTest.differentLength":442,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":56,"org.easymock.tests2.CallbackTest.callback":88,"org.easymock.tests2.UsageConstraintsTest.equals":139,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":512,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":172,"org.easymock.tests.UsageTest.openCallCountByLastCall":459,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":349,"org.easymock.tests.UsageCallCountTest.tooFewCalls":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":97,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":465,"org.easymock.tests.UsageThrowableTest.throwCheckedException":397,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":511,"org.easymock.tests.MockingTest.testStrictClassMocking":383,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":422,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":100,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":61,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":99,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":48,"org.easymock.tests.ObjectMethodsTest.testHashCode":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":496,"org.easymock.tests2.NameTest.nameForNiceMock":161,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":84,"org.easymock.tests2.DependencyTest.testInterfaceMocking":41,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":495,"org.easymock.samples.ExampleTest.addDocument":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":231,"org.easymock.tests2.DelegateToTest.testStubDelegate":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":236,"org.easymock.tests2.AnswerTest.stubAnswer":47,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":306,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":191,"org.easymock.tests.UsageVarargTest.varargLongAccepted":444,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":332,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":419,"org.easymock.tests.UsageExpectAndReturnTest.floatType":403,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":85,"org.easymock.tests2.ConstraintsToStringTest.orToString":498,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":250,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests.UsageThrowableTest.noUpperLimit":394,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":206,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":138,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":103,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":113,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":402,"org.easymock.tests2.UsageConstraintsTest.testSame":142,"org.easymock.samples.SupportTest.addDocument":251,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":98,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":221,"org.easymock.tests.GenericTest.testPackageScope":293,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":205,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":390,"org.easymock.tests2.NameTest.nameForMock":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":413,"org.easymock.tests2.UsageStrictMockTest.differentMethods":53,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":195,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":405,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":371,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":255,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":451,"org.easymock.tests2.MockedExceptionTest.testRealException":212,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":476,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":513,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":336,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":281,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":348,"org.easymock.tests2.NameTest.nameForStrictMock":160,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":185,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":89,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":107,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":27,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":265,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":182,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests2.UsageConstraintsTest.lessThan":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":201,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":331,"org.easymock.tests2.CaptureTest.testCaptureRightOne":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":225,"org.easymock.tests2.UsageConstraintsTest.testOr":24,"org.easymock.tests.UsageRangeTest.combination":448,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":164,"org.easymock.tests.UsageTest.wrongArguments":15,"org.easymock.tests2.MockBuilderTest.testWithConstructor":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":222,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":324,"org.easymock.tests.UsageVarargTest.varargShortAccepted":443,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":267,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":320,"org.easymock.tests2.UsageConstraintsTest.cmpTo":145,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":326,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests2.CaptureTest.testCaptureFromStub":118,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":271,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":183,"org.easymock.tests.UsageTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":318,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":415,"org.easymock.tests2.UsageConstraintsTest.constraints":22,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":307,"org.easymock.samples.ExampleTest.addAndChangeDocument":248,"org.easymock.tests2.ConstraintsToStringTest.notToString":500,"org.easymock.tests.UsageStrictMockTest.testVerify":310,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":238,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":305,"org.easymock.tests2.CompareToTest.testGreateThan":515,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":427,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":433,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":407,"org.easymock.tests.LimitationsTest.abstractClass":377,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":484,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":434,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":73}}]
