[{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[16,17,18,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,11],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[2,6,8,9,11,12,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer","i":"matches"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[61,62,63,64],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:69","sourceCode":"continue","type":"CtContinueImpl"},"failures":[65,66,67,68,69,70,71,72,73,74,75],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[76],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[77,78,79,80,81,82,83,84,85,86,87,88],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[89,90],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[92,93,93,94,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,22,185,0,186,187,188,189,23,190,191,192,193,194,195,196,89,197,198,199,200,201,202,203,204,24,205,206,73,207,208,209,74,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,1,234,2,3,235,61,62,63,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,45,271,272,273,274,275,276,277,278,279,280,46,4,281,282,283,47,284,285,286,287,288,289,290,291,292,293,294,295,296,297,9,48,49,50,298,299,51,300,52,53,54,55,56,57,17,19,301,302,58,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,60,325,10,11,12,326,327,328,329,330,331,332,333,334,335,336,337,13,338,14,15,339,340,341,342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[343,137,138,139,140,141,144,147,149,170,344,180,181,184,190,197,210,217,222,345,346,347,348,349,350,351,352,353,354,355,356,273,281,293,294,295,296,297,357,358,359,360,361,362,363,364,365,366,312,313,314,367,368,369,370,331,371],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[372],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[102,373,374,375,376,377,378,379],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[352,380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[117],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[92,93,94,95,96,97,98,381,99,100,77,382,383,78,384,101,102,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,344,172,173,174,175,176,177,178,179,180,181,182,183,184,22,185,0,186,187,188,189,23,190,191,192,193,194,195,196,89,197,199,200,201,203,204,24,205,206,73,207,208,209,74,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,231,232,233,385,1,234,2,3,235,61,62,63,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,270,45,273,277,279,280,46,4,281,282,283,47,284,285,286,287,293,294,295,296,297,9,298,299,51,300,52,53,54,55,56,57,17,18,301,302,58,386,387,388,389,390,391,392,393,394,395,305,306,307,308,309,310,311,366,312,313,314,315,316,317,318,319,321,322,323,324,60,325,10,11,12,327,328,329,330,331,332,333,334,335,336,396,337,13,338,14,15,339],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[397],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > (this.int)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"minimum","callCount":"minimum"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[141,144,170,398,180],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[198,200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[2,8,11,12,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[399,136],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[2,3,29,33,34,36,39,243,247,248,250,253,288,291,292,400,14,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":112,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests2.UsageTest.argumentsOrdered":192,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":220,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":188,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":77,"org.easymock.tests2.DelegateToTest.testReturnException":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":322,"org.easymock.tests.MockingTest.testPartialClassMocking":260,"org.easymock.tests.MockClassControlTest.testToString":360,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":21,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":320,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":398,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":25,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":224,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":5,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":374,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":118,"org.easymock.tests2.UsageTest.wrongArguments":186,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":307,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":313,"org.easymock.samples.ExampleTest.answerVsDelegate":96,"org.easymock.tests2.UsageConstraintsTest.testNull":114,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":167,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":219,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":365,"org.easymock.tests2.CaptureTest.testPrimitive":153,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":311,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":44,"org.easymock.tests.UsageTest.moreThanOneArgument":4,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":265,"org.easymock.tests.UsageTest.argumentsOrdered":285,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":288,"org.easymock.tests.UsageVarargTest.varargIntAccepted":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":315,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":378,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":319,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":197,"org.easymock.tests.ReplayStateInvalidUsageTest.times":353,"org.easymock.tests2.AnswerTest.answer":227,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":140,"org.easymock.tests2.CaptureTest.testAnd":150,"org.easymock.tests2.UsageTest.strictResetToDefault":185,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":214,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":279,"org.easymock.tests2.DelegateToTest.testDelegate":203,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":297,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":274,"org.easymock.tests2.CaptureTest.testCapture1_2446744":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":38,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":138,"org.easymock.tests.UsageThrowableTest.throwError":51,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":347,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":267,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":66,"org.easymock.samples.PartialClassMockTest.testGetArea":92,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":316,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":341,"org.easymock.tests2.UsageTest.niceToStrict":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":26,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":143,"org.easymock.tests2.MockBuilderTest.testCreateMock":147,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":87,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":34,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":215,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":50,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":366,"org.easymock.tests.UsageOverloadedMethodTest.overloading":302,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":124,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":250,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":301,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":123,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":159,"org.easymock.tests2.EasyMockSupportClassTest.testAll":223,"org.easymock.tests.MockClassControlTest.testEquals":364,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":18,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":42,"org.easymock.tests2.CaptureTest.testCaptureAll":151,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":295,"org.easymock.tests2.UsageConstraintsTest.testMatches":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":266,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":345,"org.easymock.samples.ExampleTest.voteForRemovals":99,"org.easymock.tests.UsageVarargTest.allKinds":305,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":296,"org.easymock.samples.BasicClassMockTest.testPrintContent":383,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":56,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":233,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":325,"org.easymock.tests2.UsageConstraintsTest.greaterThan":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":278,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":174,"org.easymock.samples.ExampleTest.voteForRemoval":97,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":176,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":170,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":22,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":212,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":321,"org.easymock.tests2.CaptureTest.testCaptureFirst":163,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":198,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":213,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":246,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":178,"org.easymock.tests2.CaptureTest.testCapture2_2446744":162,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":148,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":395,"org.easymock.tests.GenericTest.testBridgedEquals":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":332,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":372,"org.easymock.tests.UsageExpectAndReturnTest.longType":242,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":43,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":132,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":41,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":263,"org.easymock.tests.UsageCallCountTest.tooManyCalls":333,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":327,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":247,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":30,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":55,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":206,"org.easymock.tests2.UsageConstraintsTest.testContains":122,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":370,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":182,"org.easymock.tests2.UsageConstraintsTest.testFind":113,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":58,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":108,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":336,"org.easymock.tests.UsageExpectAndReturnTest.object":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":218,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":390,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":375,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":369,"org.easymock.tests.UsageTest.exactCallCountByLastCall":286,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":298,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":289,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":65,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":386,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":270,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":80,"org.easymock.tests.MockClassControlTest.testHashCode":363,"org.easymock.tests2.EasyMockSupportTest.testVerify":222,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":49,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":137,"org.easymock.tests.UsageVarargTest.varargCharAccepted":389,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":385,"org.easymock.tests2.UsageTest.openCallCountByLastCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":221,"org.easymock.tests.DefaultClassInstantiatorTest.object":357,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":48,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":367,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":53,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":79,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":172,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":256,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":226,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":361,"org.easymock.tests2.UsageTest.resumeIfFailure":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":324,"org.easymock.tests2.StubTest.stubWithReturnValue":24,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":70,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":133,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":248,"org.easymock.tests2.SerializationTest.testAllMockedMethod":63,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":303,"org.easymock.samples.SupportTest.voteForRemovals":101,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":16,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":37,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":64,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":304,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":228,"org.easymock.tests.UsageExpectAndThrowTest.object":35,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":130,"org.easymock.tests2.DelegateToTest.testWrongClass":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":334,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":335,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":93,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":36,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":145,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":284,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":312,"org.easymock.tests2.CaptureTest.testCaptureNone":158,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":342,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":394,"org.easymock.tests2.ThreadingTest.testThreadSafe":175,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":330,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":382,"org.easymock.tests2.CaptureTest.testCapture_2617107":152,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":310,"org.easymock.tests2.UsageConstraintsTest.any":120,"org.easymock.tests2.StubTest.stub":204,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":352,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":238,"org.easymock.tests.UsageExpectAndThrowTest.longType":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":323,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":351,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":234,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests2.SerializationTest.testClass":61,"org.easymock.tests.LimitationsTest.mockNativeMethod":306,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":19,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":258,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":86,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":235,"org.easymock.tests2.NameTest.nameForMocksControl":106,"org.easymock.tests2.MockedExceptionTest.testMockedException":181,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":47,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":397,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":29,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":262,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":164,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":146,"org.easymock.tests.MockingTest.testNicePartialClassMocking":261,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":169,"org.easymock.tests2.CompareToTest.testNotComparable":76,"org.easymock.tests2.CaptureTest.testCaptureLast":157,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":373,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":275,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":117,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":74,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":131,"org.easymock.tests.MockingTest.testTwoMocks":259,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":33,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":191,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":135,"org.easymock.samples.ExampleTest.removeNonExistingDocument":343,"org.easymock.tests.UsageStrictMockTest.differentMethods":15,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":81,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":177,"org.easymock.tests2.MockBuilderTest.testCreateMockString":149,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":358,"org.easymock.tests.UsageExpectAndThrowTest.floatType":27,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":126,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":230,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":225,"org.easymock.samples.ExampleTest.voteAgainstRemoval":98,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":340,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":173,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":67,"org.easymock.tests2.UsageConstraintsTest.testNotNull":134,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":57,"org.easymock.tests2.UsageTest.defaultResetToNice":190,"org.easymock.samples.ExampleTest.voteAgainstRemovals":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":254,"org.easymock.tests.UsageVarargTest.differentLength":391,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":85,"org.easymock.tests2.CallbackTest.callback":89,"org.easymock.tests.UsageTest.openCallCountByLastCall":283,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":309,"org.easymock.tests.UsageCallCountTest.tooFewCalls":328,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":207,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":314,"org.easymock.tests.UsageThrowableTest.throwCheckedException":54,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":209,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":299,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":73,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":354,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":208,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":232,"org.easymock.tests2.CompareToTest.testGreateOrEqual":91,"org.easymock.tests.ObjectMethodsTest.testHashCode":368,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":377,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":179,"org.easymock.tests2.NameTest.nameForNiceMock":105,"org.easymock.tests2.DependencyTest.testInterfaceMocking":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":376,"org.easymock.samples.ExampleTest.addDocument":381,"org.easymock.tests2.DelegateToTest.testStubDelegate":200,"org.easymock.tests2.AnswerTest.stubAnswer":231,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests.UsageVarargTest.varargLongAccepted":393,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":339,"org.easymock.tests.UsageExpectAndReturnTest.floatType":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":102,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":94,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":128,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests.UsageThrowableTest.noUpperLimit":300,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":110,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":155,"org.easymock.tests2.SerializationTest.test":62,"org.easymock.tests2.UsageConstraintsTest.testSame":115,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":240,"org.easymock.samples.SupportTest.addDocument":384,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":350,"org.easymock.tests.GenericTest.testPackageScope":17,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":291,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":82,"org.easymock.tests2.NameTest.nameForMock":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":251,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":72,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":243,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":39,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":280,"org.easymock.tests2.MockedExceptionTest.testRealException":183,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":308,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":356,"org.easymock.tests2.NameTest.nameForStrictMock":104,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":107,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":168,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":129,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":6,"org.easymock.tests.ErrorMessageTest.testGetters":7,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":142,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":211,"org.easymock.tests2.CaptureTest.testCaptureRightOne":160,"org.easymock.tests2.UsageConstraintsTest.testOr":116,"org.easymock.tests.UsageRangeTest.combination":277,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":165,"org.easymock.tests.UsageTest.wrongArguments":282,"org.easymock.tests2.MockBuilderTest.testWithConstructor":68,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":359,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":252,"org.easymock.tests.UsageVarargTest.varargShortAccepted":392,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":331,"org.easymock.tests2.UsageConstraintsTest.cmpTo":121,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":229,"org.easymock.tests2.CompareToTest.testLessThan":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":59,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":23,"org.easymock.tests2.CaptureTest.testCaptureFromStub":161,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":346,"org.easymock.tests.UsageTest.unexpectedCallWithArray":281,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":337,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":329,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":71,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":253,"org.easymock.tests2.UsageConstraintsTest.constraints":111,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":338,"org.easymock.samples.ExampleTest.addAndChangeDocument":100,"org.easymock.tests.UsageStrictMockTest.testVerify":371,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":78,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":396,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":294,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":245,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":318,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":387,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":216}}]
