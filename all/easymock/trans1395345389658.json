[{"position":"org.easymock.internal.LastControl:70","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,1,2,85,86,18,87,88,89,90,91,92,93,94,95,96,97,98,99,21,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[124,125,126,127,69,70,71,72,2,85,86,18,96,21,100,101],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:45","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[128,129,130,131,2,85,86,5,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,21,100,101,147],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[148,149,150],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[151],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[116,117],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.RecordState:327","failures":[152,153,154,155],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[156,52,54,55,56,57,58,59,61,157,62,63,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[158,159,159,160,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,152,153,176,177,178,179,180,181,182,183,184,185,0,186,69,70,71,187,72,73,74,188,189,75,76,190,77,78,191,192,193,194,195,196,197,198,199,128,200,201,202,203,204,129,130,131,205,206,207,208,209,210,211,212,1,2,213,85,86,214,215,216,217,218,219,3,4,5,6,7,8,9,220,221,222,223,224,225,226,227,228,229,230,231,132,232,233,234,235,236,237,238,239,240,241,242,243,244,133,245,10,246,11,12,13,14,15,247,248,249,250,251,252,154,155,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,134,273,274,275,276,277,135,136,137,278,279,280,281,282,283,284,16,17,18,285,286,87,88,89,287,288,289,138,139,290,90,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,140,308,309,141,142,143,144,19,20,310,311,312,313,314,93,315,316,94,317,95,318,319,320,321,145,146,322,323,324,96,97,325,326,327,328,329,98,99,330,331,332,333,21,334,100,101,335,66,102,103,104,105,336,337,338,339,340,341,147,342,343,344,345,346,347,348,349,350,351,106,352,353,354,108,109,355,110,111,22,356,112,113,357,358,114,115,359,360,361,362,363,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,364,116,365,366,367,368,369,51,117,370,371,118,120,52,53,54,55,56,57,58,59,60,61,62,63,64,65,122,372,373,374,375,376,377,378,379,380,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[4,243,244,133,245,10,246,378,379,380,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[182,26],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[222,382,139],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[383],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[4,7,230,243,244,133,245,10,246,252,154,155,385,311,378,379,380,381],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[70,187,10,386,311,323],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[158,164,387,388,389,390,391,121,392,393,394,395,396,397,398,399,400,401,123,402,403,404,405,406],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[4,7,243,244,133,245,10,246,252,154,155,378,379,380,381],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[67,408,409,410,411,412,113,115,413,414,415,416],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[195,196,202,206,17,308],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[417,418,1,419,420],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[148,149,150],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[421],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":26,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests2.UsageTest.argumentsOrdered":99,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":319,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":121,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":326,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":164,"org.easymock.tests2.DelegateToTest.testReturnException":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":244,"org.easymock.tests.MockingTest.testPartialClassMocking":192,"org.easymock.tests.MockClassControlTest.testToString":87,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":268,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":349,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":124,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":146,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":32,"org.easymock.tests2.UsageTest.wrongArguments":97,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":5,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":406,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":233,"org.easymock.samples.ExampleTest.answerVsDelegate":166,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":82,"org.easymock.tests2.UsageConstraintsTest.testNull":28,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":366,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":289,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":318,"org.easymock.tests2.CaptureTest.testPrimitive":55,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":9,"org.easymock.tests.UsageTest.moreThanOneArgument":72,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":283,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":140,"org.easymock.tests.UsageTest.argumentsOrdered":76,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":301,"org.easymock.tests.UsageVarargTest.varargIntAccepted":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":11,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":395,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":15,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":150,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":122,"org.easymock.tests.ReplayStateInvalidUsageTest.times":228,"org.easymock.tests2.AnswerTest.answer":336,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":33,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":344,"org.easymock.tests2.CaptureTest.testAnd":52,"org.easymock.tests2.UsageTest.strictResetToDefault":324,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":307,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":143,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":315,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":305,"org.easymock.tests2.DelegateToTest.testDelegate":377,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":251,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":77,"org.easymock.tests2.CaptureTest.testCapture1_2446744":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":137,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":342,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":222,"org.easymock.tests.UsageThrowableTest.throwError":293,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":81,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":309,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":414,"org.easymock.samples.PartialClassMockTest.testGetArea":163,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":217,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":269,"org.easymock.tests2.UsageTest.niceToStrict":325,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":353,"org.easymock.tests2.MockBuilderTest.testCreateMock":355,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":403,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":419,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":276,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":316,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":153,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":132,"org.easymock.tests.UsageOverloadedMethodTest.overloading":266,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":38,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":129,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":265,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":37,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":61,"org.easymock.tests.MockClassControlTest.testEquals":288,"org.easymock.tests2.EasyMockSupportClassTest.testAll":348,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":281,"org.easymock.tests2.CaptureTest.testCaptureAll":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":249,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":343,"org.easymock.tests.MockNameTest.defaultName":68,"org.easymock.tests2.UsageConstraintsTest.testMatches":39,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":308,"org.easymock.samples.ExampleTest.voteForRemovals":170,"org.easymock.tests.UsageVarargTest.allKinds":0,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":69,"org.easymock.samples.BasicClassMockTest.testPrintContent":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":250,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":299,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":246,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":376,"org.easymock.tests2.UsageConstraintsTest.greaterThan":41,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":142,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":118,"org.easymock.samples.ExampleTest.voteForRemoval":167,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":360,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":83,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":369,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":242,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":314,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":243,"org.easymock.tests2.CaptureTest.testCaptureFirst":65,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":93,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":331,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":201,"org.easymock.tests2.UsageTest.moreThanOneArgument":96,"org.easymock.tests2.CaptureTest.testCapture2_2446744":64,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":362,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":110,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":185,"org.easymock.tests.GenericTest.testBridgedEquals":421,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":416,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":260,"org.easymock.tests.UsageExpectAndReturnTest.longType":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":247,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":312,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":282,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":186,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":46,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":306,"org.easymock.tests.UsageCallCountTest.tooManyCalls":261,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":148,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":405,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":298,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":112,"org.easymock.tests2.UsageConstraintsTest.testContains":36,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":254,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":380,"org.easymock.tests2.UsageConstraintsTest.testFind":27,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":267,"org.easymock.tests.MockTypeTest.fromEasyMockClass":80,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":20,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":211,"org.easymock.tests.UsageExpectAndReturnTest.object":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":95,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":180,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":292,"org.easymock.tests.UsageTest.exactCallCountByLastCall":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":3,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":67,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":176,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":207,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":237,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":388,"org.easymock.tests.MockClassControlTest.testHashCode":287,"org.easymock.tests2.EasyMockSupportTest.testVerify":321,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":149,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":303,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":152,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":235,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":151,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":147,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":22,"org.easymock.tests.UsageVarargTest.varargCharAccepted":179,"org.easymock.tests2.CaptureTest.testCaptureMultiple":156,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":333,"org.easymock.tests2.UsageTest.openCallCountByLastCall":327,"org.easymock.tests.DefaultClassInstantiatorTest.object":290,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":320,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":175,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":400,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":387,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":89,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":370,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":273,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":252,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":351,"org.easymock.tests2.UsageTest.resumeIfFailure":330,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":245,"org.easymock.tests2.StubTest.stubWithReturnValue":311,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":410,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":47,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":203,"org.easymock.tests2.SerializationTest.testAllMockedMethod":347,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":138,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":383,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":420,"org.easymock.samples.SupportTest.voteForRemovals":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":390,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":136,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":139,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":337,"org.easymock.tests.UsageExpectAndThrowTest.object":277,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":44,"org.easymock.tests2.DelegateToTest.testWrongClass":375,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":16,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":17,"org.easymock.samples.ConstructorCalledMockTest.testTax":159,"org.easymock.tests.UsageStrictMockTest.range":85,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":135,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":108,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":75,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":232,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":417,"org.easymock.tests2.CaptureTest.testCaptureNone":60,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":218,"org.easymock.tests.UsageUnorderedTest.message":18,"org.easymock.tests.UsageVerifyTest.twoReturns":71,"org.easymock.tests.UsageVarargTest.varargByteAccepted":184,"org.easymock.tests2.ThreadingTest.testThreadSafe":359,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":258,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":173,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":91,"org.easymock.tests2.CaptureTest.testCapture_2617107":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":8,"org.easymock.tests2.UsageConstraintsTest.any":34,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":227,"org.easymock.tests2.StubTest.stub":310,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":133,"org.easymock.tests.UsageExpectAndThrowTest.longType":271,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":226,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":334,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":120,"org.easymock.tests2.SerializationTest.testClass":345,"org.easymock.tests.LimitationsTest.mockNativeMethod":284,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":210,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":264,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":399,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":335,"org.easymock.tests2.NameTest.nameForMocksControl":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":401,"org.easymock.tests2.MockedExceptionTest.testMockedException":379,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":194,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":272,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":364,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":109,"org.easymock.tests.MockingTest.testNicePartialClassMocking":193,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":368,"org.easymock.tests2.CompareToTest.testCompareEqual":407,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":397,"org.easymock.tests2.CaptureTest.testCaptureLast":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":78,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":115,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":31,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":45,"org.easymock.tests.MockingTest.testTwoMocks":191,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":275,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":98,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":49,"org.easymock.samples.ExampleTest.removeNonExistingDocument":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":402,"org.easymock.tests.UsageStrictMockTest.differentMethods":86,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":389,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":361,"org.easymock.tests2.MockBuilderTest.testCreateMockString":111,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":285,"org.easymock.tests.UsageExpectAndThrowTest.floatType":270,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":40,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":339,"org.easymock.tests.UsageVerifyTest.twoThrows":70,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":350,"org.easymock.samples.ExampleTest.voteAgainstRemoval":168,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":216,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":371,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":415,"org.easymock.tests2.UsageConstraintsTest.testNotNull":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":300,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":378,"org.easymock.tests2.UsageTest.defaultResetToNice":329,"org.easymock.samples.ExampleTest.voteAgainstRemovals":165,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":206,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":398,"org.easymock.tests.UsageVarargTest.differentLength":181,"org.easymock.tests2.CallbackTest.callback":322,"org.easymock.tests.UsageTest.openCallCountByLastCall":188,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":7,"org.easymock.tests.UsageCallCountTest.tooFewCalls":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":234,"org.easymock.tests.UsageThrowableTest.throwCheckedException":297,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":418,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":114,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":4,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":123,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":113,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":229,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":358,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":341,"org.easymock.tests.ObjectMethodsTest.testHashCode":291,"org.easymock.tests2.NameTest.nameForNiceMock":104,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":363,"org.easymock.tests2.DependencyTest.testInterfaceMocking":145,"org.easymock.samples.ExampleTest.addDocument":169,"org.easymock.tests2.DelegateToTest.testStubDelegate":374,"org.easymock.tests2.AnswerTest.stubAnswer":340,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":2,"org.easymock.tests.UsageVarargTest.varargLongAccepted":183,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":214,"org.easymock.tests.UsageExpectAndReturnTest.floatType":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":209,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":66,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":394,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":42,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests.UsageThrowableTest.noUpperLimit":294,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":24,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":57,"org.easymock.tests2.SerializationTest.test":346,"org.easymock.tests2.UsageConstraintsTest.testSame":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":196,"org.easymock.samples.SupportTest.addDocument":161,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":225,"org.easymock.tests.GenericTest.testPackageScope":262,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":304,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":393,"org.easymock.tests2.NameTest.nameForMock":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":130,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":412,"org.easymock.tests2.UsageStrictMockTest.differentMethods":101,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":199,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":278,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":144,"org.easymock.tests2.MockedExceptionTest.testRealException":381,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":84,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":6,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":231,"org.easymock.tests2.NameTest.nameForStrictMock":103,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":19,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":367,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":125,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":43,"org.easymock.tests.ErrorMessageTest.testGetters":126,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":352,"org.easymock.tests2.UsageStrictMockTest.range":100,"org.easymock.tests2.UsageConstraintsTest.lessThan":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":391,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":313,"org.easymock.tests2.CaptureTest.testCaptureRightOne":62,"org.easymock.tests2.UsageConstraintsTest.testOr":30,"org.easymock.tests.UsageRangeTest.combination":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":116,"org.easymock.tests.UsageTest.wrongArguments":74,"org.easymock.tests2.MockBuilderTest.testWithConstructor":408,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":131,"org.easymock.tests.UsageVarargTest.varargShortAccepted":182,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":259,"org.easymock.tests2.UsageConstraintsTest.cmpTo":35,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":386,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":328,"org.easymock.tests2.CaptureTest.testCaptureFromStub":63,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":221,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":107,"org.easymock.tests.UsageTest.unexpectedCallWithArray":73,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":257,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":205,"org.easymock.tests2.CaptureTest.testCapture":157,"org.easymock.tests2.UsageConstraintsTest.constraints":25,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":213,"org.easymock.samples.ExampleTest.addAndChangeDocument":172,"org.easymock.tests.UsageStrictMockTest.testVerify":215,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":158,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":248,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":13,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":14,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":177,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":94}}]
