[{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[14,15,16,17,18,19,20,21,22,2,23,24,25,26,27,28,29,30,31,32,9,33,34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[50,51,52,22,53,54],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[55,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,2,23,24,99,100,101,102,103,104,56,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,9,33,34,125,126,127,128],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[129,129,130,130,64,65,66,67,131,132,87,88,89,90,91,96,133,134,1,97,98,2,3,4,5,6,7,135,136,137,138,139,140,12,141,142,143,8,144,145,146,47,147,9],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[57,149,150,129,129,130,130,151,152,153,63,154,155,68,69,70,156,157,55,158,159,160,161,162,103,163,104,164,56,105,165,106,166,167,107,168,169,170,108,109,111,112,113,171,114,172,115,116,117,118,119,120,121,123,124,125,126,127,128],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[173,174,175,176,177,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[57,149,150,129,129,130,130,180,151,152,153,181,182,183,63,184,154,185,186,187,188,189,190,191,192,193,155,68,69,70,194,195,156,196,197,198,199,200,201,157,55,202,203,204,205,206,158,207,208,159,160,161,103,163,209,104,164,56,105,210,165,106,167,107,211,108,109,111,112,113,171,114,212,213,172,115,116,117,214,215,118,119,120,121,123,124,216,217,218,125,219,220,126,221,222,223,224,225,226,227,228,229,127,230,231,232,233,234,128,235,236],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[237,159,238,160],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[14,50,239,51,240,241,242,243,15,52,16,17,18,19,20,21,244,245,246,247,248,249,22,2,23,24,250,251,53,252,253,254,255,256,257,54,258,259,25,26,27,28,9,33,34],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[14,243,52,16,17,18,20,21,249,22,23,26,27,28,33],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests2.StubTest.stubWithReturnValue":147,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":78,"org.easymock.tests2.SerializationTest.testAllMockedMethod":160,"org.easymock.tests.MockingTest.testPartialClassMocking":68,"org.easymock.samples.SupportTest.voteForRemovals":58,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":54,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":180,"org.easymock.tests.MockClassControlTest.testToString":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":224,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":237,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":126,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":101,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":97,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":98,"org.easymock.tests2.UsageTest.wrongArguments":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":96,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.samples.ConstructorCalledMockTest.testTax":129,"org.easymock.samples.ExampleTest.answerVsDelegate":173,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":55,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":118,"org.easymock.tests2.UsageConstraintsTest.testNull":138,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":111,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":201,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":56,"org.easymock.tests2.CaptureTest.testPrimitive":39,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":216,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests.UsageTest.moreThanOneArgument":15,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":66,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":50,"org.easymock.tests2.CaptureTest.testCaptureNone":44,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.UsageVerifyTest.twoReturns":21,"org.easymock.tests.UsageTest.argumentsOrdered":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":230,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":149,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":87,"org.easymock.tests2.CaptureTest.testCapture_2617107":38,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":259,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":161,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":91,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":254,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":189,"org.easymock.tests2.SerializationTest.testClass":159,"org.easymock.tests.LimitationsTest.mockNativeMethod":63,"org.easymock.tests2.DependencyTest.testClassMocking":207,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":86,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":153,"org.easymock.tests2.AnswerTest.answer":176,"org.easymock.tests2.CaptureTest.testAnd":36,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":172,"org.easymock.tests2.NameTest.nameForMocksControl":32,"org.easymock.tests2.MockedExceptionTest.testMockedException":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":220,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":94,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":70,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":108,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":105,"org.easymock.tests.MockingTest.testNicePartialClassMocking":69,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":113,"org.easymock.tests.LimitationsTest.mockFinalMethod":184,"org.easymock.tests2.CaptureTest.testCaptureLast":43,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":245,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":11,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":124,"org.easymock.tests2.DependencyTest.testClassMockingSupport":208,"org.easymock.tests.MockingTest.testTwoMocks":155,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":244,"org.easymock.tests2.CaptureTest.testCapture1_2446744":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":71,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":145,"org.easymock.tests.UsageStrictMockTest.differentMethods":24,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":187,"org.easymock.tests2.ConstraintsToStringTest.andToString":257,"org.easymock.tests2.MockBuilderTest.testCreateMockString":167,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":131,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":218,"org.easymock.tests.UsageVerifyTest.twoThrows":20,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":127,"org.easymock.samples.PartialClassMockTest.testGetArea":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":88,"org.easymock.samples.ExampleTest.voteAgainstRemoval":61,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":225,"org.easymock.tests.LimitationsTest.privateConstructor":183,"org.easymock.tests2.UsageConstraintsTest.testNotNull":144,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":3,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":104,"org.easymock.tests2.MockBuilderTest.testCreateMock":165,"org.easymock.samples.ExampleTest.voteAgainstRemovals":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":232,"org.easymock.tests2.CallbackTest.callback":179,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":240,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":212,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":53,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":229,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":79,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":121,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":45,"org.easymock.tests.MockClassControlTest.testEquals":200,"org.easymock.tests2.EasyMockSupportClassTest.testAll":125,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":152,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":256,"org.easymock.tests.MockingTest.testStrictClassMocking":192,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":51,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":168,"org.easymock.tests2.CaptureTest.testCaptureAll":37,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":123,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":120,"org.easymock.tests2.UsageConstraintsTest.testMatches":142,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":122,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":67,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":0,"org.easymock.samples.ExampleTest.voteForRemovals":62,"org.easymock.tests2.NameTest.nameForNiceMock":31,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":19,"org.easymock.tests2.DependencyTest.testInterfaceMocking":100,"org.easymock.samples.BasicClassMockTest.testPrintContent":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":235,"org.easymock.tests2.DelegateToTest.testStubDelegate":102,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":148,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":2,"org.easymock.tests2.UsageConstraintsTest.greaterThan":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":219,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":93,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":117,"org.easymock.samples.ExampleTest.voteForRemoval":60,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":191,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":85,"org.easymock.tests.UsageExpectAndReturnTest.floatType":73,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":107,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":171,"org.easymock.tests2.ConstraintsToStringTest.orToString":251,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":130,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":247,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":8,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":136,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":154,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":202,"org.easymock.tests2.SerializationTest.test":238,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":41,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":210,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":186,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":72,"org.easymock.tests2.UsageConstraintsTest.testSame":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":217,"org.easymock.tests2.CaptureTest.testCaptureFirst":49,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":222,"org.easymock.tests.GenericTest.testPackageScope":151,"org.easymock.tests2.CaptureTest.testCapture2_2446744":48,"org.easymock.tests2.UsageTest.moreThanOneArgument":25,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":4,"org.easymock.tests.GenericTest.testBridgedEquals":181,"org.easymock.tests2.NameTest.nameForMock":29,"org.easymock.tests.UsageExpectAndReturnTest.longType":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":80,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":166,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":1,"org.easymock.tests2.UsageStrictMockTest.differentMethods":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":64,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":213,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":75,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":239,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":233,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":6,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":241,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":133,"org.easymock.tests.MockingTest.testNiceClassMocking":194,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":119,"org.easymock.tests.MockingTest.testClassMocking":193,"org.easymock.tests2.UsageConstraintsTest.testContains":12,"org.easymock.tests2.NameTest.nameForStrictMock":30,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":162,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":158,"org.easymock.tests2.UsageConstraintsTest.testFind":137,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":209,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":112,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":204,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":13,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":188,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":114,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":103,"org.easymock.tests2.UsageStrictMockTest.range":33,"org.easymock.tests2.UsageConstraintsTest.lessThan":146,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":226,"org.easymock.tests2.CaptureTest.testCaptureRightOne":46,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":242,"org.easymock.tests2.UsageConstraintsTest.testOr":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":211,"org.easymock.tests.UsageRangeTest.combination":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":83,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":109,"org.easymock.tests.UsageTest.wrongArguments":16,"org.easymock.tests.MockClassControlTest.testHashCode":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":223,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":76,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":227,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":253,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":174,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":190,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":177,"org.easymock.tests.DefaultClassInstantiatorTest.object":185,"org.easymock.tests2.CaptureTest.testCaptureFromStub":47,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":163,"org.easymock.tests.UsageTest.unexpectedCallWithArray":52,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":228,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":22,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":198,"org.easymock.tests2.UsageConstraintsTest.constraints":10,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":115,"org.easymock.tests2.ConstraintsToStringTest.notToString":252,"org.easymock.tests.CapturesMatcherTest.test":35,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":84,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":255,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":128,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":89,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":157,"org.easymock.tests.LimitationsTest.abstractClass":182,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":90,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":203}}]
