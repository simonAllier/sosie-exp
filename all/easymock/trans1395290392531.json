[{"position":"org.easymock.internal.Range:52","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[51,52,53,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[55,56,57,58],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[59,60,61],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[62],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[64,65,66],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[67],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[68,69,29,70,71,72],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[73,74,75,76,77,78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[80],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[81,73,51,82,83,84,85,86,87,88,89,90,91],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[55,56,57,58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[92,93,94,95,95,96,96,97,81,98,99,100,101,102,103,104,105,106,107,51,53,108,109,110,111,112,82,113,114,115,85,116,117,86,118,50,119,120,121,122,123,124,125,88,126,127,128,91,63,129,130,131,132,133,134,135,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[137,64,12,65,138,66,139,16,140,141,142],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[81,73,51,74,75,76,143,144,79,84],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[90],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[145],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[146,147,148],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"message","methodName":"message"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[110,117],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[150],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[137,64,151,12,13,65,138,152,66,14,139,153,16,17,140,154,141,155,142,156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[92,93,94,95,95,96,96,157,158,97,81,73,159,160,98,99,100,101,102,103,161,162,163,164,165,166,167,104,168,169,105,170,171,172,173,174,175,176,177,178,106,179,180,181,182,183,107,184,185,51,53,109,111,112,186,82,113,114,115,84,85,116,86,118,50,119,120,121,122,123,87,187,124,125,88,126,188,89,90,127,128,91,67,63,129,189,190,130,191,131,192,193,132,133,134,135,194,195,136,196,197,198,199,200,201,202,203,204,205,206,207,208],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[123,87,187,124,125,88,126,188,89,90,127,128,91,67,63,129,189,190,130,191,131,192,193,132,133,134,135,194,195,136,196,197,198,199,200,201,202,203,204,205,206,207,208],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[92,93,94,95,96,157,158,97,81,73,209,98,99,100,101,102,103,161,164,165,166,104,169,105,170,171,172,174,175,176,177,106,179,180,181,182,183,107,51,53,109,210,111,112,211,186,82,113,114,79,115,84,85,116,212,86,118,50,119,120,121,122,123,87,187,124,125,88,126,188,89,90,127,128,91,67,63,129,189,190,130,191,131,192,193,132,133,134,135,194,195,136,196,197,198,199,200,201,202,203,204,205,206,207,208],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[203,207],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[0,214,215,216,23,217,57,218],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[137,64,12,65,138,66,139,16,140,141,142],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[219],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > int) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"result","callCount":"result"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[16],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[220,221,222,223],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:120","sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[90],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[224,225,0,226,227,228,229,230,231,92,93,232,233,94,97,81,234,235,236,98,99,100,101,237,102,103,238,239,1,240,2,3,241,214,4,242,5,6,243,244,7,8,9,10,245,11,246,59,104,105,106,107,247,248,249,250,251,221,252,137,64,151,12,13,65,138,152,14,15,253,254,255,256,150,222,257,139,153,258,259,223,16,17,260,215,216,261,262,263,22,140,154,141,155,264,265,266,267,268,269,142,270,271,272,273,274,275,276,277,278,279,280,281,282,283,51,52,53,23,217,56,82,114,115,118,50,284,119,120,121,123,88,285,286,24,287,288,289,290,127,128,291,292,25,26,27,28,293,29,30,294,31,32,295,33,34,35,36,37,38,39,40,130,60,131,218,296,297,298,299,300,61,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,43,329,330,331,332,333,334,335,336,44,45,337,46,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,133,134,135,363,47,364,48,365,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"range"}},{"transplant":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[224,225,0,226,227,228,229,230,231,92,93,232,233,94,95,96,157,158,97,366,81,234,235,236,98,99,100,101,237,102,103,238,367,239,1,240,2,3,241,368,369,370,371,214,4,242,5,6,243,244,7,8,372,9,10,245,11,246,59,104,105,106,107,247,248,249,250,251,221,252,137,64,151,12,13,65,138,152,14,15,253,254,255,256,150,222,257,139,153,258,259,223,16,17,260,215,216,261,262,263,22,140,154,141,155,264,265,266,267,268,269,142,156,270,271,272,273,274,275,276,277,278,373,279,280,281,282,283,51,52,53,23,217,56,57,109,111,82,113,114,115,85,116,86,118,50,284,119,120,121,122,123,124,125,88,126,285,286,24,374,375,376,377,287,289,290,127,128,378,379,380,381,382,291,292,25,26,27,28,383,293,29,30,294,31,32,295,62,62,33,34,70,35,36,37,38,39,40,130,384,385,386,387,60,388,131,218,296,297,389,299,300,61,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,390,43,329,330,331,332,391,333,334,335,336,44,45,337,46,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,133,134,135,363,47,364,48,392,365,49,393,394,395,396,397],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"failures":[398,399,400,401,402,403,404,405],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"position":"org.easymock.internal.LastControl:48","failures":[225,0,226,227,229,230,233,94,95,95,96,96,157,158,97,366,81,234,235,236,98,99,100,101,237,102,103,238,1,2,3,214,4,242,5,243,7,8,372,245,11,246,59,104,105,106,107,247,248,249,250,251,221,252,137,64,151,12,13,65,138,152,14,15,253,254,255,256,150,222,257,139,153,258,223,16,17,260,215,216,406,261,262,263,407,22,140,154,155,264,267,268,269,142,156,270,271,272,273,274,275,276,277,278,373,279,280,281,282,51,52,23,55,408,217,56,57,111,82,114,115,116,118,50,284,119,120,121,123,125,88,126,285,286,24,287,288,289,290,409,410,411,127,91,291,292,25,26,27,28,412,413,30,31,32,33,34,36,37,40,130,384,385,386,387,60,388,131,218,296,297,298,299,300,61,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,414,41,42,415,416,328,390,45,337,46,338,339,340,341,342,417,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,418,419,420,133,134,135,363,421,393,394,395,396,397,422,423,424,425],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":64,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests2.UsageTest.argumentsOrdered":10,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":281,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":244,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":224,"org.easymock.tests2.DelegateToTest.testReturnException":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":385,"org.easymock.tests.MockingTest.testPartialClassMocking":133,"org.easymock.tests.MockClassControlTest.testToString":196,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":421,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":173,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":343,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":74,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":152,"org.easymock.tests2.UsageTest.wrongArguments":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":299,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":376,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":129,"org.easymock.tests2.UsageConstraintsTest.testNull":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":119,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":201,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":280,"org.easymock.tests2.CaptureTest.testPrimitive":155,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":302,"org.easymock.tests.UsageTest.moreThanOneArgument":34,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":362,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":395,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":414,"org.easymock.tests.UsageTest.argumentsOrdered":39,"org.easymock.tests.UsageVarargTest.varargIntAccepted":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":303,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":163,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":307,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":234,"org.easymock.tests2.DependencyTest.testClassMocking":159,"org.easymock.tests2.AnswerTest.answer":23,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":371,"org.easymock.tests2.CaptureTest.testAnd":140,"org.easymock.tests2.UsageTest.strictResetToDefault":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":394,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":276,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":289,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":416,"org.easymock.tests2.DelegateToTest.testDelegate":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":358,"org.easymock.tests.LimitationsTest.mockFinalMethod":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":382,"org.easymock.tests2.DependencyTest.testClassMockingSupport":160,"org.easymock.tests2.CaptureTest.testCapture1_2446744":264,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":369,"org.easymock.tests.UsageThrowableTest.throwError":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":185,"org.easymock.samples.PartialClassMockTest.testGetArea":94,"org.easymock.tests2.CompareToTest.testLessOrEqual":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":304,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":174,"org.easymock.tests2.UsageTest.niceToStrict":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":344,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":82,"org.easymock.tests2.MockBuilderTest.testCreateMock":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":181,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":68,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":352,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":411,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":374,"org.easymock.tests.UsageOverloadedMethodTest.overloading":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":178,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":255,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":297,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":319,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":219,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":254,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":269,"org.easymock.tests2.EasyMockSupportClassTest.testAll":104,"org.easymock.tests.MockClassControlTest.testEquals":200,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":128,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":360,"org.easymock.tests2.CaptureTest.testCaptureAll":154,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":370,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":380,"org.easymock.tests2.UsageConstraintsTest.testMatches":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":396,"org.easymock.samples.ExampleTest.voteForRemovals":229,"org.easymock.tests.UsageVarargTest.allKinds":44,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":26,"org.easymock.samples.BasicClassMockTest.testPrintContent":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":381,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":341,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":367,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":407,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":388,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":144,"org.easymock.tests2.UsageConstraintsTest.greaterThan":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":168,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":288,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":126,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":208,"org.easymock.samples.ExampleTest.voteForRemoval":226,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":188,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":248,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":122,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":131,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":274,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":384,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":406,"org.easymock.tests2.CaptureTest.testCaptureFirst":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":58,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":275,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":11,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":315,"org.easymock.tests2.UsageTest.moreThanOneArgument":5,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":250,"org.easymock.tests2.CaptureTest.testCapture2_2446744":270,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":116,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":336,"org.easymock.tests.GenericTest.testBridgedEquals":67,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":365,"org.easymock.tests.UsageExpectAndReturnTest.longType":311,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":378,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":117,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":361,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":417,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":359,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":393,"org.easymock.tests.UsageCallCountTest.tooManyCalls":49,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":316,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":401,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":348,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":340,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":99,"org.easymock.tests.MockingTest.testNiceClassMocking":194,"org.easymock.tests.MockingTest.testClassMocking":193,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":110,"org.easymock.tests2.UsageConstraintsTest.testContains":253,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":97,"org.easymock.tests2.UsageConstraintsTest.testFind":151,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":24,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":216,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":383,"org.easymock.tests.UsageExpectAndReturnTest.object":318,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":75,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":332,"org.easymock.tests.UsageTest.exactCallCountByLastCall":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":328,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":73,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":324,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":296,"org.easymock.tests.MockClassControlTest.testHashCode":199,"org.easymock.tests2.EasyMockSupportTest.testVerify":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":176,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":42,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":410,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":218,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":368,"org.easymock.tests.UsageVarargTest.varargCharAccepted":331,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":147,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":239,"org.easymock.tests2.UsageTest.openCallCountByLastCall":7,"org.easymock.tests.DefaultClassInstantiatorTest.object":202,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":282,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":177,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":350,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":338,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":125,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":349,"org.easymock.tests.CapturesMatcherTest.test":62,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":325,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":107,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":197,"org.easymock.tests2.UsageTest.resumeIfFailure":245,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":387,"org.easymock.tests2.StubTest.stubWithReturnValue":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":79,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":317,"org.easymock.tests2.SerializationTest.testAllMockedMethod":53,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":412,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":69,"org.easymock.samples.SupportTest.voteForRemovals":233,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":355,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":54,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":413,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":55,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":213,"org.easymock.tests.UsageExpectAndThrowTest.object":353,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":153,"org.easymock.tests2.DelegateToTest.testWrongClass":263,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":291,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":292,"org.easymock.tests.UsageStrictMockTest.range":31,"org.easymock.samples.ConstructorCalledMockTest.testTax":95,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":98,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":354,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":165,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":375,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":71,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":420,"org.easymock.tests2.CaptureTest.testCaptureNone":268,"org.easymock.tests.UsageUnorderedTest.message":25,"org.easymock.tests.UsageVerifyTest.twoReturns":28,"org.easymock.tests.UsageVarargTest.varargByteAccepted":335,"org.easymock.tests2.ThreadingTest.testThreadSafe":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":179,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":48,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":92,"org.easymock.tests2.CaptureTest.testCapture_2617107":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":301,"org.easymock.tests2.UsageConstraintsTest.any":14,"org.easymock.tests2.StubTest.stub":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":386,"org.easymock.tests.UsageExpectAndThrowTest.longType":346,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":206,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":240,"org.easymock.tests2.SerializationTest.testClass":51,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":238,"org.easymock.tests.LimitationsTest.mockNativeMethod":130,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":91,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":327,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":241,"org.easymock.tests2.NameTest.nameForMocksControl":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":398,"org.easymock.tests2.MockedExceptionTest.testMockedException":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":169,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":37,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":347,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":118,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":115,"org.easymock.tests.MockingTest.testNicePartialClassMocking":134,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":121,"org.easymock.tests2.CaptureTest.testCaptureLast":267,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":425,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":103,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":258,"org.easymock.tests.MockingTest.testTwoMocks":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":308,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":351,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":399,"org.easymock.tests.UsageStrictMockTest.differentMethods":32,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":204,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":249,"org.easymock.tests2.MockBuilderTest.testCreateMockString":86,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":170,"org.easymock.tests.UsageExpectAndThrowTest.floatType":345,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":167,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":217,"org.easymock.tests.UsageVerifyTest.twoThrows":27,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":106,"org.easymock.samples.ExampleTest.voteAgainstRemoval":227,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":418,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests.LimitationsTest.privateConstructor":190,"org.easymock.tests2.UsageConstraintsTest.testNotNull":16,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":342,"org.easymock.tests2.UsageTest.defaultResetToNice":372,"org.easymock.samples.ExampleTest.voteAgainstRemovals":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":323,"org.easymock.tests.UsageVarargTest.differentLength":391,"org.easymock.tests2.CallbackTest.callback":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":87,"org.easymock.tests.UsageTest.openCallCountByLastCall":36,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":61,"org.easymock.tests.UsageCallCountTest.tooFewCalls":47,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":101,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":377,"org.easymock.tests.UsageThrowableTest.throwCheckedException":339,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":72,"org.easymock.tests.MockingTest.testStrictClassMocking":192,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":390,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":100,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":237,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":77,"org.easymock.tests2.NameTest.nameForNiceMock":20,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":251,"org.easymock.tests2.DependencyTest.testInterfaceMocking":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":76,"org.easymock.samples.ExampleTest.addDocument":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":184,"org.easymock.tests2.DelegateToTest.testStubDelegate":262,"org.easymock.tests2.AnswerTest.stubAnswer":56,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":30,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":83,"org.easymock.tests.UsageVarargTest.varargLongAccepted":334,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":295,"org.easymock.tests.UsageExpectAndReturnTest.floatType":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":326,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":81,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":404,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":257,"org.easymock.tests.UsageThrowableTest.noUpperLimit":337,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":252,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":161,"org.easymock.tests2.SerializationTest.test":52,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":265,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":203,"org.easymock.tests2.UsageConstraintsTest.testSame":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":309,"org.easymock.samples.SupportTest.addDocument":232,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":171,"org.easymock.tests.GenericTest.testPackageScope":127,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":415,"org.easymock.tests2.NameTest.nameForMock":18,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":320,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":212,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":290,"org.easymock.tests2.MockedExceptionTest.testRealException":366,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":300,"org.easymock.tests2.NameTest.nameForStrictMock":19,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":186,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":215,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":120,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":164,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":139,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":205,"org.easymock.tests.ErrorMessageTest.testGetters":149,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":111,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":402,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":143,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":175,"org.easymock.tests2.CaptureTest.testCaptureRightOne":142,"org.easymock.tests2.UsageConstraintsTest.testOr":65,"org.easymock.tests.UsageRangeTest.combination":287,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageTest.wrongArguments":35,"org.easymock.tests2.MockBuilderTest.testWithConstructor":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":172,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":136,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":321,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":207,"org.easymock.tests.UsageVarargTest.varargShortAccepted":333,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":392,"org.easymock.tests2.UsageConstraintsTest.cmpTo":15,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":408,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":8,"org.easymock.tests2.CaptureTest.testCaptureFromStub":156,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":112,"org.easymock.tests.UsageTest.unexpectedCallWithArray":70,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":29,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":364,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":322,"org.easymock.tests2.UsageConstraintsTest.constraints":137,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":294,"org.easymock.samples.ExampleTest.addAndChangeDocument":230,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":231,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":379,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":266,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":305,"org.easymock.tests.LimitationsTest.abstractClass":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":314,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":278,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":329}}]
