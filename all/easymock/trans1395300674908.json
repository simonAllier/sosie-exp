[{"position":"org.easymock.internal.RecordState:327","failures":[0,1,2,3],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[18,19,20,21,22,23,24],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[25,26,27,28,29,30,31,4,5,32,33,6,7,34,35,36,37,38,39,40,41,0,1,42,2,3,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,9,115,116,117,118,119,120,10,11,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,12,224,225,13,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,264,265,265,266,267,268,269,270,271,272,14,273,274,275,276,277,15,16,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,24,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,17,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[357,358,360,363,364,365,366,367,410,411,413,416,417,418,419,420],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,86,115,116,119,169,188,192,193,202,207,224,229,230,234,248,249,250,251,252,264,264,265,265,304,305,309,310,311,312,318,320,321,323,324,330,331,332,423,428,445],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[4,448,449,12,450,451],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1988","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[437],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[4,5,6,7,8,108,9,10,11,12,13,14,15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[347,348],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[25,26,27,28,29,30,31,4,5,32,33,6,7,34,36,38,452,453,40,41,0,1,42,2,3,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,90,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,9,115,116,117,118,119,120,10,11,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,159,160,161,162,163,164,204,210,212,213,214,215,217,218,220,222,223,12,224,225,13,226,227,228,229,230,231,232,233,234,235,236,237,238,239,248,249,250,251,252,253,255,256,257,258,259,260,261,263,268,269,270,271,272,14,273,274,275,276,277,15,16,278,279,287,288,291,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,361,362,368,369,370,371,372,373,374,375,378,379,380,454,381,382,455,383,456,384,385,386,387,457,458,459,460,414,415,421,422,423,424,17,425,426,427,428,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[461],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[462],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[463],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:38","sourceCode":"for (final org.easymock.IArgumentMatcher org.easymock.IArgumentMatcher : java.util.List<org.easymock.IArgumentMatcher>) {\n    if (!(org.easymock.IArgumentMatcher.matches(java.lang.Object))) {\n        return false;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[461],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[310,325,330],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[31,449,464,8,103,106,107,108,112,113,9,120,10,11,224,13,226,465,450,466,467,468,469,272,423,17,425],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[470,374,375,376],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[25,26,27,28,29,30,31,4,5,32,33,6,7,34,36,41,0,1,42,2,3,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,86,87,90,91,92,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,9,115,116,117,118,119,120,10,11,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,159,160,161,162,163,164,167,204,210,212,213,214,215,222,223,12,224,225,13,226,227,228,229,230,231,232,233,234,235,236,237,238,239,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,264,265,265,266,267,268,269,270,271,272,14,273,274,275,276,277,15,16,278,279,471,280,282,283,284,472,286,473,474,287,288,289,290,291,292,293,294,295,296,299,300,301,302,304,305,306,307,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,361,368,369,370,371,372,373,374,375,376,377,378,379,380,454,381,382,455,383,456,384,385,386,387,457,458,459,460,394,396,403,406,414,421,422,423,424,17,425,426,427,428,475,476,430,431,432,433,477,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[198,368,370],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:45","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[470,374,375,376],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[94],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[319],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[478],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[31,5,6,7,103,106,107,112,113,9,120,10,11,224,13,226,465,466,479,468,451,469,480,272,14,15,16,423,17,425],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[25,26,27,28,29,30,31,4,5,32,33,6,7,34,35,36,37,481,482,483,38,452,39,453,40,41,0,1,42,2,3,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,9,115,116,117,118,119,120,10,11,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,484,181,182,183,184,185,186,485,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,12,224,225,13,226,227,228,229,230,231,232,233,234,235,236,237,238,239,486,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,14,273,274,275,276,277,15,16,278,279,471,487,280,488,489,281,282,283,284,18,472,490,285,286,473,491,474,492,493,287,288,289,290,291,292,293,294,295,494,296,297,298,299,300,301,302,303,495,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,24,496,378,379,380,454,381,382,455,383,456,384,385,386,387,388,457,458,459,460,389,497,498,499,390,391,392,393,500,501,394,502,395,396,503,397,398,504,505,399,400,401,402,403,506,404,507,508,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,17,425,426,427,428,429,475,476,430,431,509,432,433,477,510,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[511],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[512,513],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[473,495],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"value"}},{"position":"org.easymock.ConstructorArgs:54","failures":[264,265,487,489,18,285,514,491,515,512,374,377,24,393,500,501,394,502,395,396,503,397,398,504,505,399,400,401,402,403,506,404,507,508,405,406,407,408,430,477,510],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[374,375,376],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[516],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[517],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[264,265,487,514,491,297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[481,39,75,90,91,92,94,155,156,157,158,167,221,240,241,242,243,244,245,246,247,254,264,264,265,265,266,267,471,280,488,282,283,284,472,286,473,474,289,290,292,293,294,295,296,299,300,301,302,495,345,374,376,377,394,396,403,406,475,476,430,431,433,477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":307,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":30,"org.easymock.tests2.UsageTest.argumentsOrdered":16,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":385,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":198,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":274,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":255,"org.easymock.tests2.DelegateToTest.testReturnException":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":160,"org.easymock.tests.MockingTest.testPartialClassMocking":91,"org.easymock.tests.MockClassControlTest.testToString":242,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":388,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":36,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":504,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":396,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":43,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":288,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":19,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":314,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":115,"org.easymock.tests2.UsageTest.wrongArguments":14,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":420,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":214,"org.easymock.samples.ExampleTest.answerVsDelegate":257,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":39,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":96,"org.easymock.tests2.UsageConstraintsTest.testNull":310,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":292,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":384,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":247,"org.easymock.tests2.CaptureTest.testPrimitive":437,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":119,"org.easymock.tests.UsageTest.moreThanOneArgument":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":62,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":27,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":235,"org.easymock.tests.UsageVarargTest.varargIntAccepted":65,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":248,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":471,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":23,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":366,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":190,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":252,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":479,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":414,"org.easymock.tests.ReplayStateInvalidUsageTest.times":177,"org.easymock.tests2.DependencyTest.testClassMocking":492,"org.easymock.tests2.AnswerTest.answer":333,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":205,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":342,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":483,"org.easymock.tests2.CaptureTest.testAnd":434,"org.easymock.tests2.UsageTest.strictResetToDefault":271,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":26,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":381,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":239,"org.easymock.tests2.DelegateToTest.testDelegate":373,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":58,"org.easymock.tests.LimitationsTest.mockFinalMethod":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":153,"org.easymock.tests2.DependencyTest.testClassMockingSupport":493,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":112,"org.easymock.tests2.CaptureTest.testCapture1_2446744":438,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":494,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":340,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":171,"org.easymock.tests.UsageThrowableTest.throwError":141,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":452,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":486,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":29,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":408,"org.easymock.samples.PartialClassMockTest.testGetArea":254,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":172,"org.easymock.tests.MockingTest.testInterfaceMocking":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":249,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":505,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":44,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":221,"org.easymock.tests2.UsageTest.niceToStrict":273,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":188,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":282,"org.easymock.tests2.MockBuilderTest.testCreateMock":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":507,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":417,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":450,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":52,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":382,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":482,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":212,"org.easymock.tests.UsageOverloadedMethodTest.overloading":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":402,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":105,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":132,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":109,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":319,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":443,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":66,"org.easymock.tests2.EasyMockSupportClassTest.testAll":394,"org.easymock.tests.MockClassControlTest.testEquals":246,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":156,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":60,"org.easymock.tests2.CaptureTest.testCaptureAll":435,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":151,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":341,"org.easymock.tests.MockNameTest.defaultName":85,"org.easymock.tests2.UsageConstraintsTest.testMatches":321,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":28,"org.easymock.samples.ExampleTest.voteForRemovals":261,"org.easymock.tests.UsageVarargTest.allKinds":74,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":152,"org.easymock.samples.BasicClassMockTest.testPrintContent":267,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":147,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":363,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":372,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":485,"org.easymock.tests2.UsageConstraintsTest.greaterThan":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":502,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":99,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":302,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":187,"org.easymock.samples.ExampleTest.voteForRemoval":258,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":303,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":351,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":453,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":499,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":295,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":75,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":270,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":195,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":380,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":500,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":159,"org.easymock.tests2.CaptureTest.testCaptureFirst":447,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":454,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":279,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":108,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":128,"org.easymock.tests2.CaptureTest.testCapture2_2446744":446,"org.easymock.tests2.UsageTest.moreThanOneArgument":272,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":353,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":206,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":73,"org.easymock.tests.GenericTest.testBridgedEquals":158,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":463,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":83,"org.easymock.tests.UsageExpectAndReturnTest.longType":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":149,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":378,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":61,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":234,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":328,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":25,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":0,"org.easymock.tests.UsageCallCountTest.tooManyCalls":84,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":508,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":419,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":146,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":476,"org.easymock.tests.MockingTest.testNiceClassMocking":97,"org.easymock.tests.MockingTest.testClassMocking":89,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":77,"org.easymock.tests2.UsageConstraintsTest.testContains":318,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":345,"org.easymock.tests2.UsageConstraintsTest.testFind":309,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":111,"org.easymock.tests.MockTypeTest.fromEasyMockClass":38,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":222,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":349,"org.easymock.tests.UsageExpectAndReturnTest.object":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":456,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":20,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":68,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":219,"org.easymock.tests.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":193,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":35,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":137,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":63,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":104,"org.easymock.tests.MockClassControlTest.testHashCode":245,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":357,"org.easymock.tests2.EasyMockSupportTest.testVerify":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":400,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":237,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":102,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":2,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":339,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":429,"org.easymock.tests.UsageVarargTest.varargCharAccepted":67,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":484,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":211,"org.easymock.tests2.UsageTest.openCallCountByLastCall":275,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":386,"org.easymock.tests.DefaultClassInstantiatorTest.object":181,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":42,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":217,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":401,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":50,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":412,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":356,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":244,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":300,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":49,"org.easymock.tests.CapturesMatcherTest.test":516,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":138,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":41,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":406,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":243,"org.easymock.tests2.UsageTest.resumeIfFailure":278,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":481,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":497,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":162,"org.easymock.tests2.StubTest.stubWithReturnValue":428,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":130,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":329,"org.easymock.tests2.SerializationTest.testAllMockedMethod":376,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":204,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":451,"org.easymock.samples.SupportTest.voteForRemovals":269,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":359,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":55,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":470,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":210,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":334,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":37,"org.easymock.tests.UsageExpectAndThrowTest.object":53,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":326,"org.easymock.tests2.DelegateToTest.testWrongClass":371,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":229,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":230,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.samples.ConstructorCalledMockTest.testTax":264,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":391,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":383,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":475,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":54,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":393,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":179,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":213,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":448,"org.easymock.tests2.CaptureTest.testCaptureNone":442,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":233,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":478,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageVarargTest.varargByteAccepted":72,"org.easymock.tests2.ThreadingTest.testThreadSafe":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":506,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":81,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":220,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":266,"org.easymock.tests2.CaptureTest.testCapture_2617107":436,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":480,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":208,"org.easymock.tests2.UsageConstraintsTest.any":316,"org.easymock.tests2.StubTest.stub":427,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":161,"org.easymock.tests.UsageExpectAndThrowTest.longType":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":209,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":185,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":175,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":424,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":361,"org.easymock.tests2.SerializationTest.testClass":374,"org.easymock.tests.LimitationsTest.mockNativeMethod":167,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":140,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":411,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":426,"org.easymock.tests2.NameTest.nameForMocksControl":460,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":413,"org.easymock.tests2.MockedExceptionTest.testMockedException":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":395,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":47,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":94,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":348,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":289,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":472,"org.easymock.tests.MockingTest.testNicePartialClassMocking":92,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":294,"org.easymock.tests2.CompareToTest.testNotComparable":511,"org.easymock.tests2.CompareToTest.testCompareEqual":517,"org.easymock.tests2.CaptureTest.testCaptureLast":441,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":409,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":113,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":477,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":313,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":327,"org.easymock.tests.MockingTest.testTwoMocks":90,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":510,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":51,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":331,"org.easymock.samples.ExampleTest.removeNonExistingDocument":262,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":416,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":173,"org.easymock.tests.UsageStrictMockTest.differentMethods":226,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":358,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":183,"org.easymock.tests2.ConstraintsToStringTest.andToString":468,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":352,"org.easymock.tests2.MockBuilderTest.testCreateMockString":474,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":503,"org.easymock.tests.UsageExpectAndThrowTest.floatType":45,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":501,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":336,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":496,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":403,"org.easymock.samples.ExampleTest.voteAgainstRemoval":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":199,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":231,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":301,"org.easymock.tests.LimitationsTest.privateConstructor":166,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":512,"org.easymock.tests2.UsageConstraintsTest.testNotNull":330,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":148,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":343,"org.easymock.tests2.UsageTest.defaultResetToNice":277,"org.easymock.samples.ExampleTest.voteAgainstRemovals":256,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":410,"org.easymock.tests.UsageVarargTest.differentLength":69,"org.easymock.tests2.CallbackTest.callback":355,"org.easymock.tests2.UsageConstraintsTest.equals":308,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":297,"org.easymock.tests.UsageTest.openCallCountByLastCall":32,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":304,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":117,"org.easymock.tests.UsageCallCountTest.tooFewCalls":79,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":431,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":215,"org.easymock.tests.UsageThrowableTest.throwCheckedException":145,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":449,"org.easymock.tests.MockingTest.testStrictClassMocking":88,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":433,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":87,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":430,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":415,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":178,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":432,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":338,"org.easymock.tests.ObjectMethodsTest.testHashCode":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":22,"org.easymock.tests2.NameTest.nameForNiceMock":459,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":354,"org.easymock.tests2.DependencyTest.testInterfaceMocking":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":21,"org.easymock.samples.ExampleTest.addDocument":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.DelegateToTest.testStubDelegate":370,"org.easymock.tests2.AnswerTest.stubAnswer":337,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":224,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":490,"org.easymock.tests.UsageVarargTest.varargLongAccepted":71,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":139,"org.easymock.tests.UsageExpectAndReturnTest.floatType":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":377,"org.easymock.tests2.ConstraintsToStringTest.orToString":465,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":265,"org.easymock.tests.UsageThrowableTest.noUpperLimit":142,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":106,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":365,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":305,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":389,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":439,"org.easymock.tests2.SerializationTest.test":375,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":461,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":122,"org.easymock.tests2.UsageConstraintsTest.testSame":311,"org.easymock.samples.SupportTest.addDocument":268,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":509,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":397,"org.easymock.tests.GenericTest.testPackageScope":155,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":192,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":364,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":95,"org.easymock.tests2.NameTest.nameForMock":457,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":491,"org.easymock.tests2.UsageStrictMockTest.differentMethods":425,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":298,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":125,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":57,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":216,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":101,"org.easymock.tests2.MockedExceptionTest.testRealException":346,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":202,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":464,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":201,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":116,"org.easymock.tests2.NameTest.nameForStrictMock":458,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":281,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":347,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":293,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":390,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":184,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":325,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":280,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests2.UsageConstraintsTest.lessThan":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":196,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":379,"org.easymock.tests2.CaptureTest.testCaptureRightOne":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":399,"org.easymock.tests2.UsageConstraintsTest.testOr":312,"org.easymock.tests.UsageRangeTest.combination":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":290,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests2.MockBuilderTest.testWithConstructor":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":398,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":134,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":186,"org.easymock.tests.UsageVarargTest.varargShortAccepted":70,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":82,"org.easymock.tests2.UsageConstraintsTest.cmpTo":317,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":191,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":276,"org.easymock.tests2.CaptureTest.testCaptureFromStub":445,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":170,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":488,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":80,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":514,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":135,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":225,"org.easymock.tests2.UsageConstraintsTest.constraints":306,"org.easymock.samples.ExampleTest.addAndChangeDocument":263,"org.easymock.tests2.ConstraintsToStringTest.notToString":466,"org.easymock.tests2.ConstraintsToStringTest.containsToString":462,"org.easymock.tests.UsageStrictMockTest.testVerify":228,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":253,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":150,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":250,"org.easymock.tests.LimitationsTest.abstractClass":165,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":127,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":107,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":455,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":64}}]
