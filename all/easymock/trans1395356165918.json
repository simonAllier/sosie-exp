[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"position":"org.easymock.internal.LastControl:61","failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[75],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[76,77,78],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[80],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Or:43","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,81,82,83,84,85,86,87,88,89,90,91,92,93,36,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,37,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,38,39,40,41,42,43,44,45,46,47,48,49,50,51,152,153,154,155,156,157,158,159,160,161,162,163,53,54,164,79,165,166,167,168,169,55,170,171,172,173,56,57,174,175,176,177,178,179,180,181,182,183,184,185,186,187,58,188,189,190,59,60,191,192,193,194,195,196,197,198,199,200,6,201,202,203,204,205,206,207,61,62,63,64,65,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,66,67,68,69,70,71,72,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,73,74,258,259,7,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,304,305,305,306],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1319","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[36,95,96,132,133,139,140,307,308,309,310,311,312,313,59,60,192,193,195,196,197,220,222,225,226,72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:324","failures":[196,291,292],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[51],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[125],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[95,96,59,192,193,221],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[296],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[149,150,314,315],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[13,18,28,33],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[316],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[87,89,90,92,152,53,54,177,317,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if (int != int) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"length":"i","initArgs":"methodArgs","paramTypes":"methodTypes"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":11,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":219,"org.easymock.tests2.UsageTest.argumentsOrdered":140,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":187,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":135,"org.easymock.tests2.StubTest.stubWithReturnValue":99,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":247,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":32,"org.easymock.tests2.SerializationTest.testAllMockedMethod":314,"org.easymock.tests2.DelegateToTest.testReturnException":144,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":212,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":185,"org.easymock.tests.MockingTest.testPartialClassMocking":204,"org.easymock.samples.SupportTest.voteForRemovals":303,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":279,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":315,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":267,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":213,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":84,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":88,"org.easymock.tests.UsageExpectAndThrowTest.object":277,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":311,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":82,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests2.DelegateToTest.testWrongClass":146,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":73,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":74,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":61,"org.easymock.tests2.UsageTest.wrongArguments":133,"org.easymock.samples.ConstructorCalledMockTest.testTax":304,"org.easymock.tests.UsageStrictMockTest.range":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":229,"org.easymock.samples.ExampleTest.answerVsDelegate":298,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":112,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":154,"org.easymock.tests2.UsageConstraintsTest.testNull":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":278,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":166,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":114,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":125,"org.easymock.tests2.CaptureTest.testPrimitive":41,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":65,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":286,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":225,"org.easymock.tests.UsageTest.moreThanOneArgument":220,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":228,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":233,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":200,"org.easymock.tests2.CaptureTest.testCaptureNone":46,"org.easymock.tests.UsageUnorderedTest.message":72,"org.easymock.tests.UsageVerifyTest.twoReturns":197,"org.easymock.tests2.ThreadingTest.testThreadSafe":117,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":262,"org.easymock.tests.UsageTest.argumentsOrdered":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":67,"org.easymock.tests2.CaptureTest.testCapture_2617107":40,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":64,"org.easymock.tests2.UsageConstraintsTest.any":19,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":124,"org.easymock.tests2.StubTest.stub":98,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":71,"org.easymock.tests.UsageExpectAndThrowTest.longType":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":186,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":94,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":100,"org.easymock.tests2.SerializationTest.testClass":149,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":153,"org.easymock.tests.LimitationsTest.mockNativeMethod":173,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":257,"org.easymock.tests2.AnswerTest.answer":87,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":18,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":163,"org.easymock.tests2.CaptureTest.testAnd":38,"org.easymock.tests2.UsageTest.strictResetToDefault":131,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.tests2.NameTest.nameForMocksControl":310,"org.easymock.tests2.MockedExceptionTest.testMockedException":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":109,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":224,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":266,"org.easymock.tests2.DelegateToTest.testDelegate":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":271,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":206,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":164,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":126,"org.easymock.tests.MockingTest.testNicePartialClassMocking":205,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":282,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":168,"org.easymock.tests2.CaptureTest.testCaptureLast":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":259,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":218,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":30,"org.easymock.tests.MockingTest.testTwoMocks":203,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":258,"org.easymock.tests2.CaptureTest.testCapture1_2446744":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":161,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":139,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":34,"org.easymock.tests.UsageThrowableTest.throwError":287,"org.easymock.tests.UsageStrictMockTest.differentMethods":193,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":119,"org.easymock.tests2.MockBuilderTest.testCreateMockString":129,"org.easymock.tests.UsageExpectAndThrowTest.floatType":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":235,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":25,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":90,"org.easymock.tests.ResultTest.createReturnResultToString":77,"org.easymock.tests.UsageVerifyTest.twoThrows":196,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":316,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":85,"org.easymock.samples.PartialClassMockTest.testGetArea":306,"org.easymock.tests.ResultTest.createDelegateResultToString":76,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":68,"org.easymock.samples.ExampleTest.voteAgainstRemoval":300,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":199,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":198,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":268,"org.easymock.tests2.UsageTest.niceToStrict":134,"org.easymock.tests2.UsageConstraintsTest.testNotNull":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":294,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":101,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":123,"org.easymock.tests2.MockBuilderTest.testCreateMock":127,"org.easymock.tests2.UsageTest.defaultResetToNice":138,"org.easymock.samples.ExampleTest.voteAgainstRemovals":297,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":253,"org.easymock.tests2.CallbackTest.callback":152,"org.easymock.tests.UsageTest.openCallCountByLastCall":223,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":276,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":110,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":8,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":63,"org.easymock.tests.UsageOverloadedMethodTest.overloading":175,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":23,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":249,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":157,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":174,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":22,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":230,"org.easymock.tests.UsageThrowableTest.throwCheckedException":291,"org.easymock.tests2.EasyMockSupportClassTest.testAll":83,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":216,"org.easymock.tests2.CaptureTest.testCaptureAll":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":162,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":57,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":159,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":156,"org.easymock.tests2.UsageConstraintsTest.testMatches":24,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":158,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":234,"org.easymock.samples.ExampleTest.voteForRemovals":301,"org.easymock.tests2.NameTest.nameForNiceMock":309,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":120,"org.easymock.tests.UsageVarargTest.allKinds":66,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":195,"org.easymock.tests2.DependencyTest.testInterfaceMocking":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":217,"org.easymock.tests2.DelegateToTest.testStubDelegate":145,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":293,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":93,"org.easymock.tests2.AnswerTest.stubAnswer":91,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":188,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":5,"org.easymock.tests2.UsageConstraintsTest.greaterThan":26,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":209,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":172,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.samples.ExampleTest.voteForRemoval":299,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":118,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":256,"org.easymock.tests.UsageExpectAndReturnTest.floatType":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":169,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":305,"org.easymock.tests.UsageThrowableTest.noUpperLimit":288,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":27,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":181,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":9,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":130,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":189,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":43,"org.easymock.tests2.SerializationTest.test":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":107,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":239,"org.easymock.tests2.UsageConstraintsTest.testSame":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":184,"org.easymock.tests2.CaptureTest.testCaptureFirst":51,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":143,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":108,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":183,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":245,"org.easymock.tests.GenericTest.testPackageScope":295,"org.easymock.tests2.CaptureTest.testCapture2_2446744":50,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":37,"org.easymock.tests2.UsageTest.moreThanOneArgument":132,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":265,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":128,"org.easymock.tests2.NameTest.nameForMock":307,"org.easymock.tests.UsageExpectAndReturnTest.longType":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":214,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":105,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":250,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":237,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":31,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":283,"org.easymock.tests2.UsageStrictMockTest.differentMethods":96,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":281,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":211,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":236,"org.easymock.tests2.MockedExceptionTest.testRealException":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":272,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":292,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":62,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":155,"org.easymock.tests2.NameTest.nameForStrictMock":308,"org.easymock.tests2.UsageConstraintsTest.testContains":21,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":103,"org.easymock.tests2.UsageConstraintsTest.testFind":12,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":176,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":167,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":54,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":190,"org.easymock.tests.UsageExpectAndReturnTest.object":248,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":312,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":28,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":122,"org.easymock.tests2.UsageStrictMockTest.range":95,"org.easymock.tests2.UsageConstraintsTest.lessThan":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests.UsageTest.exactCallCountByLastCall":227,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":56,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":106,"org.easymock.tests2.CaptureTest.testCaptureRightOne":48,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":263,"org.easymock.tests2.UsageConstraintsTest.testOr":15,"org.easymock.tests.UsageRangeTest.combination":208,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":254,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":79,"org.easymock.tests.UsageTest.wrongArguments":222,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":179,"org.easymock.tests.ResultTest.createThrowResultToString":78,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":251,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":201,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":177,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":75,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":52,"org.easymock.tests2.UsageConstraintsTest.cmpTo":20,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":89,"org.easymock.tests2.UsageTest.openCallCountByLastCall":136,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":137,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":6,"org.easymock.tests2.CaptureTest.testCaptureFromStub":49,"org.easymock.tests.UsageTest.unexpectedCallWithArray":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":290,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":59,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":252,"org.easymock.tests2.UsageConstraintsTest.constraints":10,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":170,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":191,"org.easymock.samples.ExampleTest.addAndChangeDocument":302,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":273,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":215,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":44,"org.easymock.tests2.UsageTest.resumeIfFailure":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":69,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":70,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":182,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":111}}]
