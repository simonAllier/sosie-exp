[{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[75,76,77,78,79],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[80,81],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[75,82,82,83,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,0,106,1,2,3,4,5,107,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,108,109,110,111,112,113,114,115,116,76,117,77,118,78,119,120,121,122,123,31,32,33,34,35,36,37,38,39,40,41,42,43,44,124,125,126,127,128,129,130,131,45,132,133,46,134,135,136,137,138,139,140,141,47,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,48,177,178,179,180,181,49,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,50,51,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,80,372,373,374,81,375,376,52,53,377,378,54,55,379,56,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,57,58,430,431,432,433,434,435,436,437,438,439,440,59,60,61,62,63,441,442,443,444,64,65,66,67,68,445,446,447,448,449,450,451,452,453,454,455,456,457,69,70,458,459,460,461,462,463,464,465,466,467,468,469,71,72,470,471,73,74,472,473,474,475,476,477,478,479],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","args":"args","cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[4,5,7,9,10,12,22,27,31,33,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[75,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,102,103,104,105,0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,108,109,110,111,76,117,77,78,31,32,33,34,36,37,38,39,40,41,44,124,126,127,128,129,45,46,135,139,140,142,143,144,145,146,152,160,161,163,164,167,170,174,175,176,49,189,190,193,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,226,236,242,245,248,249,250,252,50,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,305,306,308,324,325,326,327,328,340,344,346,347,348,349,351,359,365,366,367,368,369,54,380,381,388,389,393,394,419,420,421,423,424,426,427,428,429,57,430,439,59,60,63,441,442,443,444,64,65,66,67,68,454,455,456,457,69,70,458,459,460,461,462,463,464,465,466,71,72,471,74,474,475,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[75,82,82,83,83,93,94,98,99,111,113,114,116,76,117,77,78,119,120,121,123,124,125,127,128,129,130,45,132,133,46,134,135,136,137,138,143,144,145,194,195,200,201,202,203,205,206,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,256,258,302,303,304,305,306,308,311,329,332,359,371,80,372,373,374,81,376,387,388,389,390,391,58,430,431,432,433,434,435,436,437,438,439,440,453],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[480,481,482,483,484,485],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[75,82,83,93,94,124,125,127,128,129,130,45,133,46,134,135,136,137,138,143,144,145,194,195,200,201,202,203,205,206,220,223,225,227,228,231,234,237,238,241,258,302,303,304,305,306,308,311,359,371,80,372,373,374,81,376,387,388,389,391,58,430,431,432,433,434,435,436,437,438,439,440],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[82,83,98,99,486,487,112,115,118,119,488,122,202,206,489,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,256],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[490,73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[4,5,9,10,12,22,31,33,41],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[491,492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[82,82,83,83,2,3,6,7,8,9,15,17,18,20,21,27,28,29,42,50,324,325,326,327,328,54,59,60,63,64,65,66,67,68,71,72,74],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[75,111,113,114,76,117,77,78,120,121,123,130,134,135,138,226,236,242,256,329,332,390],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[193],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[82,83,98,99,486,487,112,115,118,119,488,122,202,206,489,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,256],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[256,257,258,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[162,168,169,253,494,352,353,356,357,52,459,460,73,473],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[495,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,0,106,1,2,3,4,5,107,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,108,109,110,111,112,113,114,115,116,76,117,77,118,78,497,119,120,121,122,123,31,32,33,34,35,36,37,38,39,40,41,42,43,44,124,125,126,127,128,129,130,131,45,132,133,46,134,135,136,137,138,139,140,141,47,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,48,177,178,179,180,181,49,182,183,184,185,186,187,188,189,190,191,192,193,194,498,499,500,195,196,197,198,199,200,201,202,203,501,204,205,206,489,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,50,51,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,502,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,503,504,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,80,372,373,374,81,375,376,52,53,377,378,54,55,379,56,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,57,58,430,431,432,433,434,435,436,437,438,439,440,59,60,61,62,63,441,442,443,444,64,65,66,67,68,445,446,447,448,449,450,451,452,453,454,455,456,457,69,70,458,459,460,461,462,463,464,465,466,467,468,469,71,72,470,471,73,74,472,473,474,475,476,477,478,479],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[374,495,496],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[163],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"prefix"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[256,257,258,493],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[387,391],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[161,50,254,255,263,267,268,270,273,340,344,351,458,459,460,74,474,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[107,168,356],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[75,82,82,83,83,93,94,98,111,113,114,116,76,117,77,78,120,121,123,124,125,127,128,129,130,45,133,46,134,135,136,137,138,139,143,144,145,195,200,201,202,203,205,206,223,226,236,242,256,258,302,303,304,305,306,308,311,329,332,359,371,388,389,390,58,430,431,432,433,434,435,436,439],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests2.UsageTest.argumentsOrdered":169,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":350,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":405,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":164,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":92,"org.easymock.tests2.DelegateToTest.testReturnException":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":455,"org.easymock.tests.MockingTest.testPartialClassMocking":305,"org.easymock.tests.MockClassControlTest.testToString":431,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":101,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":230,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":259,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":480,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":11,"org.easymock.tests2.UsageTest.wrongArguments":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":59,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":443,"org.easymock.samples.ExampleTest.answerVsDelegate":85,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":332,"org.easymock.tests2.UsageConstraintsTest.testNull":7,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":310,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":127,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":436,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":216,"org.easymock.tests2.CaptureTest.testPrimitive":34,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":278,"org.easymock.tests.UsageTest.moreThanOneArgument":351,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":326,"org.easymock.tests.UsageTest.argumentsOrdered":357,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":360,"org.easymock.tests.UsageVarargTest.varargIntAccepted":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":64,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":484,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":111,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":499,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":157,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":68,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":49,"org.easymock.tests.ReplayStateInvalidUsageTest.times":320,"org.easymock.tests2.DependencyTest.testClassMocking":172,"org.easymock.tests2.AnswerTest.answer":245,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":412,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":110,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":504,"org.easymock.tests2.CaptureTest.testAnd":31,"org.easymock.tests2.UsageTest.strictResetToDefault":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":46,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":348,"org.easymock.tests2.DelegateToTest.testDelegate":193,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":274,"org.easymock.tests.LimitationsTest.mockFinalMethod":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":69,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":369,"org.easymock.tests2.DependencyTest.testClassMockingSupport":173,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":342,"org.easymock.tests2.CaptureTest.testCapture1_2446744":35,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":108,"org.easymock.tests.UsageThrowableTest.throwError":56,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":314,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":331,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":502,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":244,"org.easymock.samples.PartialClassMockTest.testGetArea":75,"org.easymock.tests.MockingTest.testInterfaceMocking":307,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":478,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":453,"org.easymock.tests2.UsageTest.niceToStrict":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":76,"org.easymock.tests2.MockBuilderTest.testCreateMock":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":239,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":184,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":490,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":268,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":212,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":503,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":378,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":461,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":441,"org.easymock.tests.UsageOverloadedMethodTest.overloading":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":241,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":17,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":338,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":392,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":293,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":495,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":16,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":40,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":422,"org.easymock.tests.MockClassControlTest.testEquals":435,"org.easymock.tests2.EasyMockSupportClassTest.testAll":223,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":389,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":109,"org.easymock.tests2.CaptureTest.testCaptureAll":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":367,"org.easymock.tests.MockNameTest.defaultName":379,"org.easymock.tests2.UsageConstraintsTest.testMatches":18,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":327,"org.easymock.samples.ExampleTest.voteForRemovals":89,"org.easymock.tests.UsageVarargTest.allKinds":57,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":458,"org.easymock.samples.BasicClassMockTest.testPrintContent":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":368,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":385,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":70,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":485,"org.easymock.tests2.UsageConstraintsTest.greaterThan":20,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":224,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":347,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":136,"org.easymock.samples.ExampleTest.voteForRemoval":86,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":376,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":140,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":137,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":333,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":500,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":130,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":159,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":359,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":209,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":454,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":188,"org.easymock.tests2.CaptureTest.testCaptureFirst":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":210,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":289,"org.easymock.tests2.UsageTest.moreThanOneArgument":161,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":47,"org.easymock.tests2.CaptureTest.testCapture2_2446744":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":413,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":121,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":429,"org.easymock.tests.GenericTest.testBridgedEquals":391,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":468,"org.easymock.tests.UsageExpectAndReturnTest.longType":285,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":207,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":365,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":79,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":277,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":25,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":345,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":324,"org.easymock.tests.UsageCallCountTest.tooManyCalls":469,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":240,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":186,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":264,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":384,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":201,"org.easymock.tests.MockingTest.testNiceClassMocking":311,"org.easymock.tests.MockingTest.testClassMocking":303,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":462,"org.easymock.tests2.UsageConstraintsTest.testContains":15,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":145,"org.easymock.tests2.UsageConstraintsTest.testFind":6,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":394,"org.easymock.tests.MockTypeTest.fromEasyMockClass":330,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":470,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":1,"org.easymock.tests.UsageExpectAndReturnTest.object":292,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":481,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":424,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":451,"org.easymock.tests.UsageTest.exactCallCountByLastCall":358,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":361,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":99,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":419,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":298,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":337,"org.easymock.tests.MockClassControlTest.testHashCode":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":148,"org.easymock.tests2.EasyMockSupportTest.testVerify":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":233,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":362,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":377,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":30,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":48,"org.easymock.tests.UsageVarargTest.varargCharAccepted":423,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":370,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastCall":165,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":218,"org.easymock.tests.DefaultClassInstantiatorTest.object":371,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":53,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":449,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":266,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":382,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":180,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":147,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":433,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":134,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":265,"org.easymock.tests.CapturesMatcherTest.test":492,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":279,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":242,"org.easymock.tests2.UsageTest.resumeIfFailure":170,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":329,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":498,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":457,"org.easymock.tests2.StubTest.stubWithReturnValue":199,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":118,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":26,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":291,"org.easymock.tests2.SerializationTest.testAllMockedMethod":258,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":411,"org.easymock.samples.SupportTest.voteForRemovals":97,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":271,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":417,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":246,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":447,"org.easymock.tests.UsageExpectAndThrowTest.object":269,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":23,"org.easymock.tests2.DelegateToTest.testWrongClass":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":71,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":72,"org.easymock.tests.UsageStrictMockTest.range":473,"org.easymock.samples.ConstructorCalledMockTest.testTax":82,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":196,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":270,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":220,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":322,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":442,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":479,"org.easymock.tests2.CaptureTest.testCaptureNone":39,"org.easymock.tests.UsageUnorderedTest.message":52,"org.easymock.tests.UsageVerifyTest.twoReturns":460,"org.easymock.tests.UsageVarargTest.varargByteAccepted":428,"org.easymock.tests2.ThreadingTest.testThreadSafe":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":237,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":466,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":452,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":93,"org.easymock.tests2.CaptureTest.testCapture_2617107":33,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":62,"org.easymock.tests2.UsageConstraintsTest.any":13,"org.easymock.tests2.StubTest.stub":198,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":319,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndThrowTest.longType":262,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":374,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":318,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":51,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":152,"org.easymock.tests2.SerializationTest.testClass":256,"org.easymock.tests.LimitationsTest.mockNativeMethod":439,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":390,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":301,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":179,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":255,"org.easymock.tests2.NameTest.nameForMocksControl":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":181,"org.easymock.tests2.MockedExceptionTest.testMockedException":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":225,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":355,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":263,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":308,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":124,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":78,"org.easymock.tests.MockingTest.testNicePartialClassMocking":306,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":129,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":177,"org.easymock.tests2.CaptureTest.testCaptureLast":38,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":343,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":10,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":206,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":24,"org.easymock.tests.MockingTest.testTwoMocks":304,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":489,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":267,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":168,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":28,"org.easymock.samples.ExampleTest.removeNonExistingDocument":90,"org.easymock.tests.UsageStrictMockTest.differentMethods":474,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":183,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":149,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":372,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":141,"org.easymock.tests2.MockBuilderTest.testCreateMockString":123,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":227,"org.easymock.tests.UsageExpectAndThrowTest.floatType":261,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":222,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":248,"org.easymock.tests.UsageVerifyTest.twoThrows":459,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":100,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":236,"org.easymock.samples.ExampleTest.voteAgainstRemoval":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":135,"org.easymock.tests.LimitationsTest.privateConstructor":438,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":487,"org.easymock.tests2.UsageConstraintsTest.testNotNull":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":386,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":143,"org.easymock.tests2.UsageTest.defaultResetToNice":167,"org.easymock.samples.ExampleTest.voteAgainstRemovals":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":297,"org.easymock.tests.UsageVarargTest.differentLength":425,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":178,"org.easymock.tests2.CallbackTest.callback":176,"org.easymock.tests2.UsageConstraintsTest.equals":107,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":132,"org.easymock.tests.UsageTest.openCallCountByLastCall":354,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":61,"org.easymock.tests.UsageCallCountTest.tooFewCalls":464,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":203,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":444,"org.easymock.tests.UsageThrowableTest.throwCheckedException":383,"org.easymock.tests.MockingTest.testStrictClassMocking":302,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":55,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":182,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":202,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":321,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":204,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":250,"org.easymock.tests.ObjectMethodsTest.testHashCode":450,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":483,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":142,"org.easymock.tests2.NameTest.nameForNiceMock":104,"org.easymock.tests2.DependencyTest.testInterfaceMocking":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":482,"org.easymock.samples.ExampleTest.addDocument":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":238,"org.easymock.tests2.DelegateToTest.testStubDelegate":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":243,"org.easymock.tests2.AnswerTest.stubAnswer":249,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":74,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":497,"org.easymock.tests.UsageVarargTest.varargLongAccepted":427,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.floatType":284,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":98,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":83,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":156,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":21,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests.UsageThrowableTest.noUpperLimit":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":3,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":194,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":36,"org.easymock.tests2.SerializationTest.test":257,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":80,"org.easymock.tests2.UsageConstraintsTest.testSame":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":283,"org.easymock.samples.SupportTest.addDocument":96,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":501,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":228,"org.easymock.tests.GenericTest.testPackageScope":388,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":155,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":309,"org.easymock.tests2.NameTest.nameForMock":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":294,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":122,"org.easymock.tests2.UsageStrictMockTest.differentMethods":254,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":286,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":273,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":448,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":349,"org.easymock.tests2.MockedExceptionTest.testRealException":146,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":408,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":60,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":323,"org.easymock.tests2.NameTest.nameForStrictMock":103,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":116,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":128,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":195,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":22,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":373,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":113,"org.easymock.tests2.UsageStrictMockTest.range":253,"org.easymock.tests2.UsageConstraintsTest.lessThan":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":208,"org.easymock.tests2.CaptureTest.testCaptureRightOne":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":232,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":346,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":125,"org.easymock.tests.UsageTest.wrongArguments":353,"org.easymock.tests2.MockBuilderTest.testWithConstructor":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":229,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":430,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":295,"org.easymock.tests.UsageVarargTest.varargShortAccepted":426,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":81,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":467,"org.easymock.tests2.UsageConstraintsTest.cmpTo":14,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":398,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":166,"org.easymock.tests2.CaptureTest.testCaptureFromStub":42,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":313,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":114,"org.easymock.tests.UsageTest.unexpectedCallWithArray":352,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":73,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":465,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":488,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":296,"org.easymock.tests2.CaptureTest.testCapture":491,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":472,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.samples.ExampleTest.addAndChangeDocument":91,"org.easymock.tests.UsageStrictMockTest.testVerify":476,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":95,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":471,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":366,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":66,"org.easymock.tests.LimitationsTest.abstractClass":437,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":67,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":213}}]
