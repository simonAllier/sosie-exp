[{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[49,50,51,52,53,54,55],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[35,56,57,58,59,60,61,62,63],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[64,65,66,67,68,69,70,71,40,72,73,74,75,76,41,42,77,43,78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[1,2,3,4,9,10,13,14,79,15,17,19,28,31,32,46],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,19,20,112,22,113,114,115,116,117,118,119,120,67,121,122,123,124,125,126,127,128,129,130,131,132,37,133,134,135,136,137,38,138,39,139,40,73,75,76,42,140,141,142,46,47,143,144],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[145,80,81,82,64,65,146,147,104,148,149,66,150,151,67,152,152,153,153,121,122,123,124,126,127,128,129,130,131,132,37,134,135,136,68,137,154,38,138,39,69,70,71,40,72,73,74,75,76,41,42,77,43,155,78,156,141],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[56,58,60],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[157,158],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[35,56,57,58,59,60,61,62,63],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[80,81,82,160,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,161,162,99,100,101,102,103,104,163,105,106,107,108,164,109,110,111,19,20,148,66,112,22,113,114,115,116,117,118,119,120,67,121,122,123,124,125,126,127,128,129,130,131,132,37,133,134,135,136,137,38,138,39,139,40,73,75,76,42,140,141,142,46,47,143,144],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[165],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[166,167,168,169,170,171,172,173,174,175,155,176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[1,177,178,17,179,180],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[1,177,178,17,179,180],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[181],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[182,183,145,184,146,185,147,186,187,188,189,190,191,192,157,193,194,195,158,196,197,198,104,199,148,149,200,150,151,121,124,201,128,202,203,204,205,206,207,208,209,132,37,134,135,136,137,210,154,39,211,212,175,155,156,213,214],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[56,57,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[215,216,217],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[218,78,219,156],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[80,81,82,0,220,221,222,5,223,160,224,225,226,227,228,229,230,231,10,83,84,85,86,87,88,232,233,89,90,234,91,92,93,235,94,95,96,97,98,236,161,162,99,100,101,102,103,104,163,237,238,109,110,111,19,20,148,66,112,239,240,22,114,115,241,242,243,244,245,116,117,118,119,120,67,246,23,247,248,249,24,25,250,26,251,252,253,254,27,255,256,29,257,258,33,34,259,260,35,56,261,262,263,57,58,264,265,266,267,268,269,270,36,271,272,60,273,274,275,276,277,278,121,122,123,124,125,126,127,128,129,130,131,279,280,132,37,133,134,135,136,137,138,281,139,73,75,76,78,219,282,283,284,140,285,141,61,286,287,288,215,289,216,63,290,291,142,46,47,143,144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[160,161,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[1,177,178,17,179,180],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[58,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[61,62,287,288,292,293,215,216,217,63,294,291],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[295,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,182,183,145,80,81,324,82,325,326,184,0,220,1,2,221,222,3,4,5,327,328,329,64,330,331,332,333,65,334,335,146,223,166,336,337,338,339,340,341,6,7,8,342,343,160,344,185,147,186,187,188,189,190,191,192,157,193,194,195,158,196,224,345,225,226,227,228,229,230,231,9,10,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,83,84,85,86,87,88,232,233,89,90,234,91,92,93,235,94,95,96,97,98,236,161,162,369,370,371,159,372,99,100,101,102,103,197,198,104,199,167,168,169,170,171,172,163,237,238,373,374,375,376,377,105,106,107,108,378,379,380,381,382,383,384,79,164,109,110,15,16,385,17,111,18,19,20,386,387,388,148,149,66,200,389,390,391,392,393,394,21,395,396,397,398,399,400,401,402,403,112,239,173,404,240,22,113,114,115,405,406,407,408,409,410,411,412,413,241,414,242,415,416,417,418,419,420,421,422,243,244,423,245,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,150,151,439,116,117,440,118,119,441,120,442,443,67,444,152,153,445,246,23,247,248,249,24,25,446,250,26,251,252,447,448,449,450,253,451,452,453,254,454,27,255,256,28,29,30,257,258,455,31,32,33,34,259,260,35,56,456,261,262,263,57,58,264,59,265,266,267,268,269,270,36,271,272,60,273,274,457,275,276,277,278,121,122,123,124,458,125,126,127,459,201,460,461,128,462,202,129,203,204,463,464,205,465,466,206,467,130,207,208,468,469,209,131,470,471,472,473,474,475,476,477,478,479,480,279,481,482,483,484,485,486,487,280,132,37,133,134,135,136,68,488,137,489,210,154,38,138,39,211,212,490,491,492,493,494,495,496,497,498,499,281,500,501,502,503,504,505,506,507,139,508,509,510,70,40,72,511,73,74,75,76,512,295,41,42,43,174,175,155,176,78,219,156,282,513,283,284,140,285,514,515,516,517,518,519,520,141,55,61,286,62,287,288,292,293,215,289,216,63,294,290,291,44,521,142,45,46,47,522,523,524,143,144,48,213,525,526,214,527,528],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[296,299,0,220,2,221,222,3,4,5,146,223,166,338,339,340,341,7,8,190,191,224,345,225,226,227,228,229,230,231,9,10,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,83,84,85,86,87,88,232,233,89,90,234,91,92,93,235,94,95,96,97,98,370,371,99,100,101,102,103,104,167,168,169,170,171,172,163,237,238,105,106,107,108,378,379,381,382,109,110,15,16,385,17,111,18,19,20,386,387,148,149,200,389,390,391,393,394,21,395,396,397,398,399,112,239,173,404,240,22,114,115,150,151,439,116,117,440,118,119,441,120,443,444,445,246,23,247,248,249,24,25,250,26,251,252,447,448,450,253,453,254,454,27,255,256,28,29,30,257,258,31,32,33,34,259,260,35,56,261,262,263,57,58,264,265,266,267,268,269,270,36,271,272,60,273,274,457,275,276,277,278,121,124,125,128,279,487,280,132,37,133,134,135,136,137,39,281,507,139,508,510,174,175,155,176,219,156,282,283,284,140,285,61,286,62,287,288,292,293,215,289,216,63,294,290,291,44,521,142,45,46,47,522,143,144,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[451],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[268],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[178,529,36,179,180],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[4,19,32,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[195,530,165],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[296,297,298,299,300,301,182,183,145,80,81,324,82,325,326,184,0,220,1,2,221,222,3,4,5,327,328,329,64,330,331,332,333,65,334,335,146,223,166,336,337,338,339,340,341,6,7,8,342,343,160,344,185,147,186,187,188,189,190,191,531,192,157,193,194,195,158,532,196,224,345,225,226,227,228,229,230,231,9,10,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,12,366,367,368,83,84,85,86,87,88,232,233,89,90,234,91,92,93,235,94,95,96,97,98,236,161,162,369,370,371,159,372,99,100,101,102,103,197,198,104,199,167,168,169,170,171,172,163,237,238,373,374,375,376,377,105,106,107,108,378,379,380,381,382,383,384,79,164,109,110,15,16,385,17,111,18,19,20,386,387,388,148,149,66,200,389,390,391,392,393,394,21,395,396,397,398,399,400,401,402,403,112,239,173,404,240,22,113,114,115,405,406,407,408,409,410,411,412,413,241,414,242,415,416,417,418,419,420,421,422,243,244,423,245,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,150,151,439,116,117,440,118,119,441,120,442,443,67,444,152,153,445,246,23,247,248,249,24,25,446,250,26,251,252,447,448,449,450,253,451,452,453,254,454,27,255,256,28,29,30,257,258,455,31,32,33,34,259,260,35,56,456,261,262,263,57,58,264,59,265,266,267,268,269,270,36,271,272,60,273,274,457,275,276,277,278,121,122,123,124,458,125,126,127,459,201,460,461,128,462,202,129,203,204,463,464,205,465,466,206,467,130,207,208,468,469,209,131,470,471,472,473,474,475,476,477,478,479,480,279,481,482,483,484,485,486,487,280,132,37,133,134,135,136,68,488,137,489,210,154,38,138,39,211,212,490,491,492,493,494,495,496,497,498,499,281,500,501,502,503,504,505,506,507,139,508,509,510,70,533,40,72,534,511,73,74,75,54,76,512,295,41,42,535,43,174,175,155,176,78,219,156,282,283,284,140,285,520,141,55,536,61,286,62,287,288,292,293,215,289,216,63,294,290,291,44,521,142,45,46,47,522,523,524,143,144,48,213,525,526,537,214,527,528],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[538],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[287],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[278,539],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[259,271,275,540],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":56,"org.easymock.tests2.UsageTest.argumentsOrdered":32,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":414,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":30,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":445,"org.easymock.tests2.DelegateToTest.testReturnException":507,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":168,"org.easymock.tests.MockingTest.testPartialClassMocking":80,"org.easymock.tests.MockClassControlTest.testToString":186,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":490,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":346,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":144,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":323,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":49,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":264,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":112,"org.easymock.tests2.UsageTest.wrongArguments":28,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":505,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":402,"org.easymock.samples.ExampleTest.answerVsDelegate":440,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":65,"org.easymock.tests2.UsageConstraintsTest.testNull":262,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":326,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":134,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":191,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":26,"org.easymock.tests2.CaptureTest.testPrimitive":287,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":240,"org.easymock.tests.UsageTest.moreThanOneArgument":220,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":365,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":107,"org.easymock.tests.UsageTest.argumentsOrdered":4,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":369,"org.easymock.tests.UsageVarargTest.varargIntAccepted":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":53,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":70,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":526,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":485,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":103,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":307,"org.easymock.tests.ReplayStateInvalidUsageTest.times":432,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":281,"org.easymock.tests2.DependencyTest.testClassMocking":523,"org.easymock.tests2.AnswerTest.answer":253,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":420,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":475,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":331,"org.easymock.tests2.UsageTest.strictResetToDefault":255,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":534,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":106,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":249,"org.easymock.tests2.DelegateToTest.testDelegate":510,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":372,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":306,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":361,"org.easymock.tests.LimitationsTest.mockFinalMethod":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":377,"org.easymock.tests2.DependencyTest.testClassMockingSupport":524,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":366,"org.easymock.tests2.CaptureTest.testCapture1_2446744":288,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":473,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":426,"org.easymock.tests.UsageThrowableTest.throwError":224,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":333,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":486,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":12,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":310,"org.easymock.samples.PartialClassMockTest.testGetArea":67,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":427,"org.easymock.tests.MockingTest.testInterfaceMocking":324,"org.easymock.tests2.CompareToTest.testLessOrEqual":540,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":161,"org.easymock.tests2.UsageTest.niceToStrict":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":205,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":347,"org.easymock.tests2.ThreadingTest.testChangeDefault":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":73,"org.easymock.tests2.MockBuilderTest.testCreateMock":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":468,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":502,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":179,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":355,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":24,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":438,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":400,"org.easymock.tests.UsageOverloadedMethodTest.overloading":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":209,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":269,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":382,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":91,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":530,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":268,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":216,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":392,"org.easymock.tests.MockClassControlTest.testEquals":190,"org.easymock.tests2.EasyMockSupportClassTest.testAll":128,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":149,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":363,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":474,"org.easymock.tests2.CaptureTest.testCaptureAll":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":375,"org.easymock.tests.MockNameTest.defaultName":342,"org.easymock.tests2.UsageConstraintsTest.testMatches":270,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":108,"org.easymock.samples.ExampleTest.voteForRemovals":120,"org.easymock.tests.UsageVarargTest.allKinds":399,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":231,"org.easymock.samples.BasicClassMockTest.testPrintContent":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":376,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":229,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":44,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":509,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":172,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":532,"org.easymock.tests2.UsageConstraintsTest.greaterThan":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":113,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":39,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":311,"org.easymock.samples.ExampleTest.voteForRemoval":118,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":196,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":211,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":537,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":68,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":303,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":146,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":247,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":167,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":506,"org.easymock.tests2.CaptureTest.testCaptureFirst":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":248,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":79,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":233,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":140,"org.easymock.tests2.UsageTest.moreThanOneArgument":256,"org.easymock.tests2.CaptureTest.testCapture2_2446744":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":421,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":42,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":398,"org.easymock.tests.GenericTest.testBridgedEquals":200,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":7,"org.easymock.tests.UsageExpectAndReturnTest.longType":86,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":373,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":364,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":457,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":164,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":105,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":328,"org.easymock.tests.UsageCallCountTest.tooManyCalls":8,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":469,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":89,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":504,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":228,"org.easymock.tests.MockingTest.testNiceClassMocking":184,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":122,"org.easymock.tests.MockingTest.testClassMocking":183,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":71,"org.easymock.tests2.UsageConstraintsTest.testContains":267,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":337,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":155,"org.easymock.tests2.UsageConstraintsTest.testFind":261,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":238,"org.easymock.tests.MockTypeTest.fromEasyMockClass":332,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":450,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":16,"org.easymock.tests.UsageExpectAndReturnTest.object":234,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":503,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":250,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":394,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":50,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":299,"org.easymock.tests.UsageTest.exactCallCountByLastCall":5,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":343,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":370,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":55,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":389,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":95,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":477,"org.easymock.tests.MockClassControlTest.testHashCode":189,"org.easymock.tests2.EasyMockSupportTest.testVerify":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":466,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":371,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":437,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":472,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":13,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":520,"org.easymock.tests.UsageVarargTest.varargCharAccepted":393,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":531,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":521,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":245,"org.easymock.tests2.UsageTest.openCallCountByLastCall":257,"org.easymock.tests.DefaultClassInstantiatorTest.object":192,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":436,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":297,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":353,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":498,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":476,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":188,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":38,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":352,"org.easymock.tests.CapturesMatcherTest.test":181,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":96,"org.easymock.tests.ReplayStateInvalidCallsTest.times":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":327,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":316,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":131,"org.easymock.tests2.UsageTest.resumeIfFailure":33,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":525,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":170,"org.easymock.tests2.StubTest.stubWithReturnValue":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":54,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":90,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":275,"org.easymock.tests2.SerializationTest.testAllMockedMethod":156,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":419,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":180,"org.easymock.samples.SupportTest.voteForRemovals":116,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":388,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":358,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":218,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":423,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":451,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":344,"org.easymock.tests.UsageExpectAndThrowTest.object":356,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":273,"org.easymock.tests2.DelegateToTest.testWrongClass":508,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":109,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":313,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":110,"org.easymock.samples.ConstructorCalledMockTest.testTax":152,"org.easymock.tests.UsageStrictMockTest.range":19,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":527,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":446,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":357,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":75,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":434,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":401,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":177,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":305,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":162,"org.easymock.tests2.CaptureTest.testCaptureNone":289,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":515,"org.easymock.tests.UsageUnorderedTest.message":15,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":11,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":397,"org.easymock.tests2.ThreadingTest.testThreadSafe":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":207,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":341,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":150,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":300,"org.easymock.tests2.CaptureTest.testCapture_2617107":62,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":368,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":243,"org.easymock.tests2.UsageConstraintsTest.any":265,"org.easymock.tests2.StubTest.stub":487,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":431,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":244,"org.easymock.tests.UsageExpectAndThrowTest.longType":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":195,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":430,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":45,"org.easymock.tests2.SerializationTest.testClass":78,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":279,"org.easymock.tests.LimitationsTest.mockNativeMethod":104,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":98,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":66,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":497,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":321,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":522,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":516,"org.easymock.tests2.NameTest.nameForMocksControl":494,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":499,"org.easymock.tests2.MockedExceptionTest.testMockedException":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":202,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":222,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":449,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":82,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":350,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":76,"org.easymock.tests.MockingTest.testNicePartialClassMocking":81,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":136,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":495,"org.easymock.tests2.CaptureTest.testCaptureLast":215,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":367,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":127,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":58,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":320,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":274,"org.easymock.tests.MockingTest.testTwoMocks":145,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":317,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":459,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":354,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":277,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":519,"org.easymock.samples.ExampleTest.removeNonExistingDocument":442,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":501,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":428,"org.easymock.tests.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":478,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":518,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":193,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":284,"org.easymock.tests2.MockBuilderTest.testCreateMockString":43,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":203,"org.easymock.tests.UsageExpectAndThrowTest.floatType":348,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":453,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":536,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":130,"org.easymock.samples.ExampleTest.voteAgainstRemoval":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":242,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":138,"org.easymock.tests.LimitationsTest.privateConstructor":198,"org.easymock.tests2.UsageConstraintsTest.testNotNull":276,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":174,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":230,"org.easymock.tests2.UsageTest.defaultResetToNice":455,"org.easymock.samples.ExampleTest.voteAgainstRemovals":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":94,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":496,"org.easymock.tests.UsageVarargTest.differentLength":21,"org.easymock.tests2.CallbackTest.callback":48,"org.easymock.tests2.UsageConstraintsTest.equals":456,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":529,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":489,"org.easymock.tests.UsageTest.openCallCountByLastCall":221,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":259,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":173,"org.easymock.tests.UsageCallCountTest.tooFewCalls":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":124,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":403,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":517,"org.easymock.tests.UsageThrowableTest.throwCheckedException":227,"org.easymock.tests.MockingTest.testStrictClassMocking":182,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":178,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":166,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":500,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":123,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":433,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":125,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":454,"org.easymock.tests.ObjectMethodsTest.testHashCode":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":52,"org.easymock.tests2.NameTest.nameForNiceMock":493,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":285,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":319,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":314,"org.easymock.tests2.DependencyTest.testInterfaceMocking":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":51,"org.easymock.samples.ExampleTest.addDocument":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":470,"org.easymock.tests2.DelegateToTest.testStubDelegate":139,"org.easymock.tests2.AnswerTest.stubAnswer":254,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":111,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":512,"org.easymock.tests.UsageVarargTest.varargLongAccepted":396,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":97,"org.easymock.tests.UsageExpectAndReturnTest.floatType":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":141,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":153,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":484,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":272,"org.easymock.tests.UsageThrowableTest.noUpperLimit":345,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":260,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":213,"org.easymock.tests2.SerializationTest.test":219,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":292,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":165,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":157,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":84,"org.easymock.tests2.UsageConstraintsTest.testSame":263,"org.easymock.samples.SupportTest.addDocument":439,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":458,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":304,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":204,"org.easymock.tests.GenericTest.testPackageScope":148,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":483,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":325,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":302,"org.easymock.tests2.NameTest.nameForMock":491,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":92,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":535,"org.easymock.tests2.UsageStrictMockTest.differentMethods":47,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":210,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":87,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":360,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":115,"org.easymock.tests2.MockedExceptionTest.testRealException":176,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":335,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":528,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":416,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":142,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":239,"org.easymock.tests2.NameTest.nameForStrictMock":492,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":511,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":448,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":135,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":214,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":60,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":194,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":40,"org.easymock.tests2.UsageStrictMockTest.range":46,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":308,"org.easymock.tests2.UsageConstraintsTest.lessThan":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":465,"org.easymock.tests2.CaptureTest.testCaptureRightOne":63,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":514,"org.easymock.tests2.UsageConstraintsTest.testOr":57,"org.easymock.tests.UsageRangeTest.combination":22,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":37,"org.easymock.tests.UsageTest.wrongArguments":2,"org.easymock.tests2.MockBuilderTest.testWithConstructor":533,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":463,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":93,"org.easymock.tests.UsageVarargTest.varargShortAccepted":395,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":158,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":6,"org.easymock.tests2.UsageConstraintsTest.cmpTo":266,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":322,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":452,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":312,"org.easymock.tests2.CompareToTest.testLessThan":539,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":408,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":258,"org.easymock.tests2.CaptureTest.testCaptureFromStub":294,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":425,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":72,"org.easymock.tests.UsageTest.unexpectedCallWithArray":1,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":318,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":340,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":235,"org.easymock.tests2.CaptureTest.testCapture":217,"org.easymock.tests2.UsageConstraintsTest.constraints":35,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":18,"org.easymock.samples.ExampleTest.addAndChangeDocument":443,"org.easymock.tests2.ConstraintsToStringTest.notToString":538,"org.easymock.tests.UsageStrictMockTest.testVerify":387,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":444,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":385,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":374,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":101,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":69,"org.easymock.tests.LimitationsTest.abstractClass":197,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":232,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":102,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":25}}]
