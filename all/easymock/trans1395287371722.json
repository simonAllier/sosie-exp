[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:280","sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n            org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        } \n    } else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterfaces":"actualTypeArguments","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[6,7],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,11],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,0,48,49,50,11,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,3,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,8,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,9,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,4,432,5,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,2,483,484,485,486,487,488,489,490,491,492,493,494,495,496,10,497,498,499,500,501,502,503,504,505,7,506,507,508,509],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[320,321,510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[511,506,507,508],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[512,513,514],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[56,57,74,75,76,78,79,80,81,110,111,515,516,517,518,519,520,521,117,118,119,120,122,123,140,163,164,165,166,167,168,176,258,259,260,311,312,313,314,315,316,317,335,336,337,8,342,343,346,522,523,524,525,526,527,528,529,530,531,532,359,402,403,413,414,452,456,459,2,497],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[512,513,514],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[195],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[488,489],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[533],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[534,480,497,503],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:45","sourceCode":"java.util.List<org.easymock.internal.Result>.add(org.easymock.internal.Result)","type":"CtInvocationImpl"},"failures":[12,19,20,21,22,24,25,48,49,51,52,53,54,55,56,71,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,116,117,120,121,124,151,152,153,154,155,156,162,164,165,169,170,171,173,174,176,177,178,179,180,194,195,197,205,220,221,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,277,278,279,280,281,282,284,287,288,289,290,291,292,293,299,308,309,311,312,313,314,315,316,317,318,325,326,327,328,330,331,332,334,335,336,338,8,339,340,344,345,348,350,352,353,354,355,356,367,369,370,379,382,392,398,401,402,403,404,9,405,408,413,417,420,421,422,423,425,432,5,433,435,436,437,438,439,440,441,442,443,444,445,446,448,449,450,451,452,453,454,455,456,458,459,460,461,462,469,480,481,482,2,484,485,486,487,488,489,491,492,493,494,495,496,10,497,498,499,500,501,502,503,504,505,7,506,507,508,509],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[50,212,217,287,363,364,365,367,369,370,374,375,382,392,398,406,412,413,416,506],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[512,513,514],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[535],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[534,480,497,503],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[436,438,439,440,441,442,443,445,536,446,447,449],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[537,538,539,540,541,542],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[341],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:471","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[393,458],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[534,480,497,503],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[543],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[353,415],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.MocksControl:105","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,3,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,196,198,199,201,202,203,204,205,206,207,208,209,210,211,215,216,218,219,220,221,222,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,272,273,274,275,276,277,278,279,280,281,282,283,284,288,289,292,293,294,295,296,297,298,299,300,301,302,303,304,305,308,309,310,311,312,313,314,315,316,317,318,323,324,330,334,335,336,337,338,8,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,358,359,360,361,362,403,417,418,419,420,421,422,423,424,425,4,432,5,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,2,483,484,485,486,487,488,489,490,491,492,493,494,495,496,10,497,498,499,500,501,502,503,504,505,7,507,509],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[15,16,149,150],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[0,50,356,357,367,371,372,373,375,409,413,416,506],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[544],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[494],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[421,422],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:380","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[384,450,451],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[76,125,129,130,138,143,312,498],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"position":"org.easymock.internal.LastControl:95","failures":[436,438,446,482,2,485,487,488,490,499,504],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[545,497],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests2.UsageTest.argumentsOrdered":343,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":460,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":3,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":8,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":288,"org.easymock.tests2.DelegateToTest.testReturnException":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":202,"org.easymock.tests.MockingTest.testPartialClassMocking":194,"org.easymock.tests.MockClassControlTest.testToString":225,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":358,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":234,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":382,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":309,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":537,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":489,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":51,"org.easymock.tests2.UsageTest.wrongArguments":337,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":475,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":263,"org.easymock.samples.ExampleTest.answerVsDelegate":278,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":217,"org.easymock.tests2.UsageConstraintsTest.testNull":485,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":199,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":404,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":459,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":230,"org.easymock.tests2.CaptureTest.testPrimitive":439,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":55,"org.easymock.tests.UsageTest.moreThanOneArgument":117,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":253,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":274,"org.easymock.tests.UsageTest.argumentsOrdered":123,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":207,"org.easymock.tests.UsageVarargTest.varargIntAccepted":171,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":531,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":541,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":304,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":321,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":156,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":31,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":526,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":469,"org.easymock.tests.ReplayStateInvalidUsageTest.times":65,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":535,"org.easymock.tests2.DependencyTest.testClassMocking":306,"org.easymock.tests2.AnswerTest.answer":417,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":141,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":479,"org.easymock.tests2.CaptureTest.testAnd":436,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":214,"org.easymock.tests2.UsageTest.strictResetToDefault":335,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":411,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":256,"org.easymock.tests2.DelegateToTest.testDelegate":435,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":211,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":30,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":249,"org.easymock.tests.LimitationsTest.mockFinalMethod":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":161,"org.easymock.tests2.DependencyTest.testClassMockingSupport":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":110,"org.easymock.tests2.CaptureTest.testCapture1_2446744":440,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":477,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":59,"org.easymock.tests.UsageThrowableTest.throwError":82,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":216,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":400,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":34,"org.easymock.samples.PartialClassMockTest.testGetArea":287,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":60,"org.easymock.tests.MockingTest.testInterfaceMocking":196,"org.easymock.tests2.CompareToTest.testLessOrEqual":534,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":153,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":387,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":235,"org.easymock.tests2.UsageTest.niceToStrict":338,"org.easymock.tests2.ThreadingTest.testChangeDefault":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":125,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":367,"org.easymock.tests2.MockBuilderTest.testCreateMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":395,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":472,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":523,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":243,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":455,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":261,"org.easymock.tests.UsageOverloadedMethodTest.overloading":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":495,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":165,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":101,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":231,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":543,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":494,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":445,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":172,"org.easymock.tests.MockClassControlTest.testEquals":229,"org.easymock.tests2.EasyMockSupportClassTest.testAll":379,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":49,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":528,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":251,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":478,"org.easymock.tests2.CaptureTest.testCaptureAll":437,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":159,"org.easymock.tests.MockNameTest.defaultName":222,"org.easymock.tests2.UsageConstraintsTest.testMatches":496,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":57,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":275,"org.easymock.samples.ExampleTest.voteForRemovals":282,"org.easymock.tests.UsageVarargTest.allKinds":180,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":160,"org.easymock.samples.BasicClassMockTest.testPrintContent":291,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":88,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":310,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":206,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":301,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":542,"org.easymock.tests2.UsageConstraintsTest.greaterThan":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":255,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":414,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":35,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":271,"org.easymock.samples.ExampleTest.voteForRemoval":279,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":415,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":352,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":218,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":510,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":406,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":27,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":151,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":334,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":452,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":201,"org.easymock.tests2.CaptureTest.testCaptureFirst":449,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":453,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":345,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":168,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":97,"org.easymock.tests2.CaptureTest.testCapture2_2446744":448,"org.easymock.tests2.UsageTest.moreThanOneArgument":336,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":142,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":374,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":179,"org.easymock.tests.GenericTest.testBridgedEquals":11,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":544,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":24,"org.easymock.tests.UsageExpectAndReturnTest.longType":93,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":450,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":157,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":252,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":502,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":190,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":250,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":272,"org.easymock.tests.UsageCallCountTest.tooManyCalls":25,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":516,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":239,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":87,"org.easymock.tests.MockingTest.testNiceClassMocking":200,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":326,"org.easymock.tests.MockingTest.testClassMocking":192,"org.easymock.tests2.UsageConstraintsTest.testContains":493,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":18,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":348,"org.easymock.tests2.UsageConstraintsTest.testFind":484,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":233,"org.easymock.tests.MockTypeTest.fromEasyMockClass":215,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":425,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":73,"org.easymock.tests.UsageExpectAndReturnTest.object":100,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":408,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":458,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":538,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":174,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":187,"org.easymock.tests.UsageTest.exactCallCountByLastCall":124,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":130,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":113,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":208,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":520,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":357,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":169,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":106,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":164,"org.easymock.tests.MockClassControlTest.testHashCode":228,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":295,"org.easymock.tests2.EasyMockSupportTest.testVerify":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":389,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":525,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":209,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":162,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":15,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":476,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":463,"org.easymock.tests.UsageVarargTest.varargCharAccepted":173,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":147,"org.easymock.tests2.UsageTest.openCallCountByLastCall":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":512,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":461,"org.easymock.tests.DefaultClassInstantiatorTest.object":265,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":14,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":185,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":390,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":241,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":467,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":294,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":412,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":33,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":227,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":240,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":107,"org.easymock.tests.ReplayStateInvalidCallsTest.times":39,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":148,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":40,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":527,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":398,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":226,"org.easymock.tests2.UsageTest.resumeIfFailure":344,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":212,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":320,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":204,"org.easymock.tests2.StubTest.stubWithReturnValue":318,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":503,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":99,"org.easymock.tests2.SerializationTest.testAllMockedMethod":508,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":140,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":530,"org.easymock.samples.SupportTest.voteForRemovals":293,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":246,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":511,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":146,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":418,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":115,"org.easymock.tests.UsageExpectAndThrowTest.object":244,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":500,"org.easymock.tests2.DelegateToTest.testWrongClass":433,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":37,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":220,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":221,"org.easymock.tests.UsageStrictMockTest.range":78,"org.easymock.samples.ConstructorCalledMockTest.testTax":285,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":323,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":457,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":245,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":369,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":122,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":262,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":515,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":29,"org.easymock.tests2.CaptureTest.testCaptureNone":444,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":183,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":427,"org.easymock.tests.UsageUnorderedTest.message":56,"org.easymock.tests.UsageVerifyTest.twoReturns":260,"org.easymock.tests.UsageVarargTest.varargByteAccepted":178,"org.easymock.tests2.ThreadingTest.testThreadSafe":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":393,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":22,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":188,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":290,"org.easymock.tests2.CaptureTest.testCapture_2617107":438,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":532,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":54,"org.easymock.tests2.UsageConstraintsTest.any":491,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":64,"org.easymock.tests2.StubTest.stub":317,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":203,"org.easymock.tests.UsageExpectAndThrowTest.longType":237,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":269,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":63,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":313,"org.easymock.tests2.SerializationTest.testClass":506,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":299,"org.easymock.tests.LimitationsTest.mockNativeMethod":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":109,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":50,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":466,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":45,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":316,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":428,"org.easymock.tests2.NameTest.nameForMocksControl":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":468,"org.easymock.tests2.MockedExceptionTest.testMockedException":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":381,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":121,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":424,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":197,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":238,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":370,"org.easymock.tests.MockingTest.testNicePartialClassMocking":195,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":405,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":464,"org.easymock.tests2.CaptureTest.testCaptureLast":443,"org.easymock.tests2.CompareToTest.testCompareEqual":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":111,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":488,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":44,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":332,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":501,"org.easymock.tests.MockingTest.testTwoMocks":193,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":41,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":242,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":342,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":505,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":431,"org.easymock.samples.ExampleTest.removeNonExistingDocument":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":471,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":61,"org.easymock.tests.UsageStrictMockTest.differentMethods":79,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":296,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":430,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":267,"org.easymock.tests2.ConstraintsToStringTest.andToString":529,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":353,"org.easymock.tests2.MockBuilderTest.testCreateMockString":375,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":223,"org.easymock.tests.UsageExpectAndThrowTest.floatType":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":383,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":420,"org.easymock.tests.UsageVerifyTest.twoThrows":259,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":392,"org.easymock.samples.ExampleTest.voteAgainstRemoval":280,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":135,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":413,"org.easymock.tests.LimitationsTest.privateConstructor":70,"org.easymock.tests2.UsageConstraintsTest.testNotNull":504,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":89,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":346,"org.easymock.tests2.UsageTest.defaultResetToNice":341,"org.easymock.samples.ExampleTest.voteAgainstRemovals":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":105,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":465,"org.easymock.tests.UsageVarargTest.differentLength":175,"org.easymock.tests2.CallbackTest.callback":509,"org.easymock.tests2.UsageConstraintsTest.equals":483,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":518,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":409,"org.easymock.tests.UsageTest.openCallCountByLastCall":120,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":480,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":53,"org.easymock.tests.UsageCallCountTest.tooFewCalls":20,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":264,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":429,"org.easymock.tests.UsageThrowableTest.throwCheckedException":86,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":517,"org.easymock.tests.MockingTest.testStrictClassMocking":191,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":13,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":331,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":470,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":327,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":330,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":422,"org.easymock.tests.ObjectMethodsTest.testHashCode":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":540,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":43,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":355,"org.easymock.tests2.NameTest.nameForNiceMock":361,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":38,"org.easymock.tests2.DependencyTest.testInterfaceMocking":308,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":539,"org.easymock.samples.ExampleTest.addDocument":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":399,"org.easymock.tests2.DelegateToTest.testStubDelegate":5,"org.easymock.tests2.AnswerTest.stubAnswer":421,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":76,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":371,"org.easymock.tests.UsageVarargTest.varargLongAccepted":177,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":134,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":108,"org.easymock.tests.UsageExpectAndReturnTest.floatType":92,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":356,"org.easymock.tests2.ConstraintsToStringTest.orToString":522,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":286,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":498,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests.UsageThrowableTest.noUpperLimit":83,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":303,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":481,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":319,"org.easymock.tests2.SerializationTest.test":507,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":441,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":266,"org.easymock.tests2.UsageConstraintsTest.testSame":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":91,"org.easymock.samples.SupportTest.addDocument":292,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":329,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":28,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":384,"org.easymock.tests.GenericTest.testPackageScope":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":129,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":302,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":198,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":26,"org.easymock.tests2.NameTest.nameForMock":359,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":102,"org.easymock.tests2.UsageStrictMockTest.differentMethods":315,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":94,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":248,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":184,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":257,"org.easymock.tests2.MockedExceptionTest.testRealException":349,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":324,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":519,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":533,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":137,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":52,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":68,"org.easymock.tests2.NameTest.nameForStrictMock":360,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":366,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":513,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":423,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":322,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":499,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":268,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":364,"org.easymock.tests2.UsageStrictMockTest.range":314,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":32,"org.easymock.tests2.UsageConstraintsTest.lessThan":7,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":298,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":133,"org.easymock.tests2.CaptureTest.testCaptureRightOne":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":388,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":426,"org.easymock.tests2.UsageConstraintsTest.testOr":487,"org.easymock.tests.UsageRangeTest.combination":254,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":402,"org.easymock.tests.UsageTest.wrongArguments":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":385,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":126,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":103,"org.easymock.tests.UsageVarargTest.varargShortAccepted":176,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":270,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":23,"org.easymock.tests2.UsageConstraintsTest.cmpTo":492,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":46,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":419,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":36,"org.easymock.tests2.CompareToTest.testLessThan":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":128,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":340,"org.easymock.tests2.CaptureTest.testCaptureFromStub":447,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":58,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":365,"org.easymock.tests.UsageTest.unexpectedCallWithArray":118,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":42,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":75,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":21,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":104,"org.easymock.tests2.CaptureTest.testCapture":536,"org.easymock.tests2.UsageConstraintsTest.constraints":482,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":77,"org.easymock.samples.ExampleTest.addAndChangeDocument":284,"org.easymock.tests2.ConstraintsToStringTest.notToString":524,"org.easymock.tests.UsageStrictMockTest.testVerify":81,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":289,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":74,"org.easymock.tests2.CompareToTest.testGreateThan":545,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":158,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":154,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":96,"org.easymock.tests.LimitationsTest.abstractClass":69,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":456,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":170}}]
