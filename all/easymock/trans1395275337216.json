[{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[5,6,7,8,9,10],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[11],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[12,13,14,15,16,17],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,0,71,1,72,73,74,75,76,77,2,78,79,80,81,82,83,84,85,86,87,88,89,4,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,14,138,139,140,141,142,143,144,145,146,147,5,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,17,211,212,213,214,215,216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[89,217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[18,30,218,32,33,34,36,37,219,38,40,44,48,220,54,57,221,67,69,80,222,3,94,103,223,224,109,225,226,110,227,228,229,230,231,14,138,139,140,141,232,233,234,145,146,147,235,236,237,166,175,238,239,240,192,193,194,241,198,199,242,243,203,204,244,245,17,246,211,247,248,212],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[19,21,52,53,54,55,57,58,59,60,61,62,63,64,249,221,250,65,66,67,68,69,251,252,70,253,254,255,79,80,82,83,84,85,86,87,256,88,222,102,257,257,258,258,122,123,124,259,228,137,160,188,189,260,191,261,214,215,216],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[19,20,21,262],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[59,263,264,265,266,267,268,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[18,20,21,26,27,270,271,28,29,11,272,30,31,218,33,34,273,274,36,219,38,39,40,41,42,43,44,45,47,48,49,50,51,220,52,55,56,60,275,276,0,71,1,72,277,73,74,75,76,77,2,278,279,78,79,80,81,82,83,84,86,280,281,3,89,217,282,283,284,4,90,91,92,285,93,286,287,94,288,289,95,96,97,98,99,290,291,292,100,101,102,293,103,104,294,105,295,296,297,298,106,107,108,224,109,225,226,110,111,112,113,114,115,116,117,118,119,299,121,123,124,300,301,125,126,302,303,304,305,131,306,307,308,132,133,309,134,310,311,312,313,135,314,315,316,317,136,318,319,320,321,137,230,231,322,323,139,141,233,234,143,144,146,147,324,325,326,327,328,235,160,329,330,161,162,331,163,332,333,334,335,164,336,337,338,339,165,340,341,342,343,167,168,169,170,171,172,173,174,344,345,346,177,347,348,349,350,351,352,178,179,180,181,182,183,184,185,186,187,188,189,353,196,197,241,198,199,354,355,356,357,358,200,201,202,244,359,360,210,246,211,247,248,212,361,362],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[363],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[6,9],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:174","sourceCode":"try {\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n} catch (final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException) {\n    net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader());\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[32,36,37,225,14,138,139,140,235,198,199,204,364,17,247],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[19,21,52,53,54,55,57,58,59,60,61,62,63,64,249,221,250,65,66,67,68,69,251,252,70,253,254,79,80,82,83,84,85,86,87,256,88,222,102,257,257,258,258,122,123,124,259,228,137,160,188,189,260,191,261,214,215,216],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[365,280,288,99],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[19,21,52,53,54,55,57,58,59,60,61,62,63,64,249,221,250,65,66,67,68,69,251,252,70,253,254,255,79,80,82,83,84,85,86,87,256,88,222,102,257,257,258,258,122,123,124,259,228,137,160,188,189,260,191,261,214,215,216],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[19,21,52,53,54,55,57,58,59,60,61,62,63,64,221,250,65,66,67,68,69,251,70,79,80,82,83,84,85,86,87,256,88,222,366,102,257,257,258,258,122,123,124,259,228,137,160,239,188,189,260,190,191,192,193,194,195,261,214,215,216],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[218,32,36,37,12,367,13,368,231,14,138,139,140,15,16,369,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[0,1,277,73,74,77,2,278,279],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[18,19,20,22,23,24,25,26,370,371,27,270,271,28,29,11,272,30,31,218,32,33,34,273,274,35,36,37,219,38,39,40,41,42,43,44,45,46,47,48,49,50,220,52,53,54,55,56,57,58,59,60,61,62,63,275,276,64,221,65,66,67,68,69,251,70,0,71,1,72,277,73,74,75,76,77,2,278,279,78,79,80,81,82,83,84,85,86,87,256,88,222,280,281,3,89,217,282,283,284,4,90,372,91,92,285,93,286,287,94,288,289,95,96,97,98,99,290,291,292,100,101,102,293,103,373,104,294,105,374,295,296,297,298,106,107,223,224,109,225,226,110,112,114,115,116,117,119,299,257,257,258,258,122,375,376,377,300,301,125,126,302,127,128,129,130,378,303,304,305,131,306,307,308,132,133,309,134,310,311,312,313,135,314,315,316,317,136,318,319,320,321,137,230,231,14,138,322,323,139,140,141,379,380,381,233,324,325,326,327,328,235,160,329,330,161,162,331,163,332,333,334,335,164,336,337,338,339,165,340,341,342,343,237,166,167,168,169,170,171,172,173,174,344,345,382,383,384,347,348,349,350,351,352,187,188,260,241,198,199,354,355,356,357,358,200,242,201,202,243,203,204,385,386,387,205,206,207,208,209,244,388,359,360,245,17,246,211,247,248,212,261,214,215,216,389,361,362,390,391],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[392,393,394],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[26,27,271,11,272,220,115,200],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[290],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[6,7,8,9,10],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","type":"type","this":"this"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[282,98,106,187],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":89,"org.easymock.tests2.UsageTest.argumentsOrdered":37,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":230,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":49,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":34,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":113,"org.easymock.tests2.DelegateToTest.testReturnException":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":348,"org.easymock.tests.MockingTest.testPartialClassMocking":214,"org.easymock.tests.MockClassControlTest.testToString":192,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":329,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":264,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":90,"org.easymock.tests2.UsageTest.wrongArguments":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":129,"org.easymock.samples.ExampleTest.answerVsDelegate":115,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":228,"org.easymock.tests2.UsageConstraintsTest.testNull":282,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":82,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":48,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":197,"org.easymock.tests2.CaptureTest.testPrimitive":72,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":306,"org.easymock.tests.UsageTest.moreThanOneArgument":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":343,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":356,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":389,"org.easymock.tests.UsageTest.argumentsOrdered":140,"org.easymock.tests.UsageVarargTest.varargIntAccepted":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":324,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":64,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":268,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":328,"org.easymock.tests.ReplayStateInvalidUsageTest.times":156,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":18,"org.easymock.tests2.AnswerTest.answer":26,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":25,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":31,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":355,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":43,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":359,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":391,"org.easymock.tests2.DelegateToTest.testDelegate":295,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":351,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":209,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":237,"org.easymock.tests2.CaptureTest.testCapture1_2446744":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":23,"org.easymock.tests.UsageThrowableTest.throwError":167,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":358,"org.easymock.samples.PartialClassMockTest.testGetArea":122,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":151,"org.easymock.tests2.CompareToTest.testLessOrEqual":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":325,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":376,"org.easymock.tests2.UsageTest.niceToStrict":33,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":330,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":65,"org.easymock.tests2.MockBuilderTest.testCreateMock":69,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":12,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":335,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":44,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":387,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":127,"org.easymock.tests.UsageOverloadedMethodTest.overloading":126,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":202,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":286,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":314,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":93,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":77,"org.easymock.tests2.EasyMockSupportClassTest.testAll":60,"org.easymock.tests.MockClassControlTest.testEquals":196,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":189,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":341,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":367,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":253,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":24,"org.easymock.tests2.CaptureTest.testCaptureAll":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":207,"org.easymock.tests.MockNameTest.defaultName":236,"org.easymock.tests2.UsageConstraintsTest.testMatches":287,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":357,"org.easymock.samples.ExampleTest.voteForRemovals":119,"org.easymock.tests.UsageVarargTest.allKinds":187,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":241,"org.easymock.samples.BasicClassMockTest.testPrintContent":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":208,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":173,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":352,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":374,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":269,"org.easymock.tests2.UsageConstraintsTest.greaterThan":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":388,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":222,"org.easymock.samples.ExampleTest.voteForRemoval":116,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":10,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":85,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":137,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":30,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":41,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":347,"org.easymock.tests2.CaptureTest.testCaptureFirst":78,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":42,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":38,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":311,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":106,"org.easymock.tests2.UsageTest.moreThanOneArgument":218,"org.easymock.tests2.CaptureTest.testCapture2_2446744":279,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":251,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":186,"org.easymock.tests.GenericTest.testBridgedEquals":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":146,"org.easymock.tests.UsageExpectAndReturnTest.longType":133,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":205,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":342,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":98,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":354,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":380,"org.easymock.tests.UsageCallCountTest.tooManyCalls":147,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":233,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":312,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":172,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":53,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":142,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":249,"org.easymock.tests2.UsageConstraintsTest.testContains":285,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":102,"org.easymock.tests2.UsageConstraintsTest.testFind":217,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":302,"org.easymock.tests.MockTypeTest.fromEasyMockClass":227,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":245,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":272,"org.easymock.tests.UsageExpectAndReturnTest.object":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":47,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":265,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":177,"org.easymock.tests.UsageTest.exactCallCountByLastCall":141,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":300,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":361,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":369,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":318,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":201,"org.easymock.tests.MockClassControlTest.testHashCode":195,"org.easymock.tests2.EasyMockSupportTest.testVerify":51,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":386,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":22,"org.easymock.tests.UsageVarargTest.varargCharAccepted":181,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":108,"org.easymock.tests2.UsageTest.openCallCountByLastCall":273,"org.easymock.tests.DefaultClassInstantiatorTest.object":5,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":50,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":385,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":175,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":364,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":170,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":194,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":256,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":332,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":319,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":63,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":193,"org.easymock.tests2.UsageTest.resumeIfFailure":219,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":350,"org.easymock.tests2.StubTest.stubWithReturnValue":276,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":313,"org.easymock.tests2.SerializationTest.testAllMockedMethod":21,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":382,"org.easymock.samples.SupportTest.voteForRemovals":112,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":13,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":337,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":262,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":383,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":370,"org.easymock.tests.UsageExpectAndThrowTest.object":164,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":96,"org.easymock.tests2.DelegateToTest.testWrongClass":105,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":344,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":345,"org.easymock.tests.UsageStrictMockTest.range":247,"org.easymock.samples.ConstructorCalledMockTest.testTax":257,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":336,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":67,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":158,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":139,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":128,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":15,"org.easymock.tests2.CaptureTest.testCaptureNone":76,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":377,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":392,"org.easymock.tests.UsageUnorderedTest.message":235,"org.easymock.tests.UsageVerifyTest.twoReturns":199,"org.easymock.tests.UsageVarargTest.varargByteAccepted":185,"org.easymock.tests2.ThreadingTest.testThreadSafe":296,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":144,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":123,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":238,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":368,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":131,"org.easymock.tests2.UsageConstraintsTest.any":91,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":155,"org.easymock.tests2.StubTest.stub":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":381,"org.easymock.tests.UsageExpectAndThrowTest.longType":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":349,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":154,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":109,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":103,"org.easymock.tests2.SerializationTest.testClass":19,"org.easymock.tests.LimitationsTest.mockNativeMethod":160,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":260,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":321,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":255,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":110,"org.easymock.tests2.MockedExceptionTest.testMockedException":101,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":323,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":216,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":331,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":79,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":68,"org.easymock.tests.MockingTest.testNicePartialClassMocking":215,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":84,"org.easymock.tests2.CaptureTest.testCaptureLast":75,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":263,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":166,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":58,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":97,"org.easymock.tests.MockingTest.testTwoMocks":261,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":307,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":334,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":36,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":291,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":394,"org.easymock.samples.ExampleTest.removeNonExistingDocument":120,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":152,"org.easymock.tests.UsageStrictMockTest.differentMethods":248,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":393,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":7,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":298,"org.easymock.tests2.MockBuilderTest.testCreateMockString":70,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":190,"org.easymock.tests.UsageExpectAndThrowTest.floatType":161,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":94,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":27,"org.easymock.tests.UsageVerifyTest.twoThrows":198,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":62,"org.easymock.samples.ExampleTest.voteAgainstRemoval":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":375,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests2.UsageConstraintsTest.testNotNull":290,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":174,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":100,"org.easymock.tests2.UsageTest.defaultResetToNice":35,"org.easymock.samples.ExampleTest.voteAgainstRemovals":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":136,"org.easymock.tests.UsageVarargTest.differentLength":240,"org.easymock.tests2.CallbackTest.callback":220,"org.easymock.tests.UsageTest.openCallCountByLastCall":322,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":305,"org.easymock.tests.UsageCallCountTest.tooFewCalls":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":55,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":130,"org.easymock.tests.UsageThrowableTest.throwCheckedException":171,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":16,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":57,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":301,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":54,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":56,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":271,"org.easymock.tests.ObjectMethodsTest.testHashCode":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":267,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":107,"org.easymock.tests2.DependencyTest.testInterfaceMocking":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":266,"org.easymock.samples.ExampleTest.addDocument":118,"org.easymock.tests2.DelegateToTest.testStubDelegate":294,"org.easymock.tests2.AnswerTest.stubAnswer":270,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":246,"org.easymock.tests.UsageVarargTest.varargLongAccepted":184,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":212,"org.easymock.tests.UsageExpectAndReturnTest.floatType":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":59,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":258,"org.easymock.tests.UsageThrowableTest.noUpperLimit":168,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":289,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":281,"org.easymock.tests2.SerializationTest.test":20,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":73,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":6,"org.easymock.tests2.UsageConstraintsTest.testSame":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":308,"org.easymock.samples.SupportTest.addDocument":111,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":153,"org.easymock.tests.GenericTest.testPackageScope":188,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":390,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":315,"org.easymock.tests2.UsageStrictMockTest.differentMethods":226,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":339,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":360,"org.easymock.tests2.MockedExceptionTest.testRealException":293,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":229,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":224,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":304,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":11,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":83,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":8,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":95,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":221,"org.easymock.tests2.UsageStrictMockTest.range":225,"org.easymock.tests2.UsageConstraintsTest.lessThan":292,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":40,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.UsageConstraintsTest.testOr":284,"org.easymock.tests.UsageRangeTest.combination":244,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":80,"org.easymock.tests.UsageTest.wrongArguments":138,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":316,"org.easymock.tests.UsageVarargTest.varargShortAccepted":183,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":9,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":145,"org.easymock.tests2.UsageConstraintsTest.cmpTo":92,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":371,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":274,"org.easymock.tests2.CaptureTest.testCaptureFromStub":278,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":149,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":250,"org.easymock.tests.UsageTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":143,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":317,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.samples.ExampleTest.addAndChangeDocument":299,"org.easymock.tests.UsageStrictMockTest.testVerify":213,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":121,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":206,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":74,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":254,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":310,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":327,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":45}}]
