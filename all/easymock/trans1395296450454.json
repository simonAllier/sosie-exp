[{"position":"org.easymock.internal.MockBuilder:89","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[5,6],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[8,9,10,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","args":"args","cstr":"cstr"}},{"position":"org.easymock.internal.MocksControl:136","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,8,10,47,48,49,50,51,52,53,54,55,56,0,1,57,58,59,60,61,62,63,64,65,66,67,68,69,70,4,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,112,113,113,114,115,116],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[117,118,119,120,121,122,123,19,22,32,38,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,6,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,41,42,43,44,185,45,46,8,9,47,48,186,49,50,51,53,0,1,57,187,188,189,190,191,192,60,61,62,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,65,68,4,72,73,76,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,81,82,83,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,87,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,89,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,98,100,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,112,112,113,113,353,354,355,356,357,358,359,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"control"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[360,361,362,363,364,365],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[175,176],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[131,134,163,169,170,175,211,218,219,221,222,223,224,225,242,243,279,310,323,348,349,350,351,352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[91,95],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[360,361,362,363,364,365],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[8,74,367],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[368,158,159,213,362,369,233,234,269,270,363,312,370,323],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[22],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[371,372,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,46,373,8,65,66,374,375,376,74,377,378,112,113],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[126,150,368,153,154,157,158,159,161,52,56,194,197,199,200,202,203,67,71,72,73,76,77,209,212,213,214,216,379,380,381,382,383,384,385,386,387,229,362,369,233,234,235,388,389,390,391,269,270,308,363,311,312,313,323],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[392,323],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":127,"org.easymock.tests2.UsageTest.argumentsOrdered":159,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":229,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":205,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":154,"org.easymock.tests2.DelegateToTest.testReturnException":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":276,"org.easymock.tests.MockingTest.testPartialClassMocking":81,"org.easymock.tests.MockClassControlTest.testToString":104,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":26,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":244,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":208,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":348,"org.easymock.tests2.UsageTest.wrongArguments":368,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":390,"org.easymock.samples.ExampleTest.answerVsDelegate":355,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":111,"org.easymock.tests2.UsageConstraintsTest.testNull":129,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":49,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":109,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":204,"org.easymock.tests2.CaptureTest.testPrimitive":165,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":352,"org.easymock.tests.UsageTest.moreThanOneArgument":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":263,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":295,"org.easymock.tests.UsageTest.argumentsOrdered":234,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":298,"org.easymock.tests.UsageVarargTest.varargIntAccepted":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":221,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":67,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":71,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":225,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests2.DependencyTest.testClassMocking":63,"org.easymock.tests2.AnswerTest.answer":187,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":382,"org.easymock.tests2.CaptureTest.testAnd":162,"org.easymock.tests2.UsageTest.strictResetToDefault":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":56,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":273,"org.easymock.tests2.DelegateToTest.testDelegate":123,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":259,"org.easymock.tests.LimitationsTest.mockFinalMethod":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":387,"org.easymock.tests2.DependencyTest.testClassMockingSupport":64,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":303,"org.easymock.tests2.CaptureTest.testCapture1_2446744":166,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":380,"org.easymock.tests.UsageThrowableTest.throwError":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":297,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":40,"org.easymock.samples.PartialClassMockTest.testGetArea":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":222,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":240,"org.easymock.tests2.UsageTest.niceToStrict":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":245,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":4,"org.easymock.tests2.MockBuilderTest.testCreateMock":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":35,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":253,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":360,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":200,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":388,"org.easymock.tests.UsageOverloadedMethodTest.overloading":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":31,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":138,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":326,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":339,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":137,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":171,"org.easymock.tests.MockClassControlTest.testEquals":108,"org.easymock.tests2.EasyMockSupportClassTest.testAll":19,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":99,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":385,"org.easymock.tests2.CaptureTest.testCaptureAll":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":381,"org.easymock.tests2.UsageConstraintsTest.testMatches":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":296,"org.easymock.samples.ExampleTest.voteForRemovals":358,"org.easymock.tests.UsageVarargTest.allKinds":290,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":268,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":386,"org.easymock.samples.BasicClassMockTest.testPrintContent":115,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":321,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":209,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":280,"org.easymock.tests2.UsageConstraintsTest.greaterThan":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":272,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":57,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":96,"org.easymock.samples.ExampleTest.voteForRemoval":356,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":177,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":58,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":52,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":150,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":89,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":197,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":275,"org.easymock.tests2.CaptureTest.testCaptureFirst":175,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":198,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":335,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":179,"org.easymock.tests2.CaptureTest.testCapture2_2446744":174,"org.easymock.tests2.UsageTest.moreThanOneArgument":152,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":76,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":289,"org.easymock.tests.GenericTest.testBridgedEquals":101,"org.easymock.tests.UsageExpectAndReturnTest.longType":331,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":383,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":262,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":145,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":217,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":293,"org.easymock.tests.UsageCallCountTest.tooManyCalls":267,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":320,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":42,"org.easymock.tests.MockingTest.testNiceClassMocking":84,"org.easymock.tests.MockingTest.testClassMocking":79,"org.easymock.tests2.UsageConstraintsTest.testContains":136,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":3,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":62,"org.easymock.tests2.UsageConstraintsTest.testFind":128,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":238,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":182,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":308,"org.easymock.tests.UsageExpectAndReturnTest.object":338,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":203,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":285,"org.easymock.tests.UsageTest.exactCallCountByLastCall":235,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":242,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":66,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":281,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":325,"org.easymock.tests.MockClassControlTest.testHashCode":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":29,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":306,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":379,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":7,"org.easymock.tests.UsageVarargTest.varargCharAccepted":284,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":210,"org.easymock.tests2.UsageTest.openCallCountByLastCall":155,"org.easymock.tests.DefaultClassInstantiatorTest.object":90,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":206,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":305,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":30,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":318,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":106,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":0,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":250,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":345,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":226,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":38,"org.easymock.tests2.UsageTest.resumeIfFailure":160,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":110,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":278,"org.easymock.tests2.StubTest.stubWithReturnValue":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":376,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":337,"org.easymock.tests2.SerializationTest.testAllMockedMethod":10,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":291,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":367,"org.easymock.samples.SupportTest.voteForRemovals":353,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":361,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":256,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":11,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":292,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":188,"org.easymock.tests.UsageExpectAndThrowTest.object":254,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":143,"org.easymock.tests2.DelegateToTest.testWrongClass":121,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":219,"org.easymock.samples.ConstructorCalledMockTest.testTax":112,"org.easymock.tests.UsageStrictMockTest.range":312,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":255,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":16,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":389,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":364,"org.easymock.tests2.CaptureTest.testCaptureNone":170,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":241,"org.easymock.tests.UsageUnorderedTest.message":323,"org.easymock.tests.UsageVerifyTest.twoReturns":270,"org.easymock.tests.UsageVarargTest.varargByteAccepted":288,"org.easymock.tests2.ThreadingTest.testThreadSafe":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":33,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":266,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":114,"org.easymock.tests2.CaptureTest.testCapture_2617107":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":351,"org.easymock.tests2.UsageConstraintsTest.any":134,"org.easymock.tests2.StubTest.stub":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":228,"org.easymock.tests.UsageExpectAndThrowTest.longType":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":277,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":94,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":212,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":216,"org.easymock.tests.LimitationsTest.mockNativeMethod":87,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":100,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":347,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":215,"org.easymock.tests2.MockedExceptionTest.testMockedException":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":21,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":232,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":248,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":47,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":73,"org.easymock.tests.MockingTest.testNicePartialClassMocking":82,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":51,"org.easymock.tests2.CaptureTest.testCaptureLast":169,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":304,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":132,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":46,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":144,"org.easymock.tests.MockingTest.testTwoMocks":80,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":373,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":252,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":158,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":148,"org.easymock.tests.UsageStrictMockTest.differentMethods":313,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":92,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":178,"org.easymock.tests2.MockBuilderTest.testCreateMockString":77,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":23,"org.easymock.tests.UsageExpectAndThrowTest.floatType":246,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":18,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":190,"org.easymock.tests.UsageVerifyTest.twoThrows":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":32,"org.easymock.samples.ExampleTest.voteAgainstRemoval":357,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":239,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":1,"org.easymock.tests.LimitationsTest.privateConstructor":86,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":372,"org.easymock.tests2.UsageConstraintsTest.testNotNull":147,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":322,"org.easymock.tests2.UsageTest.defaultResetToNice":157,"org.easymock.samples.ExampleTest.voteAgainstRemovals":354,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":343,"org.easymock.tests2.CallbackTest.callback":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":54,"org.easymock.tests.UsageTest.openCallCountByLastCall":231,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":124,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":350,"org.easymock.tests.UsageCallCountTest.tooFewCalls":265,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":391,"org.easymock.tests.UsageThrowableTest.throwCheckedException":319,"org.easymock.tests.MockingTest.testStrictClassMocking":78,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":365,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":45,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":243,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":43,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":185,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":192,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":180,"org.easymock.tests2.DependencyTest.testInterfaceMocking":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":34,"org.easymock.tests2.DelegateToTest.testStubDelegate":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":39,"org.easymock.tests2.AnswerTest.stubAnswer":191,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":310,"org.easymock.tests.UsageVarargTest.varargLongAccepted":287,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":314,"org.easymock.tests.UsageExpectAndReturnTest.floatType":330,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":346,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":65,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":113,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":141,"org.easymock.tests.UsageThrowableTest.noUpperLimit":316,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":125,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":12,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":167,"org.easymock.tests2.SerializationTest.test":9,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":91,"org.easymock.tests2.UsageConstraintsTest.testSame":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":24,"org.easymock.tests.GenericTest.testPackageScope":98,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":340,"org.easymock.tests2.UsageStrictMockTest.differentMethods":214,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":378,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":55,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":332,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":274,"org.easymock.tests2.MockedExceptionTest.testRealException":193,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":211,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":349,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":70,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":50,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":15,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":392,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":142,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":68,"org.easymock.tests2.UsageStrictMockTest.range":213,"org.easymock.tests2.UsageConstraintsTest.lessThan":149,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":366,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":2,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":196,"org.easymock.tests2.CaptureTest.testCaptureRightOne":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":28,"org.easymock.tests2.UsageConstraintsTest.testOr":131,"org.easymock.tests.UsageRangeTest.combination":271,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":48,"org.easymock.tests.UsageTest.wrongArguments":369,"org.easymock.tests2.MockBuilderTest.testWithConstructor":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":25,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":341,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":95,"org.easymock.tests.UsageVarargTest.varargShortAccepted":286,"org.easymock.tests2.UsageConstraintsTest.cmpTo":135,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":189,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests2.CaptureTest.testCaptureFromStub":173,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":69,"org.easymock.tests.UsageTest.unexpectedCallWithArray":362,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":363,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":377,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":342,"org.easymock.tests2.UsageConstraintsTest.constraints":126,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":311,"org.easymock.samples.ExampleTest.addAndChangeDocument":359,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":309,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":384,"org.easymock.tests2.CompareToTest.testGreateThan":5,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":168,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":223,"org.easymock.tests.LimitationsTest.abstractClass":85,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":224,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":201,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":282}}]
