[{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[21,22,23,24],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,71,72,72],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[73,74,75,76,77,78,79,80,81,82,21,22,23,83,1,2,3,4,84,85,86,87,88,89,5,6,90,91,92,93,94,95,96,97,25,98,99,100,101,102,103,104,105,106,30,107,108,7,8,9,10,11,12,13,14,16,109,110,111,112,113,114,115,116,17,18,117,118,19,20,119,31,32,120,33,34,35,37,38,40,121,122,123,124,125,43,44,46,47,126,127,128,48,51,52,56,57,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,59,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,60,61,200,201,202,203,204,205,64,65,66,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,67,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[23,25,26,31,32,33,34,35,37,41,42,45,59,283,284,285,286,60,61,287,67,68,69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[288],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[289,290,184,291,292,258],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[73,74,75,76,77,78,79,80,81,82,21,22,23,83,1,2,3,4,84,85,86,87,88,89,5,6,90,91,92,93,94,95,96,97,25,98,99,100,101,102,103,104,105,106,30,107,108,7,8,9,10,11,12,13,14,16,109,110,111,112,113,114,115,116,17,18,117,118,19,20,119,31,32,120,33,34,35,37,38,40,121,122,123,124,125,43,44,46,47,126,127,128,48,51,52,56,57,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,59,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,60,61,200,201,202,203,204,205,64,65,66,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,67,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[293],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[1,3,5,7,8,10,12,13,15,17,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[294,250],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:74","sourceCode":"return (this.org.easymock.internal.Invocation.equals(org.easymock.internal.ExpectedInvocation.org.easymock.internal.Invocation)) && ((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","type":"CtReturnImpl"},"failures":[102,138,295,296,185,250,262,273,274,275],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[289,290,184,291,292,258],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[104,132,138,139,184,187,297,250,258,259,262,263,274,275],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[298,299,300,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[302,303,304,305,71,72],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[7,14,112,119],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"prefix"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[99,103,104,114,129,141,306,307,172,186,187,308,309,250,256,264,274,275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[21,22,1,2,87,88,5,91,92,93,94,310,99,311,101,102,103,104,105,106,8,10,12,13,19,32,34,40,121,122,123,125,126,127,128,312,51,53,54,129,130,131,133,134,135,136,140,141,313,314,315,316,317,318,319,320,321,322,323,142,143,144,145,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,177,178,179,180,181,183,185,186,187,188,189,191,192,193,194,195,196,197,198,61,200,201,202,203,204,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,250,251,252,253,254,255,256,257,260,261,264,324,325,326,327,266,267,273,274,275,328,329,68,69,330,331,276,277,278,279,280,281,282],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[315,321,332,333],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[335,73,74,75,76,77,336,78,79,80,81,82,21,22,23,83,1,2,3,4,84,85,86,87,88,89,5,6,90,91,92,337,338,93,94,95,339,340,341,342,343,310,344,345,346,347,348,349,96,97,25,98,99,350,351,352,353,354,311,355,356,357,358,359,360,100,101,102,103,104,105,106,361,362,288,26,363,364,27,365,366,367,368,369,370,371,372,373,28,374,375,376,377,378,29,379,380,30,381,382,383,384,385,386,387,388,389,107,108,7,8,390,9,10,11,12,13,14,15,16,109,110,111,112,113,114,115,116,17,18,117,391,118,19,20,119,31,32,120,33,34,35,36,392,37,302,393,38,39,40,41,394,395,121,122,123,124,125,42,43,44,45,396,397,46,47,398,126,127,399,400,128,312,48,303,49,50,401,402,51,52,53,403,54,404,405,55,56,305,57,129,130,131,132,133,134,135,136,137,138,139,140,141,313,314,315,316,317,318,319,406,320,321,322,323,407,408,142,143,144,409,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,59,293,410,411,412,295,296,413,414,170,171,172,173,174,175,415,416,417,418,419,420,421,422,176,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,177,178,179,180,181,439,440,441,442,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,283,199,443,444,445,284,285,286,0,60,61,62,287,200,201,202,203,204,334,205,446,447,448,63,64,65,449,66,450,451,452,206,207,208,209,210,211,453,454,455,456,457,458,459,460,461,462,463,464,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,465,237,238,466,239,240,241,242,243,244,245,246,247,248,249,467,308,309,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,250,251,252,253,254,255,492,493,67,494,256,257,258,259,260,261,262,263,264,324,495,325,326,496,265,497,327,266,267,268,269,270,271,272,332,498,499,333,500,501,273,274,275,328,329,68,69,330,70,331,71,72,276,277,278,279,280,281,502,282],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[96,97,25,98,127,179,206,207,208,209,210,211,213],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[111],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[335,73,74,75,76,77,336,78,79,80,81,82,21,22,23,1,2,3,4,84,85,86,87,88,89,5,6,90,91,92,337,338,93,94,95,339,340,341,342,343,310,344,345,346,347,348,349,96,97,25,98,99,350,351,352,353,354,311,355,356,357,358,359,360,100,101,102,103,104,105,106,361,362,288,26,363,364,27,365,366,367,368,369,370,371,372,373,28,374,375,376,377,378,29,379,380,30,381,383,387,388,389,107,108,7,8,390,9,10,11,12,13,14,15,16,109,110,111,112,113,114,115,116,17,18,117,391,118,19,20,119,31,32,120,33,34,35,36,392,37,302,393,38,39,40,41,394,395,121,122,123,124,125,42,43,44,45,397,46,47,126,127,399,400,128,312,48,49,50,402,51,52,53,54,405,55,56,57,129,130,131,132,133,134,135,136,137,138,139,140,141,313,314,315,316,317,318,319,406,320,321,322,323,407,408,142,143,144,409,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,59,293,410,411,412,295,296,413,414,170,171,172,173,174,175,416,417,418,419,420,421,422,176,423,424,425,426,427,428,429,431,432,433,434,435,436,438,177,178,179,180,181,439,440,441,442,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,283,199,443,444,445,284,285,286,0,60,61,62,287,200,201,202,203,204,334,205,446,447,448,63,64,65,449,66,450,451,452,206,207,208,209,210,211,453,456,457,458,459,460,461,462,463,464,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,465,237,238,466,239,240,241,242,243,244,245,246,247,248,249,467,308,309,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,250,251,252,253,254,255,492,493,67,494,256,257,258,259,260,261,262,263,264,324,495,325,326,496,265,497,327,266,267,268,269,270,271,272,332,498,499,333,500,501,273,274,275,328,329,68,69,330,70,331,71,71,72,72,276,277,278,279,280,281,502,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.EasyMockProperties.PREFIX"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[21,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":8,"org.easymock.tests2.UsageTest.argumentsOrdered":139,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":256,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":478,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":134,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":330,"org.easymock.tests2.DelegateToTest.testReturnException":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":207,"org.easymock.tests.MockingTest.testPartialClassMocking":64,"org.easymock.tests.MockClassControlTest.testToString":443,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":335,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":487,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":150,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":27,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":312,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":177,"org.easymock.tests2.UsageTest.wrongArguments":132,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":148,"org.easymock.samples.ExampleTest.answerVsDelegate":277,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":458,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":451,"org.easymock.tests2.UsageConstraintsTest.testNull":10,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":33,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":286,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":321,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":169,"org.easymock.tests.UsageTest.moreThanOneArgument":257,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":202,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":412,"org.easymock.tests.UsageTest.argumentsOrdered":263,"org.easymock.tests.UsageVarargTest.varargIntAccepted":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":483,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":251,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":48,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":385,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":359,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":470,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":255,"org.easymock.tests.ReplayStateInvalidUsageTest.times":426,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":310,"org.easymock.tests2.DependencyTest.testClassMocking":399,"org.easymock.tests2.AnswerTest.answer":92,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":485,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":82,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":455,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":130,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":401,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":201,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":317,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":414,"org.easymock.tests2.DelegateToTest.testDelegate":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":165,"org.easymock.tests.LimitationsTest.mockFinalMethod":494,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":272,"org.easymock.tests2.DependencyTest.testClassMockingSupport":400,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":334,"org.easymock.tests2.CaptureTest.testCapture1_2446744":84,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":80,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":421,"org.easymock.tests.UsageThrowableTest.throwError":191,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":457,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":415,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":380,"org.easymock.samples.PartialClassMockTest.testGetArea":70,"org.easymock.tests.MockingTest.testInterfaceMocking":449,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":252,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":410,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":501,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":151,"org.easymock.tests2.UsageTest.niceToStrict":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":51,"org.easymock.tests2.MockBuilderTest.testCreateMock":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":376,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":159,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":289,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":318,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":454,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":464,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":244,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":146,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":298,"org.easymock.tests.UsageOverloadedMethodTest.overloading":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":378,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":112,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":225,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":327,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":111,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":89,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":465,"org.easymock.tests2.EasyMockSupportClassTest.testAll":26,"org.easymock.tests.MockClassControlTest.testEquals":285,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":61,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":167,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":58,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":270,"org.easymock.tests.MockNameTest.defaultName":461,"org.easymock.tests2.UsageConstraintsTest.testMatches":113,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":419,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":203,"org.easymock.samples.ExampleTest.voteForRemovals":281,"org.easymock.tests.UsageVarargTest.allKinds":243,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":273,"org.easymock.samples.BasicClassMockTest.testPrintContent":69,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":271,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":197,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":100,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":211,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":356,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":437,"org.easymock.tests2.UsageConstraintsTest.greaterThan":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":363,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":173,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":41,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":438,"org.easymock.samples.ExampleTest.voteForRemoval":278,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":394,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":122,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":459,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":36,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":129,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":59,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":315,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":206,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":408,"org.easymock.tests2.CaptureTest.testCaptureFirst":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":316,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":141,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":497,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":221,"org.easymock.tests2.UsageTest.moreThanOneArgument":131,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":124,"org.easymock.tests2.CaptureTest.testCapture2_2446744":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":486,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":56,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":242,"org.easymock.tests.GenericTest.testBridgedEquals":287,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":308,"org.easymock.tests.UsageExpectAndReturnTest.longType":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":268,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":168,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":439,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":391,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":166,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":441,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":200,"org.easymock.tests.UsageCallCountTest.tooManyCalls":309,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":377,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":196,"org.easymock.tests.MockingTest.testNiceClassMocking":452,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":43,"org.easymock.tests.MockingTest.testClassMocking":448,"org.easymock.tests2.UsageConstraintsTest.testContains":110,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":245,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":25,"org.easymock.tests2.UsageConstraintsTest.testFind":9,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":267,"org.easymock.tests.MockTypeTest.fromEasyMockClass":456,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":182,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":78,"org.easymock.tests.UsageExpectAndReturnTest.object":224,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":320,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":238,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":333,"org.easymock.tests.UsageTest.exactCallCountByLastCall":264,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":300,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":416,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":381,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":230,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":234,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":325,"org.easymock.tests.MockClassControlTest.testHashCode":284,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":351,"org.easymock.tests2.EasyMockSupportTest.testVerify":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":371,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":296,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":463,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":79,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":83,"org.easymock.tests.UsageVarargTest.varargCharAccepted":237,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":430,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":491,"org.easymock.tests2.UsageTest.openCallCountByLastCall":135,"org.easymock.tests.DefaultClassInstantiatorTest.object":431,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":462,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":498,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":372,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":350,"org.easymock.tests2.ConstraintsToStringTest.anyToString":294,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":445,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":39,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":231,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":440,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":29,"org.easymock.tests2.UsageTest.resumeIfFailure":140,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":453,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":209,"org.easymock.tests2.StubTest.stubWithReturnValue":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":403,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":118,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":223,"org.easymock.tests2.SerializationTest.testAllMockedMethod":23,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":484,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":290,"org.easymock.samples.SupportTest.voteForRemovals":329,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":162,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":490,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":337,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":418,"org.easymock.tests.UsageExpectAndThrowTest.object":160,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":18,"org.easymock.tests2.DelegateToTest.testWrongClass":144,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":171,"org.easymock.tests.UsageStrictMockTest.range":187,"org.easymock.samples.ConstructorCalledMockTest.testTax":71,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":388,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":406,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":161,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":53,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":428,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":147,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":291,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":411,"org.easymock.tests2.CaptureTest.testCaptureNone":88,"org.easymock.tests.UsageUnorderedTest.message":250,"org.easymock.tests.UsageVerifyTest.twoReturns":275,"org.easymock.tests.UsageVarargTest.varargByteAccepted":241,"org.easymock.tests2.ThreadingTest.testThreadSafe":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":374,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":249,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":500,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":68,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":488,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":180,"org.easymock.tests2.UsageConstraintsTest.any":16,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":425,"org.easymock.tests2.StubTest.stub":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":489,"org.easymock.tests.UsageExpectAndThrowTest.longType":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":208,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":435,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":424,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":103,"org.easymock.tests2.SerializationTest.testClass":21,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":311,"org.easymock.tests.LimitationsTest.mockNativeMethod":67,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":233,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":341,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":106,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":503,"org.easymock.tests2.NameTest.nameForMocksControl":76,"org.easymock.tests2.MockedExceptionTest.testMockedException":97,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":364,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":154,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":66,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":336,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":31,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":54,"org.easymock.tests.MockingTest.testNicePartialClassMocking":65,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":35,"org.easymock.tests2.CaptureTest.testCaptureLast":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":339,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":205,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":47,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":13,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":117,"org.easymock.tests.MockingTest.testTwoMocks":63,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":214,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":158,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":138,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":20,"org.easymock.samples.ExampleTest.removeNonExistingDocument":502,"org.easymock.tests.UsageStrictMockTest.differentMethods":188,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":352,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":433,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":123,"org.easymock.tests2.MockBuilderTest.testCreateMockString":57,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":283,"org.easymock.tests.UsageExpectAndThrowTest.floatType":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":365,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":288,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":93,"org.easymock.tests.UsageVerifyTest.twoThrows":274,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":382,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":28,"org.easymock.samples.ExampleTest.voteAgainstRemoval":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":479,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":293,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":40,"org.easymock.tests.LimitationsTest.privateConstructor":493,"org.easymock.tests2.UsageConstraintsTest.testNotNull":19,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":96,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":198,"org.easymock.tests2.UsageTest.defaultResetToNice":137,"org.easymock.samples.ExampleTest.voteAgainstRemovals":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":229,"org.easymock.tests.UsageVarargTest.differentLength":466,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":340,"org.easymock.tests2.CallbackTest.callback":99,"org.easymock.tests2.UsageConstraintsTest.equals":390,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":302,"org.easymock.tests.UsageTest.openCallCountByLastCall":260,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":179,"org.easymock.tests.UsageCallCountTest.tooFewCalls":247,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":45,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":149,"org.easymock.tests.UsageThrowableTest.throwCheckedException":195,"org.easymock.tests.MockingTest.testStrictClassMocking":447,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":292,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":46,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":213,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":344,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":427,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":397,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":95,"org.easymock.tests.ObjectMethodsTest.testHashCode":499,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":125,"org.easymock.tests2.NameTest.nameForNiceMock":75,"org.easymock.tests2.DependencyTest.testInterfaceMocking":128,"org.easymock.samples.ExampleTest.addDocument":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":375,"org.easymock.tests2.DelegateToTest.testStubDelegate":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.AnswerTest.stubAnswer":94,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":185,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":404,"org.easymock.tests.UsageVarargTest.varargLongAccepted":240,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":477,"org.easymock.tests.UsageExpectAndReturnTest.floatType":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":232,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":30,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":72,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":496,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":116,"org.easymock.tests.UsageThrowableTest.noUpperLimit":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":358,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":108,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":383,"org.easymock.tests2.SerializationTest.test":22,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":85,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":432,"org.easymock.tests2.UsageConstraintsTest.testSame":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":215,"org.easymock.samples.SupportTest.addDocument":328,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":396,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":366,"org.easymock.tests.GenericTest.testPackageScope":60,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":357,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":450,"org.easymock.tests2.NameTest.nameForMock":73,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":226,"org.easymock.tests2.UsageStrictMockTest.differentMethods":105,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":305,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":393,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":164,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":175,"org.easymock.tests2.MockedExceptionTest.testRealException":98,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":481,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":102,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":429,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":178,"org.easymock.tests2.NameTest.nameForStrictMock":74,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":402,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":77,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":301,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":34,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":387,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":434,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":17,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":306,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":49,"org.easymock.tests2.UsageStrictMockTest.range":104,"org.easymock.tests2.UsageConstraintsTest.lessThan":119,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":476,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":314,"org.easymock.tests2.CaptureTest.testCaptureRightOne":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":370,"org.easymock.tests2.UsageConstraintsTest.testOr":12,"org.easymock.tests.UsageRangeTest.combination":172,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":32,"org.easymock.tests.UsageTest.wrongArguments":259,"org.easymock.tests2.MockBuilderTest.testWithConstructor":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":367,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":199,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":227,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":436,"org.easymock.tests.UsageVarargTest.varargShortAccepted":239,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":467,"org.easymock.tests2.UsageConstraintsTest.cmpTo":109,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":136,"org.easymock.tests2.CaptureTest.testCaptureFromStub":6,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":420,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":50,"org.easymock.tests.UsageTest.unexpectedCallWithArray":258,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":184,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":248,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":304,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":228,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":186,"org.easymock.tests2.UsageConstraintsTest.constraints":7,"org.easymock.samples.ExampleTest.addAndChangeDocument":282,"org.easymock.tests.UsageStrictMockTest.testVerify":190,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":331,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":269,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":253,"org.easymock.tests.LimitationsTest.abstractClass":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":254,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":265,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":235,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":307,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":319}}]
