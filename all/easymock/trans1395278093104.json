[{"position":"org.easymock.internal.MockBuilder:223","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[6,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,2,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,74,77,78,79,80,81,85,88,98,101,7,275,276,242],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[8,9,10,11,12,13,14,277,15,16,17,18,278,279,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,280,281,282,283,284,285,286,42,43,287,288,289,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,290,291,71,72,292,293,73,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,6,313,314,315,316,317,318,319,320,321,322,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,323,324,325,326,327,328,329,330,90,91,331,92,93,94,95,96,97,332,333,334,335,98,336,99,337,100,101,338,102,339,103,104,105,106,107,108,109,110,111,340,341,342,112,113,343,114,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,115,363,364,365,366,367,368,369,116,370,117,118,119,120,371,121,122,123,124,125,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,126,127,128,129,130,7,275,276,131,132,133,395,134,135,136,137,138,139,140,141,142,143,396,397,144,398,399,400,401,145,146,147,148,149,150,0,402,151,403,404,405,152,153,154,406,1,155,156,157,158,159,160,161,162,163,164,165,407,166,167,168,169,170,171,172,408,409,410,173,411,412,2,413,414,415,416,417,418,419,420,421,174,422,423,424,425,426,175,427,428,176,3,429,177,430,178,431,432,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,433,434,435,436,437,198,438,439,440,441,442,443,199,200,201,202,444,203,204,205,445,446,206,207,208,209,447,210,211,212,448,213,4,449,214,450,451,452,215,5,216,453,217,454,455,456,218,457,458,459,460,461,462,463,464,465,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,466,467,468,469,470,471,239,240,241,242,472,473,474,475,476,243,477,478,479,480,481,482,244,245,246,247,483,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,484,272,485,273,274,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[488,155,156,157,158,159,160,161,162,163,164,165,407,166,167],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[44,489,88,89,331,92,95,96,105,108,222,228,229,236],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[295,296,297,298,300,302],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[254],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Null:35","failures":[249],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[490,182,183,184],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[155,157,165,246,247,251,252,254,264],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[286],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[269],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[491,492,331,105,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[488,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[496,497],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[190,223],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[182,498,499,500,501,502,453,455,274,486],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[503],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:40","failures":[44,491,492,504,489,87,88,89,91,331,105,106,108,109,399,400,505,493,506,507,508,494,509,221,234,236,237],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[44,69,70,82,83,84,85,86,98,105,106,126,127,128,129,130,141,142,143,151,155,156,157,158,159,160,161,162,163,164,165,407,166,167,171,234,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[8,9,10,11,12,13,14,277,15,16,17,18,278,278,279,279,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,295,304,305,306,307,308,309,310,311,312,315,316,317,318,319,320,321,322,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,331,92,93,94,95,96,97,332,333,334,335,98,336,99,100,101,102,339,103,104,105,106,107,108,109,110,111,112,113,114,116,370,117,118,119,120,371,121,122,123,124,125,372,373,374,375,376,378,379,380,383,384,385,386,387,388,389,390,391,392,393,394,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,0,151,405,152,153,154,155,156,157,158,159,160,161,162,163,164,165,407,166,167,168,169,170,171,172,173,2,174,175,176,3,429,177,430,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,4,214,215,5,216,217,456,218,458,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,466,467,468,469,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,484,272,273,274],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[227],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[490,182,183,184],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[490,182,183],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[154,1,207],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[201,205,445,510,511,449,451,453,503,457,486],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[8,9,10,11,12,13,14,277,15,16,17,18,278,279,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,280,281,282,283,284,285,286,42,43,287,288,289,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,290,291,71,72,292,293,73,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,6,313,314,315,316,317,318,319,320,321,322,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,323,324,325,326,327,328,329,330,90,91,331,92,93,94,95,96,97,332,333,334,335,98,336,99,337,100,101,338,102,339,103,104,105,106,107,108,109,110,111,340,341,342,112,113,343,114,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,115,363,364,365,366,367,368,369,116,370,117,118,119,120,371,121,122,123,124,125,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,126,127,128,129,130,7,275,276,131,132,133,395,134,135,136,137,138,139,140,141,142,143,396,397,144,398,399,400,401,145,146,147,148,149,150,0,402,151,403,404,405,152,153,154,406,1,155,156,157,158,159,160,161,162,163,164,165,407,166,167,168,169,170,171,172,408,409,410,173,411,412,2,413,414,415,416,417,418,419,420,421,174,422,423,424,425,426,175,427,428,176,3,429,177,430,178,431,432,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,433,434,435,436,437,198,438,439,440,441,442,443,199,200,201,202,444,203,204,205,445,446,206,207,208,209,447,210,211,212,448,213,4,449,214,450,451,452,215,5,216,453,217,454,455,456,218,457,458,459,460,461,462,463,464,465,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,466,467,468,469,470,471,239,240,241,242,472,473,474,475,476,243,477,478,479,480,481,482,244,245,246,247,483,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,484,272,485,273,274,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[278,279,403,449,503,457],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[227],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[408,409,410,173,411,412,2,413,414,415,416,417,418,419,420,421,174,422,423,424,425,426,175,427,428,182,512,513,514,515,516,517,455,518,519],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Invocation:99","failures":[8,11,12,14,15,17,65,520,194,196,215,255],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[254,255],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[517,518,519],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[289,44,87,88,89,326,330,91,331,92,95,96,105,106,108,109,378,381,399,400,198,464,221,222,228,229,234,236,237,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[65,103,108,109,176,186,190,191,194,218,223,232,236,237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[286,288],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":247,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":90,"org.easymock.tests2.UsageTest.argumentsOrdered":229,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":357,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":224,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":21,"org.easymock.tests2.DelegateToTest.testReturnException":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":333,"org.easymock.tests.MockingTest.testPartialClassMocking":112,"org.easymock.tests.MockClassControlTest.testToString":317,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":446,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":284,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":2,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":22,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":253,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":82,"org.easymock.tests2.UsageTest.wrongArguments":222,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":443,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":306,"org.easymock.samples.ExampleTest.answerVsDelegate":10,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":328,"org.easymock.tests2.UsageConstraintsTest.testNull":249,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":345,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":148,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":194,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":322,"org.easymock.tests2.CaptureTest.testPrimitive":158,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":86,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":41,"org.easymock.tests.UsageTest.moreThanOneArgument":91,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":374,"org.easymock.tests.UsageTest.argumentsOrdered":96,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":291,"org.easymock.tests.UsageVarargTest.varargIntAccepted":133,"org.easymock.tests.InvocationTest.testEquals":520,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":126,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":481,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":461,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":130,"org.easymock.tests.ReplayStateInvalidUsageTest.times":391,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests2.DependencyTest.testClassMocking":470,"org.easymock.tests2.AnswerTest.answer":178,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":363,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":469,"org.easymock.tests2.CaptureTest.testAnd":155,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":325,"org.easymock.tests2.UsageTest.strictResetToDefault":220,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":451,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":189,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":67,"org.easymock.tests2.DelegateToTest.testDelegate":213,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":37,"org.easymock.tests.LimitationsTest.mockFinalMethod":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":312,"org.easymock.tests2.DependencyTest.testClassMockingSupport":471,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":399,"org.easymock.tests2.CaptureTest.testCapture1_2446744":159,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":35,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":467,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":385,"org.easymock.tests.UsageThrowableTest.throwError":74,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":327,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":482,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":376,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":428,"org.easymock.samples.PartialClassMockTest.testGetArea":8,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":386,"org.easymock.tests.MockingTest.testInterfaceMocking":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":417,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":23,"org.easymock.tests2.UsageTest.niceToStrict":223,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":382,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":347,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":215,"org.easymock.tests2.MockBuilderTest.testCreateMock":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":424,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":440,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":31,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":190,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":276,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":304,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":514,"org.easymock.tests.UsageOverloadedMethodTest.overloading":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":421,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":101,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":259,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":56,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":496,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":258,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":164,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":395,"org.easymock.tests2.EasyMockSupportClassTest.testAll":173,"org.easymock.tests.MockClassControlTest.testEquals":321,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":43,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":468,"org.easymock.tests2.CaptureTest.testCaptureAll":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":310,"org.easymock.tests.MockNameTest.defaultName":289,"org.easymock.tests2.UsageConstraintsTest.testMatches":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":375,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":383,"org.easymock.samples.ExampleTest.voteForRemovals":14,"org.easymock.tests.UsageVarargTest.allKinds":141,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":87,"org.easymock.samples.BasicClassMockTest.testPrintContent":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":311,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":80,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":478,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":336,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests2.UsageConstraintsTest.greaterThan":262,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":411,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":66,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":154,"org.easymock.samples.ExampleTest.voteForRemoval":11,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":302,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":406,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":169,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":329,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":0,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":73,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":219,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":354,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":187,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":332,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":447,"org.easymock.tests2.CaptureTest.testCaptureFirst":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":188,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":231,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":52,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":171,"org.easymock.tests2.CaptureTest.testCapture2_2446744":166,"org.easymock.tests2.UsageTest.moreThanOneArgument":221,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":364,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":140,"org.easymock.tests.GenericTest.testBridgedEquals":288,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":515,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":512,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":121,"org.easymock.tests.UsageExpectAndReturnTest.longType":48,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":308,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":40,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":267,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":38,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":372,"org.easymock.tests.UsageCallCountTest.tooManyCalls":122,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":442,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":79,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":200,"org.easymock.tests.MockingTest.testNiceClassMocking":346,"org.easymock.tests.MockingTest.testClassMocking":341,"org.easymock.tests2.UsageConstraintsTest.testContains":257,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":370,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":177,"org.easymock.tests2.UsageConstraintsTest.testFind":248,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":125,"org.easymock.tests.MockTypeTest.fromEasyMockClass":326,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":103,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":273,"org.easymock.tests.UsageExpectAndReturnTest.object":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":135,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":380,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":516,"org.easymock.tests.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":352,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":71,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":283,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":486,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":131,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":61,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":100,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":473,"org.easymock.tests.MockClassControlTest.testHashCode":320,"org.easymock.tests2.EasyMockSupportTest.testVerify":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":419,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":72,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":99,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":466,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":484,"org.easymock.tests.UsageVarargTest.varargCharAccepted":134,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":294,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":369,"org.easymock.tests2.UsageTest.openCallCountByLastCall":225,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":518,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":196,"org.easymock.tests.DefaultClassInstantiatorTest.object":295,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":7,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":378,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":420,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":29,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":436,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":472,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":152,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":319,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":28,"org.easymock.tests.CapturesMatcherTest.test":488,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":62,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":6,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":175,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":318,"org.easymock.tests2.UsageTest.resumeIfFailure":230,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":323,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":335,"org.easymock.tests2.StubTest.stubWithReturnValue":242,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":453,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":54,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":268,"org.easymock.tests2.SerializationTest.testAllMockedMethod":184,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":115,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":494,"org.easymock.samples.SupportTest.voteForRemovals":17,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":286,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":475,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":34,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":490,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":368,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":431,"org.easymock.tests.UsageExpectAndThrowTest.object":32,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":285,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":265,"org.easymock.tests2.DelegateToTest.testWrongClass":212,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":142,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":143,"org.easymock.tests.UsageStrictMockTest.range":108,"org.easymock.samples.ConstructorCalledMockTest.testTax":278,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":464,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":192,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":199,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":513,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":33,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":408,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":393,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":95,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":305,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":491,"org.easymock.tests2.CaptureTest.testCaptureNone":163,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":282,"org.easymock.tests.UsageUnorderedTest.message":44,"org.easymock.tests.UsageVerifyTest.twoReturns":89,"org.easymock.tests.UsageVarargTest.varargByteAccepted":139,"org.easymock.tests2.ThreadingTest.testThreadSafe":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":422,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":120,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":19,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":381,"org.easymock.tests2.CaptureTest.testCapture_2617107":157,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":401,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":366,"org.easymock.tests2.UsageConstraintsTest.any":255,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":390,"org.easymock.tests2.StubTest.stub":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageExpectAndThrowTest.longType":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":367,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":299,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":389,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":235,"org.easymock.tests2.SerializationTest.testClass":182,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":243,"org.easymock.tests.LimitationsTest.mockNativeMethod":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":64,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":287,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":435,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":238,"org.easymock.tests2.NameTest.nameForMocksControl":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":437,"org.easymock.tests2.MockedExceptionTest.testMockedException":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":412,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":94,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":485,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":114,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":26,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":145,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":217,"org.easymock.tests.MockingTest.testNicePartialClassMocking":113,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":150,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":433,"org.easymock.tests2.CaptureTest.testCaptureLast":162,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":400,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":205,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":252,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":266,"org.easymock.tests.MockingTest.testTwoMocks":342,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":30,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":228,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":270,"org.easymock.samples.ExampleTest.removeNonExistingDocument":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":439,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":387,"org.easymock.tests.UsageStrictMockTest.differentMethods":109,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":474,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":297,"org.easymock.tests2.ConstraintsToStringTest.andToString":508,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":170,"org.easymock.tests2.MockBuilderTest.testCreateMockString":458,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":413,"org.easymock.tests.UsageExpectAndThrowTest.floatType":24,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":410,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":179,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":487,"org.easymock.tests.UsageVerifyTest.twoThrows":88,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":174,"org.easymock.samples.ExampleTest.voteAgainstRemoval":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":358,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":153,"org.easymock.tests.LimitationsTest.privateConstructor":397,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":511,"org.easymock.tests2.UsageConstraintsTest.testNotNull":269,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":3,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":81,"org.easymock.tests2.UsageTest.defaultResetToNice":227,"org.easymock.samples.ExampleTest.voteAgainstRemovals":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":359,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":434,"org.easymock.tests.UsageVarargTest.differentLength":136,"org.easymock.tests2.CallbackTest.callback":176,"org.easymock.tests2.UsageConstraintsTest.equals":483,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":403,"org.easymock.tests.UsageTest.openCallCountByLastCall":93,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":84,"org.easymock.tests.UsageCallCountTest.tooFewCalls":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":202,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":307,"org.easymock.tests.UsageThrowableTest.throwCheckedException":78,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":492,"org.easymock.tests.MockingTest.testStrictClassMocking":340,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":70,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":438,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":201,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":392,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":203,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":181,"org.easymock.tests.ObjectMethodsTest.testHashCode":379,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":172,"org.easymock.tests2.NameTest.nameForNiceMock":208,"org.easymock.tests2.DependencyTest.testInterfaceMocking":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":427,"org.easymock.tests2.DelegateToTest.testStubDelegate":211,"org.easymock.tests2.AnswerTest.stubAnswer":180,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":106,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":454,"org.easymock.tests.UsageVarargTest.varargLongAccepted":138,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":356,"org.easymock.tests.UsageExpectAndReturnTest.floatType":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":63,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":274,"org.easymock.tests2.ConstraintsToStringTest.orToString":505,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":480,"org.easymock.tests.UsageThrowableTest.noUpperLimit":75,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":263,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":245,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":459,"org.easymock.tests2.SerializationTest.test":183,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":160,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":497,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":296,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":46,"org.easymock.tests2.UsageConstraintsTest.testSame":250,"org.easymock.samples.SupportTest.addDocument":16,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":444,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":414,"org.easymock.tests.GenericTest.testPackageScope":42,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":479,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":344,"org.easymock.tests2.NameTest.nameForMock":206,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":457,"org.easymock.tests2.UsageStrictMockTest.differentMethods":237,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":36,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":68,"org.easymock.tests2.MockedExceptionTest.testRealException":430,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":504,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":360,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":394,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":83,"org.easymock.tests2.NameTest.nameForStrictMock":207,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":452,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":519,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":272,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":149,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":463,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":264,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":298,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":214,"org.easymock.tests2.UsageStrictMockTest.range":236,"org.easymock.tests2.UsageConstraintsTest.lessThan":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":476,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":501,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":418,"org.easymock.tests2.CaptureTest.testCaptureRightOne":165,"org.easymock.tests2.UsageConstraintsTest.testOr":251,"org.easymock.tests.UsageRangeTest.combination":65,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":146,"org.easymock.tests.UsageTest.wrongArguments":92,"org.easymock.tests2.MockBuilderTest.testWithConstructor":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":415,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":50,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":348,"org.easymock.tests.UsageVarargTest.varargShortAccepted":137,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":300,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":371,"org.easymock.tests2.UsageConstraintsTest.cmpTo":256,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":350,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":226,"org.easymock.tests2.CaptureTest.testCaptureFromStub":407,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":384,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":450,"org.easymock.tests.UsageTest.unexpectedCallWithArray":331,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":105,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":119,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":59,"org.easymock.tests2.CaptureTest.testCapture":495,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":107,"org.easymock.tests2.UsageConstraintsTest.constraints":246,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests2.ConstraintsToStringTest.notToString":506,"org.easymock.tests.UsageStrictMockTest.testVerify":111,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":18,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":104,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":309,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":128,"org.easymock.tests.LimitationsTest.abstractClass":396,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":129,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":191,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":132}}]
