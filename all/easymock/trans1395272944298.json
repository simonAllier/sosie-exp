[{"transplant":{"position":"org.easymock.internal.ReplayState:52","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,295,4,5,6,296,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,297,39,40,41,42,43,44,45,46,47,48,49,50,51,298,299,52,53,300,301,302,54,303,304,55,305,306,307,308,309,310,311,312,313,56,314,315,316,317,318,57,319,320,321,322,323,324,325,326,327,328,329,330,331,332,58,333,334,335,336,337,338,59,60,61,62,63,64,65,66,67,68,69,70,71,339,72,340,341,73,74,75,76,342,343,77,78,79,80,344,81,82,83,84,85,86,345,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,346,347,105,106,107,108,109,110,111,112,113,114,115,116,117,118,348,119,120,121,349,122,350,351,352,353,354,123,355,124,356,357,358,125,126,127,359,128,360,361,129,130,362,131,132,133,134,363,364,135,136,137,138,139,365,366,367,368,369,140,370,371,372,373,374,375,141,142,143,376,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,377,378,379,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,380,381,202,203,204,205,206,382,207,208,383,384,385,386,387,388,389,209,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,210,211,212,410,411,412,413,414,415,213,214,215,216,217,218,219,220,416,417,418,419,420,421,422,423,424,221,425,426,427,428,429,430,431,432,222,223,224,433,434,225,226,227,228,229,230,231,435,436,437,438,439,232,233,234,235,236,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,237,238,470,239,471,472,473,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,474,475,476,477,478,479,480,481,482,260,483,261,262,484,485,263,264,486,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,487,285,286,287,288,289,290,291,292,293,294],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[77,94,97,489],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[490],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[26,33,108,109,110,111,133,152,153,154,155,156,157,162,167,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,212,223,262,274,275],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[8,14,15,20,25,28,62,64,77,91,94,103,122,135,136,163,171,174,180,186,190,192,403,212,455,459,240,246,252,256,258,285],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[25,26,29,30,31,35,36,37,38,40,44,45,48,66,74,76,79,93,112,115,116,117,124,129,130,131,146,162,164,165,168,169,170,171,491,380,492,493,213,215,217,218,219,223,224,229,230,231,264],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[494,495,488,496,497,498,499,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[0,1,2,3,5,6,300,301,302,54,303,304,55,305,306,307,308,309,310,311,312,313,56,314,315,316,317,318,57,319,320,321,325,59,61,65,66,68,69,70,71,72,340,341,73,74,75,76,342,343,108,109,110,123,501,124,356,358,125,126,127,128,361,129,130,502,131,503,134,363,382,207,208,383,384,388,389,209,390,415,417,418,419,420,421,422,423,424,221,425,430,467,468,469,237,238,239,473,475,476,477,478,479,480,482,289,290,291,293,293,294,294],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[458],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[82,99,138,151],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[425],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[29,35,36,116,164,165,168,169,171,493,215,218,223,224,263],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[125,127,128,502,291],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,297,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,72,73,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,351,352,353,354,123,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,386,209,396,398,399,401,404,406,211,212,213,214,215,216,217,218,219,220,416,418,221,222,223,224,433,434,225,226,227,228,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,485,264,486,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,293,294,294],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[18,77,78,81,82,83,84,89,91,92,94,95,96,101,102,103,114,133,172,202,203,204,205,206,216,232,233,234,235,236,272,273,276,277,278,293,293,294,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[77,91,94,95,103,114,133,202,203,204,205,206,216,232,233,234,235,236,443,447,448,457,462,272,273,276,277,278],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[7,9,10,11,12,13,14,16,504,17,18,20],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[116,117,218,219,222],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[0,1,2,3,295,4,5,6,296,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,297,39,40,41,42,43,44,45,46,47,48,49,50,51,298,299,52,53,300,301,302,54,303,304,55,305,306,307,308,309,310,311,312,313,56,314,315,316,317,318,57,319,320,321,322,323,325,326,327,328,329,330,331,332,58,333,334,335,336,337,338,59,60,61,62,63,64,65,66,67,68,69,70,71,339,72,340,341,73,74,75,76,342,343,77,78,79,80,344,81,82,83,84,85,86,345,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,346,347,105,106,107,108,109,110,111,112,113,114,115,116,117,118,348,119,120,121,349,122,350,351,352,353,354,123,124,356,358,125,126,127,128,360,361,129,130,131,132,133,134,363,505,135,506,136,137,138,139,365,366,367,368,369,140,370,371,372,373,374,375,141,142,143,376,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,377,378,379,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,381,202,203,204,205,206,382,207,208,383,384,385,386,387,388,389,209,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,210,211,212,410,411,412,413,414,415,213,214,215,216,217,218,219,220,416,417,418,419,420,421,422,423,424,221,425,426,427,428,429,430,431,432,222,223,224,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,433,434,225,226,227,228,229,230,231,435,436,437,438,439,232,233,234,235,236,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,237,238,470,239,471,472,473,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,475,476,477,478,479,480,482,260,483,261,262,484,485,263,264,486,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,487,285,286,287,288,289,290,291,292,293,294],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[7,9,17,79,80,84,85,345,96],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[529],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,10,11,14,15,16,17,19,20,26,27,28,30,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,65,66,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,106,110,114,116,117,120,124,125,127,128,130,133,134,135,136,137,138,139,140,162,163,166,167,170,172,378,194,196,197,198,199,200,201,207,385,209,407,408,409,210,211,212,216,218,219,222,224,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,485,264,486,265,266,272,273,276,277,278,279,281,282,284,287,291],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[350],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[530],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[531,532,164,533,534,215],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,295,4,5,6,296,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,297,39,40,41,42,43,44,45,46,47,48,49,50,51,298,299,52,53,300,301,302,54,303,304,55,305,306,307,308,309,310,311,312,313,56,314,315,316,317,318,57,319,320,321,322,323,324,325,326,327,328,329,330,331,332,58,333,334,335,336,337,338,59,60,61,62,63,64,65,66,67,68,69,70,71,339,72,340,341,73,74,75,76,342,343,77,78,79,80,344,81,82,83,84,85,86,345,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,346,347,105,106,107,108,109,110,111,112,113,114,115,116,117,118,348,119,120,121,349,122,350,351,352,353,354,123,355,124,356,357,358,125,126,127,359,128,360,361,129,130,362,131,132,133,134,363,364,135,136,137,138,139,365,366,367,368,369,140,370,371,372,373,374,375,141,142,143,376,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,377,378,379,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,380,381,202,203,204,205,206,382,207,208,383,384,385,386,387,388,389,209,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,210,211,212,410,411,412,413,414,415,213,214,215,216,217,218,219,220,416,417,418,419,420,421,422,423,424,221,425,426,427,428,429,430,431,432,222,223,224,433,434,225,226,227,228,229,230,231,435,436,437,438,439,232,233,234,235,236,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,237,238,470,239,471,472,473,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,474,475,476,477,478,479,480,481,482,260,483,261,262,484,485,263,264,486,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,487,285,286,287,288,289,290,291,292,293,294],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,10,11,14,15,16,17,18,19,20,25,26,27,28,30,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,62,64,65,66,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,346,347,105,106,107,108,109,110,111,114,116,117,348,119,120,121,349,122,124,125,127,128,130,132,133,134,135,136,137,138,139,140,152,153,154,155,156,157,162,163,166,167,170,171,172,173,378,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,383,386,209,391,392,393,394,407,408,409,210,211,212,216,218,219,221,222,223,224,225,435,436,437,438,439,232,233,234,235,236,440,441,442,459,465,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,485,264,486,265,266,272,273,274,275,276,277,278,279,280,281,282,284,285,287,291,293,293,294,294],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[494,495,500],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":80,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":162,"org.easymock.tests2.UsageTest.argumentsOrdered":36,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":453,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":31,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":292,"org.easymock.tests2.DelegateToTest.testReturnException":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":153,"org.easymock.tests.MockingTest.testPartialClassMocking":237,"org.easymock.tests.MockClassControlTest.testToString":419,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":350,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":308,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":174,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":55,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":53,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":528,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":86,"org.easymock.tests2.UsageTest.wrongArguments":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":272,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":160,"org.easymock.samples.ExampleTest.answerVsDelegate":280,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":430,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":472,"org.easymock.tests2.UsageConstraintsTest.testNull":82,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":68,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":424,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":48,"org.easymock.tests2.CaptureTest.testPrimitive":10,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":276,"org.easymock.tests.UsageTest.moreThanOneArgument":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":193,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":204,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":435,"org.easymock.tests.UsageTest.argumentsOrdered":169,"org.easymock.tests.UsageVarargTest.varargIntAccepted":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":458,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":232,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":123,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":323,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":374,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":445,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":236,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":512,"org.easymock.tests.ReplayStateInvalidUsageTest.times":403,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":58,"org.easymock.tests2.DependencyTest.testClassMocking":298,"org.easymock.tests2.AnswerTest.answer":104,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":460,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":24,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":427,"org.easymock.tests2.CaptureTest.testAnd":7,"org.easymock.tests2.UsageTest.strictResetToDefault":27,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":357,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":43,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":265,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":439,"org.easymock.tests2.DelegateToTest.testDelegate":122,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":511,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":189,"org.easymock.tests.LimitationsTest.mockFinalMethod":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":271,"org.easymock.tests2.DependencyTest.testClassMockingSupport":299,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":385,"org.easymock.tests2.CaptureTest.testCapture1_2446744":11,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":187,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":22,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":397,"org.easymock.tests.UsageThrowableTest.throwError":194,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":429,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":375,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":380,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":320,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":515,"org.easymock.samples.PartialClassMockTest.testGetArea":291,"org.easymock.tests.MockingTest.testInterfaceMocking":470,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":233,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":408,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":415,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":175,"org.easymock.tests2.UsageTest.niceToStrict":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":309,"org.easymock.tests2.ThreadingTest.testChangeDefault":506,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":125,"org.easymock.tests2.MockBuilderTest.testCreateMock":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":335,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":531,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":183,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":44,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":426,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":442,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":433,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":158,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":497,"org.easymock.tests.UsageOverloadedMethodTest.overloading":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":318,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":91,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":262,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":251,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":90,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":16,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":376,"org.easymock.tests.MockClassControlTest.testEquals":423,"org.easymock.tests2.EasyMockSupportClassTest.testAll":54,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":191,"org.easymock.tests2.CaptureTest.testCaptureAll":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":269,"org.easymock.tests.MockNameTest.defaultName":381,"org.easymock.tests2.UsageConstraintsTest.testMatches":92,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":205,"org.easymock.samples.ExampleTest.voteForRemovals":284,"org.easymock.tests.UsageVarargTest.allKinds":151,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":270,"org.easymock.samples.BasicClassMockTest.testPrintContent":290,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":200,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":157,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":371,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":481,"org.easymock.tests2.UsageConstraintsTest.greaterThan":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":303,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":486,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":76,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":516,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":482,"org.easymock.samples.ExampleTest.voteForRemoval":281,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":136,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":342,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":71,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":508,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":221,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":41,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":152,"org.easymock.tests2.CaptureTest.testCaptureFirst":20,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":42,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":38,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":247,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":138,"org.easymock.tests2.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.CaptureTest.testCapture2_2446744":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":461,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":130,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":150,"org.easymock.tests.GenericTest.testBridgedEquals":384,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":498,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":488,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":230,"org.easymock.tests.UsageExpectAndReturnTest.longType":243,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":267,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":502,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":192,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":394,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":99,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":392,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":202,"org.easymock.tests.UsageCallCountTest.tooManyCalls":231,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":248,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":199,"org.easymock.tests.MockingTest.testNiceClassMocking":473,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":1,"org.easymock.tests.MockingTest.testClassMocking":468,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":501,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":434,"org.easymock.tests2.UsageConstraintsTest.testContains":89,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":110,"org.easymock.tests2.UsageConstraintsTest.testFind":81,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":212,"org.easymock.tests.MockTypeTest.fromEasyMockClass":428,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":64,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":213,"org.easymock.tests.UsageExpectAndReturnTest.object":250,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":47,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":145,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":413,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":499,"org.easymock.tests.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":436,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":363,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":141,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":256,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":261,"org.easymock.tests.MockClassControlTest.testHashCode":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":366,"org.easymock.tests2.EasyMockSupportTest.testVerify":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":311,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":437,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":441,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":260,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":492,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":21,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":297,"org.easymock.tests.UsageVarargTest.varargCharAccepted":144,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":474,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":466,"org.easymock.tests2.UsageTest.openCallCountByLastCall":32,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":494,"org.easymock.tests.DefaultClassInstantiatorTest.object":475,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":50,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":440,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":411,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":312,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":365,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":514,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":421,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":74,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":180,"org.easymock.tests.ReplayStateInvalidCallsTest.times":520,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":257,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":391,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":521,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":57,"org.easymock.tests2.UsageTest.resumeIfFailure":37,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":425,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":155,"org.easymock.tests2.StubTest.stubWithReturnValue":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":359,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":249,"org.easymock.tests2.SerializationTest.testAllMockedMethod":61,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":459,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":532,"org.easymock.samples.SupportTest.voteForRemovals":287,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":382,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":186,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":465,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":346,"org.easymock.tests.UsageExpectAndThrowTest.object":184,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":379,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":97,"org.easymock.tests2.DelegateToTest.testWrongClass":121,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":518,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":277,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":278,"org.easymock.tests.UsageStrictMockTest.range":218,"org.easymock.samples.ConstructorCalledMockTest.testTax":293,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":326,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":0,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":496,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":185,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":127,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":405,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":533,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":510,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":409,"org.easymock.tests2.CaptureTest.testCaptureNone":15,"org.easymock.tests.UsageUnorderedTest.message":171,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":491,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":529,"org.easymock.tests.UsageVerifyTest.twoReturns":224,"org.easymock.tests.UsageVarargTest.varargByteAccepted":149,"org.easymock.tests2.ThreadingTest.testThreadSafe":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":314,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":228,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":414,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":289,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":275,"org.easymock.tests2.UsageConstraintsTest.any":87,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":402,"org.easymock.tests2.StubTest.stub":132,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndThrowTest.longType":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":154,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":479,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":401,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":115,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":140,"org.easymock.tests2.SerializationTest.testClass":59,"org.easymock.tests.LimitationsTest.mockNativeMethod":209,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":259,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":383,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":330,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":526,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":118,"org.easymock.tests2.NameTest.nameForMocksControl":354,"org.easymock.tests2.MockedExceptionTest.testMockedException":109,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":304,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":178,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":63,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":239,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":65,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":128,"org.easymock.tests.MockingTest.testNicePartialClassMocking":238,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":70,"org.easymock.tests2.CaptureTest.testCaptureLast":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":328,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":386,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":525,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":6,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":85,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":98,"org.easymock.tests.MockingTest.testTwoMocks":469,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":522,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":296,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":182,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":102,"org.easymock.samples.ExampleTest.removeNonExistingDocument":487,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":399,"org.easymock.tests.UsageStrictMockTest.differentMethods":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":334,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":367,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":505,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":477,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":137,"org.easymock.tests2.MockBuilderTest.testCreateMockString":131,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":417,"org.easymock.tests.UsageExpectAndThrowTest.floatType":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":305,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":302,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":105,"org.easymock.tests.UsageVerifyTest.twoThrows":223,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":364,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":56,"org.easymock.samples.ExampleTest.voteAgainstRemoval":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":454,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":407,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":75,"org.easymock.tests.LimitationsTest.privateConstructor":389,"org.easymock.tests2.UsageConstraintsTest.testNotNull":101,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":108,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":201,"org.easymock.tests2.UsageTest.defaultResetToNice":34,"org.easymock.samples.ExampleTest.voteAgainstRemovals":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":255,"org.easymock.tests.UsageVarargTest.differentLength":146,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":329,"org.easymock.tests2.CallbackTest.callback":25,"org.easymock.tests2.UsageConstraintsTest.equals":344,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":340,"org.easymock.tests.UsageTest.openCallCountByLastCall":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":274,"org.easymock.tests.UsageCallCountTest.tooFewCalls":226,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":3,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":161,"org.easymock.tests.UsageThrowableTest.throwCheckedException":198,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":534,"org.easymock.tests.MockingTest.testStrictClassMocking":467,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":173,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":5,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":333,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":404,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":4,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":107,"org.easymock.tests.ObjectMethodsTest.testHashCode":412,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":524,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":139,"org.easymock.tests2.NameTest.nameForNiceMock":353,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":519,"org.easymock.tests2.DependencyTest.testInterfaceMocking":52,"org.easymock.samples.ExampleTest.addDocument":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":315,"org.easymock.tests2.DelegateToTest.testStubDelegate":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":319,"org.easymock.tests2.AnswerTest.stubAnswer":106,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":216,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":360,"org.easymock.tests.UsageVarargTest.varargLongAccepted":148,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.floatType":242,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":134,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":294,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":484,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":95,"org.easymock.tests.UsageThrowableTest.noUpperLimit":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":373,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":78,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":321,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":12,"org.easymock.tests2.SerializationTest.test":60,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":476,"org.easymock.tests2.UsageConstraintsTest.testSame":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":241,"org.easymock.samples.SupportTest.addDocument":286,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":295,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":509,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":306,"org.easymock.tests.GenericTest.testPackageScope":207,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":372,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":471,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":507,"org.easymock.tests2.NameTest.nameForMock":351,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":252,"org.easymock.tests2.UsageStrictMockTest.differentMethods":117,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":362,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":341,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":188,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":410,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":266,"org.easymock.tests2.MockedExceptionTest.testRealException":111,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":456,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":114,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":406,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":273,"org.easymock.tests2.NameTest.nameForStrictMock":352,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":358,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":495,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":62,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":69,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":325,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":478,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":96,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":124,"org.easymock.tests2.UsageStrictMockTest.range":116,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":513,"org.easymock.tests2.UsageConstraintsTest.lessThan":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":369,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":530,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":40,"org.easymock.tests2.CaptureTest.testCaptureRightOne":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":310,"org.easymock.tests2.UsageConstraintsTest.testOr":84,"org.easymock.tests.UsageRangeTest.combination":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":66,"org.easymock.tests.UsageTest.wrongArguments":165,"org.easymock.tests2.MockBuilderTest.testWithConstructor":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":307,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":253,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":480,"org.easymock.tests.UsageVarargTest.varargShortAccepted":147,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":229,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":527,"org.easymock.tests2.UsageConstraintsTest.cmpTo":88,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":347,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":446,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":33,"org.easymock.tests2.CaptureTest.testCaptureFromStub":18,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":396,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":356,"org.easymock.tests.UsageTest.unexpectedCallWithArray":164,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":523,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":215,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":254,"org.easymock.tests2.CaptureTest.testCapture":504,"org.easymock.tests2.UsageConstraintsTest.constraints":79,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":217,"org.easymock.samples.ExampleTest.addAndChangeDocument":285,"org.easymock.tests.UsageStrictMockTest.testVerify":416,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":288,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":214,"org.easymock.tests2.CompareToTest.testGreateThan":489,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":268,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":13,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":503,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":234,"org.easymock.tests.LimitationsTest.abstractClass":388,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":246,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":485,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":235,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":142,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":45}}]
