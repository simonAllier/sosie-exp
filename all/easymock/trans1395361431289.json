[{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:773","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:101","sourceCode":"return java.lang.reflect.Constructor<?>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:266","sourceCode":"return ","type":"CtReturnImpl"},"failures":[9,10,11,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,12,56,57,58,59,60,61,13,14,62,63,64,65],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[66,66,67,67,68,69,70,71,72,73,74,75,76,77,78,79,80,23,20,81,21,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,62,63,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"classMockingDisabled"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[176,140,167,168],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","name":"methodName"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[100,177,178],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[179,66,67,180,181,68,182,183,2,184,185,186,187,188,69,70,189,190,191,192,193,194,195,196,197,198,199,200,9,201,10,202,203,204,205,11,206,207,208,76,77,78,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,24,238,239,25,26,240,241,242,243,244,245,3,27,246,80,28,29,30,31,32,33,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,20,81,22,264,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,85,265,266,267,55,268,12,56,57,58,59,60,269,270,271,272,273,274,275,276,277,278,279,61,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,13,296,297,298,299,300,301,14,302,303,304,305,306,307,308,309,310,311,312,313,104,314,315,316,317,318,319,320,321,107,322,108,112,115,125,131,134,136,140,141,142,144,146,147,149,150,151,152,153,323,154,155,324,325,326,327,328,329,330,331,1,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,156,157,354,158,159,160,161,163,166,167,168,169,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,4,0,5,7,62,63,64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[9,201,208,232,12,13,306,309,314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[371,267],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[332,372,346,351],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","name":"name","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[213,217,218,220,223,234,235,39,43,44,46,49,373,374,375,376,311,312],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[346,347],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[149,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":331,"org.easymock.tests2.UsageTest.argumentsOrdered":304,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":10,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":31,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":300,"org.easymock.tests2.StubTest.stubWithReturnValue":61,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":143,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":350,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":218,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":182,"org.easymock.tests2.SerializationTest.testAllMockedMethod":108,"org.easymock.tests2.DelegateToTest.testReturnException":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":29,"org.easymock.tests.MockingTest.testPartialClassMocking":76,"org.easymock.samples.SupportTest.voteForRemovals":181,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":23,"org.easymock.tests.MockClassControlTest.testToString":89,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":19,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":47,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":35,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":115,"org.easymock.tests.UsageExpectAndThrowTest.object":45,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":347,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":294,"org.easymock.tests2.DelegateToTest.testWrongClass":5,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":265,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":266,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":336,"org.easymock.tests2.UsageTest.wrongArguments":298,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":238,"org.easymock.tests.UsageStrictMockTest.range":234,"org.easymock.samples.ConstructorCalledMockTest.testTax":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":243,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":287,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":72,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":150,"org.easymock.tests2.UsageConstraintsTest.testNull":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":158,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":289,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":94,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":142,"org.easymock.tests2.CaptureTest.testPrimitive":359,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":240,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":206,"org.easymock.tests.UsageTest.moreThanOneArgument":202,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":109,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":271,"org.easymock.tests2.CaptureTest.testCaptureNone":364,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":18,"org.easymock.tests.UsageUnorderedTest.message":267,"org.easymock.tests.UsageVerifyTest.twoReturns":201,"org.easymock.tests.UsageVarargTest.varargByteAccepted":197,"org.easymock.tests2.ThreadingTest.testThreadSafe":324,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":374,"org.easymock.tests.UsageTest.argumentsOrdered":207,"org.easymock.tests.UsageVarargTest.varargIntAccepted":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":126,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":260,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":69,"org.easymock.tests2.CaptureTest.testCapture_2617107":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":247,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":174,"org.easymock.tests2.UsageConstraintsTest.any":337,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":141,"org.easymock.tests2.StubTest.stub":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":30,"org.easymock.tests.UsageExpectAndThrowTest.longType":38,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":100,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":310,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":355,"org.easymock.tests2.SerializationTest.testClass":107,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":370,"org.easymock.tests.LimitationsTest.mockNativeMethod":85,"org.easymock.tests2.AnswerTest.answer":314,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":228,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":21,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":321,"org.easymock.tests2.CaptureTest.testAnd":356,"org.easymock.tests2.UsageTest.strictResetToDefault":296,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":313,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":166,"org.easymock.tests2.MockedExceptionTest.testMockedException":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":284,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":114,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":11,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":376,"org.easymock.tests2.DelegateToTest.testDelegate":7,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":78,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":39,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":156,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":144,"org.easymock.tests.MockingTest.testNicePartialClassMocking":77,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":50,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":160,"org.easymock.tests.LimitationsTest.mockFinalMethod":86,"org.easymock.tests2.CaptureTest.testCaptureLast":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":32,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":335,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":155,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":348,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":256,"org.easymock.tests.MockingTest.testTwoMocks":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":15,"org.easymock.tests2.CaptureTest.testCapture1_2446744":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":209,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":43,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":303,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":352,"org.easymock.tests.UsageThrowableTest.throwError":55,"org.easymock.tests.UsageStrictMockTest.differentMethods":235,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":98,"org.easymock.tests2.MockBuilderTest.testCreateMockString":149,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":273,"org.easymock.tests.UsageExpectAndThrowTest.floatType":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":116,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":111,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":315,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":125,"org.easymock.samples.PartialClassMockTest.testGetArea":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":248,"org.easymock.samples.ExampleTest.voteAgainstRemoval":185,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":17,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":16,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":168,"org.easymock.tests2.UsageTest.niceToStrict":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":120,"org.easymock.tests.LimitationsTest.privateConstructor":84,"org.easymock.tests2.UsageConstraintsTest.testNotNull":351,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":60,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":140,"org.easymock.tests2.UsageTest.defaultResetToNice":302,"org.easymock.tests2.MockBuilderTest.testCreateMock":146,"org.easymock.samples.ExampleTest.voteAgainstRemovals":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":224,"org.easymock.tests.UsageVarargTest.differentLength":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":128,"org.easymock.tests2.CallbackTest.callback":295,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":164,"org.easymock.tests.UsageTest.openCallCountByLastCall":205,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":44,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":285,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":25,"org.easymock.tests.UsageCallCountTest.tooFewCalls":258,"org.easymock.tests.UsageOverloadedMethodTest.overloading":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":130,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":341,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":27,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":220,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":22,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":153,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":340,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":177,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":244,"org.easymock.tests.UsageThrowableTest.throwCheckedException":57,"org.easymock.tests.MockClassControlTest.testEquals":93,"org.easymock.tests2.EasyMockSupportClassTest.testAll":112,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":81,"org.easymock.tests.MockingTest.testStrictClassMocking":73,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":52,"org.easymock.tests2.CaptureTest.testCaptureAll":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":254,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":24,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":154,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":152,"org.easymock.tests2.UsageConstraintsTest.testMatches":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":323,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":272,"org.easymock.samples.ExampleTest.voteForRemovals":187,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":327,"org.easymock.tests.UsageVarargTest.allKinds":199,"org.easymock.tests2.DependencyTest.testInterfaceMocking":293,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":255,"org.easymock.samples.BasicClassMockTest.testPrintContent":70,"org.easymock.samples.ExampleTest.addDocument":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":127,"org.easymock.tests2.DelegateToTest.testStubDelegate":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":132,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":59,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":307,"org.easymock.tests2.AnswerTest.stubAnswer":316,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":33,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":232,"org.easymock.tests2.UsageConstraintsTest.greaterThan":344,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":113,"org.easymock.tests.UsageVarargTest.varargLongAccepted":196,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":169,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":236,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":103,"org.easymock.samples.ExampleTest.voteForRemoval":184,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":325,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":227,"org.easymock.tests.UsageExpectAndReturnTest.floatType":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":104,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":161,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":67,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":345,"org.easymock.tests.UsageThrowableTest.noUpperLimit":268,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":329,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":80,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":172,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":361,"org.easymock.tests2.SerializationTest.test":322,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":145,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":178,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":282,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":97,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":12,"org.easymock.tests2.UsageConstraintsTest.testSame":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":110,"org.easymock.samples.SupportTest.addDocument":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":28,"org.easymock.tests2.CaptureTest.testCaptureFirst":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":283,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":306,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":117,"org.easymock.tests.GenericTest.testPackageScope":20,"org.easymock.tests2.CaptureTest.testCapture2_2446744":368,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":326,"org.easymock.tests2.UsageTest.moreThanOneArgument":297,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":375,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":147,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":198,"org.easymock.tests.GenericTest.testBridgedEquals":82,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":262,"org.easymock.tests.UsageExpectAndReturnTest.longType":212,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":252,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":221,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":53,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":349,"org.easymock.tests2.UsageStrictMockTest.differentMethods":312,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":269,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":213,"org.easymock.tests.UsageCallCountTest.tooManyCalls":263,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":49,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":276,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":257,"org.easymock.tests2.MockedExceptionTest.testRealException":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":217,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":239,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":58,"org.easymock.tests.MockingTest.testNiceClassMocking":79,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":151,"org.easymock.tests.MockingTest.testClassMocking":74,"org.easymock.tests2.UsageConstraintsTest.testContains":339,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":176,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":64,"org.easymock.tests2.UsageConstraintsTest.testFind":1,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":34,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":139,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":159,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":278,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":229,"org.easymock.tests.UsageExpectAndReturnTest.object":219,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":175,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":371,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":346,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":163,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":136,"org.easymock.tests2.UsageStrictMockTest.range":311,"org.easymock.tests2.UsageConstraintsTest.lessThan":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":288,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":193,"org.easymock.tests.UsageTest.exactCallCountByLastCall":208,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":281,"org.easymock.tests2.CaptureTest.testCaptureRightOne":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":121,"org.easymock.tests2.UsageConstraintsTest.testOr":334,"org.easymock.tests.UsageRangeTest.combination":274,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":157,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":189,"org.easymock.tests.UsageTest.wrongArguments":204,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":3,"org.easymock.tests2.MockBuilderTest.testWithConstructor":135,"org.easymock.tests.MockClassControlTest.testHashCode":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":118,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":88,"org.easymock.tests2.EasyMockSupportTest.testVerify":292,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":214,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":122,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":245,"org.easymock.tests.UsageVarargTest.varargShortAccepted":195,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":101,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":318,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":261,"org.easymock.tests2.UsageConstraintsTest.cmpTo":338,"org.easymock.tests.UsageVarargTest.varargCharAccepted":192,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":95,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":308,"org.easymock.tests2.UsageTest.openCallCountByLastCall":301,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":14,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":291,"org.easymock.tests.DefaultClassInstantiatorTest.object":96,"org.easymock.tests2.CaptureTest.testCaptureFromStub":367,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":137,"org.easymock.tests.UsageTest.unexpectedCallWithArray":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":123,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":231,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":56,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":259,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":223,"org.easymock.tests2.UsageConstraintsTest.constraints":330,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":233,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":91,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":167,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":41,"org.easymock.samples.ExampleTest.addAndChangeDocument":188,"org.easymock.tests.CapturesMatcherTest.test":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":226,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":179,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":230,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":253,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":362,"org.easymock.tests2.UsageTest.resumeIfFailure":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":215,"org.easymock.tests.LimitationsTest.abstractClass":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":71,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":286,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":190,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":173}}]
