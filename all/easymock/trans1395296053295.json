[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[110,111],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[2,10,23,112,24,25,27,28,29,30,32,33,113,34,114,47,83,84,104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,115,3,4,116,117,118,119,120,121,122,123,124,125,126,5,6,127,7,8,9,10,128,11,12,13,14,15,16,17,18,19,20,21,22,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,23,198,24,25,199,26,27,28,29,200,30,201,31,32,33,202,34,35,36,203,37,38,39,40,204,205,41,42,206,43,44,45,207,46,208,209,210,211,212,213,214,215,216,47,217,48,218,219,220,221,222,223,224,225,226,227,228,229,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,74,75,273,274,275,276,277,278,279,280,281,282,283,284,76,77,78,79,80,285,81,286,287,82,288,289,111,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,83,366,367,368,369,84,370,371,372,373,374,375,376,85,86,87,88,89,90,91,92,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,93,94,95,96,97,98,415,99,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,100,101,102,103,104,105,455,456,457,458,459,460,461,462,463,106,107,108,109,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[253],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:163","failures":[214,215],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[47,217,48,492],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[97,493,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.LastControl:95","failures":[142,144,152,246,247,250,252,253,255,265,270],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:107","sourceCode":"return this","type":"CtReturnImpl"},"failures":[27],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[110,495,111,359,496,497],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[142,143,144,145,152,153,246,247,249,250,251,252,253,254,255,256,265,266,270,271],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[200,498,499,500,501,502,36],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[0,1,2,10,12,15,16,19,20,23,198,24,25,199,26,27,28,29,200,30,201,31,32,33,202,34,35,36,203,47,55,65,71,83,84,101,104],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[47,217,48,492],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[396],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[0,0,1,1,132,153,244,245,249,250,251,252,258,260,261,263,264,270,271,272,290,296,297,300,301,302,445,446,447,448,449,450,451,452,453,454,470],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[251],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[15,17,134,172,176,184,186,190,191,194,214,232,235,262,292,297,300,357,365,377,390,392,401,402,404,405,436,102,104,464,466],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[0,1,35,503,504],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,2,115,3,4,116,117,118,119,120,121,123,124,125,126,5,6,127,7,8,9,10,11,14,15,16,17,20,21,22,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,161,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,23,24,27,28,29,30,32,33,34,35,37,38,39,40,205,41,42,210,213,214,215,47,217,48,223,52,55,65,71,230,231,232,234,235,236,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,280,281,284,79,80,81,288,289,111,290,291,292,293,294,296,297,298,299,300,301,302,317,318,319,320,321,322,323,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,373,374,375,376,377,379,380,405,406,407,417,418,419,421,422,423,424,425,426,427,428,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,100,102,103,505,505,458,459,460,461,462,463,108,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[142,143,144,145,152,153,246,247,249,250,251,252,253,254,255,256,265,266,270,271],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[506],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[2,116,117,118,119,121,123,125,6,8,16,130,131,132,133,134,135,136,143,144,145,146,147,148,149,150,151,152,154,155,173,176,177,181,182,185,186,187,188,190,191,194,195,196,27,33,214,230,231,232,235,238,244,245,247,249,250,251,252,253,254,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,288,289,290,291,292,293,294,296,297,298,299,300,301,302,318,320,323,329,363,364,377,406,417,418,419,421,422,424,425,426,427,428,433,435,437,438,440,441,442,443,444,450,451,452,453,454,462,470],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[0,1,12,198,199,200,31,507,202,508,509,506,35,36,47],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[47,217,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[132,135,138,139,140,141,174,175,181,182,111,290,293,358,360,363,364,433,435,436],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[233],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[0,1,2,115,3,4,116,117,118,119,120,121,123,124,125,126,5,6,127,7,8,9,10,11,14,15,16,17,20,21,22,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,161,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,23,24,27,28,29,30,32,33,34,35,37,38,39,40,205,41,42,210,213,214,215,47,217,48,223,52,55,65,71,230,231,232,234,235,236,238,239,240,242,243,244,245,246,247,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,280,281,284,79,80,81,288,289,111,290,291,292,293,294,296,297,298,299,300,301,302,317,318,319,320,321,322,323,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,373,374,375,376,377,379,380,405,406,407,417,418,419,421,422,423,424,425,426,427,428,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,100,102,103,458,459,460,461,462,463,108,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[134,182,292,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[247,253,265],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[47,217,48,492],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[132,134,135,138,139,140,141,174,175,181,182,111,290,292,293,358,360,363,364,510,511,512,433,434,435,436],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[0,0,1,1,12,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[47,217,48,492],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[308,455,457],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":247,"org.easymock.tests2.UsageTest.argumentsOrdered":182,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":357,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":391,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":177,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":115,"org.easymock.tests2.DelegateToTest.testReturnException":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":459,"org.easymock.tests.MockingTest.testPartialClassMocking":79,"org.easymock.tests.MockClassControlTest.testToString":87,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":137,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":59,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":337,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":510,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":254,"org.easymock.tests2.UsageTest.wrongArguments":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":296,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":167,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":375,"org.easymock.samples.ExampleTest.answerVsDelegate":117,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":84,"org.easymock.tests2.UsageConstraintsTest.testNull":250,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":287,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":7,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":92,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":194,"org.easymock.tests2.CaptureTest.testPrimitive":145,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":300,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":356,"org.easymock.tests.UsageTest.moreThanOneArgument":358,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":447,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":324,"org.easymock.tests.UsageTest.argumentsOrdered":364,"org.easymock.tests.UsageVarargTest.varargIntAccepted":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":450,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":23,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":228,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":454,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":161,"org.easymock.tests.ReplayStateInvalidUsageTest.times":311,"org.easymock.tests2.DependencyTest.testClassMocking":74,"org.easymock.tests2.AnswerTest.answer":210,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":171,"org.easymock.tests2.CaptureTest.testAnd":142,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":367,"org.easymock.tests2.UsageTest.strictResetToDefault":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":14,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":446,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":189,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":379,"org.easymock.tests2.DelegateToTest.testDelegate":238,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":352,"org.easymock.tests.LimitationsTest.mockFinalMethod":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":462,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":336,"org.easymock.tests2.DependencyTest.testClassMockingSupport":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":329,"org.easymock.tests2.CaptureTest.testCapture1_2446744":146,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":350,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":169,"org.easymock.tests.UsageThrowableTest.throwError":437,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":305,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":369,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":432,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":449,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":508,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":73,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.MockingTest.testInterfaceMocking":285,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":451,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":465,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":413,"org.easymock.tests2.UsageTest.niceToStrict":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":338,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":27,"org.easymock.tests2.MockBuilderTest.testCreateMock":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":68,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":164,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":110,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":346,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":190,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":366,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":431,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":373,"org.easymock.tests.UsageOverloadedMethodTest.overloading":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":70,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":260,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":483,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":405,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":493,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":259,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":151,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":420,"org.easymock.tests2.EasyMockSupportClassTest.testAll":52,"org.easymock.tests.MockClassControlTest.testEquals":91,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":103,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":170,"org.easymock.tests2.CaptureTest.testCaptureAll":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":334,"org.easymock.tests.MockNameTest.defaultName":416,"org.easymock.tests2.UsageConstraintsTest.testMatches":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":448,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":303,"org.easymock.samples.ExampleTest.voteForRemovals":121,"org.easymock.tests.UsageVarargTest.allKinds":428,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":434,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":335,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":443,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":463,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":225,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":237,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":415,"org.easymock.tests2.UsageConstraintsTest.greaterThan":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":53,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":378,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":17,"org.easymock.samples.ExampleTest.voteForRemoval":118,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":99,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":18,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":240,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":370,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":10,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":172,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":100,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":187,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":458,"org.easymock.tests2.CaptureTest.testCaptureFirst":155,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":188,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":184,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":479,"org.easymock.tests2.UsageTest.moreThanOneArgument":174,"org.easymock.tests2.CaptureTest.testCapture2_2446744":154,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":399,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":33,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":427,"org.easymock.tests.GenericTest.testBridgedEquals":105,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":322,"org.easymock.tests.UsageExpectAndReturnTest.longType":475,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":332,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":113,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":355,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":268,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":372,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":353,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":468,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":445,"org.easymock.tests.UsageCallCountTest.tooManyCalls":323,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":480,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":166,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":442,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":38,"org.easymock.tests.MockingTest.testNiceClassMocking":82,"org.easymock.tests.MockingTest.testClassMocking":77,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":112,"org.easymock.tests2.UsageConstraintsTest.testContains":258,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":316,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":22,"org.easymock.tests2.UsageConstraintsTest.testFind":249,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":407,"org.easymock.tests.MockTypeTest.fromEasyMockClass":368,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":277,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests.UsageExpectAndReturnTest.object":482,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":422,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":411,"org.easymock.tests.UsageTest.exactCallCountByLastCall":365,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":325,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":36,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":488,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":417,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":280,"org.easymock.tests.MockClassControlTest.testHashCode":90,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":219,"org.easymock.tests2.EasyMockSupportTest.testVerify":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":62,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":430,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":168,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":216,"org.easymock.tests.UsageVarargTest.varargCharAccepted":421,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":414,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":404,"org.easymock.tests2.UsageTest.openCallCountByLastCall":178,"org.easymock.tests.DefaultClassInstantiatorTest.object":93,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":196,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":429,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":63,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":344,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":440,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":159,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":218,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":15,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":343,"org.easymock.tests.CapturesMatcherTest.test":505,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":489,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":71,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":88,"org.easymock.tests2.UsageTest.resumeIfFailure":183,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":83,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":461,"org.easymock.tests2.StubTest.stubWithReturnValue":232,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":200,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":481,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":269,"org.easymock.tests2.SerializationTest.testAllMockedMethod":48,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":397,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":506,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":495,"org.easymock.samples.SupportTest.voteForRemovals":125,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":349,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":403,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":211,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":457,"org.easymock.tests.UsageExpectAndThrowTest.object":347,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":266,"org.easymock.tests2.DelegateToTest.testWrongClass":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":301,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":302,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":292,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":208,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":192,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":348,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":49,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":313,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":374,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":496,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":466,"org.easymock.tests2.CaptureTest.testCaptureNone":150,"org.easymock.tests.UsageUnorderedTest.message":433,"org.easymock.tests.UsageVerifyTest.twoReturns":436,"org.easymock.tests.UsageVarargTest.varargByteAccepted":426,"org.easymock.tests2.ThreadingTest.testThreadSafe":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":66,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":320,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":412,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":144,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":299,"org.easymock.tests2.UsageConstraintsTest.any":256,"org.easymock.tests2.StubTest.stub":231,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":310,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndThrowTest.longType":340,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":97,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":309,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":133,"org.easymock.tests2.SerializationTest.testClass":47,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests.LimitationsTest.mockNativeMethod":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":491,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":158,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":136,"org.easymock.tests2.NameTest.nameForMocksControl":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":160,"org.easymock.tests2.MockedExceptionTest.testMockedException":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":54,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":362,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":81,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":276,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":341,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":5,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":30,"org.easymock.tests.MockingTest.testNicePartialClassMocking":80,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":9,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":156,"org.easymock.tests2.CaptureTest.testCaptureLast":149,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":330,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":42,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":253,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":267,"org.easymock.tests.MockingTest.testTwoMocks":78,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":206,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":472,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":345,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":181,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":271,"org.easymock.samples.ExampleTest.removeNonExistingDocument":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":163,"org.easymock.tests.UsageStrictMockTest.differentMethods":293,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":220,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":95,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":241,"org.easymock.tests2.MockBuilderTest.testCreateMockString":34,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":56,"org.easymock.tests.UsageExpectAndThrowTest.floatType":339,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":51,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":213,"org.easymock.tests.UsageVerifyTest.twoThrows":435,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":203,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":65,"org.easymock.samples.ExampleTest.voteAgainstRemoval":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":392,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":16,"org.easymock.tests.LimitationsTest.privateConstructor":107,"org.easymock.tests2.UsageConstraintsTest.testNotNull":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":444,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":20,"org.easymock.tests2.UsageTest.defaultResetToNice":180,"org.easymock.samples.ExampleTest.voteAgainstRemovals":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":393,"org.easymock.tests.UsageVarargTest.differentLength":423,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":157,"org.easymock.tests2.CallbackTest.callback":230,"org.easymock.tests2.UsageConstraintsTest.equals":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":12,"org.easymock.tests.UsageTest.openCallCountByLastCall":361,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":298,"org.easymock.tests.UsageCallCountTest.tooFewCalls":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":40,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":376,"org.easymock.tests.UsageThrowableTest.throwCheckedException":441,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":497,"org.easymock.tests.MockingTest.testStrictClassMocking":76,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":471,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":162,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":39,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":205,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":215,"org.easymock.tests.ObjectMethodsTest.testHashCode":410,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":501,"org.easymock.tests2.NameTest.nameForNiceMock":140,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":243,"org.easymock.tests2.DependencyTest.testInterfaceMocking":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":72,"org.easymock.tests2.DelegateToTest.testStubDelegate":235,"org.easymock.tests2.AnswerTest.stubAnswer":214,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":290,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":201,"org.easymock.tests.UsageVarargTest.varargLongAccepted":425,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":490,"org.easymock.tests.UsageExpectAndReturnTest.floatType":474,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":35,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.UsageThrowableTest.noUpperLimit":438,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":227,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":264,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":245,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":43,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":147,"org.easymock.tests2.SerializationTest.test":217,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":494,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":94,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":473,"org.easymock.tests2.UsageConstraintsTest.testSame":251,"org.easymock.samples.SupportTest.addDocument":124,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":204,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":57,"org.easymock.tests.GenericTest.testPackageScope":102,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":226,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":286,"org.easymock.tests2.NameTest.nameForMock":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":484,"org.easymock.tests2.UsageStrictMockTest.differentMethods":135,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":202,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":13,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":476,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":351,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":408,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":380,"org.easymock.tests2.MockedExceptionTest.testRealException":129,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":209,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":394,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":297,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":314,"org.easymock.tests2.NameTest.nameForStrictMock":139,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":26,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":275,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":8,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":46,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":511,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":96,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":265,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":24,"org.easymock.tests2.UsageStrictMockTest.range":134,"org.easymock.tests2.UsageConstraintsTest.lessThan":272,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":186,"org.easymock.tests2.CaptureTest.testCaptureRightOne":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":61,"org.easymock.tests2.UsageConstraintsTest.testOr":252,"org.easymock.tests.UsageRangeTest.combination":377,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":6,"org.easymock.tests.UsageTest.wrongArguments":360,"org.easymock.tests2.MockBuilderTest.testWithConstructor":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":58,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":477,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":382,"org.easymock.tests.UsageVarargTest.varargShortAccepted":424,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":98,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":321,"org.easymock.tests2.UsageConstraintsTest.cmpTo":257,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":384,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":179,"org.easymock.tests2.CaptureTest.testCaptureFromStub":153,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":304,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":25,"org.easymock.tests.UsageTest.unexpectedCallWithArray":359,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":111,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":319,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":507,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":486,"org.easymock.tests2.UsageConstraintsTest.constraints":246,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":291,"org.easymock.samples.ExampleTest.addAndChangeDocument":123,"org.easymock.tests.UsageStrictMockTest.testVerify":295,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":126,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":333,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":452,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":114,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":478,"org.easymock.tests.LimitationsTest.abstractClass":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":453,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":512,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":191}}]
