[{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,1,99,100,101,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[103,104,105,106,107,108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"parameterType","paramType":"parameterType"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[110,111,112,88],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[113,113,114,114,11,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,43,44,45,46,130,47,131,132,74,75,76,77,78,133,79,134,135,80,81],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[136,137,138,11,139,115,116,140,141,117,118,119,120,142,143,144,0,145,121,146,122,123,147,124,125,148,149,150,151,152,126,127,128,153,154,155,156,157,158,159,160,161,162,163,129,164,165,166,167,20,168,25,169,170,47,171,172,131,173,174,175,74,75,76,77,78,79,134,176,177,135,80,81,178,179],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[180,181],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1673","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:210","sourceCode":"return org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[103,104,182,105,106,107,183,108,109,184],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[138,139,12,13,140,30,185,186,187,188,189,190,191,192,170,193,48,49,194,195,196,197,198,199,200,201,178],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[169,202],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[111,112],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[203,204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:205","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[7,205,21,22,206,207,26,208,209,27,210,28,29,211,30,185,212,39,40,41,180,213,214,215],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[119],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[180,181],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[142],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[3,216,4,5,217,6,218,219,220,221,8,222,223,9,10,136,137,138,224,11,139,12,13,225,226,115,116,140,141,117,118,119,120,142,143,0,145,121,146,122,123,147,124,125,148,149,150,151,152,126,127,128,153,154,155,156,157,158,159,160,161,162,163,129,164,165,166,227,111,112,14,15,16,17,18,19,20,23,228,229,230,25,231,169,232,233,234,235,236,237,238,239,240,241,242,186,202,243,187,244,188,245,246,189,190,247,191,212,248,249,203,250,31,34,35,251,252,38,253,42,254,255,256,257,258,259,260,181,43,44,45,46,130,192,261,170,47,193,48,49,262,263,50,51,52,53,54,55,264,265,56,57,266,58,59,60,267,61,62,63,64,65,268,269,270,271,171,172,66,68,69,272,194,195,131,173,273,274,275,276,277,73,278,279,280,281,282,283,284,285,196,286,198,287,288,199,200,201,289,290,291,292,293,294,295,296,297,298,175,74,75,76,77,78,299,79,134,176,177,135,80,81,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,178,179,320,321,322,323,324,325,326,327,2,328,329,204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[143],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[218,136,137,115,122,124,128,154,160,161,165,228,229,243,255,256,50,264,59,62,64,94,330,275,286,300,306,312,316,318,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1673","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[331],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[146],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":141,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":196,"org.easymock.tests2.UsageTest.argumentsOrdered":190,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":92,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":188,"org.easymock.tests2.StubTest.stubWithReturnValue":258,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":104,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":220,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":57,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":152,"org.easymock.tests2.SerializationTest.testAllMockedMethod":252,"org.easymock.tests2.DelegateToTest.testReturnException":253,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":269,"org.easymock.tests.MockingTest.testPartialClassMocking":70,"org.easymock.samples.SupportTest.voteForRemovals":8,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":312,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":300,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":39,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":110,"org.easymock.tests.UsageExpectAndThrowTest.object":310,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":10,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":149,"org.easymock.tests2.DelegateToTest.testWrongClass":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":105,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":80,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":81,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":79,"org.easymock.tests2.UsageTest.wrongArguments":187,"org.easymock.tests.UsageStrictMockTest.range":48,"org.easymock.samples.ConstructorCalledMockTest.testTax":113,"org.easymock.samples.ExampleTest.answerVsDelegate":216,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":215,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":31,"org.easymock.tests2.UsageConstraintsTest.testNull":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":311,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":17,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":285,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":239,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":28,"org.easymock.tests2.CaptureTest.testPrimitive":156,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":319,"org.easymock.tests.UsageTest.moreThanOneArgument":286,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":199,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":45,"org.easymock.tests2.CaptureTest.testCaptureNone":161,"org.easymock.tests.UsageUnorderedTest.message":178,"org.easymock.tests.UsageVerifyTest.twoReturns":195,"org.easymock.tests.UsageVarargTest.varargByteAccepted":297,"org.easymock.tests2.ThreadingTest.testThreadSafe":228,"org.easymock.tests.UsageTest.argumentsOrdered":200,"org.easymock.tests.UsageVarargTest.varargIntAccepted":291,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":281,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":74,"org.easymock.tests2.CaptureTest.testCapture_2617107":155,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":207,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":177,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":210,"org.easymock.tests2.UsageConstraintsTest.any":0,"org.easymock.tests2.StubTest.stub":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":78,"org.easymock.tests.UsageExpectAndThrowTest.longType":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":101,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":139,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":250,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":226,"org.easymock.tests.LimitationsTest.mockNativeMethod":73,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":213,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":65,"org.easymock.tests2.AnswerTest.answer":166,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":98,"org.easymock.tests2.CaptureTest.testAnd":153,"org.easymock.tests2.UsageTest.strictResetToDefault":202,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":168,"org.easymock.tests2.MockedExceptionTest.testMockedException":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":235,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":68,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":288,"org.easymock.tests2.DelegateToTest.testDelegate":255,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":331,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":304,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":72,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":14,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":29,"org.easymock.tests.MockingTest.testNicePartialClassMocking":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":315,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":19,"org.easymock.tests2.CaptureTest.testCaptureLast":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":37,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":142,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":150,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":174,"org.easymock.tests2.CaptureTest.testCapture1_2446744":157,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":50,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":308,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":189,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":127,"org.easymock.tests.UsageThrowableTest.throwError":179,"org.easymock.tests.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":230,"org.easymock.tests2.MockBuilderTest.testCreateMockString":185,"org.easymock.tests.UsageExpectAndThrowTest.floatType":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":130,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":147,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":227,"org.easymock.tests.UsageVerifyTest.twoThrows":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":40,"org.easymock.samples.PartialClassMockTest.testGetArea":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":75,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":93,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":301,"org.easymock.tests2.UsageTest.niceToStrict":244,"org.easymock.tests2.UsageConstraintsTest.testNotNull":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":326,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":82,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":27,"org.easymock.tests2.MockBuilderTest.testCreateMock":211,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":94,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":61,"org.easymock.tests.UsageVarargTest.differentLength":294,"org.easymock.tests2.CallbackTest.callback":256,"org.easymock.tests.UsageTest.openCallCountByLastCall":287,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":309,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":236,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":176,"org.easymock.tests.UsageCallCountTest.tooFewCalls":279,"org.easymock.tests.UsageOverloadedMethodTest.overloading":274,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":204,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":122,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":58,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":34,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":146,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":162,"org.easymock.tests.UsageThrowableTest.throwCheckedException":323,"org.easymock.tests.MockClassControlTest.testEquals":284,"org.easymock.tests2.EasyMockSupportClassTest.testAll":38,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":317,"org.easymock.tests2.CaptureTest.testCaptureAll":154,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":36,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":173,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.testMatches":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":35,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":46,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":132,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":108,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":231,"org.easymock.tests.UsageVarargTest.allKinds":175,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":272,"org.easymock.tests2.DependencyTest.testInterfaceMocking":9,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":107,"org.easymock.samples.BasicClassMockTest.testPrintContent":223,"org.easymock.samples.ExampleTest.addDocument":217,"org.easymock.tests2.DelegateToTest.testStubDelegate":42,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":325,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests2.AnswerTest.stubAnswer":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":172,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests2.UsageConstraintsTest.greaterThan":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":184,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":67,"org.easymock.tests.UsageVarargTest.varargLongAccepted":296,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":23,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":91,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":64,"org.easymock.tests.UsageExpectAndReturnTest.floatType":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":205,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":24,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":114,"org.easymock.tests.UsageThrowableTest.noUpperLimit":320,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":125,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":299,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":116,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests2.SerializationTest.test":251,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":233,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":321,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":51,"org.easymock.tests2.UsageConstraintsTest.testSame":119,"org.easymock.samples.SupportTest.addDocument":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":268,"org.easymock.tests2.CaptureTest.testCaptureFirst":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":234,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":191,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":265,"org.easymock.tests.GenericTest.testPackageScope":259,"org.easymock.tests2.UsageTest.moreThanOneArgument":243,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":25,"org.easymock.tests2.CaptureTest.testCapture2_2446744":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":1,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":86,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":298,"org.easymock.tests.GenericTest.testBridgedEquals":181,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":282,"org.easymock.tests.UsageExpectAndReturnTest.longType":53,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":169,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":59,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":133,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":151,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":316,"org.easymock.tests2.UsageStrictMockTest.differentMethods":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":54,"org.easymock.tests.UsageCallCountTest.tooManyCalls":283,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":314,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":276,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":69,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":278,"org.easymock.tests2.MockedExceptionTest.testRealException":203,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":95,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":134,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":32,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":249,"org.easymock.tests2.UsageConstraintsTest.testFind":117,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":275,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":209,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":136,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":18,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":192,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":137,"org.easymock.tests.UsageExpectAndReturnTest.object":266,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":20,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":26,"org.easymock.tests2.UsageStrictMockTest.range":12,"org.easymock.tests2.UsageConstraintsTest.lessThan":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":238,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":293,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":106,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":277,"org.easymock.tests.UsageTest.exactCallCountByLastCall":201,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":87,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":183,"org.easymock.tests2.CaptureTest.testCaptureRightOne":163,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":327,"org.easymock.tests2.UsageConstraintsTest.testOr":120,"org.easymock.tests.UsageRangeTest.combination":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":103,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":289,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":62,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":15,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":329,"org.easymock.tests.UsageTest.wrongArguments":198,"org.easymock.tests2.EasyMockSupportTest.testVerify":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":60,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":2,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":328,"org.easymock.tests.UsageVarargTest.varargShortAccepted":295,"org.easymock.tests2.UsageConstraintsTest.cmpTo":145,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":167,"org.easymock.tests.UsageVarargTest.varargCharAccepted":292,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":102,"org.easymock.tests2.UsageTest.openCallCountByLastCall":245,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":246,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":241,"org.easymock.tests2.CaptureTest.testCaptureFromStub":129,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":208,"org.easymock.tests.UsageTest.unexpectedCallWithArray":197,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":322,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":170,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":280,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":267,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":193,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":21,"org.easymock.tests2.UsageConstraintsTest.constraints":140,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":306,"org.easymock.samples.ExampleTest.addAndChangeDocument":218,"org.easymock.tests.UsageStrictMockTest.testVerify":263,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":63,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":219,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":41,"org.easymock.tests2.UsageTest.resumeIfFailure":247,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":76,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":264,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":77,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":237}}]
