[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[14,15,16,17,18,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[14,22,23,24,25,26,27,28,20,29,30],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[31,32,33,34],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[35,36,37],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[31,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:42","sourceCode":"return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[67,68,69],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[70,71],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[72,14,15,16,17,73,31,20,74],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[75,76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:380","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[77,78,79],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[49,80,50,55,81,82],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[49,55,81,82],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[83,84,85,86,87,88,89,90,77,78,91,92,93,94,95,96,97,98,99,100,101,102,72,31,32,33,103,104,24,105,106,107,25,38,108,39,109,110,111,75,112,76,40,113,114,115,116,117,118,35,119,120,121,122,123,124,42,45,125,126,127,128,129,47,130,131,132,133,134,3,135,4,136,5,137,138,54,56,57,139,140,141,82,142,143,144,145,146,147,148,149,150,151,152,153,154,155,63,156,157,158,8,159,160,161,162,163,164,71,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,37,202,203,204,205,206,207,208,209],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[14,210,15,16,17,18,19,73,31,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[211],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[126],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[72,14,212,31,213,27,28,20,74,30,214,215],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[85,0,114,216,217,120,9,218,198,219,220,221,203],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[222,88,1,2,78,94,95,97,223,224,114,116,117,118,35,119,225,120,41,129,3,226,7,52,58,59,62,227,228,8,159,10,11,229,163,164,230,231,197,198,219,13,201,37,202,203],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[31,32,33,34],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[232,38,108,39,109,233,110,111,75,76,234,40,235,236,113,237],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[137,213,238,6,226,138,7,239,80,50,52,53,240,54,55,56,57,74,58,59,62,81,241,140,242,243,244,141,245,246,82,247,79,248,249,250,251,252,253,254,142,255,256,257,258,259,143,260,261,145,146,214,214,215,215,63,262,263,264,265,266,267,268,269,156,157,64,270,271,272,273,274,275,276,277,278,279,280,170,281,282,283,284,171,172,173,285,65,66,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","defaultValue":"key","key":"key"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[0,1,2,286,116,35,119,287,288,289,290,227,8,9,10,11,291,292,293,218,197,198,294,201,37,202],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,2,216,217,21,41,295,296,44,297,298,299,300,10,11,301,302,303,304,175,231,218,305,220,221],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[224,306],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[85,121,122,205,206],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[128],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:115","sourceCode":"for (final org.easymock.internal.MethodSerializationWrapper org.easymock.internal.MethodSerializationWrapper : java.util.Set<org.easymock.internal.MethodSerializationWrapper>) {\n    try {\n        java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n    }\n}","type":"CtForEachImpl"},"failures":[31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":42,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":219,"org.easymock.tests2.UsageTest.argumentsOrdered":119,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":98,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":118,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":20,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":133,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":155,"org.easymock.tests2.SerializationTest.testAllMockedMethod":33,"org.easymock.tests2.DelegateToTest.testReturnException":121,"org.easymock.tests.MockingTest.testPartialClassMocking":171,"org.easymock.samples.SupportTest.voteForRemovals":154,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":269,"org.easymock.tests.MockClassControlTest.testToString":273,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":249,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":34,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":82,"org.easymock.tests.UsageExpectAndThrowTest.object":168,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":291,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":84,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":15,"org.easymock.tests2.DelegateToTest.testWrongClass":122,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":125,"org.easymock.tests2.UsageTest.wrongArguments":116,"org.easymock.samples.ConstructorCalledMockTest.testTax":214,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.samples.ExampleTest.answerVsDelegate":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":103,"org.easymock.tests2.UsageConstraintsTest.testNull":43,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":4,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":278,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":56,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":97,"org.easymock.tests2.CaptureTest.testPrimitive":109,"org.easymock.tests.UsageTest.moreThanOneArgument":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":242,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":135,"org.easymock.tests2.CaptureTest.testCaptureNone":112,"org.easymock.tests.UsageUnorderedTest.message":227,"org.easymock.tests.UsageVerifyTest.twoReturns":198,"org.easymock.tests.UsageVarargTest.varargByteAccepted":194,"org.easymock.tests.UsageTest.argumentsOrdered":202,"org.easymock.tests.UsageVarargTest.varargIntAccepted":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":255,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":162,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":145,"org.easymock.tests2.CaptureTest.testCapture_2617107":39,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":50,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":71,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":55,"org.easymock.tests2.UsageConstraintsTest.any":126,"org.easymock.tests2.StubTest.stub":70,"org.easymock.tests.UsageExpectAndThrowTest.longType":166,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":266,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":88,"org.easymock.tests2.SerializationTest.testClass":31,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":90,"org.easymock.tests.LimitationsTest.mockNativeMethod":170,"org.easymock.tests2.AnswerTest.answer":85,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":64,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":46,"org.easymock.tests2.CaptureTest.testAnd":38,"org.easymock.tests2.UsageTest.strictResetToDefault":115,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":89,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":6,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":28,"org.easymock.tests2.NameTest.nameForMocksControl":290,"org.easymock.tests2.MockedExceptionTest.testMockedException":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":93,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":221,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":173,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":57,"org.easymock.tests.MockingTest.testNicePartialClassMocking":172,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":169,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":5,"org.easymock.tests.LimitationsTest.mockFinalMethod":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":210,"org.easymock.tests2.CaptureTest.testCaptureLast":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":204,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":25,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":45,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":131,"org.easymock.tests.MockingTest.testTwoMocks":284,"org.easymock.tests2.CaptureTest.testCapture1_2446744":233,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":26,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":300,"org.easymock.tests.UsageThrowableTest.throwError":174,"org.easymock.tests.UsageStrictMockTest.differentMethods":11,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":264,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":223,"org.easymock.tests2.MockBuilderTest.testCreateMockString":62,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":247,"org.easymock.tests.UsageExpectAndThrowTest.floatType":165,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":244,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":212,"org.easymock.tests.UsageVerifyTest.twoThrows":197,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":142,"org.easymock.samples.PartialClassMockTest.testGetArea":63,"org.easymock.samples.ExampleTest.voteAgainstRemoval":150,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":250,"org.easymock.tests2.UsageTest.niceToStrict":117,"org.easymock.tests.LimitationsTest.privateConstructor":280,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":23,"org.easymock.tests2.UsageConstraintsTest.testNotNull":48,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":81,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":181,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":54,"org.easymock.tests2.MockBuilderTest.testCreateMock":58,"org.easymock.samples.ExampleTest.voteAgainstRemovals":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":257,"org.easymock.tests.UsageVarargTest.differentLength":230,"org.easymock.tests2.CallbackTest.callback":224,"org.easymock.tests2.UsageConstraintsTest.equals":36,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":213,"org.easymock.tests.UsageTest.openCallCountByLastCall":220,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":94,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":124,"org.easymock.tests.UsageOverloadedMethodTest.overloading":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":254,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":207,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":199,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":105,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":128,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":76,"org.easymock.tests.UsageThrowableTest.throwCheckedException":178,"org.easymock.tests.MockClassControlTest.testEquals":277,"org.easymock.tests2.EasyMockSupportClassTest.testAll":141,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":157,"org.easymock.tests.MockingTest.testStrictClassMocking":282,"org.easymock.tests2.CaptureTest.testCaptureAll":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":107,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":24,"org.easymock.tests2.UsageConstraintsTest.testMatches":298,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":106,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":18,"org.easymock.tests2.NameTest.nameForNiceMock":289,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":102,"org.easymock.tests.UsageVarargTest.allKinds":196,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":218,"org.easymock.tests2.DependencyTest.testInterfaceMocking":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":17,"org.easymock.samples.BasicClassMockTest.testPrintContent":146,"org.easymock.samples.ExampleTest.addDocument":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":260,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":180,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":222,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":9,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":73,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":245,"org.easymock.tests.UsageVarargTest.varargLongAccepted":193,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":7,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":160,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":268,"org.easymock.samples.ExampleTest.voteForRemoval":149,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":239,"org.easymock.tests.UsageExpectAndReturnTest.floatType":182,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":60,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":72,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":49,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":215,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":299,"org.easymock.tests.UsageThrowableTest.noUpperLimit":175,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":209,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":21,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests2.SerializationTest.test":32,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":110,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":74,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":91,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":176,"org.easymock.tests2.UsageConstraintsTest.testSame":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":243,"org.easymock.samples.SupportTest.addDocument":153,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":69,"org.easymock.tests2.CaptureTest.testCaptureFirst":113,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":92,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":79,"org.easymock.tests.GenericTest.testPackageScope":156,"org.easymock.tests2.UsageTest.moreThanOneArgument":286,"org.easymock.tests2.CaptureTest.testCapture2_2446744":236,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":101,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":59,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":195,"org.easymock.tests.GenericTest.testBridgedEquals":270,"org.easymock.tests2.NameTest.nameForMock":287,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":211,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":163,"org.easymock.tests.UsageExpectAndReturnTest.longType":183,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":77,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":61,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":132,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":30,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":238,"org.easymock.tests.UsageCallCountTest.tooManyCalls":164,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":306,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":179,"org.easymock.tests.MockingTest.testNiceClassMocking":285,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":104,"org.easymock.tests.MockingTest.testClassMocking":283,"org.easymock.tests2.UsageConstraintsTest.testContains":297,"org.easymock.tests2.NameTest.nameForStrictMock":288,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":51,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":140,"org.easymock.tests2.UsageConstraintsTest.testFind":295,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":305,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":240,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":136,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":228,"org.easymock.tests.UsageExpectAndReturnTest.object":185,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":292,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":265,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":47,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":137,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":52,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":96,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":16,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":191,"org.easymock.tests.UsageTest.exactCallCountByLastCall":203,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":251,"org.easymock.tests2.CaptureTest.testCaptureRightOne":40,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":303,"org.easymock.tests2.UsageConstraintsTest.testOr":44,"org.easymock.tests.UsageRangeTest.combination":231,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":14,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":3,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":187,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":206,"org.easymock.tests.UsageTest.wrongArguments":201,"org.easymock.tests2.MockBuilderTest.testWithConstructor":27,"org.easymock.tests.MockClassControlTest.testHashCode":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":248,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":272,"org.easymock.tests2.EasyMockSupportTest.testVerify":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":252,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":304,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":267,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":205,"org.easymock.tests.UsageVarargTest.varargShortAccepted":192,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":229,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":123,"org.easymock.tests2.UsageConstraintsTest.cmpTo":127,"org.easymock.tests.UsageVarargTest.varargCharAccepted":190,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":67,"org.easymock.tests2.CaptureTest.testCaptureMultiple":232,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":87,"org.easymock.tests2.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests.DefaultClassInstantiatorTest.object":262,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":99,"org.easymock.tests2.CaptureTest.testCaptureFromStub":235,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":53,"org.easymock.tests.UsageTest.unexpectedCallWithArray":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":253,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":177,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":161,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":29,"org.easymock.tests2.CaptureTest.testCapture":234,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":275,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":226,"org.easymock.tests2.UsageConstraintsTest.constraints":41,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":159,"org.easymock.tests.CapturesMatcherTest.test":237,"org.easymock.tests.UsageStrictMockTest.testVerify":12,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":144,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":143,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":158,"org.easymock.tests2.UsageTest.resumeIfFailure":225,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":111,"org.easymock.tests.LimitationsTest.abstractClass":279,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":65,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":208,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":95,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":188}}]
