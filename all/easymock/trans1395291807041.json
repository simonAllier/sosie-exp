[{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:110","sourceCode":"return ((org.easymock.internal.Invocation.(getMockAndMethodName()) + \"(\") + org.easymock.internal.ArgumentToString.(org.easymock.internal.ArgumentToString.argumentsToString(java.lang.Object[]))) + \")\"","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,4,27,28,29,5,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[42,43,44,45,46,47,48,49,50,50,51,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,6,7,75,76,77,78,8,9,79,80,81,82,10,11,83,84,12,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,13,101,102,103,104,105,106,107,108,109,110,111,112,113,114,14,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,15,131,132,133,134,16,17,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,18,156,157,158,159,160,161,19,162,163,164,20,165,166,21,167,168,169,170,22,23,171,172,173,174,175,176,177,24,178,179,180,181,182,183,184,185,25,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,4,259,260,27,28,261,262,263,264,265,266,267,268,269,29,5,30,270,271,31,32,272,273,35,274,275,276,277,278,279,280,281,282,36,283,284,39,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,40,41,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return this.org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[42,43,44,45,46,47,48,49,50,50,51,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,72,73,74,6,7,76,77,78,8,9,79,80,81,82,10,11,83,84,12,85,87,88,91,92,93,94,95,96,97,98,99,100,13,101,102,103,104,105,106,108,109,110,111,112,113,114,14,115,116,117,118,120,121,122,123,124,125,126,127,129,15,132,133,134,16,17,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,18,156,157,158,159,160,161,19,162,163,164,20,165,166,21,167,168,170,22,23,171,172,173,175,177,24,178,180,182,183,185,186,187,188,189,190,191,192,193,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,325,248,249,250,251,252,256,257,258,4,259,260,27,28,262,269,29,5,30,270,271,31,32,272,273,326,34,327,35,277,278,279,280,281,282,36,283,284,39,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,40,41,316,317,319,320,321,322,323,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"control":"control","args":"args","proxy":"proxy","method":"method"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[328,329,48,50,50,51,51,58,330,124,125,126,127,128,129,130,15,131,132,133,134,16,17,139,141,142,143,144,146,147,154,170,22,171,172,173,174,175,176,177,24,178,179,219,331,253,254,255,332,256,333,257,334,263,266,276,309,318,319,320,321],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[65,76,81,137,138,139,140,183,191,192,200,204,205,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,269,271,279,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[328,329,48,50,50,51,51,58,330,124,125,126,127,128,129,15,131,132,133,134,16,17,139,141,142,143,144,146,147,154,170,22,171,172,173,174,175,176,177,24,178,219,331,256,333,257,309,318,319,320,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[328,329,48,50,50,51,51,58,330,335,336,337,338,339,340,124,341,342,125,343,344,345,346,347,348,349,350,351,126,352,353,354,355,356,127,357,358,128,359,129,130,360,15,131,132,133,361,134,16,362,17,137,138,139,141,142,143,144,146,147,154,363,170,22,171,172,173,174,175,364,365,176,177,24,178,366,179,219,367,331,253,254,255,368,369,332,370,371,372,373,374,375,376,377,256,333,257,334,263,266,276,378,379,309,380,381,382,318,319,320,321,383],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[377,334],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[6,8,10,11,384,4,27,5,30,31,32,35,40,41],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:233","failures":[42,43,44,45,385,46,47,328,329,48,386,49,387,50,50,51,51,388,52,53,54,55,56,57,58,59,330,60,61,62,64,65,66,67,72,389,73,74,6,7,75,76,77,78,8,9,79,80,81,82,10,11,83,84,12,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,13,101,102,103,104,105,106,107,108,109,110,111,112,113,114,14,115,116,117,118,119,120,121,122,123,124,125,126,127,129,15,132,133,16,135,137,138,139,140,390,391,392,393,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,18,156,157,158,159,160,161,19,162,163,164,20,165,166,21,167,168,169,170,22,23,171,172,173,175,177,24,178,180,182,183,185,186,187,188,189,190,191,192,193,198,199,200,201,202,203,204,205,206,207,208,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,394,395,396,397,398,325,26,399,400,401,247,248,249,250,256,333,257,258,402,4,259,260,27,28,261,403,262,269,29,30,270,271,31,32,272,33,273,404,405,406,34,327,35,277,278,279,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,280,423,424,425,426,427,281,428,282,36,283,284,39,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,40,41,316,317,319,320,321,322,323,324],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[58,59,330,429],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[120],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[73,6,7,78,8,10,11,390,391,392,393,430,4,259,27,28,29,30,31,32,310,40,41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[155,420],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[58,431,432,433,434,435,436,361,363],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[12,86,87,88,89,90,93,437,94],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[66,67,68,73,74,12,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,13,101,102,103,104,105,106,107,108,109,110,111,112,113,114,14,115,116,117,118,119,120,121,122,123,438,128,158,160,175,176,189,190,191,192,193,224,225,247,4,259,35,274,304,305,306,307,308,316,317,322,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[257],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[73,6,7,78,8,10,11,390,391,392,393,430,439,440,4,259,27,28,29,30,31,32,35,310,40,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[186,187,188],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[111],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[82,365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[63,136,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[431,432,433,434,435,436,363],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[42,43,44,45,385,46,441,47,328,329,48,386,49,387,50,51,388,52,53,54,55,56,57,58,59,330,442,443,60,61,444,445,446,447,448,62,63,449,450,451,452,453,335,454,455,336,456,457,64,65,66,458,67,459,460,461,462,463,464,68,69,70,71,72,389,73,74,6,7,75,76,77,78,8,9,79,80,81,82,10,11,83,84,12,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,13,465,101,102,103,104,105,106,107,108,109,110,111,112,113,114,14,115,116,117,118,119,120,121,122,123,338,339,340,124,341,342,125,343,344,345,346,347,348,349,350,351,126,352,353,354,355,356,127,357,358,438,128,129,130,360,15,131,132,133,466,361,134,16,17,467,468,469,470,471,135,136,472,473,474,475,476,137,138,139,140,477,390,391,392,393,141,142,143,144,478,145,146,147,479,148,149,150,151,152,153,154,363,155,18,480,156,157,158,159,160,161,19,162,163,164,20,165,166,21,167,168,169,170,22,23,171,172,173,174,481,175,364,365,176,177,24,178,366,179,180,181,182,183,184,185,25,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,482,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,394,395,396,483,397,398,325,26,399,400,401,247,248,249,250,251,252,367,331,253,254,255,368,369,332,370,371,372,373,374,375,376,377,256,333,257,334,258,402,4,259,260,27,28,261,403,484,485,486,487,488,489,490,491,492,493,494,495,262,263,496,497,264,265,266,267,268,269,29,5,30,270,271,31,32,272,33,498,273,404,405,406,326,34,327,35,499,274,500,501,275,276,277,278,279,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,280,423,424,425,426,427,281,428,282,36,283,284,39,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,378,379,309,380,310,40,41,311,312,313,314,315,316,317,381,382,318,319,320,502,321,503,504,383,322,323,505,324,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:56","sourceCode":"return int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[328,329,48,50,50,51,51,58,330,442,443,335,454,455,336,338,339,340,124,341,342,125,343,344,345,346,347,348,349,350,351,126,352,353,354,355,356,127,357,358,128,129,130,360,15,131,132,133,361,134,16,17,137,138,139,141,142,143,144,146,147,154,363,170,22,171,172,173,174,175,364,365,176,177,24,178,366,179,219,367,331,253,254,255,368,369,332,370,371,372,373,374,375,376,377,256,333,257,334,263,266,378,379,309,380,381,382,318,319,320,321,383],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[12,86,94,100,13,102,104,105,107,116,121],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[529,106,112,123],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[72,6,7,9,79,11,94,13,105,106,108,111,116,117,118,120,16,155,161,162,164,20,21,167,168,22,24,198,199,201,202,203,204,205,258,27,28,32,35,278,282,40],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[6,439,440,27,35,40,41],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":13,"org.easymock.tests2.UsageTest.argumentsOrdered":11,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":269,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":417,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":79,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":388,"org.easymock.tests2.DelegateToTest.testReturnException":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":221,"org.easymock.tests.MockingTest.testPartialClassMocking":319,"org.easymock.tests.MockClassControlTest.testToString":253,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":477,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":346,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":227,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":430,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":61,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":528,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":431,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":189,"org.easymock.tests2.UsageTest.wrongArguments":8,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":453,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":196,"org.easymock.samples.ExampleTest.answerVsDelegate":43,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":266,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":504,"org.easymock.tests2.UsageConstraintsTest.testNull":102,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":171,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":21,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":332,"org.easymock.tests2.CaptureTest.testPrimitive":87,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":193,"org.easymock.tests.UsageTest.moreThanOneArgument":29,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":246,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":216,"org.easymock.tests.UsageTest.argumentsOrdered":32,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":248,"org.easymock.tests.UsageVarargTest.varargIntAccepted":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":304,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":435,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":455,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":409,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":308,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":512,"org.easymock.tests.ReplayStateInvalidUsageTest.times":492,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":62,"org.easymock.tests2.DependencyTest.testClassMocking":442,"org.easymock.tests2.AnswerTest.answer":148,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":423,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":71,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":497,"org.easymock.tests2.CaptureTest.testAnd":12,"org.easymock.tests2.UsageTest.strictResetToDefault":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":163,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":283,"org.easymock.tests2.DelegateToTest.testDelegate":57,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":252,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":511,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":242,"org.easymock.tests.LimitationsTest.mockFinalMethod":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":315,"org.easymock.tests2.DependencyTest.testClassMockingSupport":443,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":209,"org.easymock.tests2.CaptureTest.testCapture1_2446744":88,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":481,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":69,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":486,"org.easymock.tests.UsageThrowableTest.throwError":198,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":265,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":476,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":358,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":515,"org.easymock.samples.PartialClassMockTest.testGetArea":48,"org.easymock.tests.MockingTest.testInterfaceMocking":502,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":305,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":212,"org.easymock.tests2.UsageTest.niceToStrict":9,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":228,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":347,"org.easymock.tests2.ThreadingTest.testChangeDefault":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":15,"org.easymock.tests2.MockBuilderTest.testCreateMock":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":354,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":450,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":236,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":164,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":496,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":208,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":194,"org.easymock.tests.UsageOverloadedMethodTest.overloading":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":356,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":183,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":112,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":295,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":111,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":93,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":483,"org.easymock.tests2.EasyMockSupportClassTest.testAll":124,"org.easymock.tests.MockClassControlTest.testEquals":369,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":70,"org.easymock.tests2.CaptureTest.testCaptureAll":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":313,"org.easymock.tests.MockNameTest.defaultName":226,"org.easymock.tests2.UsageConstraintsTest.testMatches":113,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":484,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":217,"org.easymock.samples.ExampleTest.voteForRemovals":46,"org.easymock.tests.UsageVarargTest.allKinds":247,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":314,"org.easymock.samples.BasicClassMockTest.testPrintContent":329,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":204,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":472,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":225,"org.easymock.tests2.UsageConstraintsTest.greaterThan":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":341,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":36,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":178,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":516,"org.easymock.samples.ExampleTest.voteForRemoval":44,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":376,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":156,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":366,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":174,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":508,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":76,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":219,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":19,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":220,"org.easymock.tests2.CaptureTest.testCaptureFirst":97,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":162,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":84,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":25,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":291,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":158,"org.easymock.tests2.CaptureTest.testCapture2_2446744":96,"org.easymock.tests2.UsageTest.moreThanOneArgument":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":424,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":16,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":401,"org.easymock.tests.GenericTest.testBridgedEquals":334,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":34,"org.easymock.tests.UsageExpectAndReturnTest.longType":287,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":311,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":245,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":362,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":119,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":262,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":214,"org.easymock.tests.UsageCallCountTest.tooManyCalls":327,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":355,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":452,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":203,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":142,"org.easymock.tests.MockingTest.testNiceClassMocking":383,"org.easymock.tests.MockingTest.testClassMocking":382,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":498,"org.easymock.tests2.UsageConstraintsTest.testContains":110,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":359,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":139,"org.easymock.tests2.UsageConstraintsTest.testFind":101,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":279,"org.easymock.tests.MockTypeTest.fromEasyMockClass":264,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":67,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":258,"org.easymock.tests.UsageExpectAndReturnTest.object":294,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":432,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":398,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":501,"org.easymock.tests.UsageTest.exactCallCountByLastCall":272,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":505,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":249,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":363,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":394,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":300,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":182,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":468,"org.easymock.tests.MockClassControlTest.testHashCode":368,"org.easymock.tests2.EasyMockSupportTest.testVerify":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":349,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":250,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":180,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":207,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":68,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":438,"org.easymock.tests.UsageVarargTest.varargCharAccepted":397,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":428,"org.easymock.tests2.UsageTest.openCallCountByLastCall":80,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":168,"org.easymock.tests.DefaultClassInstantiatorTest.object":370,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":206,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":274,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":384,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":350,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":447,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":467,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":514,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":177,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":233,"org.easymock.tests.ReplayStateInvalidCallsTest.times":520,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":186,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":127,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":254,"org.easymock.tests2.UsageTest.resumeIfFailure":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":263,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":223,"org.easymock.tests2.StubTest.stubWithReturnValue":65,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":436,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":120,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":293,"org.easymock.tests2.SerializationTest.testAllMockedMethod":330,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":280,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":49,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":377,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":470,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":239,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":429,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":281,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":149,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":506,"org.easymock.tests.UsageExpectAndThrowTest.object":237,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":117,"org.easymock.tests2.DelegateToTest.testWrongClass":55,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":518,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":322,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":323,"org.easymock.tests.UsageStrictMockTest.range":27,"org.easymock.samples.ConstructorCalledMockTest.testTax":50,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":456,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":141,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":238,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":132,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":494,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":195,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":510,"org.easymock.tests2.CaptureTest.testCaptureNone":92,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":213,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":460,"org.easymock.tests.UsageUnorderedTest.message":35,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":37,"org.easymock.tests.UsageVerifyTest.twoReturns":41,"org.easymock.tests.UsageVarargTest.varargByteAccepted":400,"org.easymock.tests2.ThreadingTest.testThreadSafe":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":352,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":406,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":275,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":328,"org.easymock.tests2.CaptureTest.testCapture_2617107":86,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":192,"org.easymock.tests2.UsageConstraintsTest.any":108,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":491,"org.easymock.tests2.StubTest.stub":64,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":222,"org.easymock.tests.UsageExpectAndThrowTest.longType":230,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":374,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":490,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":74,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":135,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests.LimitationsTest.mockNativeMethod":309,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":303,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":446,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":526,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":75,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":461,"org.easymock.tests2.NameTest.nameForMocksControl":393,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":448,"org.easymock.tests2.MockedExceptionTest.testMockedException":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":342,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":271,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":458,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":231,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":321,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":170,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":133,"org.easymock.tests.MockingTest.testNicePartialClassMocking":320,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":173,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":444,"org.easymock.tests2.CaptureTest.testCaptureLast":91,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":210,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":525,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":147,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":105,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":118,"org.easymock.tests.MockingTest.testTwoMocks":318,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":522,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":479,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":235,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":122,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":464,"org.easymock.samples.ExampleTest.removeNonExistingDocument":441,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":488,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":449,"org.easymock.tests.UsageStrictMockTest.differentMethods":28,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":469,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":463,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":372,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":157,"org.easymock.tests2.MockBuilderTest.testCreateMockString":17,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":367,"org.easymock.tests.UsageExpectAndThrowTest.floatType":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":343,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":340,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":151,"org.easymock.tests.UsageVerifyTest.twoThrows":40,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":126,"org.easymock.samples.ExampleTest.voteAgainstRemoval":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":418,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":211,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":24,"org.easymock.tests.LimitationsTest.privateConstructor":379,"org.easymock.tests2.UsageConstraintsTest.testNotNull":121,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":205,"org.easymock.tests2.UsageTest.defaultResetToNice":82,"org.easymock.samples.ExampleTest.voteAgainstRemovals":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":299,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":445,"org.easymock.tests.UsageVarargTest.differentLength":325,"org.easymock.tests2.CallbackTest.callback":155,"org.easymock.tests2.UsageConstraintsTest.equals":465,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":364,"org.easymock.tests.UsageTest.openCallCountByLastCall":270,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":191,"org.easymock.tests.UsageCallCountTest.tooFewCalls":404,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":144,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":197,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":462,"org.easymock.tests.UsageThrowableTest.throwCheckedException":202,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests.MockingTest.testStrictClassMocking":381,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":146,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":317,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":63,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":493,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":145,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":153,"org.easymock.tests2.CompareToTest.testGreateOrEqual":529,"org.easymock.tests.ObjectMethodsTest.testHashCode":500,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":434,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":524,"org.easymock.tests2.NameTest.nameForNiceMock":392,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":159,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":519,"org.easymock.tests2.DependencyTest.testInterfaceMocking":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":433,"org.easymock.samples.ExampleTest.addDocument":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":353,"org.easymock.tests2.DelegateToTest.testStubDelegate":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":357,"org.easymock.tests2.AnswerTest.stubAnswer":152,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":259,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":466,"org.easymock.tests.UsageVarargTest.varargLongAccepted":399,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndReturnTest.floatType":286,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":154,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":474,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":115,"org.easymock.tests.UsageThrowableTest.noUpperLimit":199,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":99,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":335,"org.easymock.tests2.SerializationTest.test":59,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":89,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":371,"org.easymock.tests2.UsageConstraintsTest.testSame":103,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":285,"org.easymock.samples.SupportTest.addDocument":386,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":478,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":509,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":344,"org.easymock.tests.GenericTest.testPackageScope":256,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":473,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":503,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":507,"org.easymock.tests2.NameTest.nameForMock":390,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":296,"org.easymock.tests2.UsageStrictMockTest.differentMethods":7,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":365,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":241,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":499,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":284,"org.easymock.tests2.MockedExceptionTest.testRealException":140,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":268,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":420,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":73,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":495,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":190,"org.easymock.tests2.NameTest.nameForStrictMock":391,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":360,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":172,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":336,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":439,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":116,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":373,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":129,"org.easymock.tests2.UsageStrictMockTest.range":6,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":513,"org.easymock.tests2.UsageConstraintsTest.lessThan":123,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":161,"org.easymock.tests2.CaptureTest.testCaptureRightOne":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":348,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":459,"org.easymock.tests2.UsageConstraintsTest.testOr":104,"org.easymock.tests.UsageRangeTest.combination":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":22,"org.easymock.tests.UsageTest.wrongArguments":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":345,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":331,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":297,"org.easymock.tests.UsageVarargTest.varargShortAccepted":26,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":375,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":326,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":527,"org.easymock.tests2.UsageConstraintsTest.cmpTo":109,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":150,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":410,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":81,"org.easymock.tests2.CaptureTest.testCaptureFromStub":95,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":485,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":130,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":523,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":405,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":298,"org.easymock.tests2.CaptureTest.testCapture":437,"org.easymock.tests2.UsageConstraintsTest.constraints":100,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":260,"org.easymock.samples.ExampleTest.addAndChangeDocument":47,"org.easymock.tests.UsageStrictMockTest.testVerify":403,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":387,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":402,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":312,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":306,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":337,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":290,"org.easymock.tests.LimitationsTest.abstractClass":378,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":307,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":440,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":20}}]
