[{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:61","sourceCode":"org.easymock.internal.MocksBehavior.lastBehaviorList().addExpected(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result, org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[219,220,263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[131,270,271,244,258,263,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer","i":"matches"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[272],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[273,274,275,276,277,255],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[278,279,27,280,91,107,114,281,282,283,284,149,285,286,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,215,217,218,219,220,221,222,223,227,241,242,251,263,269],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[287,63,64,288],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[21,35,53,214],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[32,47,65,289,69,290,93,97,98,101,105,107,110,111,112,116,117,118,119,127,130,131,132,135,141,143,209,291,292,223,277,225,228,229,230,293,237,238,244,245,253,255,257,258,259,263,264,294,295],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[33,48,296,273,297,298,299,300,301,302,274,303,304,305,94,98,101,106,108,109,110,112,116,117,120,128,129,130,131,132,133,134,135,136,142,143,210,275,306,276,307,308,309,292,1,224,277,225,226,228,229,310,311,312,244,313,250,251,314,252,315,254,255,256,258,259,260,261,262,263,264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[131,271,258,263,264],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[115],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[32,33,35,37,38,40,50,55,74,76,84],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[32,33,37,38,40,50,74,76,84],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.Range:36","failures":[4,5,6,7,8,9,316,10,11,12,13,14,15,16,17,317,318,18,19,20,21,22,319,23,24,25,26,278,279,27,280,28,272,29,30,31,32,33,320,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,321,322,58,59,60,323,324,325,326,327,328,329,61,287,330,62,63,64,331,332,65,333,334,335,66,336,67,337,68,338,339,289,69,340,290,305,70,71,72,341,73,74,75,76,77,78,79,80,81,82,83,84,342,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,343,344,345,346,347,106,348,349,350,351,352,353,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,354,124,125,126,355,127,128,129,130,131,132,133,134,135,136,137,138,139,356,357,140,358,359,360,141,142,143,361,362,363,364,365,366,367,144,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,145,384,385,146,386,387,388,389,390,391,392,393,394,147,395,396,397,398,399,148,400,401,281,282,283,284,149,285,150,286,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,402,403,404,171,172,405,173,406,407,408,409,174,175,410,411,176,177,178,179,180,412,413,181,414,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,415,416,417,418,419,420,202,203,421,422,423,424,425,426,427,428,429,430,431,432,433,434,204,205,206,435,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,1,436,437,438,439,2,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,223,224,277,225,226,227,228,229,230,466,310,3,467,468,469,470,471,472,473,474,475,476,477,478,231,232,479,233,234,235,236,293,237,238,239,240,241,242,243,311,312,480,244,481,482,483,484,485,486,245,246,247,248,249,313,250,251,314,252,315,487,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,295,488,489,490,491,492,493,288,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[287,63,64,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.Range:44","failures":[4,5,6,7,8,9,316,10,11,12,13,14,15,16,17,317,318,18,19,20,21,22,319,23,24,25,26,278,279,27,280,28,272,29,30,31,32,33,320,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,321,322,58,59,60,323,324,325,326,327,328,329,61,287,330,62,63,64,331,332,65,333,334,335,66,336,67,337,68,338,339,289,69,340,290,305,70,71,72,341,73,74,75,76,77,78,79,80,81,82,83,84,342,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,343,344,345,346,347,106,348,349,350,351,352,353,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,354,124,125,126,355,127,128,129,130,131,132,133,134,135,136,137,138,139,356,357,140,358,359,360,141,142,143,361,362,363,364,365,366,367,144,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,145,384,385,146,386,387,388,389,390,391,392,393,394,147,395,396,397,398,399,148,400,401,281,282,283,284,149,285,150,286,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,402,403,404,171,172,405,173,406,407,408,409,174,175,410,411,176,177,178,179,180,412,413,181,414,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,415,416,417,418,419,420,202,203,421,422,423,424,425,426,427,428,429,430,431,432,433,434,204,205,206,435,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,1,436,437,438,439,2,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,223,224,277,225,226,227,228,229,230,466,310,3,467,468,469,470,471,472,473,474,475,476,477,478,231,232,479,233,234,235,236,293,237,238,239,240,241,242,243,311,312,480,244,481,482,483,484,485,486,245,246,247,248,249,313,250,251,314,252,315,487,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,295,488,489,490,491,492,493,288,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[23,24,25,26,32,33,47,48,331,65,333,66,67,68,289,69,290,93,94,95,96,97,98,100,101,102,105,106,348,107,109,110,111,112,116,117,118,119,120,121,122,125,126,127,129,130,131,132,133,134,135,136,360,143,362,144,368,145,209,210,437,438,439,2,450,454,457,458,459,460,461,462,223,224,277,225,228,229,230,310,468,469,471,232,479,233,234,293,237,238,239,311,312,244,245,246,313,314,252,315,253,255,256,257,258,259,260,262,263,264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[311,312,313,314],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[511],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:167","sourceCode":"for (final org.easymock.internal.UnorderedBehavior org.easymock.internal.UnorderedBehavior : java.util.List<org.easymock.internal.UnorderedBehavior>.subList(int, java.util.List<org.easymock.internal.UnorderedBehavior>.size())) {\n    for (final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage : org.easymock.internal.UnorderedBehavior.getMessages(null)) {\n        org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0);\n    }\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[87,88,89],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[278,279,27,280,91,281,282,283,284,149,285,286,451,452,453,241,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[319],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[47],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[35],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[409,411],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,317,318,18,19,21,22,278,279,27,280,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,326,327,328,329,61,62,63,64,331,65,66,336,67,68,289,69,290,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,342,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,356,140,360,141,142,143,144,145,146,147,148,281,282,283,284,149,285,150,286,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,415,416,417,418,419,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,445,446,447,448,449,462,463,464,465,223,224,277,225,226,227,228,229,230,231,233,234,235,236,293,237,238,239,240,241,242,243,244,245,247,248,249,250,251,315,253,254,255,256,257,258,259,260,262,263,264,265,266,267,268,269],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":33,"org.easymock.tests2.UsageTest.argumentsOrdered":117,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":223,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":497,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":112,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":11,"org.easymock.tests2.DelegateToTest.testReturnException":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":282,"org.easymock.tests.MockingTest.testPartialClassMocking":171,"org.easymock.tests.MockClassControlTest.testToString":437,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":319,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":506,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":389,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":151,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":146,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":59,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":39,"org.easymock.tests2.UsageTest.wrongArguments":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":239,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":464,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":459,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":407,"org.easymock.tests2.UsageConstraintsTest.testNull":35,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":137,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":441,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":101,"org.easymock.tests2.CaptureTest.testPrimitive":77,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":243,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":170,"org.easymock.tests.UsageTest.moreThanOneArgument":224,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":417,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":420,"org.easymock.tests.UsageTest.argumentsOrdered":229,"org.easymock.tests.UsageVarargTest.varargIntAccepted":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":502,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":176,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":352,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":376,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":490,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":180,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":299,"org.easymock.tests.ReplayStateInvalidUsageTest.times":431,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":144,"org.easymock.tests2.DependencyTest.testClassMocking":321,"org.easymock.tests2.AnswerTest.answer":61,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":504,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":329,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":456,"org.easymock.tests2.CaptureTest.testAnd":74,"org.easymock.tests2.UsageTest.strictResetToDefault":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":247,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":422,"org.easymock.tests2.DelegateToTest.testDelegate":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":166,"org.easymock.tests.LimitationsTest.mockFinalMethod":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":449,"org.easymock.tests2.DependencyTest.testClassMockingSupport":322,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":311,"org.easymock.tests2.CaptureTest.testCapture1_2446744":78,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":357,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":164,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":327,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":425,"org.easymock.tests.UsageThrowableTest.throwError":215,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":458,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":295,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":401,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":426,"org.easymock.tests.MockingTest.testInterfaceMocking":405,"org.easymock.tests2.CompareToTest.testLessOrEqual":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":177,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":443,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":390,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":152,"org.easymock.tests2.UsageTest.niceToStrict":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":488,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":66,"org.easymock.tests2.MockBuilderTest.testCreateMock":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":397,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":370,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":160,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":273,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":97,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":455,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":483,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":462,"org.easymock.tests.UsageOverloadedMethodTest.overloading":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":45,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":193,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":267,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":44,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":83,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":435,"org.easymock.tests.MockClassControlTest.testEquals":440,"org.easymock.tests2.EasyMockSupportClassTest.testAll":145,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":175,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":168,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":447,"org.easymock.tests2.CaptureTest.testCaptureAll":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":328,"org.easymock.tests.MockNameTest.defaultName":450,"org.easymock.tests2.UsageConstraintsTest.testMatches":46,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":418,"org.easymock.samples.ExampleTest.voteForRemovals":9,"org.easymock.tests.UsageVarargTest.allKinds":214,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":262,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":448,"org.easymock.samples.BasicClassMockTest.testPrintContent":14,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":221,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":285,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":341,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":349,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":477,"org.easymock.tests2.UsageConstraintsTest.greaterThan":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":246,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":143,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":478,"org.easymock.samples.ExampleTest.voteForRemoval":6,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":19,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":361,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":377,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":356,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":107,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":231,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":494,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":94,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":281,"org.easymock.tests2.CaptureTest.testCaptureFirst":86,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":95,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":119,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":189,"org.easymock.tests2.UsageTest.moreThanOneArgument":109,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":21,"org.easymock.tests2.CaptureTest.testCapture2_2446744":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":505,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":69,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":213,"org.easymock.tests.GenericTest.testBridgedEquals":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":237,"org.easymock.tests.UsageExpectAndReturnTest.longType":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":445,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":169,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":487,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":53,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":167,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":415,"org.easymock.tests.UsageCallCountTest.tooManyCalls":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":306,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":190,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":156,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":220,"org.easymock.tests.MockingTest.testNiceClassMocking":408,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":121,"org.easymock.tests.MockingTest.testClassMocking":403,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":479,"org.easymock.tests2.UsageConstraintsTest.testContains":43,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":27,"org.easymock.tests2.UsageConstraintsTest.testFind":34,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":269,"org.easymock.tests.MockTypeTest.fromEasyMockClass":457,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":29,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":253,"org.easymock.tests.UsageExpectAndReturnTest.object":192,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":100,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":208,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":467,"org.easymock.tests.UsageTest.exactCallCountByLastCall":230,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":493,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":484,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":202,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":323,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":198,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":204,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":250,"org.easymock.tests.MockClassControlTest.testHashCode":2,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":344,"org.easymock.tests2.EasyMockSupportTest.testVerify":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":392,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":298,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":203,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":482,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":249,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":291,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":326,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":325,"org.easymock.tests.UsageVarargTest.varargCharAccepted":207,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":470,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":510,"org.easymock.tests2.UsageTest.openCallCountByLastCall":113,"org.easymock.tests.DefaultClassInstantiatorTest.object":471,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":103,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":481,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":310,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":393,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":158,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":343,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":439,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":141,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":157,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":199,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":451,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":148,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":300,"org.easymock.tests2.UsageTest.resumeIfFailure":118,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":284,"org.easymock.tests2.StubTest.stubWithReturnValue":91,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":337,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":191,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":54,"org.easymock.tests2.SerializationTest.testAllMockedMethod":89,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":503,"org.easymock.samples.SupportTest.voteForRemovals":17,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":274,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":163,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":509,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":287,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":486,"org.easymock.tests.UsageExpectAndThrowTest.object":161,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":51,"org.easymock.tests2.DelegateToTest.testWrongClass":72,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":265,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":266,"org.easymock.tests.UsageStrictMockTest.range":258,"org.easymock.samples.ConstructorCalledMockTest.testTax":317,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":379,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":67,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":433,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":463,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":275,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":444,"org.easymock.tests2.CaptureTest.testCaptureNone":82,"org.easymock.tests.UsageUnorderedTest.message":244,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":294,"org.easymock.tests.UsageVerifyTest.twoReturns":264,"org.easymock.tests.UsageVarargTest.varargByteAccepted":212,"org.easymock.tests2.ThreadingTest.testThreadSafe":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":395,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":236,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":468,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":13,"org.easymock.tests2.CaptureTest.testCapture_2617107":76,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":507,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":242,"org.easymock.tests2.UsageConstraintsTest.any":41,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":430,"org.easymock.tests2.StubTest.stub":90,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":508,"org.easymock.tests.UsageExpectAndThrowTest.longType":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":283,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":475,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":429,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":130,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests2.SerializationTest.testClass":87,"org.easymock.tests.LimitationsTest.mockNativeMethod":181,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":201,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":365,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":133,"org.easymock.tests2.NameTest.nameForMocksControl":26,"org.easymock.tests2.MockedExceptionTest.testMockedException":279,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":385,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":227,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":173,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":155,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":272,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":68,"org.easymock.tests.MockingTest.testNicePartialClassMocking":172,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":139,"org.easymock.tests2.CaptureTest.testCaptureLast":81,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":363,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":312,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":126,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":38,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":52,"org.easymock.tests.MockingTest.testTwoMocks":404,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":355,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":159,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":116,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":56,"org.easymock.samples.ExampleTest.removeNonExistingDocument":316,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":427,"org.easymock.tests.UsageStrictMockTest.differentMethods":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":345,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":473,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":20,"org.easymock.tests2.ConstraintsToStringTest.andToString":302,"org.easymock.tests2.MockBuilderTest.testCreateMockString":290,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":386,"org.easymock.tests.UsageExpectAndThrowTest.floatType":153,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":62,"org.easymock.tests.UsageVerifyTest.twoThrows":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":324,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":147,"org.easymock.samples.ExampleTest.voteAgainstRemoval":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":498,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":442,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":142,"org.easymock.tests.LimitationsTest.privateConstructor":413,"org.easymock.tests2.UsageConstraintsTest.testNotNull":55,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":222,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":278,"org.easymock.tests2.UsageTest.defaultResetToNice":115,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":499,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":197,"org.easymock.tests.UsageVarargTest.differentLength":209,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":364,"org.easymock.tests2.CallbackTest.callback":105,"org.easymock.tests2.UsageConstraintsTest.equals":320,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":307,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":358,"org.easymock.tests.UsageTest.openCallCountByLastCall":226,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":241,"org.easymock.tests.UsageCallCountTest.tooFewCalls":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":465,"org.easymock.tests.UsageThrowableTest.throwCheckedException":219,"org.easymock.tests.MockingTest.testStrictClassMocking":402,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":276,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":125,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":286,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":368,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":432,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":124,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":64,"org.easymock.tests.ObjectMethodsTest.testHashCode":3,"org.easymock.tests2.NameTest.nameForNiceMock":25,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":22,"org.easymock.tests2.DependencyTest.testInterfaceMocking":58,"org.easymock.samples.ExampleTest.addDocument":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":400,"org.easymock.tests2.DelegateToTest.testStubDelegate":71,"org.easymock.tests2.AnswerTest.stubAnswer":63,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":256,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":338,"org.easymock.tests.UsageVarargTest.varargLongAccepted":211,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":496,"org.easymock.tests.UsageExpectAndReturnTest.floatType":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":60,"org.easymock.tests2.ConstraintsToStringTest.orToString":296,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":318,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":49,"org.easymock.tests.UsageThrowableTest.noUpperLimit":216,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":351,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":31,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":374,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":79,"org.easymock.tests2.SerializationTest.test":88,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":472,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":183,"org.easymock.tests2.UsageConstraintsTest.testSame":36,"org.easymock.samples.SupportTest.addDocument":16,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":354,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":387,"org.easymock.tests.GenericTest.testPackageScope":174,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":492,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":350,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":406,"org.easymock.tests2.NameTest.nameForMock":23,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":194,"org.easymock.tests2.UsageStrictMockTest.differentMethods":132,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":340,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":359,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":186,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":165,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":466,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":248,"org.easymock.tests2.MockedExceptionTest.testRealException":280,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":501,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":380,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":500,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":129,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":240,"org.easymock.tests2.NameTest.nameForStrictMock":24,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":335,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":28,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":378,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":474,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":50,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":270,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":65,"org.easymock.tests2.UsageStrictMockTest.range":131,"org.easymock.tests2.UsageConstraintsTest.lessThan":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":495,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":391,"org.easymock.tests2.CaptureTest.testCaptureRightOne":84,"org.easymock.tests2.UsageConstraintsTest.testOr":37,"org.easymock.tests.UsageRangeTest.combination":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageTest.wrongArguments":225,"org.easymock.tests2.MockBuilderTest.testWithConstructor":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":388,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":489,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":195,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":476,"org.easymock.tests.UsageVarargTest.varargShortAccepted":210,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":293,"org.easymock.tests2.UsageConstraintsTest.cmpTo":42,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":491,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":114,"org.easymock.tests2.CaptureTest.testCaptureFromStub":342,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":424,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":333,"org.easymock.tests.UsageTest.unexpectedCallWithArray":277,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":255,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":235,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":196,"org.easymock.tests2.CaptureTest.testCapture":511,"org.easymock.tests2.UsageConstraintsTest.constraints":32,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":257,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests2.ConstraintsToStringTest.notToString":297,"org.easymock.tests.UsageStrictMockTest.testVerify":261,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":12,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":446,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":178,"org.easymock.tests.LimitationsTest.abstractClass":412,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":179,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":98,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":205,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":271}}]
