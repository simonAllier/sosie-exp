[{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[83],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[84,85,86,87,88,89,90,91,92,93,94,95,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,62,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,63,147,148,64,65,66,67,68,149,150,151,152,153,154,69,155,156,157,158,159,160,161,162,163,164,165,166,167,168,70,71,72,73,74,75,169,170,171,76,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,77,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,78,79,80,81,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,82,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,83,404,405],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[406,407,162,177,408,409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[128,62,150,153,74,387],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[406,407,162,177,408,409],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[410,27,297,411],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[245],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[412,413,414,415,416,36,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[417],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[271,273,281,377,378,381,383,384,386,396,401],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[418,419,420],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[421,422],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[423,84,85,86,87,88,89,90,91,92,93,94,0,1,424,425,95,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,96,97,98,99,100,101,426,427,428,417,429,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,62,129,130,131,132,133,134,430,431,432,433,434,435,418,436,437,438,439,135,136,137,138,139,140,141,142,143,144,145,146,440,441,442,443,444,445,446,447,63,147,148,64,65,66,67,68,149,150,151,152,153,154,69,155,421,448,449,156,157,450,158,159,160,161,162,163,164,165,166,167,168,70,71,72,73,74,75,169,170,171,76,172,173,174,175,176,177,178,179,180,181,182,183,451,452,453,454,455,184,456,185,186,457,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,77,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,458,459,460,461,267,268,269,462,463,270,464,465,466,467,468,469,470,471,472,473,474,475,476,477,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,290,78,79,80,81,291,292,293,294,295,296,27,297,411,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,478,479,28,480,481,323,482,29,30,483,324,325,326,327,328,329,330,331,332,333,484,34,485,486,35,487,488,489,490,36,422,491,37,492,493,39,494,495,496,497,498,499,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,500,501,360,361,362,82,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,502,83,404,405,40,41,503],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[271,273,274,275,276,277,278,280,504,281,282,284],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[404],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[271,273,281,377,378,381,383,384,386,396,401],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[505,391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[506,507,508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[418,419,420],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[103,124,509,439,510,511,69,155,162,163,166,167,174,177,180,181,217,218,219,307,485,492,493,494,339,345,346,347,353,354],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:317","failures":[145,146,251,252],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[463,472],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[177,408],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[429],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[103,128,62,149,150,151,152,153,74,177,178,245,246,247,248,249,264,265,266,469,271,272,273,274,275,276,277,278,279,280,281,282,283,284,288,351,375,376,377,378,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,83,405],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:305","failures":[423,84,85,86,87,89,93,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,427,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,62,63,148,64,65,66,67,68,149,150,153,154,69,155,160,161,164,165,168,74,169,171,76,173,178,180,181,454,455,456,203,220,221,77,245,246,247,248,249,265,266,460,267,268,462,463,270,464,465,466,469,473,474,475,271,272,273,274,275,278,279,280,281,283,284,285,286,287,288,289,5,8,18,24,290,80,291,295,296,27,297,298,299,300,301,302,303,304,305,306,307,308,309,316,478,479,28,480,323,482,29,329,330,331,333,485,488,490,422,493,336,337,338,340,342,343,344,347,348,351,353,354,360,361,82,368,375,376,377,378,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,40],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[397],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:89","sourceCode":"if (!(org.easymock.internal.Injection.isMatched())) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n} ","type":"CtIfImpl"},"failures":[315,318,320,321,367,370,372,373],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[512,513],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[423,0,1,424,425,426,427,428,417,429,430,432,433,434,435,418,436,438,440,441,442,443,444,445,446,447,421,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,469,470,471,472,473,474,475,476,477,2,3,5,7,8,9,10,11,13,14,15,16,18,19,20,21,22,23,24,78,79,80,27,411,478,479,28,480,482,29,484,34,485,486,35,487,488,489,490,36,422,37,492,493,39,494,495,499,40,41,503],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[312,313,315,318,319,322,364,365,367,370,371,374],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[418,419,420],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[166,345,379],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":378,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":160,"org.easymock.tests2.UsageTest.argumentsOrdered":346,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":308,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":197,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":341,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":95,"org.easymock.tests2.DelegateToTest.testReturnException":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":71,"org.easymock.tests.MockingTest.testPartialClassMocking":454,"org.easymock.tests.MockClassControlTest.testToString":442,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":483,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":42,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":8,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":361,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":412,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":149,"org.easymock.tests2.UsageTest.wrongArguments":339,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":137,"org.easymock.samples.ExampleTest.answerVsDelegate":85,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":450,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":186,"org.easymock.tests2.UsageConstraintsTest.testNull":381,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":464,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":447,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":307,"org.easymock.tests2.CaptureTest.testPrimitive":274,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":153,"org.easymock.tests.UsageTest.moreThanOneArgument":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":61,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":224,"org.easymock.tests.UsageTest.argumentsOrdered":167,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":130,"org.easymock.tests.UsageVarargTest.varargIntAccepted":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":245,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":484,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":416,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":373,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":249,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":508,"org.easymock.tests.ReplayStateInvalidUsageTest.times":241,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":316,"org.easymock.tests2.DependencyTest.testClassMocking":500,"org.easymock.tests2.AnswerTest.answer":291,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":359,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":449,"org.easymock.tests2.CaptureTest.testAnd":271,"org.easymock.tests2.UsageTest.strictResetToDefault":337,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":472,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":223,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":302,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":134,"org.easymock.tests2.DelegateToTest.testDelegate":333,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":57,"org.easymock.tests.LimitationsTest.mockFinalMethod":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":143,"org.easymock.tests2.DependencyTest.testClassMockingSupport":501,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":267,"org.easymock.tests2.CaptureTest.testCapture1_2446744":275,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":55,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":357,"org.easymock.tests.UsageThrowableTest.throwError":63,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":235,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":157,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":439,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":226,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":26,"org.easymock.samples.PartialClassMockTest.testGetArea":423,"org.easymock.tests.MockingTest.testInterfaceMocking":184,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":246,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":13,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":232,"org.easymock.tests2.UsageTest.niceToStrict":340,"org.easymock.tests2.ThreadingTest.testChangeDefault":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":187,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":488,"org.easymock.tests2.MockBuilderTest.testCreateMock":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":21,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":319,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":408,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":51,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":303,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":448,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":252,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":135,"org.easymock.tests.UsageOverloadedMethodTest.overloading":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":23,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":391,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":76,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":115,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":220,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":419,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":390,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":280,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":256,"org.easymock.tests.MockClassControlTest.testEquals":446,"org.easymock.tests2.EasyMockSupportClassTest.testAll":5,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":428,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":141,"org.easymock.tests2.CaptureTest.testCaptureAll":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":358,"org.easymock.tests.MockNameTest.defaultName":102,"org.easymock.tests2.UsageConstraintsTest.testMatches":392,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":225,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":233,"org.easymock.samples.ExampleTest.voteForRemovals":89,"org.easymock.tests.UsageVarargTest.allKinds":264,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":154,"org.easymock.samples.BasicClassMockTest.testPrintContent":425,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":142,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":67,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":75,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":370,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":437,"org.easymock.tests2.UsageConstraintsTest.greaterThan":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":6,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":125,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":475,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":438,"org.easymock.samples.ExampleTest.voteForRemoval":86,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":476,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":286,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":158,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":467,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":430,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":336,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":300,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":70,"org.easymock.tests2.CaptureTest.testCaptureFirst":284,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":301,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":348,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":111,"org.easymock.tests2.CaptureTest.testCapture2_2446744":283,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":288,"org.easymock.tests2.UsageTest.moreThanOneArgument":338,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":205,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":263,"org.easymock.tests.GenericTest.testBridgedEquals":429,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":218,"org.easymock.tests.UsageExpectAndReturnTest.longType":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":139,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":298,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":60,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":399,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":129,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":58,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":222,"org.easymock.tests.UsageCallCountTest.tooManyCalls":219,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":506,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":66,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":479,"org.easymock.tests.MockingTest.testNiceClassMocking":457,"org.easymock.tests.MockingTest.testClassMocking":452,"org.easymock.tests2.UsageConstraintsTest.testContains":389,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":212,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":80,"org.easymock.tests2.UsageConstraintsTest.testFind":380,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":77,"org.easymock.tests.MockTypeTest.fromEasyMockClass":156,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":405,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":175,"org.easymock.tests.UsageExpectAndReturnTest.object":114,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":469,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":413,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":258,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":230,"org.easymock.tests.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":33,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":192,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":131,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":41,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":120,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":253,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":171,"org.easymock.tests.MockClassControlTest.testHashCode":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":364,"org.easymock.tests2.EasyMockSupportTest.testVerify":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":15,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":507,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":132,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":169,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":251,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":510,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":356,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":502,"org.easymock.tests.UsageVarargTest.varargCharAccepted":257,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":431,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":210,"org.easymock.tests2.UsageTest.openCallCountByLastCall":342,"org.easymock.tests.DefaultClassInstantiatorTest.object":432,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":309,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":250,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":228,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":16,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":314,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":363,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":473,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":444,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":48,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":121,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":144,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":24,"org.easymock.tests2.UsageTest.resumeIfFailure":347,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":421,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":73,"org.easymock.tests2.StubTest.stubWithReturnValue":82,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":36,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":400,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":113,"org.easymock.tests2.SerializationTest.testAllMockedMethod":411,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":203,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":409,"org.easymock.samples.SupportTest.voteForRemovals":93,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":426,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":366,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":54,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":410,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":209,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":292,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":101,"org.easymock.tests.UsageExpectAndThrowTest.object":52,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":397,"org.easymock.tests2.DelegateToTest.testWrongClass":331,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":265,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":266,"org.easymock.tests.UsageStrictMockTest.range":180,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":334,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":305,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":478,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":490,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":2,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":243,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":136,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":406,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":98,"org.easymock.tests2.CaptureTest.testCaptureNone":279,"org.easymock.tests.UsageUnorderedTest.message":103,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":509,"org.easymock.tests.UsageVerifyTest.twoReturns":155,"org.easymock.tests.UsageVarargTest.varargByteAccepted":262,"org.easymock.tests2.ThreadingTest.testThreadSafe":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":19,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":216,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":424,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":231,"org.easymock.tests2.CaptureTest.testCapture_2617107":273,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":269,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":207,"org.easymock.tests2.UsageConstraintsTest.any":387,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":240,"org.easymock.tests2.StubTest.stub":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":146,"org.easymock.tests.UsageExpectAndThrowTest.longType":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":208,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":418,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":239,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":352,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":368,"org.easymock.tests.LimitationsTest.mockNativeMethod":460,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":417,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":123,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":313,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":355,"org.easymock.tests2.NameTest.nameForMocksControl":327,"org.easymock.tests2.MockedExceptionTest.testMockedException":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":7,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":165,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":456,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":404,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":46,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":462,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":422,"org.easymock.tests.MockingTest.testNicePartialClassMocking":455,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":466,"org.easymock.tests2.CaptureTest.testCaptureLast":278,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":311,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":268,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":384,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":398,"org.easymock.tests.MockingTest.testTwoMocks":453,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":104,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":50,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":345,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":402,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":512,"org.easymock.samples.ExampleTest.removeNonExistingDocument":90,"org.easymock.tests.UsageStrictMockTest.differentMethods":181,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":318,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":365,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":434,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":287,"org.easymock.tests2.MockBuilderTest.testCreateMockString":494,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":440,"org.easymock.tests.UsageExpectAndThrowTest.floatType":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":9,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":4,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":503,"org.easymock.tests.UsageVerifyTest.twoThrows":69,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":18,"org.easymock.samples.ExampleTest.voteAgainstRemoval":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":198,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":474,"org.easymock.tests.LimitationsTest.privateConstructor":459,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":32,"org.easymock.tests2.UsageConstraintsTest.testNotNull":401,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":68,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":78,"org.easymock.tests2.UsageTest.defaultResetToNice":344,"org.easymock.samples.ExampleTest.voteAgainstRemovals":84,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":199,"org.easymock.tests.UsageVarargTest.differentLength":259,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":312,"org.easymock.tests2.CallbackTest.callback":290,"org.easymock.tests2.UsageConstraintsTest.equals":379,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":470,"org.easymock.tests.UsageTest.openCallCountByLastCall":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":375,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":151,"org.easymock.tests.UsageCallCountTest.tooFewCalls":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":480,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":138,"org.easymock.tests.UsageThrowableTest.throwCheckedException":65,"org.easymock.tests.MockingTest.testStrictClassMocking":451,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":407,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":482,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":62,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":317,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":323,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":296,"org.easymock.tests2.CompareToTest.testGreateOrEqual":505,"org.easymock.tests.ObjectMethodsTest.testHashCode":229,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":415,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":289,"org.easymock.tests2.NameTest.nameForNiceMock":326,"org.easymock.tests2.DependencyTest.testInterfaceMocking":360,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":414,"org.easymock.samples.ExampleTest.addDocument":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":25,"org.easymock.tests2.DelegateToTest.testStubDelegate":330,"org.easymock.tests2.AnswerTest.stubAnswer":295,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":178,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":491,"org.easymock.tests.UsageVarargTest.varargLongAccepted":261,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":196,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":122,"org.easymock.tests.UsageExpectAndReturnTest.floatType":106,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":40,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":395,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":172,"org.easymock.tests.UsageThrowableTest.noUpperLimit":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":372,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":376,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":495,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":276,"org.easymock.tests2.SerializationTest.test":297,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":420,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":105,"org.easymock.tests2.UsageConstraintsTest.testSame":382,"org.easymock.samples.SupportTest.addDocument":92,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":481,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":10,"org.easymock.tests.GenericTest.testPackageScope":427,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":191,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":371,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":185,"org.easymock.tests2.NameTest.nameForMock":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":116,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":39,"org.easymock.tests2.UsageStrictMockTest.differentMethods":354,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":471,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":108,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":56,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":127,"org.easymock.tests2.MockedExceptionTest.testRealException":81,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":201,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":200,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":351,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":150,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":244,"org.easymock.tests2.NameTest.nameForStrictMock":325,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":487,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":465,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":499,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":435,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":396,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":485,"org.easymock.tests2.UsageStrictMockTest.range":353,"org.easymock.tests2.UsageConstraintsTest.lessThan":403,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":195,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":14,"org.easymock.tests2.CaptureTest.testCaptureRightOne":281,"org.easymock.tests2.UsageConstraintsTest.testOr":383,"org.easymock.tests.UsageRangeTest.combination":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":463,"org.easymock.tests.UsageTest.wrongArguments":163,"org.easymock.tests2.MockBuilderTest.testWithConstructor":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":11,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":441,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":117,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":436,"org.easymock.tests.UsageVarargTest.varargShortAccepted":260,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":217,"org.easymock.tests2.UsageConstraintsTest.cmpTo":388,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":190,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":343,"org.easymock.tests2.CaptureTest.testCaptureFromStub":282,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":234,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":486,"org.easymock.tests.UsageTest.unexpectedCallWithArray":162,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":177,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":215,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":38,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":118,"org.easymock.tests2.CaptureTest.testCapture":504,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":179,"org.easymock.tests2.UsageConstraintsTest.constraints":377,"org.easymock.samples.ExampleTest.addAndChangeDocument":91,"org.easymock.tests.UsageStrictMockTest.testVerify":183,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":94,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":140,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":247,"org.easymock.tests.LimitationsTest.abstractClass":458,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":110,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":173,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":248,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":304}}]
