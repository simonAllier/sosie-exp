[{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[74,258,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[259],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,260,261,262,263,264,265,7,266,11,12,13,14,15,16,267,24,26,28,29,44,47,48,54,55,57,60,61,62,63,67,70,74,76,77,78,80,268,269,270,271,272,273,274,275,276,277,278,82,279,280,86,87,88,90,91,92,93,97,98,281,107,108,114,115,116,117,118,119,120,126,127,128,129,130,131,133,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,282,180,181,191,192,195,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,283,284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","name":"name","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1582","sourceCode":"return null","type":"CtReturnImpl"},"failures":[34],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[287,288,289],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[290,291,292,293,294,295],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:105","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[296,297,298,299],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[23,24,26,28,29,300,40,44,47,49,57],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,301,6,290,291,260,302,261,262,263,264,265,303,304,7,266,305,306,307,308,8,309,9,10,11,12,13,14,15,16,17,18,19,20,310,311,312,313,314,267,315,316,317,318,319,320,21,22,23,24,321,25,26,27,28,29,30,300,31,32,33,34,35,36,37,38,39,40,41,42,322,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,323,324,62,63,64,65,66,67,68,69,70,71,325,326,72,292,327,73,328,74,329,330,258,75,331,76,77,78,79,80,268,269,270,271,272,273,274,332,275,276,277,278,333,81,334,335,336,82,83,279,280,337,338,339,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,340,341,342,343,344,281,345,346,347,348,349,350,351,103,104,352,353,354,105,106,355,107,108,109,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,110,111,112,113,382,114,115,116,383,117,118,119,120,121,122,123,124,286,125,126,384,385,127,128,129,130,131,386,387,388,389,390,391,392,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,393,394,395,171,172,173,174,175,396,176,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,177,178,425,179,426,427,428,429,430,431,282,180,181,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,182,448,183,184,185,186,187,188,449,450,451,452,453,454,455,189,456,457,458,459,460,461,462,463,190,464,465,466,467,468,469,470,471,472,191,192,193,194,195,196,197,198,199,200,201,202,473,203,204,474,205,206,207,208,209,210,211,212,213,214,475,476,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,477,478,479,480,481,482,483,484,283,485,284,285,486,257,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[434,463,467],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[40],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,260,261,262,263,7,266,8,9,10,11,12,13,14,15,16,17,18,19,20,267,315,21,22,23,24,25,26,27,28,29,30,300,31,32,33,34,35,36,37,38,39,40,41,42,322,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,323,324,62,63,64,68,76,77,78,79,80,268,269,270,271,272,273,274,332,275,276,277,278,333,81,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,281,345,354,108,110,111,112,113,382,114,115,116,383,117,118,488,489,119,120,121,122,123,124,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,394,171,172,173,174,175,396,176,414,420,424,429,430,431,282,180,181,432,433,434,435,436,441,442,444,445,183,185,186,187,188,449,450,451,470,471,472,191,192,193,194,195,196,197,198,199,200,201,202,203,204,474,205,206,207,208,209,210,211,212,213,214,475,476,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,477,478,479,480,481,482,483,484,283,485,284,285,486,257,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[21,38,41,490],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[331,491,492,493,494,495,496],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"o"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[107,108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[14,89,95,96,134,137,172,173,497,193,194,197,198,248,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":24,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":191,"org.easymock.tests2.UsageTest.argumentsOrdered":96,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":408,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":91,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":261,"org.easymock.tests2.DelegateToTest.testReturnException":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":162,"org.easymock.tests.MockingTest.testPartialClassMocking":177,"org.easymock.tests.MockClassControlTest.testToString":464,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":381,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":228,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":362,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":266,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":492,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":30,"org.easymock.tests2.UsageTest.wrongArguments":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":216,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":123,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":443,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":427,"org.easymock.tests2.UsageConstraintsTest.testNull":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":69,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":469,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":276,"org.easymock.tests2.CaptureTest.testPrimitive":50,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":220,"org.easymock.tests.UsageTest.moreThanOneArgument":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":247,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":68,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":129,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":477,"org.easymock.tests.UsageTest.argumentsOrdered":198,"org.easymock.tests.UsageVarargTest.varargIntAccepted":202,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":210,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":496,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":349,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":214,"org.easymock.tests.ReplayStateInvalidUsageTest.times":459,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":267,"org.easymock.tests2.DependencyTest.testClassMocking":303,"org.easymock.tests2.AnswerTest.answer":61,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":415,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":20,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":440,"org.easymock.tests2.CaptureTest.testAnd":47,"org.easymock.tests2.UsageTest.strictResetToDefault":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":128,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":272,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":481,"org.easymock.tests2.DelegateToTest.testDelegate":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":243,"org.easymock.tests.LimitationsTest.mockFinalMethod":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":227,"org.easymock.tests2.DependencyTest.testClassMockingSupport":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":396,"org.easymock.tests2.CaptureTest.testCapture1_2446744":51,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":241,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":18,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":454,"org.easymock.tests.UsageThrowableTest.throwError":249,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":442,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":380,"org.easymock.samples.PartialClassMockTest.testGetArea":302,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":455,"org.easymock.tests.MockingTest.testInterfaceMocking":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":211,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":430,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":437,"org.easymock.tests2.UsageTest.niceToStrict":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":82,"org.easymock.tests2.MockBuilderTest.testCreateMock":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":375,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":237,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":273,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":439,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":484,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":183,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":121,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":297,"org.easymock.tests.UsageOverloadedMethodTest.overloading":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":377,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":35,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":152,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":282,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":34,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":56,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":473,"org.easymock.tests.MockClassControlTest.testEquals":468,"org.easymock.tests2.EasyMockSupportClassTest.testAll":359,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":126,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":19,"org.easymock.tests2.CaptureTest.testCaptureAll":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":225,"org.easymock.tests.MockNameTest.defaultName":476,"org.easymock.tests2.UsageConstraintsTest.testMatches":36,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":130,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":209,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":226,"org.easymock.samples.BasicClassMockTest.testPrintContent":265,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":255,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":346,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":383,"org.easymock.tests2.UsageConstraintsTest.greaterThan":38,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":168,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":329,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":392,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":77,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":444,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":325,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":86,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":215,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":270,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":161,"org.easymock.tests2.CaptureTest.testCaptureFirst":60,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":271,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":98,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":487,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":148,"org.easymock.tests2.CaptureTest.testCapture2_2446744":59,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":79,"org.easymock.tests2.UsageTest.moreThanOneArgument":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":416,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":84,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":208,"org.easymock.tests.GenericTest.testBridgedEquals":385,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":298,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":450,"org.easymock.tests.UsageExpectAndReturnTest.longType":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":223,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":246,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":475,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":322,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":244,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":471,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":127,"org.easymock.tests.UsageCallCountTest.tooManyCalls":451,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":233,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":254,"org.easymock.tests.MockingTest.testNiceClassMocking":428,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":103,"org.easymock.tests.MockingTest.testClassMocking":423,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":184,"org.easymock.tests2.UsageConstraintsTest.testContains":33,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":101,"org.easymock.tests2.UsageConstraintsTest.testFind":25,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":181,"org.easymock.tests.MockTypeTest.fromEasyMockClass":441,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":132,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":9,"org.easymock.tests.UsageExpectAndReturnTest.object":151,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":493,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":204,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":435,"org.easymock.tests.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":299,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":478,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":393,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":331,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":157,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":200,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":284,"org.easymock.tests.MockClassControlTest.testHashCode":467,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":341,"org.easymock.tests2.EasyMockSupportTest.testVerify":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":369,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":479,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":483,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":283,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":17,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":65,"org.easymock.tests.UsageVarargTest.varargCharAccepted":203,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":488,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":287,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":421,"org.easymock.tests2.UsageTest.openCallCountByLastCall":92,"org.easymock.tests.DefaultClassInstantiatorTest.object":386,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":278,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":482,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":433,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":370,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":313,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":340,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":466,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":234,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":158,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":470,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":378,"org.easymock.tests2.UsageTest.resumeIfFailure":97,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":164,"org.easymock.tests2.StubTest.stubWithReturnValue":120,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":491,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":150,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":43,"org.easymock.tests2.SerializationTest.testAllMockedMethod":109,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":414,"org.easymock.samples.SupportTest.voteForRemovals":263,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":286,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":240,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":420,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":323,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":395,"org.easymock.tests.UsageExpectAndThrowTest.object":238,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":41,"org.easymock.tests2.DelegateToTest.testWrongClass":116,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":221,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":222,"org.easymock.tests.UsageStrictMockTest.range":137,"org.easymock.samples.ConstructorCalledMockTest.testTax":290,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":307,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":351,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":239,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":279,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":461,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":122,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":431,"org.easymock.tests2.CaptureTest.testCaptureNone":55,"org.easymock.tests.UsageUnorderedTest.message":248,"org.easymock.tests.UsageVerifyTest.twoReturns":173,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":259,"org.easymock.tests.UsageVarargTest.varargByteAccepted":207,"org.easymock.tests2.ThreadingTest.testThreadSafe":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":373,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":188,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":436,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":264,"org.easymock.tests2.CaptureTest.testCapture_2617107":49,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":219,"org.easymock.tests2.UsageConstraintsTest.any":31,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":458,"org.easymock.tests2.StubTest.stub":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":163,"org.easymock.tests.UsageExpectAndThrowTest.longType":231,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":390,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":457,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":13,"org.easymock.tests2.SerializationTest.testClass":107,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":281,"org.easymock.tests.LimitationsTest.mockNativeMethod":182,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":384,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":160,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":312,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":16,"org.easymock.tests2.NameTest.nameForMocksControl":113,"org.easymock.tests2.MockedExceptionTest.testMockedException":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":361,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":196,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":232,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":309,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":66,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":280,"org.easymock.tests.MockingTest.testNicePartialClassMocking":178,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":71,"org.easymock.tests2.CaptureTest.testCaptureLast":54,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":310,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":176,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":106,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":29,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":42,"org.easymock.tests.MockingTest.testTwoMocks":424,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":355,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":236,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":95,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":45,"org.easymock.samples.ExampleTest.removeNonExistingDocument":301,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":189,"org.easymock.tests.UsageStrictMockTest.differentMethods":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":342,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":388,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":78,"org.easymock.tests2.MockBuilderTest.testCreateMockString":85,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":463,"org.easymock.tests.UsageExpectAndThrowTest.floatType":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":363,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":62,"org.easymock.tests.UsageVerifyTest.twoThrows":172,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":372,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":409,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":74,"org.easymock.tests.LimitationsTest.privateConstructor":447,"org.easymock.tests2.UsageConstraintsTest.testNotNull":44,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":99,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":256,"org.easymock.tests2.UsageTest.defaultResetToNice":94,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":156,"org.easymock.tests.UsageVarargTest.differentLength":474,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":311,"org.easymock.tests2.CallbackTest.callback":118,"org.easymock.tests2.UsageConstraintsTest.equals":321,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":292,"org.easymock.tests.UsageTest.openCallCountByLastCall":195,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":218,"org.easymock.tests.UsageCallCountTest.tooFewCalls":186,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":124,"org.easymock.tests.UsageThrowableTest.throwCheckedException":253,"org.easymock.tests.MockingTest.testStrictClassMocking":422,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":175,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":105,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":315,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":460,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":354,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":64,"org.easymock.tests.ObjectMethodsTest.testHashCode":434,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":495,"org.easymock.tests2.NameTest.nameForNiceMock":112,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":80,"org.easymock.tests2.DependencyTest.testInterfaceMocking":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":494,"org.easymock.samples.ExampleTest.addDocument":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":374,"org.easymock.tests2.DelegateToTest.testStubDelegate":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.AnswerTest.stubAnswer":63,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":135,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":337,"org.easymock.tests.UsageVarargTest.varargLongAccepted":206,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":159,"org.easymock.tests.UsageExpectAndReturnTest.floatType":143,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":75,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":291,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":39,"org.easymock.tests.UsageThrowableTest.noUpperLimit":250,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":348,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":305,"org.easymock.tests2.SerializationTest.test":108,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":52,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":142,"org.easymock.tests2.UsageConstraintsTest.testSame":27,"org.easymock.samples.SupportTest.addDocument":262,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":289,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":353,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":364,"org.easymock.tests.GenericTest.testPackageScope":125,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":347,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":426,"org.easymock.tests2.NameTest.nameForMock":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":153,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":295,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":145,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":242,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":432,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":170,"org.easymock.tests2.MockedExceptionTest.testRealException":102,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":411,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":462,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":217,"org.easymock.tests2.NameTest.nameForStrictMock":111,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":336,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":8,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":296,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":70,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":306,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":389,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":40,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":334,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":269,"org.easymock.tests2.CaptureTest.testCaptureRightOne":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":368,"org.easymock.tests2.UsageConstraintsTest.testOr":28,"org.easymock.tests.UsageRangeTest.combination":167,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":67,"org.easymock.tests.UsageTest.wrongArguments":194,"org.easymock.tests2.MockBuilderTest.testWithConstructor":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":365,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":154,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":391,"org.easymock.tests.UsageVarargTest.varargShortAccepted":205,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":449,"org.easymock.tests2.UsageConstraintsTest.cmpTo":32,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":401,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":93,"org.easymock.tests2.CaptureTest.testCaptureFromStub":58,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":453,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":335,"org.easymock.tests.UsageTest.unexpectedCallWithArray":193,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":134,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":187,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":294,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":155,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":136,"org.easymock.tests2.UsageConstraintsTest.constraints":23,"org.easymock.samples.ExampleTest.addAndChangeDocument":6,"org.easymock.tests.UsageStrictMockTest.testVerify":140,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":260,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":133,"org.easymock.tests2.CompareToTest.testGreateThan":490,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":224,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":53,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":212,"org.easymock.tests.LimitationsTest.abstractClass":446,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":213,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":274}}]
