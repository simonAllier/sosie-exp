[{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[1,2,3,0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"capture"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[11,4,5,6,7,12,13,14,10,15],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[16],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:202","sourceCode":"final java.io.ObjectInputStream java.io.ObjectInputStream = new java.io.ObjectInputStream(new java.io.ByteArrayInputStream(byte[]))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[34,35,36,37,38,39,40,25,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,11,92,93,94,14,95,96,97,17,98,99,100,101,102,103,104,105,1,106,107,108,109,110,111,112,113,114,115,2,3,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,18,19,20,21,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,201,202,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,22,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,26,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,27,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,28,29,30,31,32,33],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[365,366,240,367,368,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[134],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[369,1,115,2,0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[42,44,52,53,54],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[370],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[221],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[371,372],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[152],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[143],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[373,374,375],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[68,70,71,167,169,240,241,243,244,246],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[121,149,168],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[14,95,96,376],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[64,201,201,202,202],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,190,205],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[16],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[215],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[70,119,125,126,211,240,243,399,339,340,346,347,350,351],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[17,18,19,20,21,400,23,24,27,28,29,30,31,32,33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[56,57,58,59,371,372,60,61,62,401,402,63,64,65,66,67,68,69,70,71,72,377,378,379,380,381,73,382,383,384,385,386,387,74,75,76,77,78,79,80,81,82,83,84,85,86,403,404,405,406,407,87,408,88,89,90,91,11,4,92,93,409,94,14,95,96,97,17,98,99,100,101,410,102,103,104,411,412,413,414,415,416,417,105,1,106,107,108,109,110,111,112,113,114,115,2,3,116,117,118,119,120,121,122,123,124,125,126,127,128,418,129,130,131,419,132,420,133,134,135,136,421,137,138,139,140,141,142,422,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,423,160,161,162,163,164,165,166,167,168,169,170,424,171,425,426,172,173,174,175,427,428,176,177,429,430,178,179,180,181,431,15,182,183,184,388,389,390,391,392,185,393,394,395,396,397,398,18,19,20,21,432,433,434,186,435,436,187,437,438,439,440,441,442,443,444,445,188,446,447,448,449,450,189,451,452,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,453,207,208,209,454,455,210,456,457,458,373,459,460,211,212,213,214,215,216,217,218,219,220,221,22,222,461,462,463,223,224,225,226,227,400,23,24,16,228,229,464,465,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,466,467,468,247,248,249,250,251,252,253,254,255,34,35,36,37,38,39,40,25,41,42,43,44,45,46,47,48,469,49,50,51,52,53,470,54,256,257,26,258,259,471,472,473,474,55,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,475,476,280,477,478,479,480,481,281,282,482,283,483,484,485,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,27,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,313,314,315,316,317,318,319,320,321,322,323,324,325,511,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,512,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,513,514,515,516,517,518,519,520,521,522,523,357,358,359,524,360,361,525,362,363,364,28,29,30,31,32,33],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[465],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[377,378,379,380,381,73,382,383,384,385,386,387,388,389,390,391,392,185,393,394,395,396,397,398,190,205],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[14,95,96,376],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[146],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[11,14,96,98,99,100,101,103,104,164,165,167,168,169,170,171,172,173,174,175,428,176,177,429,178,179,180,181,182,183,184,20,186,187,188,189,191,192,201,201,202,202,206,455,228,229,464,230,231,232,233,234,235,280,481,281,282,283,516,521,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[465],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":136,"org.easymock.tests2.UsageTest.argumentsOrdered":126,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":344,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":43,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":121,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":205,"org.easymock.tests2.DelegateToTest.testReturnException":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":29,"org.easymock.tests.MockingTest.testPartialClassMocking":281,"org.easymock.tests.MockClassControlTest.testToString":232,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":423,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":487,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":440,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":260,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":61,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":510,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":5,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":142,"org.easymock.tests2.UsageTest.wrongArguments":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":256,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":355,"org.easymock.samples.ExampleTest.answerVsDelegate":194,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":521,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":484,"org.easymock.tests2.UsageConstraintsTest.testNull":138,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":167,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":83,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":237,"org.easymock.tests2.CaptureTest.testPrimitive":107,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":259,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":279,"org.easymock.tests.UsageTest.moreThanOneArgument":345,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":225,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":471,"org.easymock.tests.UsageTest.argumentsOrdered":351,"org.easymock.tests.UsageVarargTest.varargIntAccepted":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":48,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":318,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":397,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":36,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":322,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":494,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":73,"org.easymock.tests.ReplayStateInvalidUsageTest.times":220,"org.easymock.tests2.DependencyTest.testClassMocking":371,"org.easymock.tests2.AnswerTest.answer":62,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":59,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":518,"org.easymock.tests2.CaptureTest.testAnd":105,"org.easymock.tests2.UsageTest.strictResetToDefault":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":78,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":336,"org.easymock.tests2.DelegateToTest.testDelegate":132,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":55,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":493,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":275,"org.easymock.tests.LimitationsTest.mockFinalMethod":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":317,"org.easymock.tests2.DependencyTest.testClassMockingSupport":372,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":513,"org.easymock.tests2.CaptureTest.testCapture1_2446744":108,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":424,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":57,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":214,"org.easymock.tests.UsageThrowableTest.throwError":284,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":520,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":398,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":452,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":497,"org.easymock.samples.PartialClassMockTest.testGetArea":206,"org.easymock.tests.MockingTest.testInterfaceMocking":482,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":319,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":467,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":441,"org.easymock.tests2.UsageTest.niceToStrict":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":261,"org.easymock.tests2.ThreadingTest.testChangeDefault":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":34,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":178,"org.easymock.tests2.MockBuilderTest.testCreateMock":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":448,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":384,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":269,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":365,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":79,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":517,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":463,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":353,"org.easymock.tests.UsageOverloadedMethodTest.overloading":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":445,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":147,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":361,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":303,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":341,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":146,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":374,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":113,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":511,"org.easymock.tests2.EasyMockSupportClassTest.testAll":186,"org.easymock.tests.MockClassControlTest.testEquals":236,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":229,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":277,"org.easymock.tests2.CaptureTest.testCaptureAll":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":315,"org.easymock.tests.MockNameTest.defaultName":478,"org.easymock.tests2.UsageConstraintsTest.testMatches":148,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":226,"org.easymock.samples.ExampleTest.voteForRemovals":198,"org.easymock.tests.UsageVarargTest.allKinds":333,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":338,"org.easymock.samples.BasicClassMockTest.testPrintContent":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":316,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":290,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":66,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":33,"org.easymock.tests2.UsageConstraintsTest.greaterThan":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":335,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":175,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":498,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":460,"org.easymock.samples.ExampleTest.voteForRemoval":195,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":427,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":88,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":370,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":522,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":170,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":490,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":364,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":25,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":76,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":28,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":418,"org.easymock.tests2.CaptureTest.testCaptureFirst":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":77,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":128,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":363,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":299,"org.easymock.tests2.UsageTest.moreThanOneArgument":118,"org.easymock.tests2.CaptureTest.testCapture2_2446744":2,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":50,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":332,"org.easymock.tests.GenericTest.testBridgedEquals":465,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":254,"org.easymock.tests.UsageExpectAndReturnTest.longType":295,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":278,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":512,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":155,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":223,"org.easymock.tests.UsageCallCountTest.tooManyCalls":255,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":265,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":289,"org.easymock.tests.MockingTest.testNiceClassMocking":485,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":99,"org.easymock.tests.MockingTest.testClassMocking":480,"org.easymock.tests2.UsageConstraintsTest.testContains":145,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":248,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":20,"org.easymock.tests2.UsageConstraintsTest.testFind":137,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":343,"org.easymock.tests.MockTypeTest.fromEasyMockClass":519,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":94,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":238,"org.easymock.tests.UsageExpectAndReturnTest.object":302,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":6,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":327,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":209,"org.easymock.tests.UsageTest.exactCallCountByLastCall":352,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":39,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":486,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":472,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":308,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":323,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":389,"org.easymock.tests.MockClassControlTest.testHashCode":235,"org.easymock.tests2.EasyMockSupportTest.testVerify":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":443,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":473,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":462,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":56,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":420,"org.easymock.tests.UsageVarargTest.varargCharAccepted":326,"org.easymock.tests2.CaptureTest.testCaptureMultiple":369,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":54,"org.easymock.tests2.UsageTest.openCallCountByLastCall":122,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":85,"org.easymock.tests.DefaultClassInstantiatorTest.object":210,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":461,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":207,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":444,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":388,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":496,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":173,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":266,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.ReplayStateInvalidCallsTest.times":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":400,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":189,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":233,"org.easymock.tests2.UsageTest.resumeIfFailure":127,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":516,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":31,"org.easymock.tests2.StubTest.stubWithReturnValue":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":301,"org.easymock.tests2.SerializationTest.testAllMockedMethod":96,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":469,"org.easymock.samples.SupportTest.voteForRemovals":204,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":366,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":272,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":376,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":470,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":401,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":488,"org.easymock.tests.UsageExpectAndThrowTest.object":270,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":153,"org.easymock.tests2.DelegateToTest.testWrongClass":131,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":500,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":357,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":358,"org.easymock.samples.ConstructorCalledMockTest.testTax":201,"org.easymock.tests.UsageStrictMockTest.range":243,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":416,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":81,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":271,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":432,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":22,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":354,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":367,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":492,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":468,"org.easymock.tests2.CaptureTest.testCaptureNone":112,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":404,"org.easymock.tests.UsageUnorderedTest.message":211,"org.easymock.tests.UsageVerifyTest.twoReturns":340,"org.easymock.tests.UsageVarargTest.varargByteAccepted":331,"org.easymock.tests2.ThreadingTest.testThreadSafe":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":446,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":252,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":454,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":191,"org.easymock.tests2.CaptureTest.testCapture_2617107":106,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":258,"org.easymock.tests2.UsageConstraintsTest.any":143,"org.easymock.tests2.StubTest.stub":97,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":53,"org.easymock.tests.UsageExpectAndThrowTest.longType":263,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":373,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":218,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":185,"org.easymock.tests2.SerializationTest.testClass":14,"org.easymock.tests.LimitationsTest.mockNativeMethod":280,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":464,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":379,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":508,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":72,"org.easymock.tests2.NameTest.nameForMocksControl":163,"org.easymock.tests2.MockedExceptionTest.testMockedException":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":436,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":349,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":409,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":264,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":283,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":164,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":181,"org.easymock.tests.MockingTest.testNicePartialClassMocking":282,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":169,"org.easymock.tests2.CaptureTest.testCaptureLast":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":377,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":514,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":507,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":141,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":104,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":154,"org.easymock.tests.MockingTest.testTwoMocks":481,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":504,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":268,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":125,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":158,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":407,"org.easymock.samples.ExampleTest.removeNonExistingDocument":199,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":216,"org.easymock.tests.UsageStrictMockTest.differentMethods":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":390,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":457,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":406,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":89,"org.easymock.tests2.MockBuilderTest.testCreateMockString":184,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":437,"org.easymock.tests.UsageExpectAndThrowTest.floatType":262,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":63,"org.easymock.tests.UsageVerifyTest.twoThrows":339,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":524,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":188,"org.easymock.samples.ExampleTest.voteAgainstRemoval":196,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":44,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":174,"org.easymock.tests.LimitationsTest.privateConstructor":476,"org.easymock.tests2.UsageConstraintsTest.testNotNull":157,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":291,"org.easymock.tests2.UsageTest.defaultResetToNice":124,"org.easymock.samples.ExampleTest.voteAgainstRemovals":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":307,"org.easymock.tests.UsageVarargTest.differentLength":328,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":378,"org.easymock.tests2.CallbackTest.callback":92,"org.easymock.tests2.UsageConstraintsTest.equals":421,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":425,"org.easymock.tests.UsageTest.openCallCountByLastCall":348,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":26,"org.easymock.tests.UsageCallCountTest.tooFewCalls":250,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":101,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":356,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":405,"org.easymock.tests.UsageThrowableTest.throwCheckedException":288,"org.easymock.tests.MockingTest.testStrictClassMocking":479,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":368,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":103,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":27,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":382,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":221,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":102,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":65,"org.easymock.tests.ObjectMethodsTest.testHashCode":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":8,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":506,"org.easymock.tests2.NameTest.nameForNiceMock":162,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":91,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":501,"org.easymock.tests2.DependencyTest.testInterfaceMocking":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":7,"org.easymock.samples.ExampleTest.addDocument":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":451,"org.easymock.tests2.DelegateToTest.testStubDelegate":130,"org.easymock.tests2.AnswerTest.stubAnswer":64,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":241,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":431,"org.easymock.tests.UsageVarargTest.varargLongAccepted":330,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":42,"org.easymock.tests.UsageExpectAndReturnTest.floatType":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":202,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":525,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":396,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":151,"org.easymock.tests.UsageThrowableTest.noUpperLimit":285,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":134,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":412,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":109,"org.easymock.tests2.SerializationTest.test":95,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":375,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":456,"org.easymock.tests2.UsageConstraintsTest.testSame":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":293,"org.easymock.samples.SupportTest.addDocument":203,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":410,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":491,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":438,"org.easymock.tests.GenericTest.testPackageScope":228,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":38,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":395,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":483,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":489,"org.easymock.tests2.NameTest.nameForMock":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":304,"org.easymock.tests2.UsageStrictMockTest.differentMethods":71,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":426,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":274,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":453,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":337,"org.easymock.tests2.MockedExceptionTest.testRealException":21,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":523,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":46,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":68,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":257,"org.easymock.tests2.NameTest.nameForStrictMock":161,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":430,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":93,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":168,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":415,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":458,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":152,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":177,"org.easymock.tests2.UsageStrictMockTest.range":70,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":495,"org.easymock.tests2.UsageConstraintsTest.lessThan":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":41,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":12,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":442,"org.easymock.tests2.CaptureTest.testCaptureRightOne":114,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":403,"org.easymock.tests2.UsageConstraintsTest.testOr":140,"org.easymock.tests.UsageRangeTest.combination":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":165,"org.easymock.tests.UsageTest.wrongArguments":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":439,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":35,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":305,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":459,"org.easymock.tests.UsageVarargTest.varargShortAccepted":329,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":253,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":509,"org.easymock.tests2.UsageConstraintsTest.cmpTo":144,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":402,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":37,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":123,"org.easymock.tests2.CaptureTest.testCaptureFromStub":115,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":213,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":429,"org.easymock.tests.UsageTest.unexpectedCallWithArray":346,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":505,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":240,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":251,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":306,"org.easymock.tests2.UsageConstraintsTest.constraints":135,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":242,"org.easymock.samples.ExampleTest.addAndChangeDocument":200,"org.easymock.tests.UsageStrictMockTest.testVerify":246,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":190,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":314,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":320,"org.easymock.tests.LimitationsTest.abstractClass":475,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":321,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":80,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":324}}]
