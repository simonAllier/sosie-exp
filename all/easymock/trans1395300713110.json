[{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return this.java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"name"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[72,73,74,75,76,77],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,93,94,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,0,123,124,125,126,127,128,129,130,131,132,133,134,135,136,1,137,138,139,140,141,142,143,144,145,146,147,148,2,149,150,3,151,152,153,154,155,156,157,4,158,159,160,161,5,162,6,7,8,9,163,164,165,10,11,12,13,166,167,14,168,169,170,171,172,173,174,175,176,15,177,178,179,180,181,16,182,17,18,19,20,21,183,184,185,22,186,187,188,23,189,190,191,24,192,193,194,195,196,197,198,25,199,200,201,202,26,203,204,205,206,207,27,208,209,28,210,29,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,30,243,244,245,246,247,248,249,34,250,251,252,253,254,255,256,257,258,259,260,261,262,35,36,37,263,264,265,266,267,268,269,270,271,272,38,39,40,41,273,274,42,43,44,275,276,277,278,279,280,281,282,283,45,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,46,302,47,48,49,50,51,52,303,304,305,306,307,308,309,310,311,312,313,314,315,53,316,54,55,317,318,56,57,58,59,60,61,319,62,320,321,63,64,65,322,323,324,325,326,327,66,67,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,68,368,369],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[370,371,372,373,40,47],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[95,96,97,98,105,106,0,123,124,125,126,127,128,129,130,131,139,140,144,145],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[174],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:199","sourceCode":"java.util.List<java.lang.reflect.Field>.addAll(java.util.Arrays.java.util.Arrays.asList(java.lang.Class<?>.getDeclaredFields()))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:198","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[296,297,298,342],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[109,120,374,375,376,377,378,379,380,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[119,5,164,259,382,38,274,310,60,343,345,346,349,351,352,353,354,356,357,358,359,361,362,363,364],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[81,113,115,117,320],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[7,10,11,19,30,383,40,41,42,43,47,50,60,61],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[370,371,372,373,40,47],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[123,130],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[370,371,372,373,40,47],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[384,385],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[80,81,82,83,84,85,86,87,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,117,118,119,120,121,122,0,123,124,125,126,127,128,129,131,132,133,134,135,136,1,137,138,139,140,141,142,143,144,145,146,386,387,388,389,390,148,2,3,151,152,155,156,157,5,162,6,7,8,9,163,164,165,10,11,12,13,166,167,14,168,169,170,171,172,173,391,174,175,176,15,392,177,178,179,180,181,16,182,17,18,19,20,21,183,195,196,197,198,25,199,200,201,202,203,204,205,206,207,27,393,394,208,209,29,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,30,395,31,396,32,397,33,243,244,245,246,247,248,249,34,250,251,252,253,254,255,256,257,258,259,260,261,262,35,36,37,263,264,265,266,267,268,269,270,38,39,40,41,273,274,42,43,44,275,276,277,278,279,398,399,281,282,400,283,401,402,403,45,284,285,286,287,288,289,290,291,292,293,294,295,300,301,46,302,47,48,49,50,51,52,303,304,305,307,308,309,310,53,316,54,55,317,318,56,57,58,59,60,61,319,62,320,321,64,65,67,404,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,68,368,369],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[72,76],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[405],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[153,156,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[95,97,98,99,100,101,102,104,406,105,106,108],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Invocation:99","failures":[78,82,83,85,87,89,131,24,193,208,45,407],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[7,10,11,19,30,383,40,41,42,43,47,50,60,61,65],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[408,409,410],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[239,240,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":123,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests2.UsageTest.argumentsOrdered":11,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":192,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":9,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":79,"org.easymock.tests2.DelegateToTest.testReturnException":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":256,"org.easymock.tests.MockingTest.testPartialClassMocking":281,"org.easymock.tests.MockClassControlTest.testToString":35,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":299,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":345,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":375,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":129,"org.easymock.tests2.UsageTest.wrongArguments":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":289,"org.easymock.samples.ExampleTest.answerVsDelegate":81,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":32,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":402,"org.easymock.tests2.UsageConstraintsTest.testNull":125,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":169,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":24,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":265,"org.easymock.tests2.CaptureTest.testPrimitive":98,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":344,"org.easymock.tests.UsageTest.moreThanOneArgument":39,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":364,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":268,"org.easymock.tests.UsageTest.argumentsOrdered":43,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":311,"org.easymock.tests.UsageVarargTest.varargIntAccepted":247,"org.easymock.tests.InvocationTest.testEquals":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":291,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":207,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":387,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":295,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":4,"org.easymock.tests.ReplayStateInvalidUsageTest.times":336,"org.easymock.tests2.AnswerTest.answer":152,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":202,"org.easymock.tests2.CaptureTest.testAnd":95,"org.easymock.tests2.UsageTest.strictResetToDefault":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":285,"org.easymock.tests2.DelegateToTest.testDelegate":117,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":315,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":279,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":66,"org.easymock.tests2.CaptureTest.testCapture1_2446744":99,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":200,"org.easymock.tests.UsageThrowableTest.throwError":235,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":330,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":270,"org.easymock.samples.PartialClassMockTest.testGetArea":78,"org.easymock.tests.MockingTest.testInterfaceMocking":400,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":292,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":323,"org.easymock.tests2.UsageTest.niceToStrict":8,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":346,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":208,"org.easymock.tests2.MockBuilderTest.testCreateMock":29,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":354,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":370,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":23,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":327,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":287,"org.easymock.tests.UsageOverloadedMethodTest.overloading":309,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":135,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":226,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":308,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":409,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":134,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":104,"org.easymock.tests2.EasyMockSupportClassTest.testAll":158,"org.easymock.tests.MockClassControlTest.testEquals":264,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":362,"org.easymock.tests2.CaptureTest.testCaptureAll":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":277,"org.easymock.tests.MockNameTest.defaultName":71,"org.easymock.tests2.UsageConstraintsTest.testMatches":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":269,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":328,"org.easymock.samples.ExampleTest.voteForRemovals":85,"org.easymock.tests.UsageVarargTest.allKinds":254,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":59,"org.easymock.samples.BasicClassMockTest.testPrintContent":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":278,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":241,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":16,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":260,"org.easymock.tests2.UsageConstraintsTest.greaterThan":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":284,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":15,"org.easymock.samples.ExampleTest.voteForRemoval":82,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":392,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":178,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":397,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":388,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":172,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":307,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":186,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":255,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":112,"org.easymock.tests2.CaptureTest.testCaptureFirst":108,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":187,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":13,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":65,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":222,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":180,"org.easymock.tests2.CaptureTest.testCapture2_2446744":107,"org.easymock.tests2.UsageTest.moreThanOneArgument":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":211,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":253,"org.easymock.tests.GenericTest.testBridgedEquals":385,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":57,"org.easymock.tests.UsageExpectAndReturnTest.longType":218,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":275,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":363,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":142,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":367,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":297,"org.easymock.tests.UsageCallCountTest.tooManyCalls":58,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":350,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":240,"org.easymock.tests.MockingTest.testNiceClassMocking":403,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":148,"org.easymock.tests.MockingTest.testClassMocking":399,"org.easymock.tests2.UsageConstraintsTest.testContains":133,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":316,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":205,"org.easymock.tests2.UsageConstraintsTest.testFind":124,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":310,"org.easymock.tests.MockTypeTest.fromEasyMockClass":31,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":46,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":214,"org.easymock.tests.UsageExpectAndReturnTest.object":225,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":191,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":376,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":369,"org.easymock.tests.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":300,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":312,"org.easymock.tests2.ConstraintsToStringTest.findToString":405,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":374,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":231,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":245,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":320,"org.easymock.tests.MockClassControlTest.testHashCode":263,"org.easymock.tests2.EasyMockSupportTest.testVerify":194,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":313,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":319,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":199,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":166,"org.easymock.tests.UsageVarargTest.varargCharAccepted":248,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":182,"org.easymock.tests2.UsageTest.openCallCountByLastCall":163,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":193,"org.easymock.tests.DefaultClassInstantiatorTest.object":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":325,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":68,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":383,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":352,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":238,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":175,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":37,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":351,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":232,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":161,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":36,"org.easymock.tests2.UsageTest.resumeIfFailure":12,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":258,"org.easymock.tests2.StubTest.stubWithReturnValue":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":380,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":224,"org.easymock.tests2.SerializationTest.testAllMockedMethod":111,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":271,"org.easymock.samples.SupportTest.voteForRemovals":89,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":371,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":357,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":272,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":153,"org.easymock.tests.UsageExpectAndThrowTest.object":355,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":140,"org.easymock.tests2.DelegateToTest.testWrongClass":115,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":365,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":366,"org.easymock.tests.UsageStrictMockTest.range":50,"org.easymock.samples.ConstructorCalledMockTest.testTax":93,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":190,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":356,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":28,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":288,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":372,"org.easymock.tests2.CaptureTest.testCaptureNone":103,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":324,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":73,"org.easymock.tests.UsageUnorderedTest.message":30,"org.easymock.tests.UsageVerifyTest.twoReturns":61,"org.easymock.tests.UsageVarargTest.varargByteAccepted":252,"org.easymock.tests2.ThreadingTest.testThreadSafe":177,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":318,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":69,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":90,"org.easymock.tests2.CaptureTest.testCapture_2617107":97,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":404,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":343,"org.easymock.tests2.UsageConstraintsTest.any":131,"org.easymock.tests2.StubTest.stub":118,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":335,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":257,"org.easymock.tests.UsageExpectAndThrowTest.longType":348,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":408,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":334,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":18,"org.easymock.tests2.SerializationTest.testClass":109,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":26,"org.easymock.tests.LimitationsTest.mockNativeMethod":244,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":234,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":306,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":21,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":74,"org.easymock.tests2.NameTest.nameForMocksControl":198,"org.easymock.tests2.MockedExceptionTest.testMockedException":204,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":274,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":283,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":349,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":167,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":210,"org.easymock.tests.MockingTest.testNicePartialClassMocking":282,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":171,"org.easymock.tests2.CaptureTest.testCaptureLast":102,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":67,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":151,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":128,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":141,"org.easymock.tests.MockingTest.testTwoMocks":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":215,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":353,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":145,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":77,"org.easymock.samples.ExampleTest.removeNonExistingDocument":86,"org.easymock.tests.UsageStrictMockTest.differentMethods":51,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":332,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":76,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":179,"org.easymock.tests2.MockBuilderTest.testCreateMockString":212,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":261,"org.easymock.tests.UsageExpectAndThrowTest.floatType":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":1,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":155,"org.easymock.tests.UsageVerifyTest.twoThrows":60,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":160,"org.easymock.samples.ExampleTest.voteAgainstRemoval":83,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":322,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":176,"org.easymock.tests2.UsageConstraintsTest.testNotNull":144,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":242,"org.easymock.tests2.UsageTest.defaultResetToNice":165,"org.easymock.samples.ExampleTest.voteAgainstRemovals":80,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":230,"org.easymock.tests.UsageVarargTest.differentLength":34,"org.easymock.tests2.CallbackTest.callback":25,"org.easymock.tests.UsageTest.openCallCountByLastCall":273,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":342,"org.easymock.tests.UsageCallCountTest.tooFewCalls":55,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":149,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":290,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":75,"org.easymock.tests.UsageThrowableTest.throwCheckedException":239,"org.easymock.tests.MockingTest.testStrictClassMocking":398,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":373,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":3,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":301,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":2,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":337,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":150,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":157,"org.easymock.tests.ObjectMethodsTest.testHashCode":368,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":181,"org.easymock.tests2.NameTest.nameForNiceMock":197,"org.easymock.tests2.DependencyTest.testInterfaceMocking":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":377,"org.easymock.samples.ExampleTest.addDocument":84,"org.easymock.tests2.DelegateToTest.testStubDelegate":114,"org.easymock.tests2.AnswerTest.stubAnswer":156,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":48,"org.easymock.tests.UsageVarargTest.varargLongAccepted":251,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":52,"org.easymock.tests.UsageExpectAndReturnTest.floatType":217,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":233,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":120,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":94,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":138,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests.UsageThrowableTest.noUpperLimit":236,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":122,"org.easymock.tests2.SerializationTest.test":110,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":100,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":410,"org.easymock.tests2.UsageConstraintsTest.testSame":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":216,"org.easymock.samples.SupportTest.addDocument":88,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":333,"org.easymock.tests.GenericTest.testPackageScope":304,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":314,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":401,"org.easymock.tests2.NameTest.nameForMock":195,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":227,"org.easymock.tests2.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":391,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":219,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":359,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":286,"org.easymock.tests2.MockedExceptionTest.testRealException":206,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":33,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":390,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":17,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":339,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":341,"org.easymock.tests2.NameTest.nameForStrictMock":196,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":394,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":170,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":389,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":139,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":27,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.UsageConstraintsTest.lessThan":146,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":22,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":378,"org.easymock.tests2.CaptureTest.testCaptureRightOne":105,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":72,"org.easymock.tests2.UsageConstraintsTest.testOr":127,"org.easymock.tests.UsageRangeTest.combination":45,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":14,"org.easymock.tests.UsageTest.wrongArguments":41,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":220,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":228,"org.easymock.tests.UsageVarargTest.varargShortAccepted":250,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":56,"org.easymock.tests2.UsageConstraintsTest.cmpTo":132,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":382,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":164,"org.easymock.tests2.CaptureTest.testCaptureFromStub":106,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":329,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":393,"org.easymock.tests.UsageTest.unexpectedCallWithArray":40,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":47,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":229,"org.easymock.tests2.CaptureTest.testCapture":406,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":49,"org.easymock.samples.ExampleTest.addAndChangeDocument":87,"org.easymock.tests.UsageStrictMockTest.testVerify":303,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":92,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":276,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":293,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":221,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":189,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":246}}]
