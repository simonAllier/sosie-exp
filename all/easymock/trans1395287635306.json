[{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,0,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[68,69,199,200],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[201,202,203,204,205,142],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[36,55,58,59,114,143,146,147,206,154,167,168,169],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[10,11,13,15,16,231,0,30,93,95,101],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[232,233],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[234,1,2,3,235,4,5,6,236,7,8,9,10,11,237,12,13,14,15,16,17,231,18,19,20,21,22,23,24,25,26,0,27,28,238,29,30,31,32,207,208,209,210,211,33,212,213,214,215,216,217,34,35,36,37,38,39,40,41,239,42,43,240,44,45,46,47,48,241,49,50,51,242,243,244,52,53,54,245,55,56,57,58,59,246,247,248,249,250,251,60,252,253,254,255,256,257,258,259,260,61,261,262,263,264,265,62,266,267,268,218,219,220,221,222,63,223,224,225,226,227,228,64,269,270,65,66,67,271,272,273,274,275,68,69,199,276,277,278,279,280,281,70,282,71,283,72,284,285,286,73,287,288,289,290,291,292,74,293,294,75,295,76,77,78,79,296,80,81,297,82,298,299,300,301,302,303,304,305,306,307,308,309,310,83,311,84,312,85,86,87,88,313,314,89,315,90,91,316,317,318,319,320,321,322,323,324,92,93,94,95,96,97,98,99,325,326,100,101,327,328,329,330,331,102,332,333,334,335,336,337,338,339,103,104,340,341,342,105,106,343,107,344,345,346,108,109,110,111,112,347,348,349,350,351,352,353,354,355,356,357,113,114,205,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,358,359,360,361,362,363,364,365,141,366,142,143,144,145,146,147,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,148,149,384,385,386,387,388,389,390,391,392,150,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,206,151,426,152,153,427,428,429,430,431,154,432,433,434,435,436,437,438,439,440,441,442,443,444,445,155,156,446,157,158,159,447,448,449,450,451,452,453,454,160,455,161,162,163,164,165,166,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,167,168,169,471,472,473,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,474,475,476,477,478,479,480,481,482,483,484,190,191,485,486,192,193,194,195,487,196,488,489,490,491,229,197,230,492,198,493,494],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[234,1,2,3,235,4,5,6,236,7,8,9,10,11,237,12,13,14,15,16,17,231,18,19,20,21,22,23,24,25,26,0,27,28,238,29,30,31,32,207,208,209,210,211,33,212,213,214,215,216,217,34,35,36,37,38,39,40,41,239,42,43,240,44,45,46,47,48,241,49,50,51,242,243,244,52,53,54,245,55,56,57,58,59,246,247,248,249,250,251,60,252,253,254,255,256,257,258,259,260,61,261,262,263,264,265,62,266,267,268,218,219,220,221,222,63,223,224,225,226,227,228,64,269,270,65,66,67,271,272,273,274,275,68,69,199,276,277,278,279,280,281,70,282,71,283,72,284,285,286,73,287,288,289,290,291,292,74,293,294,75,295,76,77,78,79,296,80,81,297,82,298,299,300,301,302,303,304,305,306,307,308,309,310,83,311,84,312,85,86,87,88,313,314,89,315,90,91,316,317,318,319,320,321,322,323,324,92,93,94,95,96,97,98,99,325,326,100,101,327,328,329,330,331,102,332,333,334,335,336,337,338,339,103,104,340,341,342,105,106,343,107,344,345,346,108,109,110,111,112,347,348,349,350,351,352,353,354,355,356,357,113,114,205,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,358,359,360,361,362,363,364,365,141,366,142,143,144,145,146,147,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,148,149,384,385,386,387,388,389,390,391,392,150,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,206,151,426,152,153,427,428,429,430,431,154,432,433,434,435,436,437,438,439,440,441,442,443,444,445,155,156,446,157,158,159,447,448,449,450,451,452,453,454,160,455,161,162,163,164,165,166,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,167,168,169,471,472,473,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,474,475,476,477,478,479,480,481,482,483,484,190,191,485,486,192,193,194,195,487,196,488,489,490,491,229,197,230,492,198,493,494],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[68,69,199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[2,45,46,47,48,49,50,51,52,53,55,57,58,249,60,61,62,278,70,71,72,73,74,77,79,296,80,81,297,82,300,304,305,306,102,339,105,106,107,108,109,110,111,112,143,145,146,376,377,378,379,382,383,148,149,420,422,151,426,152,153,155,457,170,171,172,173,174,175,178,179,181,182,183,185,186,187,188,189,474,192,194,195,196,197,198],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[495,496,497,498,499,283,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"parameterType","paramType":"parameterType"}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[76,307],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[385,386,387,388,390,392],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[237,42,118],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[37,42,43,57,500,205,115,118,119,142,145,432,159,168,169],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[6,236,7,64,65,66,193],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[57,58,145,146,167,190,191],"status":-1,"binaryOperator":"(int) == (int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[68,69,199,200],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[36,37,42,43,55,57,58,502,201,503,504,505,506,507,508,202,509,510,203,511,204,512,513,500,114,205,115,118,119,142,143,145,146,424,425,428,431,154,432,159,167,168,169],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,3,4,5,11,13,16,17,18,19,21,24,0,27,28,238,29,30,33,34,35,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,245,55,56,57,58,59,249,60,61,62,63,64,65,68,69,199,70,71,72,74,77,78,79,296,80,81,297,82,300,305,83,84,312,85,86,87,88,313,89,315,90,91,316,93,94,95,96,98,99,325,326,100,101,329,102,339,103,105,106,107,115,118,119,120,123,124,126,131,136,366,142,143,144,145,146,147,420,421,151,427,429,430,154,433,155,156,446,157,159,160,455,161,162,163,164,165,166,459,460,461,463,464,466,467,468,469,470,168,169,172,173,175,180,185,478,479,480,482,483,192,193,194,195,487,196,489,229,197,230,492,198,493,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":11,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests2.UsageTest.argumentsOrdered":43,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":405,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":39,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":229,"org.easymock.tests2.DelegateToTest.testReturnException":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":352,"org.easymock.tests.MockingTest.testPartialClassMocking":105,"org.easymock.tests.MockClassControlTest.testToString":370,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":271,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":121,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":60,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":53,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":495,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":155,"org.easymock.tests2.UsageTest.wrongArguments":37,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":228,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":349,"org.easymock.samples.ExampleTest.answerVsDelegate":193,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":452,"org.easymock.tests2.UsageConstraintsTest.testNull":13,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":345,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":81,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":315,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":375,"org.easymock.tests2.CaptureTest.testPrimitive":96,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":158,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":140,"org.easymock.tests.UsageTest.moreThanOneArgument":114,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":378,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":484,"org.easymock.tests.UsageTest.argumentsOrdered":119,"org.easymock.tests.UsageVarargTest.varargIntAccepted":461,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":499,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":216,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":319,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":112,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":505,"org.easymock.tests.ReplayStateInvalidUsageTest.times":442,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":63,"org.easymock.tests2.DependencyTest.testClassMocking":243,"org.easymock.tests2.AnswerTest.answer":64,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":412,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":292,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":449,"org.easymock.tests2.CaptureTest.testAnd":93,"org.easymock.tests2.UsageTest.strictResetToDefault":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":280,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":87,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":486,"org.easymock.tests2.DelegateToTest.testDelegate":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":136,"org.easymock.tests.LimitationsTest.mockFinalMethod":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":355,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":362,"org.easymock.tests2.DependencyTest.testClassMockingSupport":244,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":424,"org.easymock.tests2.CaptureTest.testCapture1_2446744":97,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":299,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":290,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":436,"org.easymock.tests.UsageThrowableTest.throwError":160,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":451,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":394,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":267,"org.easymock.samples.PartialClassMockTest.testGetArea":197,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":437,"org.easymock.tests.MockingTest.testInterfaceMocking":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":382,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":122,"org.easymock.tests2.UsageTest.niceToStrict":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":256,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":70,"org.easymock.tests2.MockBuilderTest.testCreateMock":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":225,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":130,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":201,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":88,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":448,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":473,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":475,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":347,"org.easymock.tests.UsageOverloadedMethodTest.overloading":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":265,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":430,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":22,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":181,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":339,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":21,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":100,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":462,"org.easymock.tests2.EasyMockSupportClassTest.testAll":249,"org.easymock.tests.MockClassControlTest.testEquals":374,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":421,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":138,"org.easymock.tests2.CaptureTest.testCaptureAll":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":360,"org.easymock.tests.MockNameTest.defaultName":357,"org.easymock.tests2.UsageConstraintsTest.testMatches":23,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":434,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":379,"org.easymock.samples.ExampleTest.voteForRemovals":196,"org.easymock.tests.UsageVarargTest.allKinds":470,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":167,"org.easymock.samples.BasicClassMockTest.testPrintContent":494,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":361,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":165,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":54,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":213,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":356,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":391,"org.easymock.tests2.UsageConstraintsTest.greaterThan":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":426,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":306,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":392,"org.easymock.samples.ExampleTest.voteForRemoval":194,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":295,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":307,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":453,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":320,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":298,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":433,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":85,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":351,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":234,"org.easymock.tests2.CaptureTest.testCaptureFirst":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":86,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":432,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":177,"org.easymock.tests2.UsageTest.moreThanOneArgument":36,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":77,"org.easymock.tests2.CaptureTest.testCapture2_2446744":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":413,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":73,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":469,"org.easymock.tests.GenericTest.testBridgedEquals":423,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":501,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":482,"org.easymock.tests.UsageExpectAndReturnTest.longType":173,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":358,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":139,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":474,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":238,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":376,"org.easymock.tests.UsageCallCountTest.tooManyCalls":483,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":511,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":227,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":164,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":46,"org.easymock.tests.MockingTest.testNiceClassMocking":346,"org.easymock.tests.MockingTest.testClassMocking":341,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":476,"org.easymock.tests2.UsageConstraintsTest.testContains":20,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":83,"org.easymock.tests2.UsageConstraintsTest.testFind":12,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":104,"org.easymock.tests.MockTypeTest.fromEasyMockClass":450,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":141,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":7,"org.easymock.tests.UsageExpectAndReturnTest.object":180,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":496,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":464,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":336,"org.easymock.tests.UsageTest.exactCallCountByLastCall":120,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":456,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":190,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":513,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":293,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":459,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":186,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":429,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":208,"org.easymock.tests.MockClassControlTest.testHashCode":373,"org.easymock.tests2.EasyMockSupportTest.testVerify":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":258,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":504,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":191,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":472,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":289,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":268,"org.easymock.tests.UsageVarargTest.varargCharAccepted":463,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":384,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastCall":40,"org.easymock.tests.DefaultClassInstantiatorTest.object":385,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":91,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":471,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":334,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":221,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":207,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":304,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":372,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":127,"org.easymock.tests.CapturesMatcherTest.test":233,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":187,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":363,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":62,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":371,"org.easymock.tests2.UsageTest.resumeIfFailure":240,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":447,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":354,"org.easymock.tests2.StubTest.stubWithReturnValue":92,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":283,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":179,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":29,"org.easymock.tests2.SerializationTest.testAllMockedMethod":199,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":411,"org.easymock.samples.SupportTest.voteForRemovals":198,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":202,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":133,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":200,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":417,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":269,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":458,"org.easymock.tests.UsageExpectAndThrowTest.object":131,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":27,"org.easymock.tests2.DelegateToTest.testWrongClass":3,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":148,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":149,"org.easymock.samples.ConstructorCalledMockTest.testTax":490,"org.easymock.tests.UsageStrictMockTest.range":145,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":322,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":314,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":71,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":444,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":246,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":348,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":203,"org.easymock.tests2.CaptureTest.testCaptureNone":326,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":383,"org.easymock.tests.UsageUnorderedTest.message":159,"org.easymock.tests.UsageVerifyTest.twoReturns":169,"org.easymock.tests.UsageVarargTest.varargByteAccepted":468,"org.easymock.tests2.ThreadingTest.testThreadSafe":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":261,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":480,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":493,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":337,"org.easymock.tests2.CaptureTest.testCapture_2617107":95,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":510,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":157,"org.easymock.tests2.UsageConstraintsTest.any":18,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":441,"org.easymock.tests2.StubTest.stub":324,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndThrowTest.longType":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":353,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":389,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":440,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":56,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":33,"org.easymock.tests2.SerializationTest.testClass":68,"org.easymock.tests.LimitationsTest.mockNativeMethod":102,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":422,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":220,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":59,"org.easymock.tests2.NameTest.nameForMocksControl":275,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":222,"org.easymock.tests2.MockedExceptionTest.testMockedException":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":251,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":125,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":107,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":236,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":79,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":72,"org.easymock.tests.MockingTest.testNicePartialClassMocking":106,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":82,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":218,"org.easymock.tests2.CaptureTest.testCaptureLast":325,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":425,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":51,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":28,"org.easymock.tests.MockingTest.testTwoMocks":342,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":170,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":129,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":31,"org.easymock.samples.ExampleTest.removeNonExistingDocument":488,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":438,"org.easymock.tests.UsageStrictMockTest.differentMethods":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":209,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":387,"org.easymock.tests2.ConstraintsToStringTest.andToString":508,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":76,"org.easymock.tests2.MockBuilderTest.testCreateMockString":288,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":368,"org.easymock.tests.UsageExpectAndThrowTest.floatType":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":252,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":248,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":65,"org.easymock.tests.UsageVerifyTest.twoThrows":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":294,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":61,"org.easymock.samples.ExampleTest.voteAgainstRemoval":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":381,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":305,"org.easymock.tests.LimitationsTest.privateConstructor":331,"org.easymock.tests2.UsageConstraintsTest.testNotNull":30,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":166,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":309,"org.easymock.tests2.UsageTest.defaultResetToNice":239,"org.easymock.samples.ExampleTest.voteAgainstRemovals":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":185,"org.easymock.tests.UsageVarargTest.differentLength":465,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":219,"org.easymock.tests2.CallbackTest.callback":5,"org.easymock.tests2.UsageConstraintsTest.equals":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":301,"org.easymock.tests.UsageTest.openCallCountByLastCall":116,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":446,"org.easymock.tests.UsageCallCountTest.tooFewCalls":478,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":350,"org.easymock.tests.UsageThrowableTest.throwCheckedException":163,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":204,"org.easymock.tests.MockingTest.testStrictClassMocking":340,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":393,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":50,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":223,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":443,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":49,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":67,"org.easymock.tests.ObjectMethodsTest.testHashCode":335,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":498,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":78,"org.easymock.tests2.NameTest.nameForNiceMock":274,"org.easymock.tests2.DependencyTest.testInterfaceMocking":52,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":497,"org.easymock.samples.ExampleTest.addDocument":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":262,"org.easymock.tests2.DelegateToTest.testStubDelegate":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":266,"org.easymock.tests2.AnswerTest.stubAnswer":66,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":143,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":284,"org.easymock.tests.UsageVarargTest.varargLongAccepted":467,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":188,"org.easymock.tests.UsageExpectAndReturnTest.floatType":172,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":74,"org.easymock.tests2.ConstraintsToStringTest.orToString":502,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":491,"org.easymock.tests.UsageThrowableTest.noUpperLimit":455,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":215,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":9,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":317,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":98,"org.easymock.tests2.SerializationTest.test":69,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":171,"org.easymock.tests2.UsageConstraintsTest.testSame":14,"org.easymock.samples.SupportTest.addDocument":492,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":241,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":253,"org.easymock.tests.GenericTest.testPackageScope":420,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":214,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":344,"org.easymock.tests2.NameTest.nameForMock":272,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":182,"org.easymock.tests2.UsageStrictMockTest.differentMethods":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":287,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":302,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":174,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":135,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":153,"org.easymock.tests2.MockedExceptionTest.testRealException":311,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":323,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":408,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":55,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":445,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":156,"org.easymock.tests2.NameTest.nameForStrictMock":273,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":281,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":297,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":321,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":388,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":278,"org.easymock.tests2.UsageStrictMockTest.range":57,"org.easymock.tests2.UsageConstraintsTest.lessThan":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":312,"org.easymock.tests2.CaptureTest.testCaptureRightOne":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":257,"org.easymock.tests2.UsageConstraintsTest.testOr":15,"org.easymock.tests.UsageRangeTest.combination":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":296,"org.easymock.tests.UsageTest.wrongArguments":115,"org.easymock.tests2.MockBuilderTest.testWithConstructor":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":254,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":369,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":183,"org.easymock.tests.UsageVarargTest.varargShortAccepted":466,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":390,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":481,"org.easymock.tests2.UsageConstraintsTest.cmpTo":19,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":398,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests2.CaptureTest.testCaptureFromStub":327,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":435,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":279,"org.easymock.tests.UsageTest.unexpectedCallWithArray":205,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":142,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":479,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":184,"org.easymock.tests2.CaptureTest.testCapture":232,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":144,"org.easymock.tests2.UsageConstraintsTest.constraints":10,"org.easymock.samples.ExampleTest.addAndChangeDocument":489,"org.easymock.tests2.ConstraintsToStringTest.notToString":503,"org.easymock.tests.UsageStrictMockTest.testVerify":367,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":230,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":366,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":359,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":110,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":176,"org.easymock.tests.LimitationsTest.abstractClass":330,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":111,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":313}}]
