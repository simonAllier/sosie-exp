[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[201,319,215,220],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[246,320,321,279,322,323,324,325,326,327],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[34,164,249,251,252],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[274,275,294],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[24,25,26,28,28,29,29,328,45,46,329,330,331,332,47,333,63,334,335,336,337,338,339,340,341,342,343,91,92,93,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,192,193,194,359,360,246,248,257,258,361,362,259,260,261,262,321,263,264,265,279,322,286,287,289,290,291,292,293,363,364,294,295,296,297,365,366,298,299,300,301,303,304,367,368,369,315,370,371,316,372,373,374,375,376,377,378,379,380,317,381,382,383,384,385,318,386,387],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[49,50,51,52,53,54,71,72,77,82,85,89,90,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,192,193,194,195,266,273,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[53,62,81,82,114,115,116,117,118,132,136,137,138,139,140,161,162,173,174,196,197,198,199,200,201,202,203,204,205,319,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,284,285,293,310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[98,102,103,105,108,145,149,150,152,155,176,177,10,312,313],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[388,389,390,62,73,75,78,79,119,120,121,173,174,176,177,268,269,275,276,391,392,393,394,310,312,313],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && ((((java.lang.String)(java.lang.Object)).indexOf(java.lang.String)) >= 0)","type":"CtReturnImpl"},"failures":[198,208,215],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[12,395,250],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[319],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[328,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[320,322,323,324,325,396,397],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[398,14,399],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[338,0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[395,400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,401,39,402,403,404,405,406,40,41,42,43,44,328,45,46,329,330,331,332,47,333,49,50,51,52,53,54,407,408,55,56,57,58,59,60,61,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,62,431,432,433,434,435,436,437,438,398,439,440,441,63,64,65,66,67,68,69,70,71,442,443,444,445,72,73,74,75,76,77,78,79,80,81,82,446,447,448,83,84,85,86,87,88,89,90,334,335,336,337,338,339,340,341,342,343,91,92,449,93,450,451,344,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,452,125,126,127,128,129,130,131,132,345,346,347,348,349,350,351,352,133,453,134,135,136,137,138,139,140,454,455,456,353,457,458,459,460,354,461,462,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,463,161,162,163,464,164,165,465,466,166,467,468,469,167,168,169,170,171,172,173,174,175,176,177,178,470,471,472,473,474,475,476,477,478,479,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,399,18,19,20,21,22,480,23,179,180,181,182,183,184,185,186,187,188,189,190,191,355,356,357,358,481,482,192,193,194,195,196,197,198,199,483,200,201,202,203,204,205,319,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,484,485,486,487,488,489,223,490,491,492,493,494,495,224,496,225,226,227,228,497,498,499,500,501,229,502,503,504,505,506,507,230,231,232,233,234,235,236,237,238,239,240,241,242,243,359,360,244,245,246,247,248,395,249,250,251,400,252,253,254,255,256,257,258,361,362,259,260,261,262,508,321,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,322,280,509,510,281,282,283,284,511,285,286,287,288,289,290,291,292,512,293,363,364,294,295,296,297,365,366,298,299,300,301,513,302,303,304,514,305,306,307,515,391,392,393,394,308,309,310,311,312,313,314,516,517,518,519,520,521,367,368,369,315,370,371,316,372,373,374,375,376,377,378,379,380,317,381,382,383,384,385,318,386,387],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[522],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,401,39,402,403,404,405,406,40,41,42,43,44,328,45,46,329,330,331,332,47,333,49,50,51,52,53,54,407,408,55,56,57,58,59,60,61,62,431,432,433,434,435,436,437,438,398,439,440,441,63,64,65,66,67,68,69,70,71,442,443,444,445,72,73,74,75,76,77,78,79,80,81,82,446,447,448,83,84,85,86,87,88,89,90,334,335,336,337,338,339,340,341,342,343,91,92,449,93,450,451,344,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,452,125,126,127,128,129,130,131,132,345,346,347,348,349,350,351,352,133,453,134,135,136,137,138,139,140,454,455,456,353,457,458,459,460,354,461,462,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,463,161,162,163,464,164,165,465,466,166,467,468,469,167,168,169,170,171,172,173,174,175,176,177,178,470,471,472,473,474,475,476,477,478,479,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,399,18,19,20,21,22,480,23,179,180,181,182,183,184,185,186,187,188,189,190,191,355,358,481,482,192,193,194,195,196,197,198,199,483,200,201,202,203,204,205,319,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,484,485,486,487,488,489,223,490,491,492,493,494,495,224,225,226,227,228,497,498,499,500,501,229,502,503,504,505,506,507,230,231,232,233,234,235,236,237,238,239,240,241,242,243,359,360,244,245,246,247,248,395,249,250,251,400,252,253,254,255,256,257,258,361,362,259,260,261,262,508,321,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,322,280,509,510,281,282,283,284,511,285,286,287,288,289,290,291,292,512,293,363,364,294,295,296,297,365,366,298,299,300,301,513,302,303,304,514,305,306,307,515,391,392,393,394,308,309,310,311,312,313,314,367,368,369,315,370,371,316,372,373,374,375,376,377,378,379,380,317,381,382,383,384,385,318,386,387],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[196,198,205,207,210,213,216,217,219,222,293,523,524,525,526,527],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[453,134,135,18,277],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[467,468,469],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[48,49,528,230,231,232,233,234,235,236,237,238,239,522,240,241,242,243,246],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[49,50,51,52,53,54,71,72,77,82,83,85,86,87,88,89,90,120,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,192,193,194,195,266,273,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[320,529,322,323,324,325,326,396,397,327],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[24,25,26,28,28,29,29,328,45,46,329,330,331,332,47,333,63,334,335,336,337,338,339,340,341,342,343,91,92,93,344,345,346,347,348,349,350,351,352,353,354,479,355,358,192,193,194,246,248,530,257,531,258,361,362,259,260,261,262,321,263,264,532,533,265,279,322,534,535,536,537,538,539,286,287,289,290,291,292,293,363,364,294,295,296,297,365,366,298,299,300,301,303,304,367,368,369,315,370,371,316,372,373,374,375,376,377,378,379,380,317,381,382,383,384,385,318,386,387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"position":"org.easymock.internal.RecordState:108","failures":[53,71,83,86,87,88,89,90,120,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,306],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[446,447,448,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":199,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests2.UsageTest.argumentsOrdered":276,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":12,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":271,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":27,"org.easymock.tests2.DelegateToTest.testReturnException":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":50,"org.easymock.tests.MockingTest.testPartialClassMocking":91,"org.easymock.tests.MockClassControlTest.testToString":347,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":515,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":20,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":375,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":141,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":316,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":388,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":245,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":430,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":323,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":136,"org.easymock.tests2.UsageTest.wrongArguments":269,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":507,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":169,"org.easymock.samples.ExampleTest.answerVsDelegate":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":354,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":451,"org.easymock.tests2.UsageConstraintsTest.testNull":201,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":289,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":188,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":352,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":534,"org.easymock.tests2.CaptureTest.testPrimitive":233,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":160,"org.easymock.tests.UsageTest.moreThanOneArgument":73,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":66,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":402,"org.easymock.tests.UsageTest.argumentsOrdered":79,"org.easymock.tests.UsageVarargTest.varargIntAccepted":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":397,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":494,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":357,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":118,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":414,"org.easymock.tests.ReplayStateInvalidUsageTest.times":398,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":229,"org.easymock.tests2.DependencyTest.testClassMocking":359,"org.easymock.tests2.AnswerTest.answer":280,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":18,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":256,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":458,"org.easymock.tests2.CaptureTest.testAnd":230,"org.easymock.tests2.UsageTest.strictResetToDefault":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":294,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":183,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":134,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":406,"org.easymock.tests2.DelegateToTest.testDelegate":252,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":413,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":156,"org.easymock.tests.LimitationsTest.mockFinalMethod":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":44,"org.easymock.tests2.DependencyTest.testClassMockingSupport":360,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":454,"org.easymock.tests2.CaptureTest.testCapture1_2446744":234,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":512,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":154,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":254,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":433,"org.easymock.tests.UsageThrowableTest.throwError":83,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":460,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":495,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":387,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":417,"org.easymock.samples.PartialClassMockTest.testGetArea":24,"org.easymock.tests.MockingTest.testInterfaceMocking":449,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":434,"org.easymock.tests2.CompareToTest.testLessOrEqual":527,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":115,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":472,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":479,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":142,"org.easymock.tests2.UsageTest.niceToStrict":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":376,"org.easymock.tests2.ThreadingTest.testChangeDefault":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":2,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":259,"org.easymock.tests2.MockBuilderTest.testCreateMock":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":383,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":150,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":184,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":457,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":448,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":407,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":167,"org.easymock.tests.UsageOverloadedMethodTest.overloading":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":165,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":105,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":69,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":0,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":209,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":239,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":452,"org.easymock.tests2.EasyMockSupportClassTest.testAll":315,"org.easymock.tests.MockClassControlTest.testEquals":351,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":46,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":158,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":535,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":42,"org.easymock.tests2.CaptureTest.testCaptureAll":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":255,"org.easymock.tests.MockNameTest.defaultName":445,"org.easymock.tests2.UsageConstraintsTest.testMatches":211,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":67,"org.easymock.samples.ExampleTest.voteForRemovals":38,"org.easymock.tests.UsageVarargTest.allKinds":132,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":43,"org.easymock.samples.BasicClassMockTest.testPrintContent":26,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":89,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":308,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":491,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":54,"org.easymock.tests2.UsageConstraintsTest.greaterThan":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":370,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":453,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":297,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":418,"org.easymock.samples.ExampleTest.voteForRemoval":35,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":340,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":225,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":365,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":532,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":461,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":292,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":410,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":63,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":266,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":181,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":49,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":395,"org.easymock.tests2.CaptureTest.testCaptureFirst":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":182,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":278,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":101,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":227,"org.easymock.tests2.CaptureTest.testCapture2_2446744":242,"org.easymock.tests2.UsageTest.moreThanOneArgument":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":264,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":131,"org.easymock.tests.GenericTest.testBridgedEquals":330,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":60,"org.easymock.tests.UsageExpectAndReturnTest.longType":97,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":40,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":533,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":159,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":463,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":218,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":157,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":468,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":64,"org.easymock.tests.UsageCallCountTest.tooManyCalls":61,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":384,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":506,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":146,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":88,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":299,"org.easymock.tests.MockingTest.testNiceClassMocking":344,"org.easymock.tests.MockingTest.testClassMocking":342,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":531,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":408,"org.easymock.tests2.UsageConstraintsTest.testContains":208,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":194,"org.easymock.tests2.UsageConstraintsTest.testFind":200,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":71,"org.easymock.tests.MockTypeTest.fromEasyMockClass":459,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":285,"org.easymock.tests.UsageExpectAndReturnTest.object":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":293,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":505,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":187,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":324,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":477,"org.easymock.tests.UsageTest.exactCallCountByLastCall":80,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":7,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":403,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":322,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":110,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":164,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":486,"org.easymock.tests.MockClassControlTest.testHashCode":350,"org.easymock.tests2.EasyMockSupportTest.testVerify":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":378,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":404,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":447,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":253,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":484,"org.easymock.tests.UsageVarargTest.varargCharAccepted":125,"org.easymock.tests2.CaptureTest.testCaptureMultiple":528,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":23,"org.easymock.tests2.UsageTest.openCallCountByLastCall":272,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":190,"org.easymock.tests.DefaultClassInstantiatorTest.object":334,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":446,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":475,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":379,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":539,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":86,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":500,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":485,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":416,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":295,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":349,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":147,"org.easymock.tests.CapturesMatcherTest.test":48,"org.easymock.tests.ReplayStateInvalidCallsTest.times":422,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":111,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":467,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":318,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":348,"org.easymock.tests2.UsageTest.resumeIfFailure":277,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":353,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":52,"org.easymock.tests2.StubTest.stubWithReturnValue":306,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":320,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":103,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":219,"org.easymock.tests2.SerializationTest.testAllMockedMethod":248,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":399,"org.easymock.samples.SupportTest.voteForRemovals":32,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":328,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":153,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":480,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":509,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":444,"org.easymock.tests.UsageExpectAndThrowTest.object":151,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":216,"org.easymock.tests2.DelegateToTest.testWrongClass":251,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":420,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":161,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":162,"org.easymock.tests.UsageStrictMockTest.range":176,"org.easymock.samples.ConstructorCalledMockTest.testTax":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":481,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":186,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":298,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":152,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":261,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":440,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":367,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":168,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":412,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":473,"org.easymock.tests2.CaptureTest.testCaptureNone":238,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":517,"org.easymock.tests.UsageUnorderedTest.message":62,"org.easymock.tests.UsageVerifyTest.twoReturns":121,"org.easymock.tests.UsageVarargTest.varargByteAccepted":130,"org.easymock.tests2.ThreadingTest.testThreadSafe":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":381,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":58,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":478,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":25,"org.easymock.tests2.CaptureTest.testCapture_2617107":232,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":456,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":21,"org.easymock.tests2.UsageConstraintsTest.any":206,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":438,"org.easymock.tests2.StubTest.stub":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":469,"org.easymock.tests.UsageExpectAndThrowTest.longType":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":51,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":338,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":437,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":311,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests2.SerializationTest.testClass":246,"org.easymock.tests.LimitationsTest.mockNativeMethod":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":113,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":329,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":538,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":499,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":428,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":314,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":518,"org.easymock.tests2.NameTest.nameForMocksControl":394,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":501,"org.easymock.tests2.MockedExceptionTest.testMockedException":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":371,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":77,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":511,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":145,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":93,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":286,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":262,"org.easymock.tests.MockingTest.testNicePartialClassMocking":92,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":291,"org.easymock.tests2.CompareToTest.testCompareEqual":525,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":497,"org.easymock.tests2.CaptureTest.testCaptureLast":237,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":455,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":427,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":204,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":304,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":217,"org.easymock.tests.MockingTest.testTwoMocks":343,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":424,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":514,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":149,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":275,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":221,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":521,"org.easymock.samples.ExampleTest.removeNonExistingDocument":401,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":503,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":435,"org.easymock.tests.UsageStrictMockTest.differentMethods":177,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":487,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":520,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":336,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":226,"org.easymock.tests2.MockBuilderTest.testCreateMockString":265,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":345,"org.easymock.tests.UsageExpectAndThrowTest.floatType":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":372,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":369,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":281,"org.easymock.tests.UsageVerifyTest.twoThrows":120,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":317,"org.easymock.samples.ExampleTest.voteAgainstRemoval":36,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":13,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":296,"org.easymock.tests.LimitationsTest.privateConstructor":332,"org.easymock.tests2.UsageConstraintsTest.testNotNull":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":90,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":192,"org.easymock.tests2.UsageTest.defaultResetToNice":274,"org.easymock.samples.ExampleTest.voteAgainstRemovals":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":498,"org.easymock.tests.UsageVarargTest.differentLength":127,"org.easymock.tests2.CallbackTest.callback":307,"org.easymock.tests2.UsageConstraintsTest.equals":483,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":363,"org.easymock.tests.UsageTest.openCallCountByLastCall":76,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":138,"org.easymock.tests.UsageCallCountTest.tooFewCalls":56,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":170,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":519,"org.easymock.tests.UsageThrowableTest.throwCheckedException":87,"org.easymock.tests.MockingTest.testStrictClassMocking":341,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":82,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":502,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":300,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":439,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":302,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":283,"org.easymock.tests2.CompareToTest.testGreateOrEqual":526,"org.easymock.tests.ObjectMethodsTest.testHashCode":476,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":396,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":426,"org.easymock.tests2.NameTest.nameForNiceMock":393,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":228,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":421,"org.easymock.tests2.DependencyTest.testInterfaceMocking":244,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":325,"org.easymock.samples.ExampleTest.addDocument":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.DelegateToTest.testStubDelegate":250,"org.easymock.tests2.AnswerTest.stubAnswer":282,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":174,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":508,"org.easymock.tests.UsageVarargTest.varargLongAccepted":129,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":11,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":112,"org.easymock.tests.UsageExpectAndReturnTest.floatType":96,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":279,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":493,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":465,"org.easymock.tests.UsageThrowableTest.noUpperLimit":84,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":214,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":197,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":355,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":235,"org.easymock.tests2.SerializationTest.test":247,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":335,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":95,"org.easymock.tests2.UsageConstraintsTest.testSame":202,"org.easymock.samples.SupportTest.addDocument":31,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":513,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":411,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":373,"org.easymock.tests.GenericTest.testPackageScope":45,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":6,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":492,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":450,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":409,"org.easymock.tests2.NameTest.nameForMock":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":106,"org.easymock.tests2.UsageStrictMockTest.differentMethods":313,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":364,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":98,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":155,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":135,"org.easymock.tests2.MockedExceptionTest.testRealException":195,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":462,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":16,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":529,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":15,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":310,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":441,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":137,"org.easymock.tests2.NameTest.nameForStrictMock":392,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":362,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":284,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":290,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":358,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":389,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":215,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":337,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":258,"org.easymock.tests2.UsageStrictMockTest.range":312,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":415,"org.easymock.tests2.UsageConstraintsTest.lessThan":222,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":536,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":489,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":530,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":326,"org.easymock.tests2.CaptureTest.testCaptureRightOne":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":377,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":516,"org.easymock.tests2.UsageConstraintsTest.testOr":203,"org.easymock.tests.UsageRangeTest.combination":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":287,"org.easymock.tests.UsageTest.wrongArguments":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":374,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":3,"org.easymock.tests.UsageVarargTest.varargShortAccepted":128,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":339,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":59,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":429,"org.easymock.tests2.UsageConstraintsTest.cmpTo":207,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":510,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":419,"org.easymock.tests2.CompareToTest.testLessThan":523,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":5,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":273,"org.easymock.tests2.CaptureTest.testCaptureFromStub":241,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":432,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":361,"org.easymock.tests.UsageTest.unexpectedCallWithArray":74,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":425,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":173,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":57,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":108,"org.easymock.tests2.CaptureTest.testCapture":522,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":175,"org.easymock.tests2.UsageConstraintsTest.constraints":198,"org.easymock.samples.ExampleTest.addAndChangeDocument":39,"org.easymock.tests.UsageStrictMockTest.testVerify":470,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":30,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests2.CompareToTest.testGreateThan":524,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":41,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":236,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":537,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":116,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":100,"org.easymock.tests.LimitationsTest.abstractClass":331,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":117,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":185,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":123}}]
