[{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,154,155,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[200,299],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[300,301,52,141,302,303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[25,26,27,28,29,30,63,116,259,260,261,262],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:318","failures":[13,16],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[56,304,230],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[154,155,305,306,165,307,308,218,309,310,220,311,221],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[187,192,202,207],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:139","sourceCode":"return java.lang.Class<?>[][int].isPrimitive()","type":"CtReturnImpl"},"failures":[59,187,188,193,194,199,200,205,207,208,281,282,283,284,285,289,291],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[154,155,312,313,314,169,315,316,170,317,318,319,320,321,322,323,324,325,171,326,327,328,329,330,172,331,332,175,179,333,210,334,335,336,337,308,309,338,339,340,258,341],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[342],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[343,299,344,345,346],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[347,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[349,52,53,56,57,113,133,134,141,144,224,230,231,296],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[349,52,53,56,57,113,133,134,141,144,224,230,231,296],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[0,1,2,4,5,6,12,13,15,16,17,18,19,20,25,26,27,28,29,30,34,50,55,63,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,116,117,133,221,228,259,260,261,262,270],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[336,350,258,341],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[182,200,206,346],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[351,279,280,281,282,283,284,285,286,287,288,289,290,291,292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:52","sourceCode":"final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[187,192,202,207],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[352,210,211,353],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[182,200,206,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[38,39,40,41,42,43,44,61,89,90,91,92,93,94,97,98,100,101,102,104,105,106,107,108,110,111,112,114,119,120,121,122,123,124,125,126,142,144,145,147,148,150,151,152,156,157,158,159,160,161,162,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,213,214,216,217,219,258,267,271,272,275,294,296,297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.RecordState:117","failures":[31,149,180,181,234,237,239,263],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[139],"status":-1,"binaryOperator":"(int <= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[354,355,356,349,52,53,56,57,113,133,134,141,144,145,224,230,231,296,297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[185,186],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[357],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[1,2,5,6,12,13,15,16,17,18,19,20,25,26,27,28,29,30,34,50,55,63,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,116,117,133,221,228,259,260,261,262,270],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[29,38,39,40,41,42,43,44,59,62,63,113,114,115,116,117,118,141,142,164,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,267,279,280,281,282,283,284,285,286,287,288,289,290,291,292,358,294],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[204],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[37,349,52,53,56,57,113,133,134,141,144,224,230,231,296],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"returnValue"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":185,"org.easymock.tests2.UsageTest.argumentsOrdered":231,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":50,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":342,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":226,"org.easymock.tests2.StubTest.stubWithReturnValue":270,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":336,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":305,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":206,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":98,"org.easymock.tests2.SerializationTest.testAllMockedMethod":353,"org.easymock.tests2.DelegateToTest.testReturnException":274,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":26,"org.easymock.tests.MockingTest.testPartialClassMocking":110,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":303,"org.easymock.samples.SupportTest.voteForRemovals":156,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":320,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":69,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":68,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":170,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":235,"org.easymock.tests.UsageExpectAndThrowTest.object":79,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":272,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":203,"org.easymock.tests2.DelegateToTest.testWrongClass":276,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":38,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":39,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":191,"org.easymock.tests2.UsageTest.wrongArguments":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":114,"org.easymock.tests.UsageStrictMockTest.range":144,"org.easymock.samples.ConstructorCalledMockTest.testTax":154,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":23,"org.easymock.samples.ExampleTest.answerVsDelegate":149,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":173,"org.easymock.tests2.UsageConstraintsTest.testNull":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":80,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":160,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":254,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":216,"org.easymock.tests2.CaptureTest.testPrimitive":282,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":312,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":88,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":56,"org.easymock.tests.UsageTest.moreThanOneArgument":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":22,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":125,"org.easymock.tests2.CaptureTest.testCaptureNone":287,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":9,"org.easymock.tests.UsageUnorderedTest.message":113,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":354,"org.easymock.tests.UsageVerifyTest.twoReturns":134,"org.easymock.tests2.ThreadingTest.testThreadSafe":264,"org.easymock.tests.UsageTest.argumentsOrdered":57,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":326,"org.easymock.tests2.CaptureTest.testCapture_2617107":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":40,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":212,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":117,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":215,"org.easymock.tests2.UsageConstraintsTest.any":193,"org.easymock.tests2.StubTest.stub":269,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":44,"org.easymock.tests.UsageExpectAndThrowTest.longType":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":27,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":244,"org.easymock.tests2.SerializationTest.testClass":210,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":257,"org.easymock.tests.LimitationsTest.mockNativeMethod":61,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":311,"org.easymock.tests2.AnswerTest.answer":234,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":108,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":192,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":243,"org.easymock.tests2.CaptureTest.testAnd":279,"org.easymock.tests2.UsageTest.strictResetToDefault":222,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":335,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":165,"org.easymock.tests2.MockedExceptionTest.testMockedException":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":121,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":55,"org.easymock.tests2.DelegateToTest.testDelegate":278,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":73,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":112,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":157,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":217,"org.easymock.tests.MockingTest.testNicePartialClassMocking":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":84,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":162,"org.easymock.tests2.CompareToTest.testCompareEqual":344,"org.easymock.tests2.CaptureTest.testCaptureLast":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":29,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":130,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":179,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":190,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":49,"org.easymock.tests.MockingTest.testTwoMocks":109,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":129,"org.easymock.tests2.CaptureTest.testCapture1_2446744":283,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":82,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":77,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":230,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":208,"org.easymock.tests.UsageThrowableTest.throwError":13,"org.easymock.tests.UsageStrictMockTest.differentMethods":145,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":266,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":355,"org.easymock.tests2.MockBuilderTest.testCreateMockString":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":317,"org.easymock.tests.UsageExpectAndThrowTest.floatType":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":127,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":314,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":237,"org.easymock.tests.UsageVerifyTest.twoThrows":133,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":310,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":32,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":171,"org.easymock.samples.PartialClassMockTest.testGetArea":147,"org.easymock.tests2.CompareToTest.testLessOrEqual":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":41,"org.easymock.samples.ExampleTest.voteAgainstRemoval":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":7,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":8,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":321,"org.easymock.tests2.UsageTest.niceToStrict":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":70,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":339,"org.easymock.tests2.UsageConstraintsTest.testNotNull":207,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":20,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":214,"org.easymock.tests2.UsageTest.defaultResetToNice":229,"org.easymock.tests2.MockBuilderTest.testCreateMock":218,"org.easymock.samples.ExampleTest.voteAgainstRemovals":148,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":328,"org.easymock.tests2.CallbackTest.callback":263,"org.easymock.tests2.UsageConstraintsTest.equals":304,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":306,"org.easymock.tests.UsageTest.openCallCountByLastCall":54,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":302,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":78,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":250,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":2,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":116,"org.easymock.tests.UsageOverloadedMethodTest.overloading":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":325,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":197,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":34,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":100,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":176,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":196,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":288,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":24,"org.easymock.tests.UsageThrowableTest.throwCheckedException":17,"org.easymock.tests2.EasyMockSupportClassTest.testAll":169,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":65,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":301,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":86,"org.easymock.tests2.CaptureTest.testCaptureAll":280,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":47,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":178,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":175,"org.easymock.tests2.UsageConstraintsTest.testMatches":198,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":177,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":126,"org.easymock.tests2.CompareToTest.testGreateOrEqual":345,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":268,"org.easymock.tests.UsageVarargTest.allKinds":59,"org.easymock.tests2.DependencyTest.testInterfaceMocking":271,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":331,"org.easymock.tests2.DelegateToTest.testStubDelegate":275,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":19,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests2.AnswerTest.stubAnswer":238,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":30,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":142,"org.easymock.tests2.UsageConstraintsTest.greaterThan":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":315,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":307,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":120,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":168,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":146,"org.easymock.samples.ExampleTest.voteForRemoval":150,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":265,"org.easymock.tests.UsageExpectAndReturnTest.floatType":91,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":107,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":163,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":155,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":201,"org.easymock.tests.UsageThrowableTest.noUpperLimit":14,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":35,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":221,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":131,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":183,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":284,"org.easymock.tests2.SerializationTest.test":211,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":337,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":247,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":90,"org.easymock.tests2.UsageConstraintsTest.testSame":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":25,"org.easymock.tests2.CaptureTest.testCaptureFirst":292,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":248,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":233,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":37,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":318,"org.easymock.tests.GenericTest.testPackageScope":64,"org.easymock.tests2.CaptureTest.testCapture2_2446744":291,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":267,"org.easymock.tests2.UsageTest.moreThanOneArgument":223,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":138,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":219,"org.easymock.tests.UsageExpectAndReturnTest.longType":92,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":87,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":101,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":205,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":309,"org.easymock.tests2.UsageStrictMockTest.differentMethods":297,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":85,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":5,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":83,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":122,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":329,"org.easymock.tests2.MockedExceptionTest.testRealException":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":97,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":350,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":294,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":74,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":348,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":115,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":174,"org.easymock.tests2.UsageConstraintsTest.testContains":195,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":261,"org.easymock.tests2.UsageConstraintsTest.testFind":186,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":12,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":180,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":161,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":140,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":181,"org.easymock.tests.UsageExpectAndReturnTest.object":99,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":202,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":164,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":213,"org.easymock.tests2.UsageStrictMockTest.range":296,"org.easymock.tests2.UsageConstraintsTest.lessThan":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":253,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":340,"org.easymock.tests.UsageTest.exactCallCountByLastCall":58,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":62,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":322,"org.easymock.tests2.CaptureTest.testCaptureRightOne":289,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":136,"org.easymock.tests2.UsageConstraintsTest.testOr":189,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":341,"org.easymock.tests.UsageRangeTest.combination":119,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":105,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":158,"org.easymock.tests.UsageTest.wrongArguments":53,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":33,"org.easymock.tests2.MockBuilderTest.testWithConstructor":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":323,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":137,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":1,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":31,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":240,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":358,"org.easymock.tests2.UsageConstraintsTest.cmpTo":194,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":236,"org.easymock.tests2.CompareToTest.testLessThan":343,"org.easymock.tests2.UsageTest.openCallCountByLastCall":227,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":228,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":256,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":0,"org.easymock.tests2.CaptureTest.testCaptureFromStub":290,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":347,"org.easymock.tests.UsageTest.unexpectedCallWithArray":52,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":76,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":16,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":141,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":103,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":143,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":166,"org.easymock.tests2.UsageConstraintsTest.constraints":184,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":75,"org.easymock.samples.ExampleTest.addAndChangeDocument":153,"org.easymock.tests.CapturesMatcherTest.test":351,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":106,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":172,"org.easymock.tests2.CompareToTest.testGreateThan":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":46,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":285,"org.easymock.tests2.UsageTest.resumeIfFailure":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":42,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":95,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":36,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":251}}]
