[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.Range:44","failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,0,1,2,3,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,4,213,214,215,216,217,218,5,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,6,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,7,8,9,10,11,12,280,281,13,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,14,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,15,16,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,437,37,438,439,440,441,38,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,39,457,458,459,40,41,460,42,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[488,489,308,490,491,439],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[51,53,54,106,107,108,109,214,215,220,221,308,309,311,312,380,381,382,436,438,440,442,443],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[47,51,53,54,56,57,64,71,72,73,74,75,79,82,92,98,110,111,112,113,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,141,145,147,149,153,157,158,160,161,164,165,166,167,169,170,176,183,184,185,186,187,188,189,190,191,192,193,194,2,198,4,213,214,216,218,5,219,222,223,224,227,228,229,230,232,233,234,6,237,238,239,240,241,242,245,249,250,251,256,257,258,263,265,267,268,270,275,276,277,278,279,280,281,13,309,311,312,322,323,324,325,355,361,377,378,379,380,382,394,396,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,37,438,441,38,444,453,454,455,39,457,458,459,40,41,460,464,465,467],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[492,493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[125],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[494],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[56,58,495,79,82,92,98,139,492,141,142,145,146,147,149,152,153,493,155,2,224,227,228,229,230,233,234,237,238,240,241,242,243,245,248,249,250,251,258,260,260,261,261,273,274,320,355,366,371,394,395,396,463,464,465,467,481],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[334,496,497],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[51,54,55,214,309,312,313,361,380,381,382,438,452],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[498,244,245,246,247,248,249,250,251,252,253,258,260,260,261,261,273,274,320,330,331,332,333,334,335,337,353,354,355,356,366,371,393,394,395,396,397,461,462,463,464,465,467,470,480,481,482,483,484,485,486,487],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[53,499,500,311,381,382,436],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[488,489,308,490,491,439],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[43,46,47,48,49,50,51,52,53,54,55,56,57,58,64,71,72,73,74,75,79,82,92,98,101,103,104,110,111,112,113,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,145,146,147,149,152,153,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,176,183,184,185,186,187,188,189,190,191,192,193,194,195,0,1,2,3,197,198,199,201,209,210,211,212,4,213,214,215,216,217,218,5,219,220,221,222,223,224,227,228,229,230,232,233,234,236,6,237,238,239,240,241,242,243,245,248,249,250,251,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,7,8,9,10,11,12,280,281,13,306,307,308,309,310,311,312,313,315,316,317,318,320,322,324,325,355,357,359,14,362,377,378,15,16,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,398,399,400,402,403,404,405,406,407,408,409,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,438,439,440,441,38,442,443,444,453,454,455,456,39,457,458,459,40,41,460,42,464,465,467,473,474,475,476,477,478,479,501,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[53,500,311,381,382],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[112,113,115,116,117,118,119,120,121,122,131,132,136,137,157,158,159,160,167,168],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:53","sourceCode":"throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[112,113,116,118,119,121,131,136,157,159,167],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[72,73],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[183,213],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[56,502,503,148,494,225],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[125],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":113,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests2.UsageTest.argumentsOrdered":221,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":292,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":217,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":259,"org.easymock.tests2.DelegateToTest.testReturnException":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":8,"org.easymock.tests.MockingTest.testPartialClassMocking":464,"org.easymock.tests.MockClassControlTest.testToString":482,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":105,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":364,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":17,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":82,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":257,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":120,"org.easymock.tests2.UsageTest.wrongArguments":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":377,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":317,"org.easymock.samples.ExampleTest.answerVsDelegate":266,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":371,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":469,"org.easymock.tests2.UsageConstraintsTest.testNull":116,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":240,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":487,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":192,"org.easymock.tests2.CaptureTest.testPrimitive":160,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":379,"org.easymock.tests.UsageTest.moreThanOneArgument":438,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":36,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":385,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":445,"org.easymock.tests.UsageTest.argumentsOrdered":443,"org.easymock.tests.UsageVarargTest.varargIntAccepted":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":275,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":181,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":204,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":279,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":64,"org.easymock.tests.ReplayStateInvalidUsageTest.times":346,"org.easymock.tests2.DependencyTest.testClassMocking":254,"org.easymock.tests2.AnswerTest.answer":43,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":299,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":212,"org.easymock.tests2.CaptureTest.testAnd":157,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":368,"org.easymock.tests2.UsageTest.strictResetToDefault":213,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":143,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":324,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":449,"org.easymock.tests2.DelegateToTest.testDelegate":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":32,"org.easymock.tests.LimitationsTest.mockFinalMethod":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":11,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":392,"org.easymock.tests2.DependencyTest.testClassMockingSupport":255,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":450,"org.easymock.tests2.CaptureTest.testCapture1_2446744":161,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":244,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":210,"org.easymock.tests.UsageThrowableTest.throwError":455,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":340,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":370,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":437,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":100,"org.easymock.samples.PartialClassMockTest.testGetArea":258,"org.easymock.tests.MockingTest.testInterfaceMocking":466,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":276,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":375,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":415,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":87,"org.easymock.tests2.UsageTest.niceToStrict":216,"org.easymock.tests2.ThreadingTest.testChangeDefault":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":282,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":145,"org.easymock.tests2.MockBuilderTest.testCreateMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":95,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":67,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":488,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":26,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":188,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":471,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":315,"org.easymock.tests.UsageOverloadedMethodTest.overloading":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":91,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":126,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":14,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":427,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":280,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":496,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":125,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":166,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":401,"org.easymock.tests.MockClassControlTest.testEquals":486,"org.easymock.tests2.EasyMockSupportClassTest.testAll":79,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":395,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":390,"org.easymock.tests2.CaptureTest.testCaptureAll":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":211,"org.easymock.tests.MockNameTest.defaultName":319,"org.easymock.tests2.UsageConstraintsTest.testMatches":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":386,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":338,"org.easymock.samples.ExampleTest.voteForRemovals":270,"org.easymock.tests.UsageVarargTest.allKinds":409,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":380,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":391,"org.easymock.samples.BasicClassMockTest.testPrintContent":274,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":40,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":12,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":200,"org.easymock.tests2.UsageConstraintsTest.greaterThan":129,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":80,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":323,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":251,"org.easymock.samples.ExampleTest.voteForRemoval":267,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":337,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":72,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":252,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":372,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":243,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":320,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":185,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":7,"org.easymock.tests2.CaptureTest.testCaptureFirst":170,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":186,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":223,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":423,"org.easymock.tests2.CaptureTest.testCapture2_2446744":169,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":74,"org.easymock.tests2.UsageTest.moreThanOneArgument":214,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":300,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":408,"org.easymock.tests.GenericTest.testBridgedEquals":397,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":478,"org.easymock.tests.UsageExpectAndReturnTest.longType":419,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":388,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":183,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":493,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":35,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":134,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":321,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":33,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":383,"org.easymock.tests.UsageCallCountTest.tooManyCalls":479,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":96,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":424,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":69,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":459,"org.easymock.tests.MockingTest.testNiceClassMocking":470,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":228,"org.easymock.tests.MockingTest.testClassMocking":462,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":492,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":472,"org.easymock.tests2.UsageConstraintsTest.testContains":124,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.UsageConstraintsTest.testFind":115,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":13,"org.easymock.tests.MockTypeTest.fromEasyMockClass":369,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":103,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":306,"org.easymock.tests.UsageExpectAndReturnTest.object":426,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":245,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":191,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":403,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":413,"org.easymock.tests.UsageTest.exactCallCountByLastCall":444,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":287,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":446,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":225,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":432,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":398,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":359,"org.easymock.tests.MockClassControlTest.testHashCode":485,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":172,"org.easymock.tests2.EasyMockSupportTest.testVerify":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":89,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":447,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":327,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":209,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":156,"org.easymock.tests.UsageVarargTest.varargCharAccepted":402,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":329,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":305,"org.easymock.tests2.UsageTest.openCallCountByLastCall":218,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":194,"org.easymock.tests.DefaultClassInstantiatorTest.object":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":326,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":411,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":457,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":62,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":171,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":484,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":23,"org.easymock.tests.CapturesMatcherTest.test":501,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":433,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":350,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":98,"org.easymock.tests2.UsageTest.resumeIfFailure":222,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":366,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":10,"org.easymock.tests2.StubTest.stubWithReturnValue":6,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":148,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":425,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":135,"org.easymock.tests2.SerializationTest.testAllMockedMethod":58,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":298,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":489,"org.easymock.samples.SupportTest.voteForRemovals":263,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":393,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":174,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":29,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":304,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":44,"org.easymock.tests.UsageExpectAndThrowTest.object":27,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":365,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":132,"org.easymock.tests2.DelegateToTest.testWrongClass":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":453,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":454,"org.easymock.samples.ConstructorCalledMockTest.testTax":260,"org.easymock.tests.UsageStrictMockTest.range":311,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":207,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":190,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":227,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":28,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":147,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":76,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":316,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":490,"org.easymock.tests2.CaptureTest.testCaptureNone":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":376,"org.easymock.tests.UsageUnorderedTest.message":436,"org.easymock.tests.UsageVerifyTest.twoReturns":382,"org.easymock.tests.UsageVarargTest.varargByteAccepted":407,"org.easymock.tests2.ThreadingTest.testThreadSafe":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":93,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":476,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":414,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":273,"org.easymock.tests2.CaptureTest.testCapture_2617107":159,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":452,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":302,"org.easymock.tests2.UsageConstraintsTest.any":122,"org.easymock.tests2.StubTest.stub":236,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":345,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":9,"org.easymock.tests.UsageExpectAndThrowTest.longType":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":303,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":334,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":344,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":52,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":176,"org.easymock.tests2.SerializationTest.testClass":56,"org.easymock.tests.LimitationsTest.mockNativeMethod":355,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":435,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":396,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":61,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":55,"org.easymock.tests2.NameTest.nameForMocksControl":109,"org.easymock.tests2.MockedExceptionTest.testMockedException":1,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":81,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":38,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":467,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":102,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":21,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":237,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":149,"org.easymock.tests.MockingTest.testNicePartialClassMocking":465,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":502,"org.easymock.tests2.CaptureTest.testCaptureLast":164,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":451,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":119,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":234,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":133,"org.easymock.tests.MockingTest.testTwoMocks":463,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":416,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":25,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":220,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":137,"org.easymock.samples.ExampleTest.removeNonExistingDocument":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":66,"org.easymock.tests.UsageStrictMockTest.differentMethods":312,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":173,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":332,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":73,"org.easymock.tests2.MockBuilderTest.testCreateMockString":155,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":480,"org.easymock.tests.UsageExpectAndThrowTest.floatType":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":83,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":78,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":46,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":226,"org.easymock.tests.UsageVerifyTest.twoThrows":381,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":92,"org.easymock.samples.ExampleTest.voteAgainstRemoval":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":293,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":374,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":250,"org.easymock.tests.LimitationsTest.privateConstructor":354,"org.easymock.tests2.UsageConstraintsTest.testNotNull":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":41,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":0,"org.easymock.tests2.UsageTest.defaultResetToNice":219,"org.easymock.samples.ExampleTest.voteAgainstRemovals":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":294,"org.easymock.tests.UsageVarargTest.differentLength":404,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":60,"org.easymock.tests2.CallbackTest.callback":104,"org.easymock.tests2.UsageConstraintsTest.equals":114,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":246,"org.easymock.tests.UsageTest.openCallCountByLastCall":441,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":15,"org.easymock.tests.UsageCallCountTest.tooFewCalls":474,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":318,"org.easymock.tests.UsageThrowableTest.throwCheckedException":458,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":491,"org.easymock.tests.MockingTest.testStrictClassMocking":461,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":42,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":229,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":347,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":232,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":48,"org.easymock.tests.ObjectMethodsTest.testHashCode":412,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":503,"org.easymock.tests2.NameTest.nameForNiceMock":108,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":75,"org.easymock.tests2.DependencyTest.testInterfaceMocking":256,"org.easymock.samples.ExampleTest.addDocument":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":99,"org.easymock.tests2.DelegateToTest.testStubDelegate":198,"org.easymock.tests2.AnswerTest.stubAnswer":47,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":309,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":150,"org.easymock.tests.UsageVarargTest.varargLongAccepted":406,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":291,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":434,"org.easymock.tests.UsageExpectAndReturnTest.floatType":418,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":224,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":261,"org.easymock.tests.UsageThrowableTest.noUpperLimit":456,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":180,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":130,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":111,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":202,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":162,"org.easymock.tests2.SerializationTest.test":57,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":497,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":417,"org.easymock.tests2.UsageConstraintsTest.testSame":117,"org.easymock.samples.SupportTest.addDocument":262,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":231,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":84,"org.easymock.tests.GenericTest.testPackageScope":394,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":179,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":468,"org.easymock.tests2.NameTest.nameForMock":106,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":428,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":154,"org.easymock.tests2.UsageStrictMockTest.differentMethods":54,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":420,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":31,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":410,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":325,"org.easymock.tests2.MockedExceptionTest.testRealException":3,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":494,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":295,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":349,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":378,"org.easymock.tests2.NameTest.nameForStrictMock":107,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":144,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":101,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":241,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":206,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":499,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":131,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":333,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":141,"org.easymock.tests2.UsageStrictMockTest.range":53,"org.easymock.tests2.UsageConstraintsTest.lessThan":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":175,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":290,"org.easymock.tests2.CaptureTest.testCaptureRightOne":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":88,"org.easymock.tests2.UsageConstraintsTest.testOr":118,"org.easymock.tests.UsageRangeTest.combination":322,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":238,"org.easymock.tests.UsageTest.wrongArguments":440,"org.easymock.tests2.MockBuilderTest.testWithConstructor":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":85,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":481,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":421,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":283,"org.easymock.tests.UsageVarargTest.varargShortAccepted":405,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":335,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":477,"org.easymock.tests2.UsageConstraintsTest.cmpTo":123,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":285,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":5,"org.easymock.tests2.CaptureTest.testCaptureFromStub":168,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":339,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":142,"org.easymock.tests.UsageTest.unexpectedCallWithArray":439,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":308,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":475,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":430,"org.easymock.tests2.UsageConstraintsTest.constraints":112,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":310,"org.easymock.samples.ExampleTest.addAndChangeDocument":272,"org.easymock.tests.UsageStrictMockTest.testVerify":314,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":264,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":389,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":163,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":277,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":422,"org.easymock.tests.LimitationsTest.abstractClass":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":278,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":500,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":189}}]
