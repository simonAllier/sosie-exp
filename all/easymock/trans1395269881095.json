[{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[1,2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[55,56,57,58],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[59,60],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,47,73,74,75,76,77,78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[80,7,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,0,115,116,117,118,119,120,8,9,121,63,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,64,140,141,65,66,142,143,10,144,11,12,13,14,15,16,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,17,171,69,70,172,18,71,72,173,174,175,176,177,178,179,1,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,19,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,20,21,22,23,24,25,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,275,276,277,278,279,47,73,280,281,282,283,284,59,285,286,287,60,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,74,75,331,332,48,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,49,348,349,76,350,351,352,50,353,77,78,354,355,51,52,53,54,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,2,425,426,3,4,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,56,57,58,514],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[515,516,517,518,519,363,520],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[80,7,119,120,8,9,121,63,64,140,201,202,203,204,205,228,24,262,263,325,326,329,361,415,427,429,441,442,443,444,445,446,447,448,449,450,451,452,453,454,468,485,486,487,488,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[312,313,315,318,319,322,470,471,473,476,477,480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[7,8,9,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[228,360,491,509],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[80,7,85,88,89,90,91,92,115,116,119,120,9,121,122,123,124,125,126,127,128,129,130,131,132,133,136,139,64,140,141,65,142,143,10,144,11,12,13,14,15,16,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,17,171,69,70,172,18,71,72,173,200,201,202,203,204,205,206,207,208,209,210,211,212,213,19,215,216,217,218,219,221,222,224,225,226,227,228,233,234,235,242,243,245,20,21,22,23,24,25,262,263,265,266,267,268,269,270,271,272,273,274,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,275,276,277,278,279,47,73,280,281,282,283,284,289,290,291,292,293,294,295,296,297,298,299,300,302,302,303,303,304,305,306,307,308,309,310,316,325,326,328,329,330,74,331,48,339,340,341,342,344,345,346,49,348,349,76,350,351,352,50,353,77,78,354,355,51,52,53,54,356,358,359,360,361,362,369,373,374,375,376,379,381,385,388,398,404,407,408,409,410,411,412,413,415,418,419,420,421,424,426,3,4,436,437,438,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,474,481,482,483,484,485,486,487,488,490,491,492,493,494,495,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,56,57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[64,521,522,69,523,524],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[525],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[500],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[526],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[62,237,259,267,268,269,333,341,345,375],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[527,485,487,504,510],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[115,116,117,136,200,241,242,243,245,302,302,303,303,304,307,308,528,339,340,341,342,345,346,53,362,369,370,371,373,374,375,376,379,380,381,385,388,398,404,407,408,410,411,412,413,415,418,419,420,421,56,58],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[529],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[353],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[9,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[129,190,276,277,278,332,354],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[302,303,341,346,347,362,363,530,531,520,378,79,532,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,533,534,56],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[63,64,140,65,66,171,70,71,72,279,47,73,329,74,75,349,76,77,78,365,366,367,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[535,536,537,538,539,540,541,542],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[258,317,475],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[302,303,362,533],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":488,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":5,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":17,"org.easymock.tests2.UsageTest.argumentsOrdered":78,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":183,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":351,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":305,"org.easymock.tests2.DelegateToTest.testReturnException":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":21,"org.easymock.tests.MockingTest.testPartialClassMocking":242,"org.easymock.tests.MockClassControlTest.testToString":267,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":364,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":388,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":27,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":326,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":515,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":495,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":119,"org.easymock.tests2.UsageTest.wrongArguments":76,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":480,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":282,"org.easymock.samples.ExampleTest.answerVsDelegate":295,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":259,"org.easymock.tests2.UsageConstraintsTest.testNull":491,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":247,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":464,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":272,"org.easymock.tests2.CaptureTest.testPrimitive":444,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":121,"org.easymock.tests.UsageTest.moreThanOneArgument":171,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":46,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":409,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":291,"org.easymock.tests.UsageTest.argumentsOrdered":72,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":249,"org.easymock.tests.UsageVarargTest.varargIntAccepted":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":519,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":369,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":321,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":335,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":205,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":98,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":474,"org.easymock.tests.ReplayStateInvalidUsageTest.times":130,"org.easymock.tests2.DependencyTest.testClassMocking":323,"org.easymock.tests2.AnswerTest.answer":424,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":484,"org.easymock.tests2.CaptureTest.testAnd":441,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":256,"org.easymock.tests2.UsageTest.strictResetToDefault":348,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":531,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":418,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":277,"org.easymock.tests2.DelegateToTest.testDelegate":440,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":253,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":42,"org.easymock.tests.LimitationsTest.mockFinalMethod":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":210,"org.easymock.tests2.DependencyTest.testClassMockingSupport":324,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":165,"org.easymock.tests2.CaptureTest.testCapture1_2446744":445,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":414,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":40,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":482,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":124,"org.easymock.tests.UsageThrowableTest.throwError":10,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":258,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":62,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":322,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":293,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":526,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":533,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":406,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":101,"org.easymock.samples.PartialClassMockTest.testGetArea":304,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":125,"org.easymock.tests.MockingTest.testInterfaceMocking":244,"org.easymock.tests2.CompareToTest.testLessOrEqual":527,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":202,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":393,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":28,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":237,"org.easymock.tests2.UsageTest.niceToStrict":350,"org.easymock.tests2.ThreadingTest.testChangeDefault":357,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":542,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":174,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":373,"org.easymock.tests2.MockBuilderTest.testCreateMock":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":401,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":477,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":523,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":36,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":460,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":255,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":280,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":539,"org.easymock.tests.UsageOverloadedMethodTest.overloading":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":501,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":19,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":156,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":273,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":500,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":450,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":220,"org.easymock.tests2.EasyMockSupportClassTest.testAll":385,"org.easymock.tests.MockClassControlTest.testEquals":271,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":44,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":528,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":483,"org.easymock.tests2.CaptureTest.testCaptureAll":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":208,"org.easymock.tests.MockNameTest.defaultName":264,"org.easymock.tests2.UsageConstraintsTest.testMatches":502,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":292,"org.easymock.samples.ExampleTest.voteForRemovals":299,"org.easymock.tests.UsageVarargTest.allKinds":228,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":209,"org.easymock.samples.BasicClassMockTest.testPrintContent":308,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":15,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":327,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":25,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":318,"org.easymock.tests2.UsageConstraintsTest.greaterThan":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":276,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":421,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":102,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":288,"org.easymock.samples.ExampleTest.voteForRemoval":296,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":422,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":358,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":260,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":413,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":94,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":49,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":200,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":457,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":20,"org.easymock.tests2.CaptureTest.testCaptureFirst":454,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":458,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":355,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":216,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":152,"org.easymock.tests2.CaptureTest.testCapture2_2446744":453,"org.easymock.tests2.UsageTest.moreThanOneArgument":349,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":191,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":380,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":227,"org.easymock.tests.GenericTest.testBridgedEquals":118,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":540,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":537,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":91,"org.easymock.tests.UsageExpectAndReturnTest.longType":148,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":455,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":206,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":45,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":509,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":238,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":43,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":289,"org.easymock.tests.UsageCallCountTest.tooManyCalls":92,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":14,"org.easymock.tests.MockingTest.testNiceClassMocking":248,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":340,"org.easymock.tests.MockingTest.testClassMocking":240,"org.easymock.tests2.UsageConstraintsTest.testContains":499,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":85,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":53,"org.easymock.tests2.UsageConstraintsTest.testFind":490,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":26,"org.easymock.tests.MockTypeTest.fromEasyMockClass":257,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":429,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests.UsageExpectAndReturnTest.object":155,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":415,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":463,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":516,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":222,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":235,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":541,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":525,"org.easymock.tests.UsageTest.exactCallCountByLastCall":173,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":179,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":168,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":250,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":363,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":161,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":217,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":213,"org.easymock.tests.MockClassControlTest.testHashCode":270,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":312,"org.easymock.tests2.EasyMockSupportTest.testVerify":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":395,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":251,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":82,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":481,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":67,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":468,"org.easymock.tests.UsageVarargTest.varargCharAccepted":221,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":196,"org.easymock.tests2.UsageTest.openCallCountByLastCall":352,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":535,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":466,"org.easymock.tests.DefaultClassInstantiatorTest.object":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":81,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":233,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":396,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":34,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":472,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":311,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":419,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":100,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":269,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":162,"org.easymock.tests.ReplayStateInvalidCallsTest.times":106,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":197,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":404,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":268,"org.easymock.tests2.UsageTest.resumeIfFailure":354,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":254,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":23,"org.easymock.tests2.StubTest.stubWithReturnValue":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":520,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":510,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":154,"org.easymock.tests2.SerializationTest.testAllMockedMethod":58,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":189,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":524,"org.easymock.samples.SupportTest.voteForRemovals":310,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":39,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":55,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":195,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":2,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":170,"org.easymock.tests.UsageExpectAndThrowTest.object":37,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":507,"org.easymock.tests2.DelegateToTest.testWrongClass":438,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":104,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":262,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":263,"org.easymock.tests.UsageStrictMockTest.range":65,"org.easymock.samples.ConstructorCalledMockTest.testTax":302,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":337,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":462,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":339,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":538,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":38,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":375,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":132,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":281,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":521,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":96,"org.easymock.tests2.CaptureTest.testCaptureNone":449,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":231,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":431,"org.easymock.tests.UsageUnorderedTest.message":63,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":61,"org.easymock.tests.UsageVerifyTest.twoReturns":73,"org.easymock.tests.UsageVarargTest.varargByteAccepted":226,"org.easymock.tests2.ThreadingTest.testThreadSafe":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":399,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":89,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":236,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":307,"org.easymock.tests2.CaptureTest.testCapture_2617107":443,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":193,"org.easymock.tests2.UsageConstraintsTest.any":497,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":129,"org.easymock.tests2.StubTest.stub":332,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":199,"org.easymock.tests.UsageExpectAndThrowTest.longType":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":194,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":287,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":128,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":330,"org.easymock.tests2.SerializationTest.testClass":56,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":316,"org.easymock.tests.LimitationsTest.mockNativeMethod":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":164,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":117,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":471,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":112,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":331,"org.easymock.tests2.NameTest.nameForMocksControl":368,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":473,"org.easymock.tests2.MockedExceptionTest.testMockedException":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":387,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":18,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":428,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":31,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":245,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":407,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":376,"org.easymock.tests.MockingTest.testNicePartialClassMocking":243,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":412,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":469,"org.easymock.tests2.CaptureTest.testCaptureLast":448,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":166,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":494,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":111,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":346,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":508,"org.easymock.tests.MockingTest.testTwoMocks":241,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":108,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":347,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":35,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":77,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":512,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":434,"org.easymock.samples.ExampleTest.removeNonExistingDocument":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":476,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":126,"org.easymock.tests.UsageStrictMockTest.differentMethods":66,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":313,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":433,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":285,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":359,"org.easymock.tests2.MockBuilderTest.testCreateMockString":381,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":389,"org.easymock.tests.UsageExpectAndThrowTest.floatType":29,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":426,"org.easymock.tests.UsageVerifyTest.twoThrows":47,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":398,"org.easymock.samples.ExampleTest.voteAgainstRemoval":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":184,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":229,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":420,"org.easymock.tests.LimitationsTest.privateConstructor":135,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":534,"org.easymock.tests2.UsageConstraintsTest.testNotNull":511,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":16,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":51,"org.easymock.tests2.UsageTest.defaultResetToNice":353,"org.easymock.samples.ExampleTest.voteAgainstRemovals":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":185,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":160,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":470,"org.easymock.tests.UsageVarargTest.differentLength":223,"org.easymock.tests2.CallbackTest.callback":514,"org.easymock.tests2.UsageConstraintsTest.equals":489,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":416,"org.easymock.tests.UsageTest.openCallCountByLastCall":172,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":485,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":8,"org.easymock.tests.UsageCallCountTest.tooFewCalls":87,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":283,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":432,"org.easymock.tests.UsageThrowableTest.throwCheckedException":13,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":522,"org.easymock.tests.MockingTest.testStrictClassMocking":239,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":7,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":345,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":475,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":341,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":131,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":344,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":4,"org.easymock.tests.ObjectMethodsTest.testHashCode":234,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":529,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":518,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":110,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":361,"org.easymock.tests2.NameTest.nameForNiceMock":367,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":105,"org.easymock.tests2.DependencyTest.testInterfaceMocking":325,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":517,"org.easymock.samples.ExampleTest.addDocument":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":400,"org.easymock.tests2.DelegateToTest.testStubDelegate":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":405,"org.easymock.tests2.AnswerTest.stubAnswer":3,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":140,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":377,"org.easymock.tests.UsageVarargTest.varargLongAccepted":225,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":182,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":163,"org.easymock.tests.UsageExpectAndReturnTest.floatType":147,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":362,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":303,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":505,"org.easymock.tests.UsageThrowableTest.noUpperLimit":144,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":320,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":486,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":333,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":446,"org.easymock.tests2.SerializationTest.test":57,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":59,"org.easymock.tests2.UsageConstraintsTest.testSame":492,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":146,"org.easymock.samples.SupportTest.addDocument":309,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":343,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":95,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":390,"org.easymock.tests.GenericTest.testPackageScope":115,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":178,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":319,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":246,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":93,"org.easymock.tests2.NameTest.nameForMock":365,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":157,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":532,"org.easymock.tests2.UsageStrictMockTest.differentMethods":75,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":417,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":149,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":41,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":278,"org.easymock.tests2.MockedExceptionTest.testRealException":54,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":187,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":186,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":329,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":120,"org.easymock.tests2.NameTest.nameForStrictMock":366,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":372,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":536,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":427,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":411,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":336,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":506,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":286,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":370,"org.easymock.tests2.UsageStrictMockTest.range":74,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":99,"org.easymock.tests2.UsageConstraintsTest.lessThan":513,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":315,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":181,"org.easymock.tests2.CaptureTest.testCaptureRightOne":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":394,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":430,"org.easymock.tests2.UsageConstraintsTest.testOr":493,"org.easymock.tests.UsageRangeTest.combination":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":408,"org.easymock.tests.UsageTest.wrongArguments":70,"org.easymock.tests2.MockBuilderTest.testWithConstructor":530,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":391,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":158,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":60,"org.easymock.tests.UsageVarargTest.varargShortAccepted":224,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":90,"org.easymock.tests2.UsageConstraintsTest.cmpTo":498,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":113,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":425,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":177,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":50,"org.easymock.tests2.CaptureTest.testCaptureFromStub":452,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":123,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":371,"org.easymock.tests.UsageTest.unexpectedCallWithArray":69,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":109,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":88,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":79,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":159,"org.easymock.tests2.CaptureTest.testCapture":6,"org.easymock.tests2.UsageConstraintsTest.constraints":487,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.samples.ExampleTest.addAndChangeDocument":301,"org.easymock.tests.UsageStrictMockTest.testVerify":143,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":306,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":207,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":203,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":151,"org.easymock.tests.LimitationsTest.abstractClass":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":204,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":461,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":218}}]
