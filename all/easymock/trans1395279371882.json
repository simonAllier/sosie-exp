[{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[9],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[35,36,37,38,39,40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,10,69,2,3,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,11,99,100,12,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,13,124,125,126,127,128,14,15,129,130,131,132,16,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,17,18,19,4,168,169,170,171,172,20,173,5,6,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,21,189,190,191,192,193,194,195,22,23,24,25,26,27,28,29,30,31,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,7,8,32,33,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[268,269],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[10,2,3,74,75,80,81,270,271,272,273,274,275,276,277,278,279,280,19,4,168,169,172,20,5,6,177,281,178,181,182,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[295,296],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[167],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[95,11,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[298,299,300,301,302,303],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.RecordState:217","failures":[43,44,45,46,47,48,49,304,50,51,52,53,54,55,305,298,298,299,299,56,57,58,59,35,60,61,62,63,306,307,64,65,308,309,66,67,68,10,69,2,3,70,310,311,312,313,314,71,72,73,74,75,76,77,78,79,315,80,81,82,83,84,85,86,316,317,318,87,88,89,90,91,92,93,94,95,96,97,98,11,99,100,297,12,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,319,320,321,322,117,118,323,119,120,121,324,122,123,13,124,125,126,127,128,14,15,129,130,131,132,16,133,134,135,136,137,138,139,325,140,141,142,143,144,326,145,146,147,327,328,148,149,150,329,330,331,332,333,334,335,336,337,151,152,153,154,155,156,338,157,339,340,341,158,159,160,161,342,343,344,345,162,346,163,164,347,295,348,165,166,349,350,351,352,353,354,17,18,19,4,168,169,355,356,170,171,172,20,173,5,6,174,175,176,177,281,178,179,180,181,182,183,184,185,186,187,188,21,189,190,357,358,192,359,360,361,362,363,364,365,366,367,368,369,370,193,289,194,195,290,291,292,22,23,24,25,26,27,28,29,30,31,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,371,7,8,372,373,32,33,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,374,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,375,376,377,378,379,380,381,382,383,255,256,257,258,384,259,260,385,386,387,388,389,390,261,262,391,263,264,265,266,267,392,296,393,394,293,294],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[44,45,46,47,48,49,50,56,57,58,59,35,61,306,307,308,309,68,10,3,70,311,312,313,314,71,73,74,76,77,315,82,84,85,87,88,91,92,93,94,95,96,97,98,11,99,100,12,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,319,320,321,322,117,118,119,120,122,123,13,124,125,127,128,14,15,129,130,16,326,145,146,147,148,149,150,329,331,332,151,153,154,155,156,157,339,341,160,161,342,343,344,345,162,346,163,164,165,166,350,351,352,353,354,17,18,4,168,169,171,20,6,174,175,177,184,185,186,187,188,21,189,190,291,22,23,26,27,28,29,30,31,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,32,216,217,218,219,220,222,223,224,225,226,228,229,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,379,380,381,382,383,255,256,257,258,386,263,264,265,266,267],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[296,393],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[10,2,3,74,270,271,272,275,277,279,19,4,168,169,20,5,6,177,284,286,288,293,294],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,10,69,2,3,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,11,99,100,12,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,13,124,125,126,127,128,14,15,129,130,131,132,16,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,17,18,19,4,168,169,170,171,172,20,173,5,6,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,21,189,190,191,192,193,194,195,22,23,24,25,26,27,28,29,30,31,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,7,8,32,33,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[56,57,58,59,185,186,187,188,21,189,24,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[103],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[123,124,125,126,127,128,14,129,395,130,131,16],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[396,37,38,39,40,41,397],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[56,316,329,332,338,398],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,305,298,298,299,299,56,57,58,59,35,60,61,62,63,306,307,64,65,308,309,66,67,68,10,69,2,3,70,311,312,313,314,71,72,73,74,75,76,77,78,79,315,80,81,82,83,84,85,86,316,317,318,87,88,89,90,91,92,93,94,95,96,97,98,11,99,100,12,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,319,320,321,322,117,118,119,120,121,122,123,13,124,125,126,127,128,14,15,129,130,131,132,16,133,134,135,136,137,138,139,325,140,141,142,143,144,326,145,146,147,148,149,150,329,331,332,333,334,336,337,151,152,153,154,155,156,157,339,341,160,161,342,343,344,345,162,346,163,164,165,166,350,351,352,353,354,17,18,19,4,168,169,170,171,172,20,173,5,6,174,175,176,177,281,178,179,180,181,182,183,184,185,186,187,188,21,189,190,360,362,363,365,368,370,291,22,23,24,25,26,27,28,29,30,31,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,32,33,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,379,380,381,382,383,255,256,257,258,386,263,264,265,266,267],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[227,230],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[60,399,306,307,308,309,66,400,67,10,69,2,3,70,71,72,74,75,76,77,80,81,82,83,94,106,319,320,321,322,134,136,138,139,140,141,329,330,401,333,334,335,336,337,152,339,158,398,162,402,403,404,405,406,407,19,4,168,169,170,172,20,173,5,6,174,176,177,281,178,181,182,183,357,408,409,289,290,291,292,221,410,382,255,256,384,259,260,387,388,389,293,294],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[44,45,46,47,49,55,305,58,35,60,61,62,63,306,307,64,65,308,309,66,10,2,3,71,72,73,74,76,78,79,315,82,83,85,86,316,317,318,87,88,89,90,91,92,93,94,95,96,97,98,11,99,100,12,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,120,121,122,123,13,124,125,126,14,15,129,130,132,16,133,134,135,136,137,138,139,325,140,141,142,143,326,145,147,149,150,330,331,333,334,336,151,152,153,154,155,156,157,340,341,158,159,160,161,162,346,163,164,165,17,18,19,4,168,169,355,20,5,6,176,177,179,180,183,184,21,193,194,195,291,22,23,26,27,28,29,30,31,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,32,33,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,379,380,381,293,294],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:144","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:54","sourceCode":"try {\n    return java.lang.reflect.Constructor<?>.newInstance(java.lang.Object[]);\n} catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException);\n}","type":"CtTryImpl"},"failures":[394,268,411,412,269,413],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[95,11,297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[414,415,416],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[417],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[10,72,83,147,168,169,20,183,229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":95,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":34,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":176,"org.easymock.tests2.UsageTest.argumentsOrdered":81,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":400,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":77,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":43,"org.easymock.tests2.DelegateToTest.testReturnException":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":186,"org.easymock.tests.MockingTest.testPartialClassMocking":379,"org.easymock.tests.MockClassControlTest.testToString":387,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":398,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":235,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":316,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":37,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":22,"org.easymock.tests2.UsageTest.wrongArguments":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":344,"org.easymock.samples.ExampleTest.answerVsDelegate":45,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":405,"org.easymock.tests2.UsageConstraintsTest.testNull":97,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":154,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":141,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":262,"org.easymock.tests2.CaptureTest.testPrimitive":125,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":26,"org.easymock.tests.UsageTest.moreThanOneArgument":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":254,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":265,"org.easymock.tests.UsageTest.argumentsOrdered":182,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":371,"org.easymock.tests.UsageVarargTest.varargIntAccepted":218,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":27,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":41,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":329,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":31,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":274,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":60,"org.easymock.tests.ReplayStateInvalidUsageTest.times":367,"org.easymock.tests2.DependencyTest.testClassMocking":0,"org.easymock.tests2.AnswerTest.answer":147,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":314,"org.easymock.tests2.CaptureTest.testAnd":123,"org.easymock.tests2.UsageTest.strictResetToDefault":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":137,"org.easymock.tests2.DelegateToTest.testDelegate":122,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":373,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":354,"org.easymock.tests2.DependencyTest.testClassMockingSupport":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":293,"org.easymock.tests2.CaptureTest.testCapture1_2446744":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":312,"org.easymock.tests.UsageThrowableTest.throwError":227,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":361,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":267,"org.easymock.samples.PartialClassMockTest.testGetArea":305,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":28,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":376,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":409,"org.easymock.tests2.UsageTest.niceToStrict":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":236,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":331,"org.easymock.tests2.MockBuilderTest.testCreateMock":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":244,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":271,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":138,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":342,"org.easymock.tests.UsageOverloadedMethodTest.overloading":160,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":104,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":195,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":207,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":103,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":129,"org.easymock.tests2.EasyMockSupportClassTest.testAll":86,"org.easymock.tests.MockClassControlTest.testEquals":261,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":166,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":252,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":276,"org.easymock.tests2.CaptureTest.testCaptureAll":13,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":352,"org.easymock.tests.MockNameTest.defaultName":410,"org.easymock.tests2.UsageConstraintsTest.testMatches":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":266,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":359,"org.easymock.samples.ExampleTest.voteForRemovals":49,"org.easymock.tests.UsageVarargTest.allKinds":226,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":4,"org.easymock.samples.BasicClassMockTest.testPrintContent":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":353,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":233,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":189,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":324,"org.easymock.tests2.UsageConstraintsTest.greaterThan":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":42,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":346,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":158,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":413,"org.easymock.samples.ExampleTest.voteForRemoval":46,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":88,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":9,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":338,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":190,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":135,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":185,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":136,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":292,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":203,"org.easymock.tests2.CaptureTest.testCapture2_2446744":132,"org.easymock.tests2.UsageTest.moreThanOneArgument":74,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":336,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":225,"org.easymock.tests.GenericTest.testBridgedEquals":167,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":259,"org.easymock.tests.UsageExpectAndReturnTest.longType":199,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":350,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":253,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":112,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":374,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":296,"org.easymock.tests.UsageCallCountTest.tooManyCalls":260,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":283,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":240,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":232,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":306,"org.easymock.tests2.UsageConstraintsTest.testContains":102,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":383,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":58,"org.easymock.tests2.UsageConstraintsTest.testFind":96,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":161,"org.easymock.tests.MockTypeTest.fromEasyMockClass":403,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":170,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":118,"org.easymock.tests.UsageExpectAndReturnTest.object":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":38,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":220,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":192,"org.easymock.tests.UsageTest.exactCallCountByLastCall":183,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":32,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":7,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":396,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":212,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":216,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":194,"org.easymock.tests.MockClassControlTest.testHashCode":390,"org.easymock.tests2.EasyMockSupportTest.testVerify":144,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":273,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":8,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":193,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":311,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":310,"org.easymock.tests.UsageVarargTest.varargCharAccepted":219,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":68,"org.easymock.tests2.UsageTest.openCallCountByLastCall":78,"org.easymock.tests.DefaultClassInstantiatorTest.object":394,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":143,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":347,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":357,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":242,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":230,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":389,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":340,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":241,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":392,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":388,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":318,"org.easymock.tests2.UsageTest.resumeIfFailure":82,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":188,"org.easymock.tests2.StubTest.stubWithReturnValue":85,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":397,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":113,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":205,"org.easymock.tests2.SerializationTest.testAllMockedMethod":146,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":355,"org.easymock.samples.SupportTest.voteForRemovals":55,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":247,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":356,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":327,"org.easymock.tests.UsageExpectAndThrowTest.object":245,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":110,"org.easymock.tests2.DelegateToTest.testWrongClass":121,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":17,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":18,"org.easymock.tests.UsageStrictMockTest.range":5,"org.easymock.samples.ConstructorCalledMockTest.testTax":298,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":246,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":333,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":181,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":343,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":282,"org.easymock.tests2.CaptureTest.testCaptureNone":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":377,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":415,"org.easymock.tests.UsageUnorderedTest.message":19,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":417,"org.easymock.tests.UsageVerifyTest.twoReturns":169,"org.easymock.tests.UsageVarargTest.varargByteAccepted":224,"org.easymock.tests2.ThreadingTest.testThreadSafe":87,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":258,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":408,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":52,"org.easymock.tests2.CaptureTest.testCapture_2617107":124,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":25,"org.easymock.tests2.UsageConstraintsTest.any":12,"org.easymock.tests2.StubTest.stub":84,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":366,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":187,"org.easymock.tests.UsageExpectAndThrowTest.longType":238,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":365,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":66,"org.easymock.tests2.SerializationTest.testClass":326,"org.easymock.tests.LimitationsTest.mockNativeMethod":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":215,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":349,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":70,"org.easymock.tests2.NameTest.nameForMocksControl":322,"org.easymock.tests2.MockedExceptionTest.testMockedException":57,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":180,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":239,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":381,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":151,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":334,"org.easymock.tests.MockingTest.testNicePartialClassMocking":380,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":36,"org.easymock.tests2.CaptureTest.testCaptureLast":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":294,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":99,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":309,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":111,"org.easymock.tests.MockingTest.testTwoMocks":378,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":243,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":80,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":115,"org.easymock.samples.ExampleTest.removeNonExistingDocument":304,"org.easymock.tests.UsageStrictMockTest.differentMethods":6,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":363,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":416,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":411,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":89,"org.easymock.tests2.ConstraintsToStringTest.andToString":277,"org.easymock.tests2.MockBuilderTest.testCreateMockString":337,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":385,"org.easymock.tests.UsageExpectAndThrowTest.floatType":237,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":106,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":148,"org.easymock.tests.UsageVerifyTest.twoThrows":168,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":317,"org.easymock.samples.ExampleTest.voteAgainstRemoval":47,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":375,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":341,"org.easymock.tests2.UsageConstraintsTest.testNotNull":114,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":56,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":234,"org.easymock.tests2.UsageTest.defaultResetToNice":315,"org.easymock.samples.ExampleTest.voteAgainstRemovals":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":211,"org.easymock.tests.UsageVarargTest.differentLength":221,"org.easymock.tests2.CallbackTest.callback":71,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":285,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":303,"org.easymock.tests.UsageTest.openCallCountByLastCall":179,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":24,"org.easymock.tests.UsageCallCountTest.tooFewCalls":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":345,"org.easymock.tests.UsageThrowableTest.throwCheckedException":231,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":284,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":33,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":399,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":307,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":65,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":150,"org.easymock.tests.ObjectMethodsTest.testHashCode":358,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":40,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":91,"org.easymock.tests2.NameTest.nameForNiceMock":321,"org.easymock.tests2.DependencyTest.testInterfaceMocking":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":39,"org.easymock.samples.ExampleTest.addDocument":48,"org.easymock.tests2.DelegateToTest.testStubDelegate":120,"org.easymock.tests2.AnswerTest.stubAnswer":149,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":20,"org.easymock.tests.UsageVarargTest.varargLongAccepted":223,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.tests.UsageExpectAndReturnTest.floatType":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":35,"org.easymock.tests2.ConstraintsToStringTest.orToString":270,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":299,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":108,"org.easymock.tests.UsageThrowableTest.noUpperLimit":228,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":93,"org.easymock.tests2.SerializationTest.test":145,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":127,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":268,"org.easymock.tests2.UsageConstraintsTest.testSame":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":197,"org.easymock.samples.SupportTest.addDocument":54,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":364,"org.easymock.tests.GenericTest.testPackageScope":165,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":372,"org.easymock.tests2.NameTest.nameForMock":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":208,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":302,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":249,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":191,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":164,"org.easymock.tests2.MockedExceptionTest.testRealException":59,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":407,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":286,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":23,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":370,"org.easymock.tests2.NameTest.nameForStrictMock":320,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":155,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":412,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":330,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":116,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":134,"org.easymock.tests2.CaptureTest.testCaptureRightOne":130,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":414,"org.easymock.tests2.UsageConstraintsTest.testOr":11,"org.easymock.tests.UsageRangeTest.combination":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":152,"org.easymock.tests.UsageTest.wrongArguments":178,"org.easymock.tests2.MockBuilderTest.testWithConstructor":300,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":386,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":209,"org.easymock.tests.UsageVarargTest.varargShortAccepted":222,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":269,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":384,"org.easymock.tests2.UsageConstraintsTest.cmpTo":101,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":328,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":79,"org.easymock.tests2.CaptureTest.testCaptureFromStub":131,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":360,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":401,"org.easymock.tests.UsageTest.unexpectedCallWithArray":281,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":172,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":257,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":301,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":210,"org.easymock.tests2.CaptureTest.testCapture":395,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":173,"org.easymock.tests2.UsageConstraintsTest.constraints":94,"org.easymock.samples.ExampleTest.addAndChangeDocument":50,"org.easymock.tests2.ConstraintsToStringTest.notToString":272,"org.easymock.tests.UsageStrictMockTest.testVerify":175,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":51,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":351,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":30,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":217}}]
