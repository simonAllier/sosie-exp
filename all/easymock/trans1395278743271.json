[{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[20,21,22,23,24,17],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,39],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[40],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[41,42,43,44,45,46,47],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,82,83,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[41,42,43,44,45,46,47],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[97,98,99,100],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[101,102,103],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[48,49,104,105,106,107,108,50,51,52,53,54,55,56,41,109,110,111,57,112,113,58,114,115,116,117,118,119,120,121,122,59,123,124,125,126,127,60,128,129,61,62,130,131,63,64,65,66,132,67,68,69,70,71,72,73,74,75,76,133,134,77,78,79,80,135,136,137,138,81,82,82,83,83,84,85,86,139,140,87,141,142,143,144,101,145,146,147,148,88,149,150,89,90,91,151,152,92,153,154,155,156,157,158,159,160,93,94,95,96,161],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[162,163,15,16,164],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[1,2,3,162,22,11,12,13,14,15,16,165,166,17,164],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[167,48,168,49,169,170,171,172,173,174,175,176,177,178,179,180,181,182,0,1,183,184,185,186,187,2,3,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,50,51,52,53,204,54,55,56,57,58,59,60,205,206,61,62,63,64,65,66,67,68,69,25,26,27,28,29,30,31,32,33,34,35,36,37,38,70,71,207,72,73,74,75,76,77,78,79,80,98,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,99,224,225,226,227,228,100,229,230,231,137,138,81,232,233,234,235,236,237,238,239,240,241,242,243,244,8,245,162,9,246,247,248,249,250,251,252,253,254,255,256,257,82,83,84,85,86,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,87,292,10,22,11,293,294,12,13,295,296,297,298,299,300,301,302,303,304,305,306,307,14,88,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,89,90,355,15,16,356,357,358,359,360,361,362,363,165,364,365,366,367,368,369,370,371,39,39,372,373,17,18,374,164,19,375,94,95,96],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:197","sourceCode":"java.lang.Thread = java.lang.Thread.java.lang.Thread.currentThread()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[376,377,378],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[142,145],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.RecordState:233","failures":[167,48,168,49,173,379,380,174,175,176,177,178,179,180,181,182,0,1,183,184,185,186,187,2,3,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,50,51,52,53,204,54,55,56,57,58,59,60,4,5,6,7,205,206,62,63,65,66,68,25,26,27,28,29,30,31,32,33,34,35,36,37,38,70,71,207,72,73,74,76,78,79,80,98,208,209,210,211,212,213,214,215,216,381,217,218,219,220,221,222,223,99,224,225,226,227,228,100,229,230,231,137,138,81,232,233,382,234,235,236,383,237,238,239,240,241,242,243,244,8,245,162,9,246,247,248,249,250,251,252,253,254,255,256,257,82,82,83,83,84,85,86,384,385,386,258,259,260,261,262,387,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,87,292,10,11,293,294,12,13,295,388,389,390,391,296,297,298,299,301,302,303,304,305,306,307,14,88,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,89,90,91,355,15,16,356,357,358,359,360,361,362,363,417,418,419,420,369,421,370,371,372,373,17,18,374,164,19,375,422,94,95,96,423,424],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:314","failures":[389,390,419,420],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[150,89,90,91,151],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[425,426,427,428,429,167,430,431,432,433,434,435,48,168,49,169,170,171,172,173,379,380,174,175,176,104,105,177,178,179,436,180,181,182,0,1,183,184,185,186,187,2,3,188,189,106,107,437,438,108,439,440,190,191,192,193,194,195,196,197,198,199,200,201,202,203,50,51,52,53,441,204,54,55,442,56,41,443,109,110,111,57,112,113,58,114,115,116,117,118,119,120,121,122,59,123,124,125,126,127,60,128,129,444,4,5,6,7,205,206,61,445,62,130,446,131,63,64,65,42,66,447,132,67,68,448,69,449,25,26,27,28,29,30,31,32,33,34,35,36,37,38,70,71,207,72,73,74,75,450,76,133,134,77,78,79,80,135,136,98,208,209,210,451,211,212,213,214,215,216,381,217,218,219,220,221,222,223,99,224,225,226,227,228,100,229,230,231,137,138,81,232,452,453,454,455,456,233,457,458,459,460,461,462,382,234,235,236,383,237,238,239,240,241,242,243,244,8,245,162,9,246,247,248,249,250,251,252,253,254,255,463,256,257,82,83,84,85,86,384,385,386,258,259,260,261,262,263,264,265,266,387,267,268,269,270,271,139,464,465,466,467,140,468,469,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,87,292,10,22,11,293,294,12,13,295,388,389,390,391,470,296,297,298,299,300,301,302,303,304,305,306,307,14,471,141,142,143,144,101,145,472,146,473,474,475,476,477,478,479,480,481,482,483,484,485,147,148,88,149,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,486,487,488,328,329,330,331,332,333,334,335,336,337,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,489,416,490,491,492,493,494,495,496,338,339,340,341,342,343,344,345,346,497,347,348,349,350,351,352,353,354,150,89,90,91,151,152,92,153,154,155,156,157,158,355,15,16,356,357,358,359,360,361,498,362,363,499,417,165,418,419,420,500,364,365,366,367,368,369,421,370,371,372,373,17,18,374,164,19,375,422,159,160,93,94,95,501,96,502,503,161,504,423,424,505,506],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[71,77],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[48,168,49,169,170,171,172,173,174,175,176,177,179,180,182,0,183,184,187,188,203,51,52,54,55,56,4,5,6,7,205,206,61,63,64,25,26,27,28,30,31,32,33,34,35,38,70,207,72,73,74,76,77,79,98,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,99,224,225,226,227,100,229,230,231,137,138,81,232,234,235,237,238,239,242,244,8,9,246,250,251,252,253,254,255,256,258,261,262,263,264,265,266,267,268,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,87,10,391,470,296,297,298,299,303,304,305,306,307,88,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,488,329,330,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,89,90,92,355,15,16,356,357,358,359,360,417,364,365,366,367,368,369,421,370,371,373,18,19,375,422,94,95,96],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[240],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[425,426,427,428,429,167,430,431,432,433,434,435,48,168,49,169,170,171,172,173,379,380,174,175,176,104,105,177,178,179,436,180,181,182,0,1,183,184,185,186,187,2,3,188,189,106,107,437,438,108,439,440,190,191,192,193,194,195,196,197,198,199,200,201,202,203,50,51,52,53,441,204,54,55,442,56,41,443,109,110,111,57,112,113,58,114,115,116,117,118,119,120,121,122,59,123,124,125,126,127,60,128,129,444,4,5,6,7,205,206,61,445,62,130,446,131,63,64,65,42,66,447,132,67,68,448,69,449,25,26,27,28,29,30,31,32,33,34,35,36,37,38,70,71,207,72,73,74,75,450,76,133,134,77,78,79,80,135,136,98,208,209,210,451,211,212,213,214,215,216,381,217,218,219,220,221,222,223,99,224,225,226,227,228,100,229,230,231,137,138,81,232,452,453,454,455,456,233,457,458,459,460,461,462,382,234,235,236,383,237,238,239,240,241,242,243,244,8,245,162,9,246,247,248,249,250,251,252,253,254,255,463,256,257,82,83,84,85,86,384,385,386,258,259,260,261,262,263,264,265,266,387,267,268,269,270,271,139,464,465,466,467,140,468,469,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,87,292,10,22,11,293,294,12,13,295,388,389,390,391,470,296,297,298,299,300,301,302,303,304,305,306,307,14,471,141,142,143,144,101,145,472,146,473,474,475,476,477,478,479,480,481,482,483,484,485,147,148,88,149,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,486,487,488,328,329,330,331,332,333,334,335,336,337,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,489,416,490,491,492,493,494,495,496,338,339,340,341,342,343,344,345,346,497,347,348,349,350,351,352,353,354,150,89,90,91,151,152,92,153,154,155,156,157,158,355,15,16,356,357,358,359,360,361,498,362,363,499,417,165,418,419,420,500,364,365,366,367,368,369,421,370,371,372,373,17,18,374,164,19,375,422,159,160,93,94,95,501,96,502,503,161,504,423,424,505,506],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[48,168,49],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.Range:36","failures":[425,426,427,428,429,167,430,431,432,433,434,435,48,168,49,169,170,171,172,173,379,380,174,175,176,104,105,177,178,179,436,180,181,182,0,1,183,184,185,186,187,2,3,188,189,106,107,437,438,108,439,440,190,191,192,193,194,195,196,197,198,199,200,201,202,203,50,51,52,53,441,204,54,55,442,56,41,443,109,110,111,57,112,113,58,114,115,116,117,118,119,120,121,122,59,123,124,125,126,127,60,128,129,444,4,5,6,7,205,206,61,445,62,130,446,131,63,64,65,42,66,447,132,67,68,448,69,449,25,26,27,28,29,30,31,32,33,34,35,36,37,38,70,71,207,72,73,74,75,450,76,133,134,77,78,79,80,135,136,98,208,209,210,451,211,212,213,214,215,216,381,217,218,219,220,221,222,223,99,224,225,226,227,228,100,229,230,231,137,138,81,232,452,453,454,455,456,233,457,458,459,460,461,462,382,234,235,236,383,237,238,239,240,241,242,243,244,8,245,162,9,246,247,248,249,250,251,252,253,254,255,463,256,257,82,83,84,85,86,384,385,386,258,259,260,261,262,263,264,265,266,387,267,268,269,270,271,139,464,465,466,467,140,468,469,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,87,292,10,22,11,293,294,12,13,295,388,389,390,391,470,296,297,298,299,300,301,302,303,304,305,306,307,14,471,141,142,143,144,101,145,472,146,473,474,475,476,477,478,479,480,481,482,483,484,485,147,148,88,149,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,486,487,488,328,329,330,331,332,333,334,335,336,337,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,489,416,490,491,492,493,494,495,496,338,339,340,341,342,343,344,345,346,497,347,348,349,350,351,352,353,354,150,89,90,91,151,152,92,153,154,155,156,157,158,355,15,16,356,357,358,359,360,361,498,362,363,499,417,165,418,419,420,500,364,365,366,367,368,369,421,370,371,372,373,17,18,374,164,19,375,422,159,160,93,94,95,501,96,502,503,161,504,423,424,505,506],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[177,178,50,51,52,53,204,54,55,56,57,58,59,60,62,63,65,66,68,70,71,207,72,73,74,76,78,79,80,235,241,8,162,9,248,250,252,253,255,84,267,272,273,274,275,276,277,280,281,283,284,285,287,288,289,290,291,303,304,305,306,307,88,336,337,356,357,358,359,369,421,370,371,18,164,19,94,95,96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[48,49,106,108,50,51,52,53,54,55,56,41,109,110,111,57,112,113,58,114,115,116,117,118,119,120,121,122,59,123,124,125,126,127,60,128,129,507,61,62,130,131,63,64,65,66,132,67,68,508,69,509,510,511,70,71,72,73,74,75,76,133,134,77,78,79,80,135,136,137,138,81,82,82,83,83,84,85,86,139,140,87,141,142,143,144,101,145,146,147,148,88,149,150,89,90,91,151,152,153,154,155,156,157,158,159,160,93,94,95,96,161],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[41,42,43,44,45,46,47],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[41,42,43,44,45,46,47],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":210,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":292,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":200,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":402,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":184,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":249,"org.easymock.tests2.DelegateToTest.testReturnException":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":339,"org.easymock.tests.MockingTest.testPartialClassMocking":94,"org.easymock.tests.MockClassControlTest.testToString":153,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":444,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":117,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":308,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":43,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":216,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":267,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":435,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":265,"org.easymock.samples.ExampleTest.answerVsDelegate":251,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":140,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":503,"org.easymock.tests2.UsageConstraintsTest.testNull":212,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":72,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":158,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":199,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":509,"org.easymock.tests2.CaptureTest.testPrimitive":28,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":271,"org.easymock.tests.UsageTest.moreThanOneArgument":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":327,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":358,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":504,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageVarargTest.varargIntAccepted":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":47,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":437,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":307,"org.easymock.tests.ReplayStateInvalidUsageTest.times":482,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":167,"org.easymock.tests2.DependencyTest.testClassMocking":104,"org.easymock.tests2.AnswerTest.answer":173,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":409,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":172,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":465,"org.easymock.tests2.CaptureTest.testAnd":25,"org.easymock.tests2.UsageTest.strictResetToDefault":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":194,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":370,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":506,"org.easymock.tests2.DelegateToTest.testDelegate":237,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":323,"org.easymock.tests.LimitationsTest.mockFinalMethod":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":342,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":368,"org.easymock.tests2.DependencyTest.testClassMockingSupport":105,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":486,"org.easymock.tests2.CaptureTest.testCapture1_2446744":29,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":170,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":476,"org.easymock.tests.UsageThrowableTest.throwError":328,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":467,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":500,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":462,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":129,"org.easymock.samples.PartialClassMockTest.testGetArea":84,"org.easymock.tests.MockingTest.testInterfaceMocking":501,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":477,"org.easymock.tests2.CompareToTest.testLessOrEqual":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":304,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":385,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":496,"org.easymock.tests2.UsageTest.niceToStrict":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":378,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":63,"org.easymock.tests2.MockBuilderTest.testCreateMock":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":125,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":432,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":20,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":317,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":195,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":464,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":420,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":391,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":263,"org.easymock.tests.UsageOverloadedMethodTest.overloading":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":122,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":221,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":363,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":283,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":102,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":220,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":34,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":497,"org.easymock.tests.MockClassControlTest.testEquals":157,"org.easymock.tests2.EasyMockSupportClassTest.testAll":57,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":90,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":325,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":510,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":171,"org.easymock.tests2.CaptureTest.testCaptureAll":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":366,"org.easymock.tests.MockNameTest.defaultName":473,"org.easymock.tests2.UsageConstraintsTest.testMatches":222,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":474,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":359,"org.easymock.samples.ExampleTest.voteForRemovals":255,"org.easymock.tests.UsageVarargTest.allKinds":354,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":355,"org.easymock.samples.BasicClassMockTest.testPrintContent":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":367,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":334,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":343,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":383,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":472,"org.easymock.tests2.UsageConstraintsTest.greaterThan":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":112,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":421,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":80,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":146,"org.easymock.samples.ExampleTest.voteForRemoval":252,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":135,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":239,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":508,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":438,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":75,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":181,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":87,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":192,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":338,"org.easymock.tests2.CaptureTest.testCaptureFirst":38,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":193,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":189,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":279,"org.easymock.tests2.CaptureTest.testCapture2_2446744":37,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":410,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":68,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":353,"org.easymock.tests.GenericTest.testBridgedEquals":151,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":301,"org.easymock.tests.UsageExpectAndReturnTest.longType":275,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":364,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":326,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":387,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":324,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":389,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":356,"org.easymock.tests.UsageCallCountTest.tooManyCalls":302,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":434,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":313,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":333,"org.easymock.tests.MockingTest.testNiceClassMocking":161,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":51,"org.easymock.tests.MockingTest.testClassMocking":160,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":470,"org.easymock.tests2.UsageConstraintsTest.testContains":219,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":81,"org.easymock.tests2.UsageConstraintsTest.testFind":211,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":262,"org.easymock.tests.MockTypeTest.fromEasyMockClass":466,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":180,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":372,"org.easymock.tests.UsageExpectAndReturnTest.object":282,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":44,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":348,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":494,"org.easymock.tests.UsageTest.exactCallCountByLastCall":295,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":489,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":423,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":41,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":288,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":453,"org.easymock.tests.MockClassControlTest.testHashCode":156,"org.easymock.tests2.EasyMockSupportTest.testVerify":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":120,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":424,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":419,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":361,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":169,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":449,"org.easymock.tests.UsageVarargTest.varargCharAccepted":347,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":471,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastCall":185,"org.easymock.tests.DefaultClassInstantiatorTest.object":141,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":201,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":376,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":418,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":492,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":121,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":315,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":511,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":331,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":428,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":452,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":155,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":78,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":314,"org.easymock.tests.CapturesMatcherTest.test":39,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":289,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":388,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":60,"org.easymock.tests2.UsageTest.resumeIfFailure":188,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":139,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":341,"org.easymock.tests2.StubTest.stubWithReturnValue":206,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":42,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":281,"org.easymock.tests2.SerializationTest.testAllMockedMethod":49,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":408,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":21,"org.easymock.samples.SupportTest.voteForRemovals":248,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":455,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":320,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":414,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":379,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":490,"org.easymock.tests.UsageExpectAndThrowTest.object":318,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":226,"org.easymock.tests2.DelegateToTest.testWrongClass":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":336,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":337,"org.easymock.tests.UsageStrictMockTest.range":164,"org.easymock.samples.ConstructorCalledMockTest.testTax":82,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":439,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":197,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":50,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":319,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":65,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":109,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":264,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":23,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":386,"org.easymock.tests2.CaptureTest.testCaptureNone":33,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":40,"org.easymock.tests.UsageVerifyTest.twoReturns":16,"org.easymock.tests.UsageVarargTest.varargByteAccepted":352,"org.easymock.tests2.ThreadingTest.testThreadSafe":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":123,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":299,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":495,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":85,"org.easymock.tests2.CaptureTest.testCapture_2617107":27,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":270,"org.easymock.tests2.UsageConstraintsTest.any":217,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":481,"org.easymock.tests2.StubTest.stub":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndThrowTest.longType":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":340,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":101,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":480,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":245,"org.easymock.tests2.SerializationTest.testClass":48,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":233,"org.easymock.tests.LimitationsTest.mockNativeMethod":88,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":91,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":291,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":427,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":246,"org.easymock.tests2.NameTest.nameForMocksControl":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":429,"org.easymock.tests2.MockedExceptionTest.testMockedException":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":113,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":294,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":436,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":312,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":70,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":66,"org.easymock.tests.MockingTest.testNicePartialClassMocking":95,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":74,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":425,"org.easymock.tests2.CaptureTest.testCaptureLast":32,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":487,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":215,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":227,"org.easymock.tests.MockingTest.testTwoMocks":93,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":316,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":230,"org.easymock.samples.ExampleTest.removeNonExistingDocument":463,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":478,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":431,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":454,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":143,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":240,"org.easymock.tests2.MockBuilderTest.testCreateMockString":69,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":114,"org.easymock.tests.UsageExpectAndThrowTest.floatType":310,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":111,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":443,"org.easymock.tests.UsageVerifyTest.twoThrows":15,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":59,"org.easymock.samples.ExampleTest.voteAgainstRemoval":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":403,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":384,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":79,"org.easymock.tests.LimitationsTest.privateConstructor":148,"org.easymock.tests2.UsageConstraintsTest.testNotNull":229,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":335,"org.easymock.tests2.UsageTest.defaultResetToNice":187,"org.easymock.samples.ExampleTest.voteAgainstRemovals":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":287,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":426,"org.easymock.tests.UsageVarargTest.differentLength":349,"org.easymock.tests2.CallbackTest.callback":203,"org.easymock.tests2.UsageConstraintsTest.equals":451,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":133,"org.easymock.tests.UsageTest.openCallCountByLastCall":293,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":269,"org.easymock.tests.UsageCallCountTest.tooFewCalls":297,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":266,"org.easymock.tests.UsageThrowableTest.throwCheckedException":332,"org.easymock.tests.MockingTest.testStrictClassMocking":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":24,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":430,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":52,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":483,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":204,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":176,"org.easymock.tests.ObjectMethodsTest.testHashCode":493,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":46,"org.easymock.tests2.NameTest.nameForNiceMock":6,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":242,"org.easymock.tests2.DependencyTest.testInterfaceMocking":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":45,"org.easymock.samples.ExampleTest.addDocument":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":128,"org.easymock.tests2.DelegateToTest.testStubDelegate":235,"org.easymock.tests2.AnswerTest.stubAnswer":175,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":18,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":447,"org.easymock.tests.UsageVarargTest.varargLongAccepted":351,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndReturnTest.floatType":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":56,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":83,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":499,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":460,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":224,"org.easymock.tests.UsageThrowableTest.noUpperLimit":329,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":208,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":106,"org.easymock.tests2.SerializationTest.test":168,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":30,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":103,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":142,"org.easymock.tests2.UsageConstraintsTest.testSame":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":273,"org.easymock.samples.SupportTest.addDocument":247,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":441,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":115,"org.easymock.tests.GenericTest.testPackageScope":89,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":459,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":502,"org.easymock.tests2.NameTest.nameForMock":4,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":284,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":448,"org.easymock.tests2.UsageStrictMockTest.differentMethods":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":134,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":276,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":322,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":491,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":371,"org.easymock.tests2.MockedExceptionTest.testRealException":232,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":469,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":405,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":8,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":485,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":268,"org.easymock.tests2.NameTest.nameForStrictMock":5,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":131,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":179,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":377,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":73,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":108,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":144,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":225,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":62,"org.easymock.tests2.UsageStrictMockTest.range":162,"org.easymock.tests2.UsageConstraintsTest.lessThan":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":456,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":119,"org.easymock.tests2.CaptureTest.testCaptureRightOne":35,"org.easymock.tests2.UsageConstraintsTest.testOr":214,"org.easymock.tests.UsageRangeTest.combination":369,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":71,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":116,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":285,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":145,"org.easymock.tests.UsageVarargTest.varargShortAccepted":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":300,"org.easymock.tests2.UsageConstraintsTest.cmpTo":218,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":395,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":186,"org.easymock.tests2.CaptureTest.testCaptureFromStub":36,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":475,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":130,"org.easymock.tests.UsageTest.unexpectedCallWithArray":22,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":298,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":286,"org.easymock.tests2.UsageConstraintsTest.constraints":209,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":374,"org.easymock.samples.ExampleTest.addAndChangeDocument":256,"org.easymock.tests.UsageStrictMockTest.testVerify":422,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":257,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":373,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":365,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":31,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":305,"org.easymock.tests.LimitationsTest.abstractClass":147,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":278,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":306,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":196,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":345}}]
