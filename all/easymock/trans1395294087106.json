[{"position":"org.easymock.internal.matchers.Any:36","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[24],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:53","sourceCode":"throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[25,26],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[27,28,29,30],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[31,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[33,3,34,6,35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[46],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[47,48,49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[50],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:800","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[51],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,38,65,66,67,68,69,70,71,72,73,74,75,76,77,27,28,29,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,1,95,96,97,98,99,100,101,51,102,103,104,105,106,107,3,108,109,110,111,4,5,112,113,6,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,10,146,147,148,24,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:327","failures":[194,195,196,197],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[198,199,200,201,202,203,204,205,206,207,208,209],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[52,53,54,55,56,57,210,58,59,60,61,62,63,36,36,37,37,64,38,65,66,211,67,68,69,212,213,214,70,71,215,72,216,217,73,74,75,76,218,219,77,220,221,222,27,28,29,78,79,80,81,82,83,84,223,85,86,87,88,89,224,90,225,91,226,227,228,229,230,92,231,232,233,0,93,94,50,1,95,234,96,235,236,97,237,238,98,99,100,101,51,239,240,241,242,102,2,103,243,244,104,245,246,247,248,105,249,250,106,251,252,107,3,108,109,253,110,111,4,5,112,113,254,34,6,255,114,115,116,117,118,119,120,121,256,122,123,124,257,125,126,127,128,129,130,131,132,133,258,134,259,135,260,261,262,136,137,138,139,263,140,141,264,265,266,142,267,268,143,144,145,7,8,9,10,11,12,146,147,148,13,14,24,149,269,270,150,271,272,273,274,151,152,275,153,276,277,278,279,154,280,281,282,283,155,284,285,286,287,157,158,159,160,161,162,163,164,288,289,290,291,292,15,16,293,294,165,166,295,167,296,297,298,299,168,300,301,302,303,169,304,305,306,307,308,194,195,309,310,311,170,171,172,173,312,174,175,17,176,313,314,177,315,178,316,179,180,317,181,318,182,183,319,320,321,322,18,323,19,20,21,22,23,324,325,326,327,328,196,197,329,330,331,332,333,334,184,185,186,187,188,335,189,190,191,192,193,336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[249],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[337,31,338,339,32,340],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:557","failures":[52,53,54,55,57,210,59,63,36,36,37,37,38,65,66,211,68,212,213,214,215,72,216,217,73,74,75,76,218,219,77,220,221,222,27,28,78,79,80,81,82,83,84,223,85,86,87,88,224,90,225,91,226,227,228,229,230,92,231,232,233,0,93,94,1,95,234,96,235,236,97,237,238,98,99,100,51,239,240,241,2,243,244,105,249,250,106,251,252,107,3,109,253,4,5,112,113,254,34,6,255,114,115,116,117,118,119,120,121,256,122,123,124,257,125,126,127,128,129,130,131,132,133,258,134,259,135,260,261,262,136,137,138,139,341,263,342,140,141,264,265,266,267,268,145,7,8,9,10,11,12,146,147,148,13,14,24,269,150,271,272,273,274,151,152,275,153,276,277,278,279,154,280,281,282,283,155,284,285,286,287,343,157,158,159,160,161,162,163,164,288,289,290,291,292,15,16,293,294,165,166,295,167,296,297,298,299,168,300,301,302,303,169,304,305,306,307,308,194,195,310,17,313,314,178,179,180,181,318,182,183,319,320,321,322,18,323,19,20,21,22,23,324,325,326,327,328,196,197,329,330,331,332,344,333,334,345,346],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:35","sourceCode":"final java.lang.Object java.lang.Object = org.easymock.internal.matchers.Equals.getExpected()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[52,53,54,55,56,57,347,210,58,59,60,61,62,63,36,37,64,38,348,349,65,66,211,67,68,69,212,213,214,70,71,215,72,350,216,217,351,352,353,73,354,355,74,356,357,358,359,360,361,362,363,364,75,365,366,367,368,369,76,370,371,218,219,77,220,221,372,222,27,28,29,78,79,80,81,82,83,84,223,85,86,87,88,89,224,90,225,91,226,227,228,229,230,92,373,231,232,233,0,93,94,50,1,95,234,96,235,236,97,237,238,98,99,100,101,51,239,240,241,242,102,2,103,243,244,104,374,245,246,247,248,105,249,250,106,251,252,107,3,108,109,253,110,111,4,5,112,113,254,34,6,375,376,377,378,255,379,198,199,380,200,114,381,201,202,382,383,203,115,116,117,118,384,119,120,121,385,386,387,256,388,389,390,122,391,123,392,124,393,394,395,257,396,397,398,399,125,126,400,401,402,403,404,405,406,127,128,129,130,131,132,407,408,133,409,410,411,258,134,259,412,413,414,204,205,415,206,135,416,207,208,417,418,209,260,261,262,136,137,138,419,420,139,421,422,423,424,425,341,263,342,426,427,428,429,430,140,141,264,265,266,431,142,267,268,143,144,145,7,8,9,10,11,12,432,433,434,146,147,435,148,436,437,438,13,14,46,24,149,269,439,270,150,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,271,457,458,459,460,461,272,462,273,274,151,152,275,153,276,277,278,279,154,280,281,282,283,155,284,285,286,287,463,464,465,466,156,343,467,468,469,470,471,472,157,158,159,160,161,162,163,164,288,289,290,291,292,15,16,473,293,294,165,166,295,167,296,297,298,299,168,300,301,302,303,169,304,305,306,307,474,475,476,477,478,479,480,481,308,194,195,309,482,310,311,170,171,483,172,173,312,174,175,17,176,313,314,177,315,178,316,179,180,317,181,484,318,182,183,485,337,31,338,339,486,32,487,340,319,320,321,322,18,323,19,20,21,22,23,324,325,326,327,328,196,197,329,330,331,332,344,333,334,345,346,184,185,186,488,187,188,335,189,190,191,192,193,489,336,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[52,53,54,55,56,57,210,58,59,60,61,62,64,65,66,211,67,68,69,212,213,214,70,71,215,72,216,217,221,222,27,28,29,78,79,80,81,82,83,84,223,85,86,87,88,224,90,225,91,226,227,228,229,230,92,231,232,233,0,93,94,50,1,95,234,96,235,236,97,237,238,98,99,100,101,51,239,240,241,242,102,2,103,243,244,104,245,105,249,250,106,251,107,3,108,109,253,110,111,4,5,112,113,254,34,6,375,255,114,122,123,124,125,126,128,131,133,411,258,134,259,135,260,261,262,136,137,138,263,140,141,264,265,266,142,267,268,143,144,145,7,8,9,10,11,12,146,13,14,149,270,150,271,272,273,274,151,152,275,153,276,277,278,279,154,280,281,282,283,155,284,285,286,287,157,158,159,160,161,162,163,164,288,289,290,291,292,15,16,293,294,165,166,295,167,296,297,298,299,168,300,301,302,303,169,304,305,306,307,308,194,195,309,312,174,175,17,176,313,314,177,315,178,316,179,180,317,181,318,182,183,319,320,321,322,18,323,19,20,21,22,23,328,196,197,330,331,332,184,185,186,187,188,335,189,190,191,192,193,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[27,28,29,30],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[230,92,232,0,93,50,98,239,107,108,113],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.MockBuilder:235","failures":[36,37,38,348,27,387,389,392,394,503,396,504,505,506,409],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[81,84,85,245,246,247,248,114,381,116,117,120,121,123,124,257,397,128,411,259,413,135,416,473,474,477,478,479,480,481,336,492,493,496,497,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"name","methodName":"name"}},{"position":"org.easymock.Capture:82","failures":[33,107,108,109,253,110,111,4,112,507,113,254,6],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[49],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[65,213,217,264,265,268,10,157,159,160,161,162,163,164,293,294,165,166,295,167,296,297,298,299,168,300,301,302,303,169,304,305,306,307,180,182,18],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":92,"org.easymock.tests2.UsageTest.argumentsOrdered":71,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":265,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":451,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":69,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":60,"org.easymock.tests2.DelegateToTest.testReturnException":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":320,"org.easymock.tests.MockingTest.testPartialClassMocking":146,"org.easymock.tests.MockClassControlTest.testToString":496,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":374,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":293,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":126,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":7,"org.easymock.tests2.UsageTest.wrongArguments":67,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":209,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":424,"org.easymock.samples.ExampleTest.answerVsDelegate":53,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":479,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":437,"org.easymock.tests2.UsageConstraintsTest.testNull":232,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":130,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":501,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":86,"org.easymock.tests2.CaptureTest.testPrimitive":109,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":11,"org.easymock.tests.UsageTest.moreThanOneArgument":266,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":307,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":290,"org.easymock.tests.UsageTest.argumentsOrdered":144,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":344,"org.easymock.tests.UsageVarargTest.varargIntAccepted":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":19,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":386,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":402,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":383,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":23,"org.easymock.tests.ReplayStateInvalidUsageTest.times":469,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":135,"org.easymock.tests2.DependencyTest.testClassMocking":398,"org.easymock.tests2.AnswerTest.answer":105,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":457,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":378,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":476,"org.easymock.tests2.CaptureTest.testAnd":107,"org.easymock.tests2.UsageTest.strictResetToDefault":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":411,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":389,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":82,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":326,"org.easymock.tests2.DelegateToTest.testDelegate":227,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":346,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":169,"org.easymock.tests.LimitationsTest.mockFinalMethod":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":430,"org.easymock.tests2.DependencyTest.testClassMockingSupport":399,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":270,"org.easymock.tests2.CaptureTest.testCapture1_2446744":253,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":408,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":376,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":465,"org.easymock.tests.UsageThrowableTest.throwError":157,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":478,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":502,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":292,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":504,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":371,"org.easymock.samples.PartialClassMockTest.testGetArea":63,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":466,"org.easymock.tests.MockingTest.testInterfaceMocking":435,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":20,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":330,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":493,"org.easymock.tests2.UsageTest.niceToStrict":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":45,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":122,"org.easymock.tests2.MockBuilderTest.testCreateMock":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":367,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":299,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":83,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":475,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":195,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":422,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":42,"org.easymock.tests.UsageOverloadedMethodTest.overloading":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":369,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":180,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":235,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":280,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":96,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":112,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":488,"org.easymock.tests.MockClassControlTest.testEquals":500,"org.easymock.tests2.EasyMockSupportClassTest.testAll":73,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":149,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":428,"org.easymock.tests2.CaptureTest.testCaptureAll":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":377,"org.easymock.tests.MockNameTest.defaultName":473,"org.easymock.tests2.UsageConstraintsTest.testMatches":236,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":463,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":291,"org.easymock.samples.ExampleTest.voteForRemovals":57,"org.easymock.tests.UsageVarargTest.allKinds":193,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":429,"org.easymock.samples.BasicClassMockTest.testPrintContent":62,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":163,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":201,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":323,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":487,"org.easymock.tests2.UsageConstraintsTest.greaterThan":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":354,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":325,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":259,"org.easymock.samples.ExampleTest.voteForRemoval":54,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":340,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":412,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":261,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":480,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":407,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":138,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":65,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":80,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":319,"org.easymock.tests2.CaptureTest.testCaptureFirst":6,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":81,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":72,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":484,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":277,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":136,"org.easymock.tests2.CaptureTest.testCapture2_2446744":34,"org.easymock.tests2.UsageTest.moreThanOneArgument":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":458,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":257,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":192,"org.easymock.tests.GenericTest.testBridgedEquals":439,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":172,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":40,"org.easymock.tests.UsageExpectAndReturnTest.longType":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":426,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":78,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":306,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":101,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":332,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":288,"org.easymock.tests.UsageCallCountTest.tooManyCalls":173,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":368,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":418,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":162,"org.easymock.tests.MockingTest.testNiceClassMocking":438,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":116,"org.easymock.tests.MockingTest.testClassMocking":433,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":482,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":25,"org.easymock.tests2.UsageConstraintsTest.testContains":234,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":77,"org.easymock.tests2.UsageConstraintsTest.testFind":231,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":264,"org.easymock.tests.MockTypeTest.fromEasyMockClass":477,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":222,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":312,"org.easymock.tests.UsageExpectAndReturnTest.object":154,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":85,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":188,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":491,"org.easymock.tests.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":333,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":341,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":348,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":284,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":179,"org.easymock.tests.MockClassControlTest.testHashCode":499,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":198,"org.easymock.tests2.EasyMockSupportTest.testVerify":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":362,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":334,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":178,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":375,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":350,"org.easymock.tests.UsageVarargTest.varargCharAccepted":187,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":485,"org.easymock.tests2.CaptureTest.testCaptureMultiple":33,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":462,"org.easymock.tests2.UsageTest.openCallCountByLastCall":212,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":88,"org.easymock.tests.DefaultClassInstantiatorTest.object":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":308,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":363,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":415,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":379,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":498,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":296,"org.easymock.tests.CapturesMatcherTest.test":35,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":328,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":76,"org.easymock.tests2.UsageTest.resumeIfFailure":215,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":474,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":322,"org.easymock.tests2.StubTest.stubWithReturnValue":217,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":392,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":51,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":279,"org.easymock.tests2.SerializationTest.testAllMockedMethod":29,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":271,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":506,"org.easymock.samples.SupportTest.voteForRemovals":59,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":380,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":301,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":30,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":272,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":249,"org.easymock.tests.UsageExpectAndThrowTest.object":168,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":342,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":99,"org.easymock.tests2.DelegateToTest.testWrongClass":91,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":13,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":36,"org.easymock.tests.UsageStrictMockTest.range":313,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":405,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":223,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":115,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":300,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":123,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":471,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":423,"org.easymock.tests2.CaptureTest.testCaptureNone":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":331,"org.easymock.tests.UsageUnorderedTest.message":12,"org.easymock.tests.UsageVerifyTest.twoReturns":183,"org.easymock.tests.UsageVarargTest.varargByteAccepted":191,"org.easymock.tests2.ThreadingTest.testThreadSafe":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":365,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":171,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":492,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":61,"org.easymock.tests2.CaptureTest.testCapture_2617107":108,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":10,"org.easymock.tests2.UsageConstraintsTest.any":1,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":468,"org.easymock.tests2.StubTest.stub":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndThrowTest.longType":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":321,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":486,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":467,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":103,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":114,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests.LimitationsTest.mockNativeMethod":139,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":269,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":287,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":205,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":104,"org.easymock.tests2.NameTest.nameForMocksControl":248,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":206,"org.easymock.tests2.MockedExceptionTest.testMockedException":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":355,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":268,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":295,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":372,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":127,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":124,"org.easymock.tests.MockingTest.testNicePartialClassMocking":147,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":132,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":414,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":47,"org.easymock.tests2.CaptureTest.testCaptureLast":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":121,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":93,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":100,"org.easymock.tests.MockingTest.testTwoMocks":434,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":298,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":70,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":240,"org.easymock.samples.ExampleTest.removeNonExistingDocument":347,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":207,"org.easymock.tests.UsageStrictMockTest.differentMethods":314,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":199,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":338,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":262,"org.easymock.tests2.MockBuilderTest.testCreateMockString":397,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":494,"org.easymock.tests.UsageExpectAndThrowTest.floatType":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":356,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":353,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":106,"org.easymock.tests.UsageVerifyTest.twoThrows":182,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":349,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":75,"org.easymock.samples.ExampleTest.voteAgainstRemoval":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":329,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":134,"org.easymock.tests.LimitationsTest.privateConstructor":420,"org.easymock.tests2.UsageConstraintsTest.testNotNull":239,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":164,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":218,"org.easymock.tests2.UsageTest.defaultResetToNice":214,"org.easymock.samples.ExampleTest.voteAgainstRemovals":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":155,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":204,"org.easymock.tests.UsageVarargTest.differentLength":335,"org.easymock.tests2.CallbackTest.callback":255,"org.easymock.tests2.UsageConstraintsTest.equals":373,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":409,"org.easymock.tests.UsageTest.openCallCountByLastCall":267,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":9,"org.easymock.tests.UsageCallCountTest.tooFewCalls":311,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":425,"org.easymock.tests.UsageThrowableTest.throwCheckedException":161,"org.easymock.tests.MockingTest.testStrictClassMocking":432,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":120,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":416,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":117,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":470,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":119,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":252,"org.easymock.tests.ObjectMethodsTest.testHashCode":490,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":48,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":137,"org.easymock.tests2.NameTest.nameForNiceMock":247,"org.easymock.tests2.DependencyTest.testInterfaceMocking":125,"org.easymock.samples.ExampleTest.addDocument":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":366,"org.easymock.tests2.DelegateToTest.testStubDelegate":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.AnswerTest.stubAnswer":251,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":17,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":393,"org.easymock.tests.UsageVarargTest.varargLongAccepted":190,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.floatType":151,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":38,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":37,"org.easymock.tests.UsageThrowableTest.noUpperLimit":158,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":238,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":229,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":400,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":110,"org.easymock.tests2.SerializationTest.test":28,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":31,"org.easymock.tests2.UsageConstraintsTest.testSame":233,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":274,"org.easymock.samples.SupportTest.addDocument":58,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":384,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":357,"org.easymock.tests.GenericTest.testPackageScope":24,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":202,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":436,"org.easymock.tests2.NameTest.nameForMock":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":281,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":396,"org.easymock.tests2.UsageStrictMockTest.differentMethods":244,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":303,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":489,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":327,"org.easymock.tests2.MockedExceptionTest.testRealException":220,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":406,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":454,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":472,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":8,"org.easymock.tests2.NameTest.nameForStrictMock":246,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":390,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":221,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":131,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":404,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":98,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":339,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":256,"org.easymock.tests2.UsageStrictMockTest.range":243,"org.easymock.tests2.UsageConstraintsTest.lessThan":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":79,"org.easymock.tests2.CaptureTest.testCaptureRightOne":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":361,"org.easymock.tests2.UsageConstraintsTest.testOr":0,"org.easymock.tests.UsageRangeTest.combination":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":128,"org.easymock.tests.UsageTest.wrongArguments":142,"org.easymock.tests2.MockBuilderTest.testWithConstructor":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":358,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":495,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":282,"org.easymock.tests.UsageVarargTest.varargShortAccepted":189,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":32,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":483,"org.easymock.tests2.UsageConstraintsTest.cmpTo":95,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":213,"org.easymock.tests2.CaptureTest.testCaptureFromStub":254,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":464,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":388,"org.easymock.tests.UsageTest.unexpectedCallWithArray":431,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":175,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":170,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":283,"org.easymock.tests2.CaptureTest.testCapture":507,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":176,"org.easymock.tests2.UsageConstraintsTest.constraints":230,"org.easymock.samples.ExampleTest.addAndChangeDocument":210,"org.easymock.tests.UsageStrictMockTest.testVerify":315,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":64,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":427,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":21,"org.easymock.tests.LimitationsTest.abstractClass":419,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":276,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":22,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":84}}]
