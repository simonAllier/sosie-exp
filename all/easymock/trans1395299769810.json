[{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[31,32,33,34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[35,36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[2,37,38,39],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[2,37,38,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:324","failures":[72,73,29],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[2,4,5,9,10,11,12,13,14,15],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,16,99,100,101,102,103,104,105,0,106,107,108,109,110,111,112,113,114,115,1,116,45,117,17,118,119,18,19,120,121,122,123,124,125,126,127,128,129,20,130,131,21,132,133,134,135,136,31,32,137,138,139,140,141,142,143,144,145,146,147,148,149,150,23,83,151,24,25,26,27,152,33,34,153,28,154,155,156,157,29,30],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[158,159,160,161,162],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[2,37,38,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[2,38,42,163,164,165,166,3,167,103,168,169,170,171,172,104,173,174,105,175,106,107,176,108,109,110,111,177,178,113,114,115,1,116,179,180,181,182,183,184,185,186,187,188,189,190,191,192,192,193,193],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,80,194,195,196,197,83,84,85,86,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[198,199,200,101,201,202,203,204,205],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[198,199,200,101,201,206,202,203,204,205,207],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[208],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[2,37,38,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[172,209,210,104,173,174,105,211,0,175,106,107,176,108,109],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[212,213,214,215],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[216,217,218,207],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[219,220,20,221,222,24],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[223,224,225],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[226,227,228,229],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[2,38,42,163,164,165,166,3,167,103,168,169,170,171,172,104,173,174,105,175,106,107,176,108,109,110,230,111,112,177,178,113,114,115,1,231,116,232,233,234,179,180,181,182,183,184,185,186,187,137,140,188,189,190,191,192,192,193,193],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[235,236,237,238],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[223,224,239,240,225,241],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[114,137],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[2,37,38,39],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[97,16,99,103,168,170,104,105,20,130,21,132,242,24],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[2,243,244,245,246,247,248,3,4,103,209,104,105,107,109,6,192,192,193,193],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[249,250,251],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[252,253,254],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[224,225],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[255,256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[257],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[258],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[259,260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[255],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[92,95,139],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[261,195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[93,96,97,16,100,284,101,285,286,202,287,288,102,289,290,291,1,117,17,118,119,18,19,120,122,124,125,127,51,55,56,58,61,128,292,293,294,129,130,21,133,295,296,297,298,299,300,146,151,25,26,27,153,86,157,29,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[301],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":201,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests2.UsageTest.argumentsOrdered":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":79,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":119,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":298,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":228,"org.easymock.tests2.SerializationTest.testAllMockedMethod":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":77,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":8,"org.easymock.tests.MockingTest.testPartialClassMocking":185,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":220,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":255,"org.easymock.tests.MockClassControlTest.testToString":134,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":59,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":245,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":39,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":47,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":164,"org.easymock.tests.UsageExpectAndThrowTest.object":57,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":10,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":273,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":212,"org.easymock.tests2.UsageTest.wrongArguments":17,"org.easymock.samples.ConstructorCalledMockTest.testTax":192,"org.easymock.tests.UsageStrictMockTest.range":21,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":175,"org.easymock.tests2.UsageConstraintsTest.testNull":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":58,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":168,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":113,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":66,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":26,"org.easymock.tests.UsageTest.moreThanOneArgument":151,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":221,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":237,"org.easymock.tests.UsageUnorderedTest.message":23,"org.easymock.tests.UsageVerifyTest.twoReturns":30,"org.easymock.tests.UsageTest.argumentsOrdered":27,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":155,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":189,"org.easymock.tests2.CaptureTest.testCapture_2617107":199,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":68,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":178,"org.easymock.tests2.StubTest.stub":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":78,"org.easymock.tests.UsageExpectAndThrowTest.longType":50,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":267,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":252,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":98,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":94,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":91,"org.easymock.tests.LimitationsTest.mockNativeMethod":188,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":183,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":204,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":234,"org.easymock.tests2.CaptureTest.testAnd":198,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":281,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":104,"org.easymock.tests2.NameTest.nameForMocksControl":90,"org.easymock.tests2.MockedExceptionTest.testMockedException":41,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":293,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":84,"org.easymock.tests2.DelegateToTest.testDelegate":257,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":51,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":187,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":167,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":266,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":114,"org.easymock.tests.MockingTest.testNicePartialClassMocking":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":62,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":80,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":32,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":280,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":203,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":109,"org.easymock.tests.MockingTest.testTwoMocks":184,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":31,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":55,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":290,"org.easymock.tests.UsageThrowableTest.throwError":69,"org.easymock.tests.UsageStrictMockTest.differentMethods":132,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":139,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":239,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":36,"org.easymock.tests2.MockBuilderTest.testCreateMockString":116,"org.easymock.tests.UsageExpectAndThrowTest.floatType":49,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":243,"org.easymock.tests.UsageVerifyTest.twoThrows":29,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":248,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":165,"org.easymock.samples.PartialClassMockTest.testGetArea":191,"org.easymock.tests2.CompareToTest.testLessOrEqual":229,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":236,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":235,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":48,"org.easymock.tests2.UsageTest.niceToStrict":118,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":156,"org.easymock.tests2.UsageConstraintsTest.testNotNull":207,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":75,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":40,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":249,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":177,"org.easymock.tests2.UsageTest.defaultResetToNice":208,"org.easymock.tests2.MockBuilderTest.testCreateMock":115,"org.easymock.tests.UsageVarargTest.differentLength":144,"org.easymock.tests2.CallbackTest.callback":93,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":209,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":219,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":56,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":124,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":226,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":196,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":67,"org.easymock.tests.UsageCallCountTest.tooFewCalls":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":246,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":213,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":176,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":253,"org.easymock.tests.UsageThrowableTest.throwCheckedException":72,"org.easymock.tests2.EasyMockSupportClassTest.testAll":163,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":182,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":222,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":64,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":232,"org.easymock.tests2.CaptureTest.testCaptureAll":159,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":82,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":92,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":107,"org.easymock.tests.MockNameTest.defaultName":143,"org.easymock.tests2.UsageConstraintsTest.testMatches":288,"org.easymock.tests2.CompareToTest.testGreateOrEqual":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":13,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":279,"org.easymock.tests2.NameTest.nameForNiceMock":89,"org.easymock.tests.UsageVarargTest.allKinds":260,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":274,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":12,"org.easymock.samples.BasicClassMockTest.testPrintContent":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":247,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":74,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":81,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":130,"org.easymock.tests2.UsageConstraintsTest.greaterThan":227,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":244,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":292,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":105,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":271,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":133,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":241,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":211,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":35,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":141,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":3,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":171,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":263,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":193,"org.easymock.tests.UsageThrowableTest.noUpperLimit":295,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":289,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":34,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":284,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":179,"org.easymock.tests2.SerializationTest.test":37,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":6,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":254,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":224,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":70,"org.easymock.tests2.UsageConstraintsTest.testSame":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":123,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":264,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":28,"org.easymock.tests.GenericTest.testPackageScope":181,"org.easymock.tests2.UsageTest.moreThanOneArgument":117,"org.easymock.tests2.CaptureTest.testCapture2_2446744":161,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":1,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":262,"org.easymock.tests.GenericTest.testBridgedEquals":256,"org.easymock.tests2.NameTest.nameForMock":87,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":149,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":65,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":218,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":63,"org.easymock.tests2.UsageStrictMockTest.differentMethods":99,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":261,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":210,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":296,"org.easymock.tests.UsageCallCountTest.tooManyCalls":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":61,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":294,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":146,"org.easymock.tests2.MockedExceptionTest.testRealException":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":7,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":52,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":97,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":73,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":106,"org.easymock.tests2.UsageConstraintsTest.testContains":287,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":230,"org.easymock.tests2.NameTest.nameForStrictMock":88,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":42,"org.easymock.tests2.UsageConstraintsTest.testFind":285,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":251,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":216,"org.easymock.tests.MockTypeTest.fromEasyMockClass":138,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":169,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":217,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":129,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":240,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":172,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":111,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":268,"org.easymock.tests2.UsageConstraintsTest.lessThan":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":11,"org.easymock.tests.UsageTest.exactCallCountByLastCall":152,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":122,"org.easymock.tests2.CaptureTest.testCaptureRightOne":200,"org.easymock.tests2.UsageConstraintsTest.testOr":202,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":4,"org.easymock.tests.UsageRangeTest.combination":128,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":103,"org.easymock.tests.UsageTest.wrongArguments":25,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":180,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":225,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":195,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":301,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":148,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":282,"org.easymock.tests2.CaptureTest.testCaptureMultiple":158,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":197,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":46,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":250,"org.easymock.tests.DefaultClassInstantiatorTest.object":223,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":194,"org.easymock.tests2.CaptureTest.testCaptureFromStub":160,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":112,"org.easymock.tests.UsageTest.unexpectedCallWithArray":24,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":154,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":278,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":22,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":71,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":300,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":269,"org.easymock.tests2.UsageConstraintsTest.constraints":101,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":131,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":136,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":173,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":53,"org.easymock.tests.CapturesMatcherTest.test":162,"org.easymock.tests.ReplayStateInvalidCallsTest.times":275,"org.easymock.tests.UsageStrictMockTest.testVerify":242,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":276,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":166,"org.easymock.tests2.UsageTest.resumeIfFailure":120,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":233,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":137,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":125}}]
