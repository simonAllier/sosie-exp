[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[0,1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,4,5,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,0,1,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,2,137,138,3,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,6,7,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,8,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[403],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[16,17,335,8,351,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,512,513,9,387,514,515,393,398,399,516,517],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:335","sourceCode":"if (java.lang.reflect.Type == null) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[518,519,520],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[502,503,504,505,506,507],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[408,409,411,412,413,414,415,416,417,418,427,428,432,433,470,471,472,473,480,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[521],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[16,16,17,17,20,30,31,60,65,70,71,72,74,141,169,170,171,198,204,335,351,353,357,360,370,376,379,522,380,381,383,384,385,386,388,389,523,390,391,392,393,394,397,398,435,436,438,439,440,441,443,446,447,448,449,524,510],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:324","failures":[48,274,275],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[449],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[409],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[44,100,101,113,114,115,116,117,118,119,146,148,149,150,151,152,200,201,202,292,294,330,525,404,406,407,408,409,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,443,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[4,5,6,7],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[498],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.ConstructorArgs:60","failures":[8,512,513,9,514,515,393,398,399,516,517],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[19,20,22,24,25,27,47,49,50,51,54,55,58,71,72,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,103,104,107,108,109,111,113,115,116,119,139,148,149,150,151,152,169,171,173,174,175,198,200,201,242,244,253,254,256,270,272,273,274,275,276,277,288,289,290,291,296,297,298,299,300,301,302,303,304,305,306,307,308,312,313,315,316,317,319,321,322,323,326,327,330,332,333,335,341,345,351,352,357,360,370,376,380,383,385,386,389,391,392,393,394,396,397,398,400,402,403,404,405,406,407,408,409,411,412,413,414,415,416,418,419,420,421,422,423,424,425,426,427,428,429,431,432,433,434,435,436,437,438,439,440,443,447,448,449,457,470,471,473,474,477,478,479,480,482,483,489,498,510],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[15,16,16,17,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,4,5,33,34,35,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,0,1,70,71,72,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,113,114,115,116,117,118,119,120,136,2,137,138,3,139,141,142,143,144,145,146,147,148,149,150,151,152,158,6,7,159,161,162,163,164,166,167,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,200,201,202,203,249,255,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,351,352,353,357,360,370,376,380,383,385,386,389,391,392,393,394,396,397,398,400,402,403,404,405,406,407,408,409,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,443,446,447,448,449,457,470,471,472,473,474,475,476,477,478,479,480,481,482,483,489,496,497,498,499,500,501,508,509,510,511],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[517],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":409,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":50,"org.easymock.tests2.UsageTest.argumentsOrdered":325,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":307,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":243,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":320,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":21,"org.easymock.tests2.DelegateToTest.testReturnException":497,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":143,"org.easymock.tests.MockingTest.testPartialClassMocking":71,"org.easymock.tests.MockClassControlTest.testToString":205,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":336,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":111,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":176,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":360,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":313,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":10,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":416,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":115,"org.easymock.tests2.UsageTest.wrongArguments":318,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":495,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":134,"org.easymock.samples.ExampleTest.answerVsDelegate":23,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":65,"org.easymock.tests2.UsageConstraintsTest.testNull":412,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":76,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":438,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":210,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":306,"org.easymock.tests2.CaptureTest.testPrimitive":473,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":119,"org.easymock.tests.UsageTest.moreThanOneArgument":51,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":195,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":285,"org.easymock.tests.UsageTest.argumentsOrdered":57,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":278,"org.easymock.tests.UsageVarargTest.varargIntAccepted":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":248,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":379,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":462,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":152,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":216,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":489,"org.easymock.tests.ReplayStateInvalidUsageTest.times":128,"org.easymock.tests2.DependencyTest.testClassMocking":310,"org.easymock.tests2.AnswerTest.answer":341,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":350,"org.easymock.tests2.CaptureTest.testAnd":470,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":62,"org.easymock.tests2.UsageTest.strictResetToDefault":316,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":513,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":446,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":284,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":301,"org.easymock.tests2.DelegateToTest.testDelegate":501,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":282,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":215,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":191,"org.easymock.tests.LimitationsTest.mockFinalMethod":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":157,"org.easymock.tests2.DependencyTest.testClassMockingSupport":311,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":0,"org.easymock.tests2.CaptureTest.testCapture1_2446744":474,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":442,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":189,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":348,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":122,"org.easymock.tests.UsageThrowableTest.throwError":270,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":64,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":463,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":287,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":219,"org.easymock.samples.PartialClassMockTest.testGetArea":20,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":123,"org.easymock.tests.MockingTest.testInterfaceMocking":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":108,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":177,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":269,"org.easymock.tests2.UsageTest.niceToStrict":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":365,"org.easymock.tests2.ThreadingTest.testChangeDefault":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":233,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":383,"org.easymock.tests2.MockBuilderTest.testCreateMock":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":373,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":185,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":302,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":61,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":159,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":132,"org.easymock.tests.UsageOverloadedMethodTest.overloading":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":375,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":422,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":138,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":89,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":421,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":479,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":36,"org.easymock.tests.MockClassControlTest.testEquals":209,"org.easymock.tests2.EasyMockSupportClassTest.testAll":357,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":170,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":193,"org.easymock.tests2.CaptureTest.testCaptureAll":471,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":155,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":349,"org.easymock.tests.MockNameTest.defaultName":45,"org.easymock.tests2.UsageConstraintsTest.testMatches":423,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":286,"org.easymock.samples.ExampleTest.voteForRemovals":27,"org.easymock.tests.UsageVarargTest.allKinds":44,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":156,"org.easymock.samples.BasicClassMockTest.testPrintContent":31,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":276,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":328,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":500,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":147,"org.easymock.tests2.UsageConstraintsTest.greaterThan":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":289,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":449,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":220,"org.easymock.samples.ExampleTest.voteForRemoval":24,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":263,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":450,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":402,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":441,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":212,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":141,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":315,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":299,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":142,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":496,"org.easymock.tests2.CaptureTest.testCaptureFirst":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":300,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":327,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":140,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":85,"org.easymock.tests2.CaptureTest.testCapture2_2446744":482,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":404,"org.easymock.tests2.UsageTest.moreThanOneArgument":317,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":251,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":43,"org.easymock.tests.GenericTest.testBridgedEquals":172,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":521,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":166,"org.easymock.tests.UsageExpectAndReturnTest.longType":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":153,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":297,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":523,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":194,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":430,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":46,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":6,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":283,"org.easymock.tests.UsageCallCountTest.tooManyCalls":167,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":86,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":494,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":275,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":392,"org.easymock.tests.MockingTest.testNiceClassMocking":77,"org.easymock.tests.MockingTest.testClassMocking":69,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":522,"org.easymock.tests2.UsageConstraintsTest.testContains":420,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":160,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":510,"org.easymock.tests2.UsageConstraintsTest.testFind":411,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":175,"org.easymock.tests.MockTypeTest.fromEasyMockClass":63,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":98,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":294,"org.easymock.tests.UsageExpectAndReturnTest.object":88,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":443,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":493,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":305,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":11,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":267,"org.easymock.tests.UsageTest.exactCallCountByLastCall":58,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":238,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":110,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":94,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":137,"org.easymock.tests.ResultTest.createThrowResultToString":520,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":453,"org.easymock.tests.MockClassControlTest.testHashCode":208,"org.easymock.tests2.EasyMockSupportTest.testVerify":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":367,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":136,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":4,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":347,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":525,"org.easymock.tests.UsageVarargTest.varargCharAccepted":37,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":256,"org.easymock.tests2.UsageTest.openCallCountByLastCall":321,"org.easymock.tests.DefaultClassInstantiatorTest.object":257,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":32,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":265,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":368,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":273,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":487,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":452,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":447,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":207,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":182,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":95,"org.easymock.tests.ReplayStateInvalidCallsTest.times":224,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":158,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":225,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":376,"org.easymock.tests2.UsageTest.resumeIfFailure":326,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":60,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":145,"org.easymock.tests2.StubTest.stubWithReturnValue":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":431,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":87,"org.easymock.tests2.SerializationTest.testAllMockedMethod":353,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":249,"org.easymock.samples.SupportTest.voteForRemovals":19,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":455,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":188,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":255,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":342,"org.easymock.tests.UsageExpectAndThrowTest.object":186,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":112,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":428,"org.easymock.tests2.DelegateToTest.testWrongClass":499,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":200,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":222,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":201,"org.easymock.tests.UsageStrictMockTest.range":103,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":468,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":304,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":187,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":385,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":130,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":133,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":214,"org.easymock.tests2.CaptureTest.testCaptureNone":478,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":109,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":503,"org.easymock.tests.UsageUnorderedTest.message":202,"org.easymock.tests.UsageVerifyTest.twoReturns":49,"org.easymock.tests.UsageVarargTest.varargByteAccepted":42,"org.easymock.tests2.ThreadingTest.testThreadSafe":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":371,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":164,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":30,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":268,"org.easymock.tests2.CaptureTest.testCapture_2617107":472,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":253,"org.easymock.tests2.UsageConstraintsTest.any":418,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":127,"org.easymock.tests2.StubTest.stub":295,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":7,"org.easymock.tests.UsageExpectAndThrowTest.longType":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":254,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":261,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":126,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":331,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":457,"org.easymock.tests2.SerializationTest.testClass":351,"org.easymock.tests.LimitationsTest.mockNativeMethod":198,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":97,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":486,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":230,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":334,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":504,"org.easymock.tests2.NameTest.nameForMocksControl":340,"org.easymock.tests2.MockedExceptionTest.testMockedException":509,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":359,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":180,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":74,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":293,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":435,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":386,"org.easymock.tests.MockingTest.testNicePartialClassMocking":72,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":440,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":484,"org.easymock.tests2.CaptureTest.testCaptureLast":477,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":1,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":415,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":398,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":229,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":429,"org.easymock.tests.MockingTest.testTwoMocks":70,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":226,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":399,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":184,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":324,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":433,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":507,"org.easymock.samples.ExampleTest.removeNonExistingDocument":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":491,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":124,"org.easymock.tests.UsageStrictMockTest.differentMethods":104,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":454,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":506,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":259,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":403,"org.easymock.tests2.MockBuilderTest.testCreateMockString":390,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":203,"org.easymock.tests.UsageExpectAndThrowTest.floatType":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":361,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests.ResultTest.createReturnResultToString":519,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":344,"org.easymock.tests.UsageVerifyTest.twoThrows":48,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":370,"org.easymock.tests.ResultTest.createDelegateResultToString":518,"org.easymock.samples.ExampleTest.voteAgainstRemoval":25,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":244,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":448,"org.easymock.tests.LimitationsTest.privateConstructor":197,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":517,"org.easymock.tests2.UsageConstraintsTest.testNotNull":432,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":508,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":277,"org.easymock.tests2.UsageTest.defaultResetToNice":323,"org.easymock.samples.ExampleTest.voteAgainstRemovals":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":245,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":485,"org.easymock.tests.UsageVarargTest.differentLength":39,"org.easymock.tests2.CallbackTest.callback":314,"org.easymock.tests2.UsageConstraintsTest.equals":410,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":444,"org.easymock.tests.UsageTest.openCallCountByLastCall":54,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":406,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":117,"org.easymock.tests.UsageCallCountTest.tooFewCalls":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":394,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":135,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":505,"org.easymock.tests.UsageThrowableTest.throwCheckedException":274,"org.easymock.tests.MockingTest.testStrictClassMocking":68,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":397,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":490,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":393,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":129,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":396,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":346,"org.easymock.tests.ObjectMethodsTest.testHashCode":266,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":13,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":405,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":228,"org.easymock.tests2.NameTest.nameForNiceMock":339,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":223,"org.easymock.tests2.DependencyTest.testInterfaceMocking":312,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":12,"org.easymock.samples.ExampleTest.addDocument":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":372,"org.easymock.tests2.DelegateToTest.testStubDelegate":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.AnswerTest.stubAnswer":345,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":101,"org.easymock.tests.UsageVarargTest.varargLongAccepted":41,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":242,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":96,"org.easymock.tests.UsageExpectAndReturnTest.floatType":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":335,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":461,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":426,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":3,"org.easymock.tests.UsageThrowableTest.noUpperLimit":271,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":407,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":464,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":475,"org.easymock.tests2.SerializationTest.test":352,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":258,"org.easymock.tests2.UsageConstraintsTest.testSame":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":79,"org.easymock.samples.SupportTest.addDocument":18,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":395,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":213,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":362,"org.easymock.tests.GenericTest.testPackageScope":169,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":237,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":460,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":75,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":211,"org.easymock.tests2.NameTest.nameForMock":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":90,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":515,"org.easymock.tests2.UsageStrictMockTest.differentMethods":333,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":445,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":82,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":190,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":291,"org.easymock.tests2.MockedExceptionTest.testRealException":511,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":67,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":246,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":330,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":116,"org.easymock.tests2.NameTest.nameForStrictMock":338,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":382,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":292,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":439,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":467,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":427,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":260,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":380,"org.easymock.tests2.UsageStrictMockTest.range":332,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":217,"org.easymock.tests2.UsageConstraintsTest.lessThan":434,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":241,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":298,"org.easymock.tests2.CaptureTest.testCaptureRightOne":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":366,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":502,"org.easymock.tests2.UsageConstraintsTest.testOr":414,"org.easymock.tests.UsageRangeTest.combination":288,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":436,"org.easymock.tests.UsageTest.wrongArguments":53,"org.easymock.tests2.MockBuilderTest.testWithConstructor":512,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":363,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":234,"org.easymock.tests.UsageVarargTest.varargShortAccepted":40,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":262,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":165,"org.easymock.tests2.UsageConstraintsTest.cmpTo":419,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":231,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":343,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":236,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":322,"org.easymock.tests2.CaptureTest.testCaptureFromStub":481,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":121,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":381,"org.easymock.tests.UsageTest.unexpectedCallWithArray":52,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":227,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":100,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":163,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":514,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":92,"org.easymock.tests2.UsageConstraintsTest.constraints":408,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":102,"org.easymock.samples.ExampleTest.addAndChangeDocument":29,"org.easymock.tests.UsageStrictMockTest.testVerify":106,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":15,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":154,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":476,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":524,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":150,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":84,"org.easymock.tests.LimitationsTest.abstractClass":196,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":151,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":139,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":34,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":303}}]
