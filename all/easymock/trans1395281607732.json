[{"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,1,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,0,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[2,14,14,15,15,16,17,46,47,48,84,105,128,133,169,170,171,173,282,293,294,296,297,298,299,301,304,305,306,307,332,335,345,351,357,365,367,508,509,510,393,394,395,396,399,400,413,511,414,415,417,418,419,420,423,424,512,425,506],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[2,170,171,173,237,282,293,295,296,298,327,332,335,345,351,393,394,395,396,398,399,400,409,414,417,419,420,424,506],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[513,365,366,367],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[514,515,516],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,517,85,86,87,88,89,90,518,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,1,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,519,414,415,520,416,417,418,419,521,420,421,422,423,424,522,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,0,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,523],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[524,525,138,160,526,527],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[2,3,5,6,8,12,14,14,15,15,52,53,54,55,56,60,61,67,68,69,70,71,170,171,173,213,214,216,237,238,240,278,279,282,293,295,296,298,327,332,335,345,351,363,393,394,395,396,398,399,400,409,414,417,419,420,424,506],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[484],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[528],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"qualifier":"methodName","this":"methodName"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[76,486],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[303,436],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,517,85,86,87,88,89,90,518,91,529,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,278,279,280,281,282,283,284,285,286,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,1,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,519,414,415,520,416,417,418,419,521,420,421,422,423,424,522,425,426,427,428,530,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,0,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,523],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[531,532,533,534,535,521,507],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[51,536,126,127,138,139,142,143,157,160,163,435,441,442,449],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[2,14,15,335,345],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[537,534,535,538,539],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[513,365,366,367],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[86,90],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[419],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[125,127,136,140,141,144,161,359,432,438,439,444,447],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,85,92,93,94,95,96,97,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,170,171,173,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,246,248,249,250,251,252,253,254,255,278,279,282,285,293,294,295,296,297,298,299,301,304,305,306,307,310,311,312,1,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,332,335,345,351,354,355,356,357,358,359,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,386,393,394,395,396,398,399,400,403,404,405,406,408,409,410,412,413,414,417,418,419,420,423,424,425,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,458,459,460,461,467,474,475,476,477,479,480,481,482,483,484,486,487,488,489,490,0,491,492,493,494,495,496,497,498,499,500,501,503,505,506],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[241,242,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[540,541,311,321,322],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[183,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[303,440],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[77,101,102,103,122,145,146,147,148,149,150,355,356,357,358],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[495],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:124","failures":[2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,540,540,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,84,92,93,94,95,96,97,98,99,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,157,158,159,160,161,162,163,164,165,170,171,173,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,236,237,238,239,240,244,245,246,248,249,250,251,252,253,254,255,278,279,282,293,294,295,296,297,298,299,301,304,305,306,307,310,311,312,1,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,332,335,345,351,354,355,356,357,358,359,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,386,393,394,395,396,398,399,400,408,409,410,412,413,414,417,418,419,420,423,424,425,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,458,459,460,461,467,474,475,476,477,479,480,481,482,483,484,486,487,488,489,490,0,491,492,493,494,495,496,497,498,499,500,501,503,505,506],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":477,"org.easymock.tests2.UsageTest.argumentsOrdered":442,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":136,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":187,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":437,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":18,"org.easymock.tests2.DelegateToTest.testReturnException":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":146,"org.easymock.tests.MockingTest.testPartialClassMocking":170,"org.easymock.tests.MockClassControlTest.testToString":106,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":402,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":339,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":19,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":335,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":459,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":277,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":531,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":484,"org.easymock.tests2.UsageTest.wrongArguments":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":120,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":392,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":94,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":133,"org.easymock.tests2.UsageConstraintsTest.testNull":480,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":175,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":296,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":111,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":377,"org.easymock.tests2.CaptureTest.testPrimitive":1,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":124,"org.easymock.tests.UsageTest.moreThanOneArgument":137,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":38,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":215,"org.easymock.tests.UsageTest.argumentsOrdered":143,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":79,"org.easymock.tests.UsageVarargTest.varargIntAccepted":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":192,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":535,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":472,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":428,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":240,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":261,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":386,"org.easymock.tests.ReplayStateInvalidUsageTest.times":232,"org.easymock.tests2.DependencyTest.testClassMocking":456,"org.easymock.tests2.AnswerTest.answer":359,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":455,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":130,"org.easymock.tests2.CaptureTest.testAnd":310,"org.easymock.tests2.UsageTest.strictResetToDefault":433,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":520,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":214,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":372,"org.easymock.tests2.DelegateToTest.testDelegate":412,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":83,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":34,"org.easymock.tests.LimitationsTest.mockFinalMethod":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":100,"org.easymock.tests2.DependencyTest.testClassMockingSupport":457,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":284,"org.easymock.tests2.CaptureTest.testCapture1_2446744":313,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":32,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":453,"org.easymock.tests.UsageThrowableTest.throwError":112,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":226,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":132,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":529,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":473,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":353,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":264,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.MockingTest.testInterfaceMocking":172,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":237,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":40,"org.easymock.tests2.UsageTest.niceToStrict":436,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":20,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":340,"org.easymock.tests2.ThreadingTest.testChangeDefault":324,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":177,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":417,"org.easymock.tests2.MockBuilderTest.testCreateMock":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":348,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":389,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":526,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":28,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":373,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":129,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":243,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":92,"org.easymock.tests.UsageOverloadedMethodTest.overloading":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":350,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":490,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":63,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":210,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":489,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":318,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":247,"org.easymock.tests.MockClassControlTest.testEquals":110,"org.easymock.tests2.EasyMockSupportClassTest.testAll":332,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":36,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":508,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":454,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":98,"org.easymock.tests2.CaptureTest.testCaptureAll":311,"org.easymock.tests.MockNameTest.defaultName":50,"org.easymock.tests2.UsageConstraintsTest.testMatches":0,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":216,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":224,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":255,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":99,"org.easymock.samples.BasicClassMockTest.testPrintContent":17,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":118,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":445,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":469,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":150,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":518,"org.easymock.tests2.UsageConstraintsTest.greaterThan":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":73,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":307,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":265,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":91,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":308,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":325,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":134,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":530,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":299,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":257,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":432,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":84,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":370,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":145,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":407,"org.easymock.tests2.CaptureTest.testCaptureFirst":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":371,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":444,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":59,"org.easymock.tests2.UsageTest.moreThanOneArgument":434,"org.easymock.tests2.CaptureTest.testCapture2_2446744":321,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":327,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":195,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":254,"org.easymock.tests.GenericTest.testBridgedEquals":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":208,"org.easymock.tests.UsageExpectAndReturnTest.longType":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":96,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":368,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":512,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":37,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":497,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":35,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":213,"org.easymock.tests.UsageCallCountTest.tooManyCalls":209,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":349,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":117,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":394,"org.easymock.tests.MockingTest.testNiceClassMocking":176,"org.easymock.tests.MockingTest.testClassMocking":168,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":511,"org.easymock.tests2.UsageConstraintsTest.testContains":488,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":202,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":357,"org.easymock.tests2.UsageConstraintsTest.testFind":479,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":212,"org.easymock.tests.MockTypeTest.fromEasyMockClass":131,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":505,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":158,"org.easymock.tests.UsageExpectAndReturnTest.object":62,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":376,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":532,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":249,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":221,"org.easymock.tests.UsageTest.exactCallCountByLastCall":144,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":182,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":42,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":507,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":68,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":244,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":153,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":463,"org.easymock.tests.MockClassControlTest.testHashCode":109,"org.easymock.tests2.EasyMockSupportTest.testVerify":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":342,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":81,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":151,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":452,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":502,"org.easymock.tests.UsageVarargTest.varargCharAccepted":248,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":517,"org.easymock.tests2.CaptureTest.testCaptureMultiple":541,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":200,"org.easymock.tests2.UsageTest.openCallCountByLastCall":438,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":515,"org.easymock.tests.DefaultClassInstantiatorTest.object":85,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":241,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":219,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":536,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":343,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":384,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":462,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":108,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":263,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":305,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":25,"org.easymock.tests.CapturesMatcherTest.test":540,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":69,"org.easymock.tests.ReplayStateInvalidCallsTest.times":269,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":101,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":270,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":351,"org.easymock.tests2.UsageTest.resumeIfFailure":443,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":128,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":148,"org.easymock.tests2.StubTest.stubWithReturnValue":461,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":521,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":498,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":61,"org.easymock.tests2.SerializationTest.testAllMockedMethod":367,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":193,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":539,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":527,"org.easymock.samples.SupportTest.voteForRemovals":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":465,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":31,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":513,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":199,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":360,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":44,"org.easymock.tests.UsageExpectAndThrowTest.object":29,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":495,"org.easymock.tests2.DelegateToTest.testWrongClass":410,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":267,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":278,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":279,"org.easymock.tests.UsageStrictMockTest.range":163,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":430,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":375,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":393,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":419,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":142,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":93,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":524,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":259,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":41,"org.easymock.tests2.CaptureTest.testCaptureNone":317,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":288,"org.easymock.tests.UsageUnorderedTest.message":51,"org.easymock.tests.UsageVerifyTest.twoReturns":127,"org.easymock.tests.UsageVarargTest.varargByteAccepted":253,"org.easymock.tests2.ThreadingTest.testThreadSafe":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":346,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":206,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":16,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":222,"org.easymock.tests2.CaptureTest.testCapture_2617107":312,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":197,"org.easymock.tests2.UsageConstraintsTest.any":486,"org.easymock.tests2.StubTest.stub":460,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":231,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":147,"org.easymock.tests.UsageExpectAndThrowTest.longType":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":198,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":89,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":230,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":448,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":467,"org.easymock.tests2.SerializationTest.testClass":365,"org.easymock.tests.LimitationsTest.mockNativeMethod":282,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":71,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":510,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":383,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":275,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":451,"org.easymock.tests2.NameTest.nameForMocksControl":406,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":385,"org.easymock.tests2.MockedExceptionTest.testMockedException":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":334,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":141,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":504,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":173,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":23,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":293,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":420,"org.easymock.tests.MockingTest.testNicePartialClassMocking":171,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":537,"org.easymock.tests2.CaptureTest.testCaptureLast":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":381,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":285,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":483,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":400,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":274,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":496,"org.easymock.tests.MockingTest.testTwoMocks":169,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":271,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":401,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":27,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":441,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":500,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":292,"org.easymock.samples.ExampleTest.removeNonExistingDocument":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":388,"org.easymock.tests.UsageStrictMockTest.differentMethods":164,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":228,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":464,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":87,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":291,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":326,"org.easymock.tests2.MockBuilderTest.testCreateMockString":425,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":104,"org.easymock.tests.UsageExpectAndThrowTest.floatType":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":336,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":331,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":362,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":523,"org.easymock.tests.UsageVerifyTest.twoThrows":126,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":345,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":188,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":39,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":306,"org.easymock.tests.LimitationsTest.privateConstructor":281,"org.easymock.tests2.UsageConstraintsTest.testNotNull":499,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":119,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":355,"org.easymock.tests2.UsageTest.defaultResetToNice":440,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":189,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":67,"org.easymock.tests.UsageVarargTest.differentLength":250,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":382,"org.easymock.tests2.CallbackTest.callback":354,"org.easymock.tests2.UsageConstraintsTest.equals":478,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":302,"org.easymock.tests.UsageTest.openCallCountByLastCall":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":474,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":122,"org.easymock.tests.UsageCallCountTest.tooFewCalls":204,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":396,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":95,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":290,"org.easymock.tests.UsageThrowableTest.throwCheckedException":116,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":525,"org.easymock.tests.MockingTest.testStrictClassMocking":167,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":399,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":77,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":395,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":387,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":233,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":398,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":364,"org.easymock.tests.ObjectMethodsTest.testHashCode":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":534,"org.easymock.tests2.NameTest.nameForNiceMock":405,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":273,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":328,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":268,"org.easymock.tests2.DependencyTest.testInterfaceMocking":458,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":533,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":347,"org.easymock.tests2.DelegateToTest.testStubDelegate":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":352,"org.easymock.tests2.AnswerTest.stubAnswer":363,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":161,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":421,"org.easymock.tests.UsageVarargTest.varargLongAccepted":252,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":186,"org.easymock.tests.UsageExpectAndReturnTest.floatType":54,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":506,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":493,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":471,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests.UsageThrowableTest.noUpperLimit":113,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":475,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":426,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":314,"org.easymock.tests2.SerializationTest.test":366,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":86,"org.easymock.tests2.UsageConstraintsTest.testSame":481,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":53,"org.easymock.samples.SupportTest.addDocument":11,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":397,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":258,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":337,"org.easymock.tests.GenericTest.testPackageScope":46,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":181,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":470,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":174,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":256,"org.easymock.tests2.NameTest.nameForMock":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":522,"org.easymock.tests2.UsageStrictMockTest.differentMethods":450,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":303,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":33,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":218,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":75,"org.easymock.tests2.MockedExceptionTest.testRealException":358,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":135,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":538,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":121,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":235,"org.easymock.tests2.NameTest.nameForStrictMock":404,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":516,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":503,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":297,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":429,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":494,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":414,"org.easymock.tests2.UsageStrictMockTest.range":449,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":262,"org.easymock.tests2.UsageConstraintsTest.lessThan":501,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":466,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":528,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":185,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":369,"org.easymock.tests2.CaptureTest.testCaptureRightOne":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":341,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":287,"org.easymock.tests2.UsageConstraintsTest.testOr":482,"org.easymock.tests.UsageRangeTest.combination":72,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":294,"org.easymock.tests.UsageTest.wrongArguments":139,"org.easymock.tests2.MockBuilderTest.testWithConstructor":519,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":338,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":178,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":65,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":90,"org.easymock.tests.UsageVarargTest.varargShortAccepted":251,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":207,"org.easymock.tests2.UsageConstraintsTest.cmpTo":487,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":276,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":361,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":180,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":439,"org.easymock.tests2.CaptureTest.testCaptureFromStub":320,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":225,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":415,"org.easymock.tests.UsageTest.unexpectedCallWithArray":138,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":272,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":160,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":205,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":66,"org.easymock.tests2.UsageConstraintsTest.constraints":476,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":162,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests.UsageStrictMockTest.testVerify":166,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":13,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":97,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":315,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":509,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":58,"org.easymock.tests.LimitationsTest.abstractClass":280,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":239,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":374}}]
