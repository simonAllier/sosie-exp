[{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[5,6],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[13],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[8,18,19,20,21,22,23,10,24,25,26,27,28,29,30],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[31,32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[33,9,34,35,36,11,37,38,12,29,30],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[39,40],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[41,42,43,44,45],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[46,47,48,49],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[95,96,97],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[7,98,5,99,100,101,102,103,104,105,106,39,107,108,6,109,110,40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[41,44],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[111,112,113,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[115,116,48,117,118,119,120,121,122,123,124,125,126,127,128,56,57,129,130,131,132,133,134,135,136,51,137,138,139,140,141,142,143,144,145,146,147,148,149,150,41,42,43,151,44,45,152,153,154,155,156,157,158,159,160,161,162],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[163,164,165,166,167,168,169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[170,171,172,173,174,175,176,177,178,178,179,179,180,181,182,183,184,185,46,47,48,186,187,188,189,52,190,191,192,193,194,195,33,196,8,9,34,53,50,35,18,197,198,199,54,200,19,20,201,202,98,5,99,100,101,102,103,104,105,106,107,108,6,109,110,203,204,31,32,13,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,120,227,228,229,230,231,232,233,234,235,236,237,238,239,55,56,57,58,240,241,242,243,129,244,245,130,246,247,248,249,0,250,251,1,2,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,131,132,272,133,134,135,273,136,274,275,138,276,277,278,59,279,280,21,281,282,283,284,285,60,61,286,287,288,289,290,291,62,292,293,294,63,64,295,296,297,298,299,300,301,302,303,304,305,306,307,141,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,308,309,310,311,312,313,152,314,315,23,36,316,10,11,37,317,91,38,24,25,318,92,26,27,319,320,321,322,323,324,325,326,327,28,328,329,93,330,4,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,157,12,29,30,360,361,362,363,364,365,94,161,366,367,368,369,370,371],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[372,373,374,375,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[170,171,172,173,376,174,175,115,116,377,177,378,379,181,182,183,185,46,47,186,187,188,189,52,380,33,196,8,9,34,53,50,35,197,198,199,54,201,202,98,5,104,105,107,109,31,13,206,207,224,232,234,235,239,249,251,1,253,254,255,256,258,259,260,261,262,263,264,265,267,268,269,270,132,134,275,276,278,59,284,285,60,61,286,290,291,62,292,293,294,63,64,303,304,305,306,307,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,381,382,383,384,385,386,387,388,389,308,153,390,36,316,10,11,37,91,38,318,92,319,28,328,329,93,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,12,29,30,365,369,370],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[391,226],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[392],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[372,373,374,375,23,24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[33,5,104,105,109,206,210,284,285,60,61,286,69,36,28,355,356,357,358,359,365,94,369,370],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[170,172,173,174,176,177,182,46,47,186,187,188,52,33,8,9,53,50,35,197,199,54,200,201,202,98,5,100,101,104,105,106,107,6,109,110,203,204,31,32,13,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,120,227,228,229,231,232,234,235,237,239,57,129,244,245,130,246,247,248,249,1,252,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,131,132,272,133,134,135,136,274,275,138,280,284,285,286,290,62,292,293,294,63,64,152,314,36,10,11,91,38,318,92,319,328,329,93,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,157,12,30,365,366,367,368,369,370],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[170,171,172,173,376,174,175,181,182,183,185,46,47,48,186,189,52,190,191,393,192,193,194,195,380,33,196,8,9,34,53,50,35,18,197,198,199,54,200,19,20,201,202,98,5,99,100,101,102,103,104,105,106,107,108,6,109,110,203,204,31,32,13,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,394,230,232,233,237,238,55,56,57,58,240,241,242,243,244,245,247,248,249,251,1,2,252,253,254,255,256,257,258,131,132,272,133,134,135,136,137,275,280,284,285,60,61,286,395,287,288,289,290,291,62,292,293,294,63,64,299,303,304,305,306,307,141,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,381,382,383,384,385,386,387,388,389,308,143,152,153,315,390,23,36,316,10,11,37,396,397,91,38,24,25,318,92,26,27,319,320,398,321,322,323,324,28,329,93,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,157,12,29,30,360,361,362,363,364,365,94,366,367,368,369,370],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[171,190,399,191,249,251,1],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":31,"org.easymock.tests2.UsageTest.argumentsOrdered":20,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":91,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":269,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":198,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":379,"org.easymock.tests2.DelegateToTest.testReturnException":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":66,"org.easymock.tests.MockingTest.testPartialClassMocking":366,"org.easymock.tests.MockClassControlTest.testToString":144,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":371,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":71,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":227,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":163,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":208,"org.easymock.tests2.UsageTest.wrongArguments":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":288,"org.easymock.samples.ExampleTest.answerVsDelegate":171,"org.easymock.tests2.UsageConstraintsTest.testNull":13,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":133,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":149,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":268,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":286,"org.easymock.tests.UsageTest.moreThanOneArgument":38,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":90,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":305,"org.easymock.tests.UsageTest.argumentsOrdered":27,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":309,"org.easymock.tests.UsageVarargTest.varargIntAccepted":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":355,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":167,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":230,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":359,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":188,"org.easymock.tests2.AnswerTest.answer":249,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":194,"org.easymock.tests2.CaptureTest.testAnd":98,"org.easymock.tests2.UsageTest.strictResetToDefault":50,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":263,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":333,"org.easymock.tests2.DelegateToTest.testDelegate":185,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":86,"org.easymock.tests.LimitationsTest.mockFinalMethod":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":69,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":364,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":298,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":192,"org.easymock.tests.UsageThrowableTest.throwError":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":307,"org.easymock.samples.PartialClassMockTest.testGetArea":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":356,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":72,"org.easymock.tests2.UsageTest.niceToStrict":197,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":95,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":232,"org.easymock.tests2.MockBuilderTest.testCreateMock":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":80,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":372,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":395,"org.easymock.tests.UsageOverloadedMethodTest.overloading":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":128,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":59,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":214,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":346,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":213,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":106,"org.easymock.tests.MockClassControlTest.testEquals":148,"org.easymock.tests2.EasyMockSupportClassTest.testAll":120,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":153,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":88,"org.easymock.tests2.CaptureTest.testCaptureAll":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":362,"org.easymock.tests2.UsageConstraintsTest.testMatches":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":306,"org.easymock.samples.ExampleTest.voteForRemovals":174,"org.easymock.tests.UsageVarargTest.allKinds":308,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":12,"org.easymock.samples.BasicClassMockTest.testPrintContent":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":363,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":63,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":195,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":184,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":70,"org.easymock.tests2.UsageConstraintsTest.greaterThan":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":332,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":138,"org.easymock.samples.ExampleTest.voteForRemoval":172,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":45,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":139,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":255,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":273,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":141,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":261,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":65,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":180,"org.easymock.tests2.CaptureTest.testCaptureFirst":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":262,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":202,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":21,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":342,"org.easymock.tests2.UsageTest.moreThanOneArgument":35,"org.easymock.tests2.CaptureTest.testCapture2_2446744":6,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":257,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":237,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":389,"org.easymock.tests.GenericTest.testBridgedEquals":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":326,"org.easymock.tests.UsageExpectAndReturnTest.longType":338,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":360,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":89,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":222,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":87,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":303,"org.easymock.tests.UsageCallCountTest.tooManyCalls":327,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":321,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":76,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":294,"org.easymock.tests.MockingTest.testNiceClassMocking":162,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":244,"org.easymock.tests.MockingTest.testClassMocking":160,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":398,"org.easymock.tests2.UsageConstraintsTest.testContains":212,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":57,"org.easymock.tests2.UsageConstraintsTest.testFind":32,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":93,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":191,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":315,"org.easymock.tests.UsageExpectAndReturnTest.object":345,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":267,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":385,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":164,"org.easymock.tests.UsageTest.exactCallCountByLastCall":319,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":365,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":169,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":351,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":381,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":278,"org.easymock.tests.MockClassControlTest.testHashCode":147,"org.easymock.tests2.EasyMockSupportTest.testVerify":271,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":311,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":276,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":393,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":394,"org.easymock.tests.UsageVarargTest.varargCharAccepted":384,"org.easymock.tests2.CaptureTest.testCaptureMultiple":7,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":380,"org.easymock.tests2.UsageTest.openCallCountByLastCall":199,"org.easymock.tests.DefaultClassInstantiatorTest.object":150,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":96,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":270,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":295,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":125,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":292,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":113,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":146,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":274,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":77,"org.easymock.tests.CapturesMatcherTest.test":40,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":352,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":281,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":229,"org.easymock.tests2.UsageTest.resumeIfFailure":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":68,"org.easymock.tests2.StubTest.stubWithReturnValue":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":168,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":344,"org.easymock.tests2.SerializationTest.testAllMockedMethod":48,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":330,"org.easymock.samples.SupportTest.voteForRemovals":177,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":83,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":49,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":4,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":0,"org.easymock.tests.UsageExpectAndThrowTest.object":81,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":220,"org.easymock.tests2.DelegateToTest.testWrongClass":183,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":369,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":370,"org.easymock.samples.ConstructorCalledMockTest.testTax":178,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":129,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":82,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":119,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":26,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":287,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":374,"org.easymock.tests2.CaptureTest.testCaptureNone":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":302,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":15,"org.easymock.tests.UsageUnorderedTest.message":28,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":392,"org.easymock.tests.UsageVerifyTest.twoReturns":30,"org.easymock.tests.UsageVarargTest.varargByteAccepted":388,"org.easymock.tests2.ThreadingTest.testThreadSafe":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":126,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":324,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":115,"org.easymock.tests2.CaptureTest.testCapture_2617107":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":61,"org.easymock.tests2.UsageConstraintsTest.any":210,"org.easymock.tests2.StubTest.stub":189,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":67,"org.easymock.tests.UsageExpectAndThrowTest.longType":74,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":151,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":196,"org.easymock.tests2.SerializationTest.testClass":46,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":239,"org.easymock.tests.LimitationsTest.mockNativeMethod":157,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":314,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":354,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":34,"org.easymock.tests2.NameTest.nameForMocksControl":243,"org.easymock.tests2.MockedExceptionTest.testMockedException":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":121,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":92,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":399,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":75,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":368,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":131,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":235,"org.easymock.tests.MockingTest.testNicePartialClassMocking":367,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":135,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":111,"org.easymock.tests2.CaptureTest.testCaptureLast":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":299,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":207,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":248,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":221,"org.easymock.tests.MockingTest.testTwoMocks":161,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":335,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":79,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":225,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":17,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":397,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":112,"org.easymock.tests.UsageStrictMockTest.differentMethods":11,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":42,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":256,"org.easymock.tests2.MockBuilderTest.testCreateMockString":238,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":122,"org.easymock.tests.UsageExpectAndThrowTest.floatType":73,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":216,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":251,"org.easymock.tests.UsageVerifyTest.twoThrows":29,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":228,"org.easymock.samples.ExampleTest.voteAgainstRemoval":173,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":300,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":275,"org.easymock.tests.LimitationsTest.privateConstructor":156,"org.easymock.tests2.UsageConstraintsTest.testNotNull":224,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":55,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":64,"org.easymock.tests2.UsageTest.defaultResetToNice":200,"org.easymock.samples.ExampleTest.voteAgainstRemovals":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":350,"org.easymock.tests2.CallbackTest.callback":253,"org.easymock.tests.UsageTest.openCallCountByLastCall":318,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":60,"org.easymock.tests.UsageCallCountTest.tooFewCalls":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":289,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":16,"org.easymock.tests.UsageThrowableTest.throwCheckedException":293,"org.easymock.tests.MockingTest.testStrictClassMocking":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":375,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":94,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":247,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":245,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":246,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":2,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":166,"org.easymock.tests2.NameTest.nameForNiceMock":242,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":258,"org.easymock.tests2.DependencyTest.testInterfaceMocking":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":165,"org.easymock.samples.ExampleTest.addDocument":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":127,"org.easymock.tests2.DelegateToTest.testStubDelegate":182,"org.easymock.tests2.AnswerTest.stubAnswer":1,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":36,"org.easymock.tests.UsageVarargTest.varargLongAccepted":387,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":37,"org.easymock.tests.UsageExpectAndReturnTest.floatType":337,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":252,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":179,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":218,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":279,"org.easymock.tests.UsageThrowableTest.noUpperLimit":291,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":203,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":117,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":102,"org.easymock.tests2.SerializationTest.test":47,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":41,"org.easymock.tests2.UsageConstraintsTest.testSame":205,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":336,"org.easymock.samples.SupportTest.addDocument":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":123,"org.easymock.tests.GenericTest.testPackageScope":152,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":312,"org.easymock.tests2.NameTest.nameForMock":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":347,"org.easymock.tests2.UsageStrictMockTest.differentMethods":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":339,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":85,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":334,"org.easymock.tests2.MockedExceptionTest.testRealException":58,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":285,"org.easymock.tests2.NameTest.nameForStrictMock":241,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":190,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":97,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":134,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":118,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":43,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":219,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":231,"org.easymock.tests2.UsageStrictMockTest.range":8,"org.easymock.tests2.UsageConstraintsTest.lessThan":226,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":260,"org.easymock.tests2.CaptureTest.testCaptureRightOne":107,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":14,"org.easymock.tests2.UsageConstraintsTest.testOr":206,"org.easymock.tests.UsageRangeTest.combination":331,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":132,"org.easymock.tests.UsageTest.wrongArguments":25,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":348,"org.easymock.tests.UsageVarargTest.varargShortAccepted":386,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":44,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":325,"org.easymock.tests2.UsageConstraintsTest.cmpTo":211,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":250,"org.easymock.tests2.CompareToTest.testLessThan":391,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":54,"org.easymock.tests2.CaptureTest.testCaptureFromStub":108,"org.easymock.tests.UsageTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":323,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":349,"org.easymock.tests2.CaptureTest.testCapture":39,"org.easymock.tests2.UsageConstraintsTest.constraints":204,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.samples.ExampleTest.addAndChangeDocument":175,"org.easymock.tests.UsageStrictMockTest.testVerify":396,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":378,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":390,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":361,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":357,"org.easymock.tests.LimitationsTest.abstractClass":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":341,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":265,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":382}}]
