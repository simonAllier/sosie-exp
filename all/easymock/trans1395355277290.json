[{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,1],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[2,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,1,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[2,3,19,81,82,83,84,85,86,87,88,89,33,36,90,37,91,92,93,39,94,95,40,96,97,98,99,100,101,102,103,104,41,105,106,107,108,109,42,110,111],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[112,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[112],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[37,114,38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[2,2,3,3,63,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,71,136,137,138,139,140,141,142,143,144,145,146],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[147,148],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[149,150,151,152,153,154,155,156,157,158,159,5,6,160,161,162,163,164,165,63,166,167,64,65,168,115,116,169,170,117,118,119,120,171,172,173,174,121,175,122,123,176,124,125,112,113,177,178,179,126,127,128,180,181,182,183,184,185,186,187,188,189,190,129,191,192,193,194,195,196,7,8,197,9,10,11,13,17,198,147,148,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,66,215,216,217,218,219,220,221,222,223,224,225,30,226,227,31,34,228,114,38,39,229,230,231,232,233,234,130,43,44,1,131,132,133,134,135,235,236,237,71,238,239,72,73,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,74,75,76,136,270,271,272,273,274,275,53,78,79,276,277,278,279,60,61,280,80,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,137,138,139,140,141,62,142,143,298,299,144,145,146,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:205","sourceCode":"break","type":"CtBreakImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[334,335,336],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[149,150,151,152,153,154,155,2,3,156,4,157,158,159,5,6,160,161,162,163,165,63,64,65,337,338,339,340,168,115,116,169,170,117,118,119,120,171,172,173,174,121,175,122,123,176,124,125,112,113,177,179,126,127,128,180,181,182,183,185,186,187,188,189,190,192,193,194,195,196,7,197,9,10,11,13,14,16,19,198,147,200,201,202,203,204,205,206,207,341,208,209,210,211,212,20,23,24,25,26,214,66,216,217,342,222,224,225,30,226,227,31,32,33,34,228,35,36,37,114,38,39,40,41,42,67,68,69,70,229,230,232,233,234,130,343,344,345,346,43,44,131,132,133,134,135,236,71,72,73,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,347,268,269,74,75,76,136,348,47,48,49,272,273,53,77,349,78,79,276,277,55,80,287,288,289,290,291,293,294,295,296,297,137,138,139,140,141,62,142,143,144,145,146,350,351,352,353,354,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,323,355],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[167,64,215,220,221,237,239,72,75,76,356,357,358,359,360,281,284,285,320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[234,361],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[362],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[363,216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[364],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,348,77,78,79,80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[162,163,194,233],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[334,365,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[2,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,367,21,22,23,24,25,26,27,28,368,29,30,31,32,33,34,35,36,37,38,39,40,41,42,369,43,44,45,46,47,48,49,51,52,53,55,62],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[149,150,151,152,153,154,156,4,157,158,159,5,6,160,161,165,166,65,168,170,171,172,173,174,175,176,112,113,177,178,179,180,181,182,183,185,186,187,188,189,190,192,193,194,7,8,197,9,10,11,13,16,19,199,200,201,202,203,204,205,206,207,208,209,210,211,212,23,25,26,213,214,215,216,217,220,221,223,30,227,31,32,33,34,228,35,36,37,114,38,39,40,41,42,229,231,43,44,236,237,238,73,243,244,246,251,256,75,76,370,47,48,49,271,272,53,276,277,278,279,281,284,285,286,287,288,289,290,291,293,294,295,296,297,62,299,302,303,305,310,315,321,322,323,324,325,326,327,328,331,332,333,355],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"argType"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[132,244,250,257,258,141],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[131,243,245,259,260,145],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":170,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":280,"org.easymock.tests2.UsageTest.argumentsOrdered":221,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":264,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":217,"org.easymock.tests2.StubTest.stubWithReturnValue":130,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":250,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":157,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":179,"org.easymock.tests2.SerializationTest.testAllMockedMethod":38,"org.easymock.tests2.DelegateToTest.testReturnException":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":262,"org.easymock.tests.MockingTest.testPartialClassMocking":47,"org.easymock.samples.SupportTest.voteForRemovals":159,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests.MockClassControlTest.testToString":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":312,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":99,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":300,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":40,"org.easymock.tests.UsageExpectAndThrowTest.object":310,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":113,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":161,"org.easymock.tests2.DelegateToTest.testWrongClass":231,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":145,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":146,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":172,"org.easymock.tests2.UsageTest.wrongArguments":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":142,"org.easymock.tests.UsageStrictMockTest.range":239,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":345,"org.easymock.samples.ExampleTest.answerVsDelegate":150,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":341,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":52,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":31,"org.easymock.tests2.UsageConstraintsTest.testNull":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":311,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":9,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":209,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":25,"org.easymock.tests2.CaptureTest.testPrimitive":183,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":144,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":319,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":91,"org.easymock.tests.UsageTest.moreThanOneArgument":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":344,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":133,"org.easymock.tests2.CaptureTest.testCaptureNone":188,"org.easymock.tests.UsageUnorderedTest.message":320,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":356,"org.easymock.tests.UsageVerifyTest.twoReturns":76,"org.easymock.tests.UsageVarargTest.varargByteAccepted":295,"org.easymock.tests2.ThreadingTest.testThreadSafe":198,"org.easymock.tests.UsageTest.argumentsOrdered":285,"org.easymock.tests.UsageVarargTest.varargIntAccepted":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":105,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":277,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":362,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":137,"org.easymock.tests2.CaptureTest.testCapture_2617107":182,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":348,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":299,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":24,"org.easymock.tests2.UsageConstraintsTest.any":173,"org.easymock.tests2.StubTest.stub":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":141,"org.easymock.tests.UsageExpectAndThrowTest.longType":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":263,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":335,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":227,"org.easymock.tests2.SerializationTest.testClass":37,"org.easymock.tests.LimitationsTest.mockNativeMethod":53,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":168,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":260,"org.easymock.tests2.AnswerTest.answer":193,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":340,"org.easymock.tests2.CaptureTest.testAnd":180,"org.easymock.tests2.UsageTest.strictResetToDefault":214,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":83,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":65,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":14,"org.easymock.tests2.NameTest.nameForMocksControl":70,"org.easymock.tests2.MockedExceptionTest.testMockedException":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":132,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":95,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":283,"org.easymock.tests2.DelegateToTest.testDelegate":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":304,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":49,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":7,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":26,"org.easymock.tests.MockingTest.testNicePartialClassMocking":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":315,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":11,"org.easymock.tests2.CaptureTest.testCaptureLast":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":265,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":370,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":36,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":354,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":177,"org.easymock.tests.MockingTest.testTwoMocks":46,"org.easymock.tests2.CaptureTest.testCapture1_2446744":184,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":241,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":308,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":220,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":127,"org.easymock.tests.UsageThrowableTest.throwError":321,"org.easymock.tests.UsageStrictMockTest.differentMethods":72,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":148,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":357,"org.easymock.tests2.MockBuilderTest.testCreateMockString":29,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":54,"org.easymock.tests.UsageExpectAndThrowTest.floatType":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":135,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":93,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":194,"org.easymock.tests.UsageVerifyTest.twoThrows":75,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":41,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":138,"org.easymock.samples.ExampleTest.voteAgainstRemoval":152,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":301,"org.easymock.tests2.UsageTest.niceToStrict":216,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":100,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":89,"org.easymock.tests2.UsageConstraintsTest.testNotNull":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":328,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":224,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":23,"org.easymock.tests2.UsageTest.defaultResetToNice":342,"org.easymock.tests2.MockBuilderTest.testCreateMock":27,"org.easymock.samples.ExampleTest.voteAgainstRemovals":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":256,"org.easymock.tests.UsageVarargTest.differentLength":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":107,"org.easymock.tests2.CallbackTest.callback":233,"org.easymock.tests2.UsageConstraintsTest.equals":364,"org.easymock.tests.UsageTest.openCallCountByLastCall":282,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":309,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":206,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":115,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":343,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":298,"org.easymock.tests.UsageCallCountTest.tooFewCalls":79,"org.easymock.tests.UsageOverloadedMethodTest.overloading":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":109,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":333,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":122,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":34,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":175,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":346,"org.easymock.tests.UsageThrowableTest.throwCheckedException":325,"org.easymock.tests.MockClassControlTest.testEquals":60,"org.easymock.tests2.EasyMockSupportClassTest.testAll":39,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":44,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":366,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":317,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":339,"org.easymock.tests2.CaptureTest.testCaptureAll":181,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":270,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":35,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.testMatches":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":228,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":134,"org.easymock.samples.ExampleTest.voteForRemovals":154,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":200,"org.easymock.tests2.NameTest.nameForNiceMock":69,"org.easymock.tests.UsageVarargTest.allKinds":297,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":74,"org.easymock.tests2.DependencyTest.testInterfaceMocking":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":353,"org.easymock.samples.BasicClassMockTest.testPrintContent":6,"org.easymock.samples.ExampleTest.addDocument":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":106,"org.easymock.tests2.DelegateToTest.testStubDelegate":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":110,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":327,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":164,"org.easymock.tests2.AnswerTest.stubAnswer":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":266,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":71,"org.easymock.tests2.UsageConstraintsTest.greaterThan":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":94,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":347,"org.easymock.tests.UsageVarargTest.varargLongAccepted":294,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":17,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":73,"org.easymock.samples.ExampleTest.voteForRemoval":151,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":147,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":259,"org.easymock.tests.UsageExpectAndReturnTest.floatType":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":12,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests.UsageThrowableTest.noUpperLimit":322,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":125,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":213,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":62,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":116,"org.easymock.tests2.SerializationTest.test":114,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":185,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":85,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":203,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":323,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":242,"org.easymock.tests2.UsageConstraintsTest.testSame":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":92,"org.easymock.samples.SupportTest.addDocument":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":261,"org.easymock.tests2.CaptureTest.testCaptureFirst":192,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":204,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":223,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":97,"org.easymock.tests.GenericTest.testPackageScope":43,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":199,"org.easymock.tests2.UsageTest.moreThanOneArgument":66,"org.easymock.tests2.CaptureTest.testCapture2_2446744":191,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":28,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":296,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":278,"org.easymock.tests2.NameTest.nameForMock":67,"org.easymock.tests.UsageExpectAndReturnTest.longType":244,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":350,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":201,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":368,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":253,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":178,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":316,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":87,"org.easymock.tests2.UsageStrictMockTest.differentMethods":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":131,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":245,"org.easymock.tests.UsageCallCountTest.tooManyCalls":279,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":314,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":269,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":78,"org.easymock.tests2.MockedExceptionTest.testRealException":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":108,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":249,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":305,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":63,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":326,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":32,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":367,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":349,"org.easymock.tests2.NameTest.nameForStrictMock":68,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":30,"org.easymock.tests2.UsageConstraintsTest.testFind":117,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":273,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":10,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":235,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":163,"org.easymock.tests.UsageExpectAndReturnTest.object":251,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":13,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":21,"org.easymock.tests2.UsageStrictMockTest.range":167,"org.easymock.tests2.UsageConstraintsTest.lessThan":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":208,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":291,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":275,"org.easymock.tests.UsageTest.exactCallCountByLastCall":286,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":136,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":101,"org.easymock.tests2.CaptureTest.testCaptureRightOne":190,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":329,"org.easymock.tests2.UsageConstraintsTest.testOr":120,"org.easymock.tests.UsageRangeTest.combination":267,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":81,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":287,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":257,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":8,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":332,"org.easymock.tests.UsageTest.wrongArguments":281,"org.easymock.tests2.MockBuilderTest.testWithConstructor":82,"org.easymock.tests.MockClassControlTest.testHashCode":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":98,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":246,"org.easymock.tests2.EasyMockSupportTest.testVerify":212,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":102,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":334,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":331,"org.easymock.tests.UsageVarargTest.varargShortAccepted":293,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":337,"org.easymock.tests2.UsageConstraintsTest.cmpTo":174,"org.easymock.tests.UsageVarargTest.varargCharAccepted":290,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests2.UsageTest.openCallCountByLastCall":218,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":219,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":211,"org.easymock.tests2.CaptureTest.testCaptureFromStub":129,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":22,"org.easymock.tests.UsageTest.unexpectedCallWithArray":360,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":359,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":103,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":324,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":237,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":276,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":86,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":255,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":238,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":58,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":15,"org.easymock.tests2.UsageConstraintsTest.constraints":169,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":306,"org.easymock.samples.ExampleTest.addAndChangeDocument":155,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":258,"org.easymock.tests.UsageStrictMockTest.testVerify":240,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":156,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":365,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":236,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":351,"org.easymock.tests2.UsageTest.resumeIfFailure":222,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":186,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":247,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":51,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":140,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":207}}]
