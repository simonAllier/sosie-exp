[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[3,4,5,0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,1,2,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1555","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:643","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[3,4,328,329,330,5,0,6,7,8,9,10,11,331,12,332,333,16,18,19,334,335,336,337,338,339,22,23,26,27,30,31,32,33,34,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,78,79,80,81,82,83,84,340,341,342,343,344,345,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,135,138,346,145,146,147,148,149,150,151,152,153,156,157,158,159,1,2,160,161,162,347,164,165,166,169,172,173,173,174,174,176,177,178,179,181,183,184,185,186,187,188,189,190,191,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,216,217,218,219,220,221,222,223,224,225,226,227,230,232,233,235,236,237,348,349,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,269,270,272,273,275,277,278,279,281,283,284,285,288,289,290,291,350,292,293,294,351,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[352],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[353],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[354,355,356,357,358,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[151,177,350,292,293,294,351,295],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[337],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[209,211,219,243,244,246,248,249,359,260,265],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[15,23,24,25,28,29,360,361,362,279,280,286,287,363,364,365,366],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[367,368,90,299,301],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:320","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = org.easymock.internal.ExpectedInvocation.getMethod().getExceptionTypes()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[3,7,8,9,10,11,16,131,132,133,134,135,145,146,149,164,165,173,173,174,174,220,230,241,242,245,246,247,248,253,255,256,258,259,260,265,266,267],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[3,4,328,329,330,5,0,6,7,8,9,10,11,367,331,368,354,369,370,371,355,356,372,373,374,375,376,377,378,379,357,380,332,381,382,358,383,384,333,385,13,14,15,16,17,18,19,20,21,334,335,336,337,338,386,339,387,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,388,70,71,72,73,74,75,76,77,78,79,80,81,389,390,391,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,340,341,342,343,344,345,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,392,393,128,129,130,394,395,131,132,133,134,135,136,137,138,139,140,141,142,143,144,346,145,146,147,148,149,150,396,151,152,397,153,154,156,157,158,159,1,2,160,161,164,165,398,399,400,401,166,170,171,172,175,176,177,178,179,180,181,182,183,184,185,188,202,402,403,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,348,349,238,239,240,241,242,243,244,404,245,246,247,248,249,250,359,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,277,278,279,280,281,282,283,284,285,286,287,288,289,405,406,407,408,409,290,410,411,412,413,414,415,350,292,293,294,351,295,296,297,298,299,300,416,417,418,419,420,301,421,422,423,424,425,426,302,427,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,320,321,322,323,428,324,325,326,327,429,430],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[209,211,219,243,244,246,248,249,359,260,265],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[427],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.RecordState:274","failures":[150,177,227,237,238,239,240,302,303],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[209,211,219,243,244,248,249,359,260],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"prefix"}},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[194],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[152,226],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:324","failures":[0,1,2],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[241,243,258,264,431],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[347,432,433,169,192,195,196,434,206,207,208,268,269,435,270,271,272,273,274,275,276,317],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:42","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n} else {\n    try {\n        org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n        java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n        java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n    } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.RecordState:233","failures":[3,4,328,329,330,5,0,6,7,8,9,10,11,331,12,332,333,13,14,15,16,17,18,19,20,21,335,336,22,23,25,26,27,28,29,30,31,32,33,34,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,340,341,342,343,344,345,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,135,136,138,139,140,141,143,144,346,145,146,147,148,149,150,151,152,153,156,157,158,159,1,2,160,161,162,163,347,164,165,166,167,168,169,170,171,172,173,173,174,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,348,349,238,239,240,241,242,243,244,245,246,247,248,249,250,359,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,272,273,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,350,292,293,294,351,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,325,326,327],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[173,174,436,437,438,439],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[440,209,210,211,212,213,214,215,216,217,218,219,220,221,222],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,6,15,18,24,25,28,29,441,166,232,280,286,287],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[5,18,19,335,336,232,233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[15,16,18,19,21,24,187,189,191,194,197,230,232,233],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":244,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":22,"org.easymock.tests2.UsageTest.argumentsOrdered":287,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":314,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":376,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":282,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":175,"org.easymock.tests2.DelegateToTest.testReturnException":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":123,"org.easymock.tests.MockingTest.testPartialClassMocking":82,"org.easymock.tests.MockClassControlTest.testToString":41,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":428,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":331,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":102,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":206,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":185,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":250,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":145,"org.easymock.tests2.UsageTest.wrongArguments":280,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":415,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":37,"org.easymock.samples.ExampleTest.answerVsDelegate":177,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":433,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":391,"org.easymock.tests2.UsageConstraintsTest.testNull":246,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":189,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":46,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":313,"org.easymock.tests2.CaptureTest.testPrimitive":212,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":149,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":121,"org.easymock.tests.UsageTest.moreThanOneArgument":23,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":9,"org.easymock.tests.UsageTest.argumentsOrdered":29,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":334,"org.easymock.tests.UsageVarargTest.varargIntAccepted":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":131,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":268,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":425,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":135,"org.easymock.tests.ReplayStateInvalidUsageTest.times":93,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":290,"org.easymock.tests2.AnswerTest.answer":237,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":381,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":323,"org.easymock.tests2.CaptureTest.testAnd":209,"org.easymock.tests2.UsageTest.strictResetToDefault":278,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":8,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":308,"org.easymock.tests2.DelegateToTest.testDelegate":295,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":101,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":386,"org.easymock.tests2.CaptureTest.testCapture1_2446744":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":321,"org.easymock.tests.UsageThrowableTest.throwError":156,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":87,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":399,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":426,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":439,"org.easymock.samples.PartialClassMockTest.testGetArea":169,"org.easymock.tests.MockingTest.testInterfaceMocking":389,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":88,"org.easymock.tests2.CompareToTest.testLessOrEqual":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":132,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":329,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":395,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":103,"org.easymock.tests2.UsageTest.niceToStrict":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":354,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":270,"org.easymock.tests2.MockBuilderTest.testCreateMock":274,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":412,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":111,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":363,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":309,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":136,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":35,"org.easymock.tests.UsageOverloadedMethodTest.overloading":33,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":152,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":255,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":32,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":58,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":254,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":218,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":388,"org.easymock.tests.MockClassControlTest.testEquals":45,"org.easymock.tests2.EasyMockSupportClassTest.testAll":205,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":163,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":119,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":364,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":99,"org.easymock.tests2.CaptureTest.testCaptureAll":210,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":322,"org.easymock.tests.MockNameTest.defaultName":392,"org.easymock.tests2.UsageConstraintsTest.testMatches":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":10,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":85,"org.easymock.samples.ExampleTest.voteForRemovals":181,"org.easymock.tests.UsageVarargTest.allKinds":77,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":5,"org.easymock.samples.BasicClassMockTest.testPrintContent":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":100,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":160,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":228,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":127,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":351,"org.easymock.tests2.UsageConstraintsTest.greaterThan":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":79,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":197,"org.easymock.samples.ExampleTest.voteForRemoval":178,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":192,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":31,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":306,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":122,"org.easymock.tests2.CaptureTest.testCaptureFirst":222,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":307,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":289,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":54,"org.easymock.tests2.CaptureTest.testCapture2_2446744":221,"org.easymock.tests2.UsageTest.moreThanOneArgument":279,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":299,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":382,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":76,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":143,"org.easymock.tests.UsageExpectAndReturnTest.longType":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":97,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":304,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":120,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":263,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":7,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":341,"org.easymock.tests.UsageCallCountTest.tooManyCalls":144,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":138,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":414,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":2,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":199,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":137,"org.easymock.tests2.UsageConstraintsTest.testContains":253,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":225,"org.easymock.tests2.UsageConstraintsTest.testFind":245,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":34,"org.easymock.tests.MockTypeTest.fromEasyMockClass":398,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":13,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":303,"org.easymock.tests.UsageExpectAndReturnTest.object":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":312,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":71,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":130,"org.easymock.tests.UsageTest.exactCallCountByLastCall":30,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":335,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":367,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":362,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":63,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":67,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":151,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":417,"org.easymock.tests.MockClassControlTest.testHashCode":44,"org.easymock.tests2.EasyMockSupportTest.testVerify":316,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":150,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":320,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":403,"org.easymock.tests.UsageVarargTest.varargCharAccepted":70,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":385,"org.easymock.tests2.UsageTest.openCallCountByLastCall":283,"org.easymock.tests.DefaultClassInstantiatorTest.object":155,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":315,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":343,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":128,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":441,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":408,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":416,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":43,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":195,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":108,"org.easymock.tests.CapturesMatcherTest.test":440,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":64,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":340,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":208,"org.easymock.tests2.UsageTest.resumeIfFailure":288,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":125,"org.easymock.tests2.StubTest.stubWithReturnValue":236,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":56,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":264,"org.easymock.tests2.SerializationTest.testAllMockedMethod":319,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":332,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":352,"org.easymock.samples.SupportTest.voteForRemovals":172,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":365,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":353,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":419,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":114,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":333,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":348,"org.easymock.tests.UsageExpectAndThrowTest.object":112,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":368,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":261,"org.easymock.tests2.DelegateToTest.testWrongClass":294,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":164,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":165,"org.easymock.samples.ConstructorCalledMockTest.testTax":173,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":429,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":311,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":272,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":95,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":36,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":360,"org.easymock.tests2.CaptureTest.testCaptureNone":217,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":330,"org.easymock.tests.UsageUnorderedTest.message":166,"org.easymock.tests.UsageVerifyTest.twoReturns":6,"org.easymock.tests.UsageVarargTest.varargByteAccepted":75,"org.easymock.tests2.ThreadingTest.testThreadSafe":296,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":141,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":394,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":167,"org.easymock.tests2.CaptureTest.testCapture_2617107":211,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":383,"org.easymock.tests2.UsageConstraintsTest.any":251,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":92,"org.easymock.tests2.StubTest.stub":235,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":124,"org.easymock.tests.UsageExpectAndThrowTest.longType":105,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":91,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":231,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":301,"org.easymock.tests2.SerializationTest.testClass":317,"org.easymock.tests.LimitationsTest.mockNativeMethod":12,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":66,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":407,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":234,"org.easymock.tests2.NameTest.nameForMocksControl":327,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":409,"org.easymock.tests2.MockedExceptionTest.testMockedException":224,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":27,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":427,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":106,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":84,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":186,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":273,"org.easymock.tests.MockingTest.testNicePartialClassMocking":83,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":191,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":405,"org.easymock.tests2.CaptureTest.testCaptureLast":216,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":339,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":204,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":249,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":262,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":47,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":110,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":286,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":266,"org.easymock.samples.ExampleTest.removeNonExistingDocument":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":411,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":89,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":418,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":298,"org.easymock.tests2.MockBuilderTest.testCreateMockString":276,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":39,"org.easymock.tests.UsageExpectAndThrowTest.floatType":104,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":257,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":238,"org.easymock.tests.UsageVerifyTest.twoThrows":0,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":207,"org.easymock.samples.ExampleTest.voteAgainstRemoval":179,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":196,"org.easymock.tests2.UsageConstraintsTest.testNotNull":265,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":161,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":223,"org.easymock.tests2.UsageTest.defaultResetToNice":285,"org.easymock.samples.ExampleTest.voteAgainstRemovals":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":406,"org.easymock.tests.UsageVarargTest.differentLength":72,"org.easymock.tests2.CallbackTest.callback":227,"org.easymock.tests2.UsageConstraintsTest.equals":404,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":436,"org.easymock.tests.UsageTest.openCallCountByLastCall":26,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":147,"org.easymock.tests.UsageCallCountTest.tooFewCalls":139,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":38,"org.easymock.tests.UsageThrowableTest.throwCheckedException":1,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":361,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":410,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":200,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":94,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":202,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":240,"org.easymock.tests.ObjectMethodsTest.testHashCode":129,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":300,"org.easymock.tests2.NameTest.nameForNiceMock":326,"org.easymock.tests2.DependencyTest.testInterfaceMocking":184,"org.easymock.samples.ExampleTest.addDocument":180,"org.easymock.tests2.DelegateToTest.testStubDelegate":293,"org.easymock.tests2.AnswerTest.stubAnswer":239,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":16,"org.easymock.tests.UsageVarargTest.varargLongAccepted":74,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":375,"org.easymock.tests.UsageExpectAndReturnTest.floatType":49,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":291,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":174,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":424,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":397,"org.easymock.tests.UsageThrowableTest.noUpperLimit":157,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":259,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":242,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":214,"org.easymock.tests2.SerializationTest.test":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":48,"org.easymock.tests2.UsageConstraintsTest.testSame":247,"org.easymock.samples.SupportTest.addDocument":171,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":90,"org.easymock.tests.GenericTest.testPackageScope":162,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":423,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":390,"org.easymock.tests2.NameTest.nameForMock":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":438,"org.easymock.tests2.UsageStrictMockTest.differentMethods":233,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":51,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":116,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":393,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":81,"org.easymock.tests2.MockedExceptionTest.testRealException":226,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":379,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":146,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":96,"org.easymock.tests2.NameTest.nameForStrictMock":325,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":302,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":190,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":260,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":269,"org.easymock.tests2.UsageStrictMockTest.range":232,"org.easymock.tests2.UsageConstraintsTest.lessThan":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":374,"org.easymock.tests2.CaptureTest.testCaptureRightOne":219,"org.easymock.tests2.UsageConstraintsTest.testOr":248,"org.easymock.tests.UsageRangeTest.combination":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":187,"org.easymock.tests.UsageTest.wrongArguments":25,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":52,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":369,"org.easymock.tests.UsageVarargTest.varargShortAccepted":73,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":142,"org.easymock.tests2.UsageConstraintsTest.cmpTo":252,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":371,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":284,"org.easymock.tests2.CaptureTest.testCaptureFromStub":220,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":86,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":435,"org.easymock.tests.UsageTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":140,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":437,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":61,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":17,"org.easymock.tests2.UsageConstraintsTest.constraints":243,"org.easymock.samples.ExampleTest.addAndChangeDocument":183,"org.easymock.tests.UsageStrictMockTest.testVerify":21,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":170,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":98,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":53,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":134,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":310}}]
