[{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[1,2],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[63,64,65,66,67,68],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[69,70,71,72],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[110],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[111,112,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[114,115,116,117],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[120,121,122],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"suffix"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"failures":[124,125,126,127,128,115],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[129,125,126,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,78,44,150,82,88,94,98,100,151],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[152],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[153,65,154,13,155,156,157,158,159,160,161,17,162,163,164,165,18,166,167,168,19,169,20,22,23,170,171,172,173,174,175,176,69,71,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[202,118,203,204,205],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[114,207],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[140,208,209,210,211,212,213,214,215,216,217,218,150,56,219,220,221],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[222,165,166,167,223],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[224,124,225,226,227,228,129,63,63,64,64,229,222,230,231,232,233,234,235,236,125,126,237,238,239,240,241,242,243,6,7,8,9,10,130,123,202,3,244,245,246,247,118,248,249,250,251,252,131,253,4,132,254,119,255,256,257,258,259,133,203,134,204,260,261,262,263,135,136,264,205,265,266,137,127,128,115,116,11,267,268,269,270,271,153,13,156,160,138,139,272,273,274,14,275,276,277,278,279,280,15,281,282,283,284,16,17,165,18,166,167,169,20,73,285,140,208,286,287,288,74,21,209,210,289,290,22,23,170,291,24,171,172,173,174,292,175,176,69,70,71,180,183,193,199,293,294,295,296,297,298,299,141,142,300,75,25,26,27,28,301,302,303,304,305,306,307,308,309,215,310,311,312,313,314,30,143,315,316,317,318,319,144,320,321,322,323,324,145,325,326,327,146,328,147,329,330,331,332,333,76,334,335,336,337,338,339,77,340,341,342,343,344,345,346,78,347,348,34,349,350,351,352,37,39,40,42,45,47,49,79,150,56,219,353,80,220,221,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,81,374,375,376,57,58,59,60,61,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,151,102,377,103,104,105,106,107,108,378],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[239,241,242,140,379,211,380,381,382,383,310,312,313,339,77,340,384,385,217,386,387,150,151,388,389,378,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":79,"org.easymock.tests2.UsageTest.argumentsOrdered":210,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":283,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":287,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":230,"org.easymock.tests2.DelegateToTest.testReturnException":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":331,"org.easymock.tests.MockingTest.testPartialClassMocking":343,"org.easymock.tests.MockClassControlTest.testToString":50,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":111,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":187,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":183,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":82,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":236,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":248,"org.easymock.tests2.UsageTest.wrongArguments":208,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":27,"org.easymock.samples.ExampleTest.answerVsDelegate":124,"org.easymock.tests2.UsageConstraintsTest.testNull":245,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":269,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":55,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":282,"org.easymock.tests2.CaptureTest.testPrimitive":260,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":374,"org.easymock.tests.UsageTest.moreThanOneArgument":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":101,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":305,"org.easymock.tests.UsageTest.argumentsOrdered":221,"org.easymock.tests.UsageVarargTest.varargIntAccepted":357,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":365,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":17,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":369,"org.easymock.tests.ReplayStateInvalidUsageTest.times":44,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":10,"org.easymock.tests2.AnswerTest.answer":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":9,"org.easymock.tests2.CaptureTest.testAnd":203,"org.easymock.tests2.UsageTest.strictResetToDefault":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":278,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":337,"org.easymock.tests2.DelegateToTest.testDelegate":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":61,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":384,"org.easymock.tests2.CaptureTest.testCapture1_2446744":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":95,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":7,"org.easymock.tests.UsageThrowableTest.throwError":102,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":201,"org.easymock.samples.PartialClassMockTest.testGetArea":222,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":366,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":83,"org.easymock.tests2.UsageTest.niceToStrict":286,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":165,"org.easymock.tests2.MockBuilderTest.testCreateMock":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":196,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":91,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":211,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":279,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":25,"org.easymock.tests.UsageOverloadedMethodTest.overloading":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":198,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":131,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":109,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":324,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":121,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":252,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":264,"org.easymock.tests2.EasyMockSupportClassTest.testAll":180,"org.easymock.tests.MockClassControlTest.testEquals":54,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":302,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":99,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":212,"org.easymock.tests2.CaptureTest.testCaptureAll":134,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":59,"org.easymock.tests2.UsageConstraintsTest.testMatches":253,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":306,"org.easymock.samples.ExampleTest.voteForRemovals":228,"org.easymock.tests.UsageVarargTest.allKinds":364,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":60,"org.easymock.samples.BasicClassMockTest.testPrintContent":234,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":107,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":334,"org.easymock.tests2.UsageConstraintsTest.greaterThan":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":336,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":157,"org.easymock.samples.ExampleTest.voteForRemoval":225,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":158,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":139,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":12,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":73,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":370,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":276,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":330,"org.easymock.tests2.CaptureTest.testCaptureFirst":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":117,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":277,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":290,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":320,"org.easymock.tests2.UsageTest.moreThanOneArgument":140,"org.easymock.tests2.CaptureTest.testCapture2_2446744":266,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":273,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":169,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":363,"org.easymock.tests.GenericTest.testBridgedEquals":2,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":0,"org.easymock.tests.UsageExpectAndReturnTest.longType":317,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":57,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":100,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":223,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":113,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":303,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":87,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":106,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":172,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":34,"org.easymock.tests2.UsageConstraintsTest.testContains":251,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":170,"org.easymock.tests2.UsageConstraintsTest.testFind":244,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":78,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":126,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":308,"org.easymock.tests.UsageExpectAndReturnTest.object":323,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":281,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":359,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":33,"org.easymock.tests.UsageTest.exactCallCountByLastCall":354,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":341,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":218,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":161,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":146,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":355,"org.easymock.tests.MockClassControlTest.testHashCode":53,"org.easymock.tests2.EasyMockSupportTest.testVerify":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":6,"org.easymock.tests.UsageVarargTest.varargCharAccepted":358,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":238,"org.easymock.tests2.UsageTest.openCallCountByLastCall":288,"org.easymock.tests.DefaultClassInstantiatorTest.object":29,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":284,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":31,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":191,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":89,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":104,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":155,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":52,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":88,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":328,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":199,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":381,"org.easymock.tests2.UsageTest.resumeIfFailure":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":333,"org.easymock.tests2.StubTest.stubWithReturnValue":75,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":257,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":322,"org.easymock.tests2.SerializationTest.testAllMockedMethod":71,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":149,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":213,"org.easymock.samples.SupportTest.voteForRemovals":232,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":94,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":72,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":114,"org.easymock.tests.UsageExpectAndThrowTest.object":92,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":255,"org.easymock.tests2.DelegateToTest.testWrongClass":299,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":375,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":376,"org.easymock.samples.ConstructorCalledMockTest.testTax":63,"org.easymock.tests.UsageStrictMockTest.range":312,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":15,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":171,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":177,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":46,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":220,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":26,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":216,"org.easymock.tests2.CaptureTest.testCaptureNone":136,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":152,"org.easymock.tests.UsageUnorderedTest.message":151,"org.easymock.tests.UsageVerifyTest.twoReturns":340,"org.easymock.tests.UsageVarargTest.varargByteAccepted":362,"org.easymock.tests2.ThreadingTest.testThreadSafe":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":194,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":352,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":233,"org.easymock.tests2.CaptureTest.testCapture_2617107":204,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":81,"org.easymock.tests2.UsageConstraintsTest.any":249,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":43,"org.easymock.tests2.StubTest.stub":300,"org.easymock.tests.UsageExpectAndThrowTest.longType":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":332,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":120,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":42,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":240,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":24,"org.easymock.tests2.SerializationTest.testClass":69,"org.easymock.tests.LimitationsTest.mockNativeMethod":347,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":329,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":243,"org.easymock.tests2.NameTest.nameForMocksControl":296,"org.easymock.tests2.MockedExceptionTest.testMockedException":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":182,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":86,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":345,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":11,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":167,"org.easymock.tests.MockingTest.testNicePartialClassMocking":344,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":271,"org.easymock.tests2.CaptureTest.testCaptureLast":135,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":385,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":176,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":118,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":256,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":90,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":209,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":259,"org.easymock.samples.ExampleTest.removeNonExistingDocument":5,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":40,"org.easymock.tests.UsageStrictMockTest.differentMethods":313,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":272,"org.easymock.tests2.ConstraintsToStringTest.andToString":382,"org.easymock.tests2.MockBuilderTest.testCreateMockString":20,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":184,"org.easymock.tests.UsageExpectAndThrowTest.floatType":84,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":179,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":128,"org.easymock.tests.UsageVerifyTest.twoThrows":77,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":193,"org.easymock.samples.ExampleTest.voteAgainstRemoval":226,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":156,"org.easymock.tests2.UsageConstraintsTest.testNotNull":258,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":108,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":22,"org.easymock.tests2.UsageTest.defaultResetToNice":21,"org.easymock.samples.ExampleTest.voteAgainstRemovals":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":148,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":327,"org.easymock.tests2.CallbackTest.callback":142,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":65,"org.easymock.tests.UsageTest.openCallCountByLastCall":353,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":373,"org.easymock.tests.UsageCallCountTest.tooFewCalls":350,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":174,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":28,"org.easymock.tests.UsageThrowableTest.throwCheckedException":105,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":217,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":342,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":173,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":45,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":292,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":116,"org.easymock.tests.ObjectMethodsTest.testHashCode":32,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":274,"org.easymock.tests2.NameTest.nameForNiceMock":295,"org.easymock.tests2.DependencyTest.testInterfaceMocking":235,"org.easymock.samples.ExampleTest.addDocument":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":200,"org.easymock.tests2.DelegateToTest.testStubDelegate":298,"org.easymock.tests2.AnswerTest.stubAnswer":115,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":310,"org.easymock.tests.UsageVarargTest.varargLongAccepted":361,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":314,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":147,"org.easymock.tests.UsageExpectAndReturnTest.floatType":316,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":160,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":64,"org.easymock.tests2.ConstraintsToStringTest.orToString":379,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":254,"org.easymock.tests.UsageThrowableTest.noUpperLimit":377,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":123,"org.easymock.tests2.SerializationTest.test":70,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":262,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":122,"org.easymock.tests2.UsageConstraintsTest.testSame":246,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":315,"org.easymock.samples.SupportTest.addDocument":231,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":185,"org.easymock.tests.GenericTest.testPackageScope":301,"org.easymock.tests2.NameTest.nameForMock":293,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":68,"org.easymock.tests2.UsageStrictMockTest.differentMethods":242,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":338,"org.easymock.tests2.MockedExceptionTest.testRealException":291,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":386,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":239,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":372,"org.easymock.tests2.NameTest.nameForStrictMock":294,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":125,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":270,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":119,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":162,"org.easymock.tests2.UsageStrictMockTest.range":241,"org.easymock.tests2.UsageConstraintsTest.lessThan":133,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":206,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":189,"org.easymock.tests2.CaptureTest.testCaptureRightOne":205,"org.easymock.tests2.UsageConstraintsTest.testOr":247,"org.easymock.tests.UsageRangeTest.combination":335,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":267,"org.easymock.tests.UsageTest.wrongArguments":219,"org.easymock.tests2.MockBuilderTest.testWithConstructor":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":186,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":49,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":325,"org.easymock.tests.UsageVarargTest.varargShortAccepted":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":35,"org.easymock.tests2.UsageConstraintsTest.cmpTo":250,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":207,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":74,"org.easymock.tests2.CaptureTest.testCaptureFromStub":265,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":37,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":163,"org.easymock.tests.UsageTest.unexpectedCallWithArray":56,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":215,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":351,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":67,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":326,"org.easymock.tests2.UsageConstraintsTest.constraints":202,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":311,"org.easymock.samples.ExampleTest.addAndChangeDocument":129,"org.easymock.tests2.ConstraintsToStringTest.notToString":380,"org.easymock.tests.UsageStrictMockTest.testVerify":30,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":229,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":309,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":58,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":368,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":280,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":356}}]
