[{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[6,7,8,9,10],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[15,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[18,19,20,7,8,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[23,24,25,26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[18,19,20,43,44,21,22,45,11],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[27,46,29,47,48,49,50,51,52,37,38,40,53,54,55],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[56,57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[59,60,28,29,30,61,62,0,63,1,64,65,66,67,68,69,70,71,72,2,3,73,74,75,76,77,78,79,80,4,81,82,83,84,85,5,86,87,88,89,90,91,92,93,94,95,96,39,40,41,97,98,99,100,101,102,103,104,44,105,106,107,108,109,110,111,112,113,114,115,116,117,15,118,119,120,121,122,58],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[123,124,125,126,127,128,129,130,131,132,133,59,134,135,136,137,27,60,138,139,46,28,140,29,30,141,142,143,144,145,146,147,148,149,61,62,0,63,1,64,150,151,65,66,152,67,68,69,153,70,71,72,2,3,154,31,48,49,155,156,50,51,157,158,73,74,75,76,77,159,160,161,162,163,164,165,166,52,167,168,169,170,171,172,173,174,175,176,177,78,79,80,178,179,180,181,182,183,4,81,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,82,84,85,36,37,38,207,208,209,210,5,86,87,88,211,89,212,90,91,213,92,214,215,216,93,217,218,219,220,221,94,222,95,96,223,224,39,225,40,41,226,227,228,97,98,99,100,101,102,103,229,230,42,53,231,232,233,234,235,54,55,236,237,238,239,240,241,242,243,104,244,44,245,105,106,246,107,108,247,109,248,110,111,112,113,114,115,116,117,15,118,249,119,250,120,121,122,251,252,253,254,255,256,257,58,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,16,308,309,310,311,312,313,314,315,316,317,11,12,13,318],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[123,124,319,320,125,126,127,128,132,133,59,134,135,136,137,27,321,60,138,139,46,28,140,29,30,141,322,142,143,144,145,146,147,148,149,61,62,0,63,1,64,150,151,65,66,152,67,68,69,153,70,71,72,2,3,24,154,31,48,49,155,156,50,51,157,158,73,74,75,76,77,159,160,161,162,163,323,167,168,169,170,171,173,174,175,176,177,78,79,80,178,179,180,181,182,183,4,81,324,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,82,83,84,85,36,37,38,207,208,209,210,5,86,87,88,211,89,212,90,91,213,92,214,95,223,224,39,225,40,41,226,227,228,98,99,102,103,229,230,42,53,231,232,233,234,235,54,55,236,237,238,239,240,241,242,243,325,104,244,44,326,327,328,329,245,106,246,109,248,114,115,116,117,15,118,119,250,121,251,252,253,254,255,256,257,58,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,330,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,16,308,309,310,311,312,314,315,316,317,11,12,13,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[331],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[333,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[335,336,260,261,262,263,264,265,266,267,269,337,270,271,272,273],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[109,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[123,124,339,340,341,319,125,132,342,59,134,135,136,137,27,60,138,46,28,140,29,30,141,142,143,144,145,146,147,148,149,61,62,0,63,1,64,150,151,65,66,152,67,68,69,153,70,71,72,2,3,23,24,343,154,31,48,49,155,156,50,51,157,344,345,346,347,348,158,73,74,75,76,77,159,160,161,162,163,164,25,165,166,26,323,52,177,349,350,351,352,353,78,79,80,178,179,180,181,182,183,354,355,356,357,358,4,81,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,82,83,84,85,36,37,38,207,208,209,210,5,86,87,88,211,89,212,90,91,92,214,215,215,216,216,93,94,222,95,96,223,39,225,40,41,226,227,228,97,98,99,100,101,102,103,229,230,42,53,231,232,233,234,235,54,55,236,237,238,239,240,241,242,243,325,104,244,44,326,245,105,106,246,107,108,247,109,248,110,111,112,113,114,115,116,117,15,118,249,119,250,120,121,122,251,334,359,252,253,254,255,256,57,257,58,258,360,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,331,302,303,304,305,306,307,16,308,309,310,311,312,313,314,315,316,317,11,12,318],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[18,19,20,7,8,21,22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[361],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[105,109,120,338],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:89","sourceCode":"if (!(org.easymock.internal.Injection.isMatched())) {\n    throw new java.lang.RuntimeException(java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[217,218,362,363,364,365,366,222,367,368,369,370,371,372,373,374,375,376,377,287,378,379,380,381,382,383],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","fieldName":"qualifier","this":"qualifier"}},{"position":"org.easymock.internal.MockBuilder:235","failures":[215,216,44,21,384,385,22,45,386,387,388,9,10,389,11],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[164,212,251,252,254,255,256,318],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[123,124,59,134,135,136,137,27,28,73,74,75,76,77,182,4,81,39,261,267,268,273,299,302],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[119,389,390,250,120,121,122,391,338],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[43],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[260,262,270,294,295,297,299,300,331,310,315],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[300],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Same:37","failures":[298],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[123,124,339,340,341,319,320,125,126,127,128,129,130,131,361,132,133,342,392,393,59,134,135,136,137,27,394,395,396,397,321,398,399,400,401,402,403,404,405,406,60,407,138,139,46,28,140,29,30,141,322,142,143,144,145,146,147,148,149,61,62,0,63,1,64,150,151,65,66,152,67,68,69,153,70,71,72,2,3,23,24,408,409,343,410,154,31,48,49,155,156,50,51,157,411,412,413,414,415,416,333,417,418,419,56,420,421,422,423,424,344,332,425,426,427,428,345,429,346,347,348,158,73,74,75,76,77,159,160,161,162,163,164,25,165,166,26,323,52,167,168,169,430,170,171,172,173,174,175,176,177,349,350,351,431,432,433,434,435,436,352,437,438,353,78,79,439,80,440,441,442,178,179,180,181,182,183,354,355,356,357,358,443,444,445,446,447,448,449,450,4,81,451,452,324,453,454,455,456,457,458,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,82,83,84,85,36,37,38,207,208,209,210,459,460,461,462,463,464,465,466,467,5,86,87,88,211,89,212,90,91,213,92,468,214,215,216,93,217,218,219,220,221,94,362,363,364,365,366,222,367,368,369,370,371,372,469,470,95,96,223,224,39,225,40,41,226,227,228,471,472,473,474,475,476,477,97,98,99,100,478,101,102,103,479,229,230,42,53,231,232,233,234,235,54,55,236,237,238,239,240,241,242,243,325,104,244,44,21,480,481,326,327,328,329,245,384,105,482,385,483,106,246,107,22,108,484,45,247,109,387,248,485,486,487,110,488,489,111,490,491,492,493,494,495,496,497,498,112,499,500,501,502,503,113,504,505,114,115,116,117,15,118,249,506,119,389,390,250,120,121,122,391,338,251,334,359,252,253,254,255,507,256,57,257,58,258,360,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,330,373,374,375,376,377,287,378,379,380,381,382,383,288,289,290,291,292,293,294,295,508,296,297,298,299,300,301,331,302,303,304,305,306,307,16,308,309,310,311,312,313,314,315,316,317,11,12,13,318],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:62","sourceCode":"throw new java.lang.RuntimeException(java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":295,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":154,"org.easymock.tests2.UsageTest.argumentsOrdered":55,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":56,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":232,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":217,"org.easymock.tests2.DelegateToTest.testReturnException":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":179,"org.easymock.tests.MockingTest.testPartialClassMocking":78,"org.easymock.tests.MockClassControlTest.testToString":453,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":481,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":493,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":187,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":111,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":32,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":96,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":18,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":301,"org.easymock.tests2.UsageTest.wrongArguments":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":59,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":209,"org.easymock.samples.ExampleTest.answerVsDelegate":212,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":448,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":441,"org.easymock.tests2.UsageConstraintsTest.testNull":297,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":117,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":283,"org.easymock.tests2.CaptureTest.testPrimitive":263,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":137,"org.easymock.tests.UsageTest.moreThanOneArgument":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":206,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":87,"org.easymock.tests.UsageTest.argumentsOrdered":51,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":354,"org.easymock.tests.UsageVarargTest.varargIntAccepted":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":73,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":8,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":245,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":473,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":371,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":77,"org.easymock.tests.ReplayStateInvalidUsageTest.times":401,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":287,"org.easymock.tests2.DependencyTest.testClassMocking":469,"org.easymock.tests2.AnswerTest.answer":251,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":291,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":445,"org.easymock.tests2.CaptureTest.testAnd":260,"org.easymock.tests2.UsageTest.strictResetToDefault":230,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":86,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":278,"org.easymock.tests2.DelegateToTest.testDelegate":259,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":358,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":202,"org.easymock.tests.LimitationsTest.mockFinalMethod":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":163,"org.easymock.tests2.DependencyTest.testClassMockingSupport":470,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":23,"org.easymock.tests2.CaptureTest.testCapture1_2446744":264,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":506,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":289,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":396,"org.easymock.tests.UsageThrowableTest.throwError":142,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":447,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":393,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":372,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":211,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":505,"org.easymock.samples.PartialClassMockTest.testGetArea":93,"org.easymock.tests.MockingTest.testInterfaceMocking":439,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":74,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":494,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":436,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":188,"org.easymock.tests2.UsageTest.niceToStrict":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":106,"org.easymock.tests2.MockBuilderTest.testCreateMock":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":501,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":196,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":279,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":444,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":341,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":207,"org.easymock.tests.UsageOverloadedMethodTest.overloading":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":498,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":166,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":306,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":67,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":305,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":269,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":430,"org.easymock.tests.MockClassControlTest.testEquals":457,"org.easymock.tests2.EasyMockSupportClassTest.testAll":110,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":133,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":161,"org.easymock.tests2.CaptureTest.testCaptureAll":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":290,"org.easymock.tests.MockNameTest.defaultName":451,"org.easymock.tests2.UsageConstraintsTest.testMatches":307,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":88,"org.easymock.samples.ExampleTest.voteForRemovals":92,"org.easymock.tests.UsageVarargTest.allKinds":177,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":162,"org.easymock.samples.BasicClassMockTest.testPrintContent":220,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":148,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":183,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":466,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":43,"org.easymock.tests2.UsageConstraintsTest.greaterThan":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":488,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":83,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":122,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":467,"org.easymock.samples.ExampleTest.voteForRemoval":90,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":391,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":243,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":474,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":249,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":158,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":229,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":276,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":178,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":57,"org.easymock.tests2.CaptureTest.testCaptureFirst":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":277,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":237,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":52,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":151,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":104,"org.easymock.tests2.UsageTest.moreThanOneArgument":42,"org.easymock.tests2.CaptureTest.testCapture2_2446744":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":425,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":109,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":176,"org.easymock.tests.GenericTest.testBridgedEquals":392,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":130,"org.easymock.tests.UsageExpectAndReturnTest.longType":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":159,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":205,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":313,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":5,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":347,"org.easymock.tests.UsageCallCountTest.tooManyCalls":131,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":502,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":147,"org.easymock.tests.MockingTest.testNiceClassMocking":442,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":98,"org.easymock.tests.MockingTest.testClassMocking":438,"org.easymock.tests2.UsageConstraintsTest.testContains":304,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":320,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":240,"org.easymock.tests2.UsageConstraintsTest.testFind":296,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":186,"org.easymock.tests.MockTypeTest.fromEasyMockClass":446,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":256,"org.easymock.tests.UsageExpectAndReturnTest.object":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":282,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":19,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":434,"org.easymock.tests.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":409,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":355,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":21,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":167,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":71,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":165,"org.easymock.tests.MockClassControlTest.testHashCode":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":363,"org.easymock.tests2.EasyMockSupportTest.testVerify":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":496,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":356,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":164,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":340,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":288,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":330,"org.easymock.tests.UsageVarargTest.varargCharAccepted":170,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":459,"org.easymock.tests2.CaptureTest.testCaptureMultiple":336,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":429,"org.easymock.tests2.UsageTest.openCallCountByLastCall":233,"org.easymock.tests.DefaultClassInstantiatorTest.object":460,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":285,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":339,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":432,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":497,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":362,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":455,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":120,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":193,"org.easymock.tests.CapturesMatcherTest.test":335,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":72,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":346,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":113,"org.easymock.tests2.UsageTest.resumeIfFailure":236,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":443,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":181,"org.easymock.tests2.StubTest.stubWithReturnValue":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":66,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":314,"org.easymock.tests2.SerializationTest.testAllMockedMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":344,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":10,"org.easymock.samples.SupportTest.voteForRemovals":94,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":361,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":199,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":345,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":334,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":410,"org.easymock.tests.UsageExpectAndThrowTest.object":197,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":311,"org.easymock.tests2.DelegateToTest.testWrongClass":258,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":4,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":81,"org.easymock.tests.UsageStrictMockTest.range":29,"org.easymock.samples.ConstructorCalledMockTest.testTax":215,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":476,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":198,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":485,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":403,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":208,"org.easymock.tests2.CaptureTest.testCaptureNone":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":351,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.UsageVerifyTest.twoReturns":38,"org.easymock.tests.UsageVarargTest.varargByteAccepted":175,"org.easymock.tests2.ThreadingTest.testThreadSafe":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":499,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":128,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":435,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":219,"org.easymock.tests2.CaptureTest.testCapture_2617107":262,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":136,"org.easymock.tests2.UsageConstraintsTest.any":302,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":400,"org.easymock.tests2.StubTest.stub":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndThrowTest.longType":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":180,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":464,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":399,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":225,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":222,"org.easymock.tests.LimitationsTest.mockNativeMethod":60,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":3,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":342,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":375,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":226,"org.easymock.tests2.NameTest.nameForMocksControl":329,"org.easymock.tests2.MockedExceptionTest.testMockedException":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":489,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":507,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":191,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":80,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":114,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":108,"org.easymock.tests.MockingTest.testNicePartialClassMocking":79,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":118,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":6,"org.easymock.tests2.CompareToTest.testCompareEqual":14,"org.easymock.tests2.CaptureTest.testCaptureLast":267,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":373,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":24,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":103,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":300,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":312,"org.easymock.tests.MockingTest.testTwoMocks":353,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":479,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":195,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":54,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":316,"org.easymock.samples.ExampleTest.removeNonExistingDocument":468,"org.easymock.tests.UsageStrictMockTest.differentMethods":30,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":364,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":462,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":325,"org.easymock.tests2.MockBuilderTest.testCreateMockString":248,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":490,"org.easymock.tests.UsageExpectAndThrowTest.floatType":189,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":487,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":480,"org.easymock.tests.UsageVerifyTest.twoThrows":37,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":112,"org.easymock.samples.ExampleTest.voteAgainstRemoval":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":349,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":121,"org.easymock.tests.LimitationsTest.privateConstructor":406,"org.easymock.tests2.UsageConstraintsTest.testNotNull":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":149,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":238,"org.easymock.tests2.UsageTest.defaultResetToNice":235,"org.easymock.samples.ExampleTest.voteAgainstRemovals":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":70,"org.easymock.tests.UsageVarargTest.differentLength":172,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":374,"org.easymock.tests2.CallbackTest.callback":318,"org.easymock.tests2.UsageConstraintsTest.equals":508,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":389,"org.easymock.tests.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":292,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":135,"org.easymock.tests.UsageCallCountTest.tooFewCalls":126,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":100,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":210,"org.easymock.tests.UsageThrowableTest.throwCheckedException":146,"org.easymock.tests.MockingTest.testStrictClassMocking":437,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":101,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":254,"org.easymock.tests.ObjectMethodsTest.testHashCode":433,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":7,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":244,"org.easymock.tests2.NameTest.nameForNiceMock":328,"org.easymock.tests2.DependencyTest.testInterfaceMocking":95,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":20,"org.easymock.samples.ExampleTest.addDocument":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":504,"org.easymock.tests2.DelegateToTest.testStubDelegate":58,"org.easymock.tests2.AnswerTest.stubAnswer":253,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":28,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":484,"org.easymock.tests.UsageVarargTest.varargLongAccepted":174,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":2,"org.easymock.tests.UsageExpectAndReturnTest.floatType":0,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":44,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":216,"org.easymock.tests.UsageThrowableTest.noUpperLimit":143,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":26,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":370,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":293,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":471,"org.easymock.tests2.SerializationTest.test":12,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":265,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":62,"org.easymock.tests2.UsageConstraintsTest.testSame":298,"org.easymock.samples.SupportTest.addDocument":221,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":478,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":491,"org.easymock.tests.GenericTest.testPackageScope":132,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":369,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":440,"org.easymock.tests2.NameTest.nameForMock":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":387,"org.easymock.tests2.UsageStrictMockTest.differentMethods":41,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":390,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":1,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":201,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":431,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":85,"org.easymock.tests2.MockedExceptionTest.testRealException":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":450,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":422,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":39,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":404,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":134,"org.easymock.tests2.NameTest.nameForStrictMock":327,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":483,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":15,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":475,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":463,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":33,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":310,"org.easymock.tests.ErrorMessageTest.testGetters":34,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":105,"org.easymock.tests2.UsageStrictMockTest.range":40,"org.easymock.tests2.UsageConstraintsTest.lessThan":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":495,"org.easymock.tests2.CaptureTest.testCaptureRightOne":270,"org.easymock.tests2.UsageConstraintsTest.testOr":299,"org.easymock.tests.UsageRangeTest.combination":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":115,"org.easymock.tests.UsageTest.wrongArguments":49,"org.easymock.tests2.MockBuilderTest.testWithConstructor":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":492,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":69,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":465,"org.easymock.tests.UsageVarargTest.varargShortAccepted":173,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":129,"org.easymock.tests2.UsageConstraintsTest.cmpTo":303,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":414,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":234,"org.easymock.tests2.CaptureTest.testCaptureFromStub":271,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":395,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":482,"org.easymock.tests.UsageTest.unexpectedCallWithArray":48,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":46,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":127,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":386,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":153,"org.easymock.tests2.CaptureTest.testCapture":337,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":140,"org.easymock.tests2.UsageConstraintsTest.constraints":294,"org.easymock.samples.ExampleTest.addAndChangeDocument":214,"org.easymock.tests.UsageStrictMockTest.testVerify":322,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":218,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":160,"org.easymock.tests2.CompareToTest.testGreateThan":17,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":266,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":75,"org.easymock.tests.LimitationsTest.abstractClass":405,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":76,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":168,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":280}}]
