[{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,0,1,2,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,472,473,473,474,475,476,477,478],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[73,75,76,77,78,79,80,82,480,83,84,86],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[481,482],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,483],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"genericParameters"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[484,485,486],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[482],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[156],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[137],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[62],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[54,59,209,386,463],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[24,25,26,27,28,29,32,36,37,38,63,71,72,89,93,95,97,100,160,161,162,163,164,165,166,169,171,172,184,187,197,203,206,212,257,258,259,260,261,262,265,266,268,269,270,272,273,274,275,276,280,287,288,289,290,291,343,344,345,346,381,382,383,384,399,400,422,423,425,433,435,436,445,462,464,465,467,474,477],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = this.org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[24,25,26,27,28,29,32,36,37,38,63,71,72,89,93,95,97,100,160,161,162,163,164,165,166,169,171,172,184,187,197,203,206,212,257,258,259,260,261,262,265,266,268,269,270,272,273,274,275,276,280,287,288,289,290,291,343,344,345,346,381,382,383,384,399,400,422,423,425,433,435,436,445,462,464,465,467,474,477],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"targetField"}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[482],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[133],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[130,132,149,155,487],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[65,66,67,68,116,117,124,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,342,354,373,375,376,377,378,379,380,389,393,394,395,396,397,398,410,415,440,441,447,448,461],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[488,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,490],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[307,308,440,441],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":133,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":410,"org.easymock.tests2.UsageTest.argumentsOrdered":127,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":229,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":122,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":478,"org.easymock.tests2.DelegateToTest.testReturnException":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":394,"org.easymock.tests.MockingTest.testPartialClassMocking":422,"org.easymock.tests.MockClassControlTest.testToString":245,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":3,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":443,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":191,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":309,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":72,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":445,"org.easymock.tests2.UsageTest.wrongArguments":120,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":304,"org.easymock.samples.ExampleTest.answerVsDelegate":463,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":295,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":427,"org.easymock.tests2.UsageConstraintsTest.testNull":136,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":27,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":50,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":250,"org.easymock.tests2.CaptureTest.testPrimitive":76,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":449,"org.easymock.tests.UsageTest.moreThanOneArgument":411,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":328,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":345,"org.easymock.tests.UsageTest.argumentsOrdered":417,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":348,"org.easymock.tests.UsageVarargTest.varargIntAccepted":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":287,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":22,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":291,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests.ReplayStateInvalidUsageTest.times":369,"org.easymock.tests2.DependencyTest.testClassMocking":69,"org.easymock.tests2.AnswerTest.answer":54,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":11,"org.easymock.tests2.CaptureTest.testAnd":73,"org.easymock.tests2.UsageTest.strictResetToDefault":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":45,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":383,"org.easymock.tests2.DelegateToTest.testDelegate":215,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":324,"org.easymock.tests.LimitationsTest.mockFinalMethod":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":397,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":360,"org.easymock.tests2.DependencyTest.testClassMockingSupport":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":216,"org.easymock.tests2.CaptureTest.testCapture1_2446744":77,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":322,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":9,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":363,"org.easymock.tests.UsageThrowableTest.throwError":373,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":294,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":347,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":205,"org.easymock.samples.PartialClassMockTest.testGetArea":474,"org.easymock.tests.MockingTest.testInterfaceMocking":424,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":364,"org.easymock.tests2.CompareToTest.testLessOrEqual":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":288,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":299,"org.easymock.tests2.UsageTest.niceToStrict":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":192,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":219,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":93,"org.easymock.tests2.MockBuilderTest.testCreateMock":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":111,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":318,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":46,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":308,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":401,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":302,"org.easymock.tests.UsageOverloadedMethodTest.overloading":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":202,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":389,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":146,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":459,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":268,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":481,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":145,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":82,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":332,"org.easymock.tests2.EasyMockSupportClassTest.testAll":184,"org.easymock.tests.MockClassControlTest.testEquals":249,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":284,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":486,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":10,"org.easymock.tests2.CaptureTest.testCaptureAll":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":358,"org.easymock.tests.MockNameTest.defaultName":277,"org.easymock.tests2.UsageConstraintsTest.testMatches":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":346,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":361,"org.easymock.samples.ExampleTest.voteForRemovals":467,"org.easymock.tests.UsageVarargTest.allKinds":340,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":353,"org.easymock.samples.BasicClassMockTest.testPrintContent":471,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":359,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":379,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":398,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":19,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":214,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":457,"org.easymock.tests2.UsageConstraintsTest.greaterThan":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":382,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":38,"org.easymock.samples.ExampleTest.voteForRemoval":464,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":458,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":39,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":61,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":296,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":30,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":429,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":117,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":43,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":393,"org.easymock.tests2.CaptureTest.testCaptureFirst":86,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":44,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":129,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":264,"org.easymock.tests2.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":63,"org.easymock.tests2.CaptureTest.testCapture2_2446744":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":237,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":339,"org.easymock.tests.GenericTest.testBridgedEquals":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":408,"org.easymock.tests.UsageExpectAndReturnTest.longType":260,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":356,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":489,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":327,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":385,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":154,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":325,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":440,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":343,"org.easymock.tests.UsageCallCountTest.tooManyCalls":409,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":201,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":113,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":314,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":378,"org.easymock.tests.MockingTest.testNiceClassMocking":428,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":161,"org.easymock.tests.MockingTest.testClassMocking":420,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":488,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":402,"org.easymock.tests2.UsageConstraintsTest.testContains":144,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":67,"org.easymock.tests2.UsageConstraintsTest.testFind":135,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":461,"org.easymock.tests.MockTypeTest.fromEasyMockClass":293,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":430,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":176,"org.easymock.tests.UsageExpectAndReturnTest.object":267,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":49,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":334,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":254,"org.easymock.tests.UsageTest.exactCallCountByLastCall":418,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":224,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":349,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":273,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":329,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":388,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":13,"org.easymock.tests.MockClassControlTest.testHashCode":248,"org.easymock.tests2.EasyMockSupportTest.testVerify":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":194,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":484,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":350,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":386,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":8,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":159,"org.easymock.tests.UsageVarargTest.varargCharAccepted":333,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":450,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":242,"org.easymock.tests2.UsageTest.openCallCountByLastCall":123,"org.easymock.tests.DefaultClassInstantiatorTest.object":451,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":52,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":306,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":195,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":316,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":376,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":106,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":12,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":36,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":315,"org.easymock.tests.CapturesMatcherTest.test":483,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":274,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":439,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":203,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":246,"org.easymock.tests2.UsageTest.resumeIfFailure":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":396,"org.easymock.tests2.StubTest.stubWithReturnValue":116,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":96,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":155,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":266,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":235,"org.easymock.samples.SupportTest.voteForRemovals":477,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":321,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":490,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":241,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":55,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":444,"org.easymock.tests.UsageExpectAndThrowTest.object":319,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":152,"org.easymock.tests2.DelegateToTest.testWrongClass":213,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":399,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":400,"org.easymock.samples.ConstructorCalledMockTest.testTax":472,"org.easymock.tests.UsageStrictMockTest.range":435,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":179,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":48,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":320,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":95,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":181,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":303,"org.easymock.tests2.CaptureTest.testCaptureNone":81,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":300,"org.easymock.tests.UsageUnorderedTest.message":301,"org.easymock.tests.UsageVerifyTest.twoReturns":355,"org.easymock.tests.UsageVarargTest.varargByteAccepted":338,"org.easymock.tests2.ThreadingTest.testThreadSafe":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":198,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":406,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":470,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":255,"org.easymock.tests2.CaptureTest.testCapture_2617107":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":239,"org.easymock.tests2.UsageConstraintsTest.any":142,"org.easymock.tests2.StubTest.stub":115,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":240,"org.easymock.tests.UsageExpectAndThrowTest.longType":312,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":455,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":367,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":170,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":17,"org.easymock.tests.LimitationsTest.mockNativeMethod":280,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":276,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":285,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":105,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":173,"org.easymock.tests2.NameTest.nameForMocksControl":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":107,"org.easymock.tests2.MockedExceptionTest.testMockedException":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":186,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":415,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":425,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":313,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":24,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":97,"org.easymock.tests.MockingTest.testNicePartialClassMocking":423,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":29,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":103,"org.easymock.tests2.CaptureTest.testCaptureLast":80,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":217,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":166,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":139,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":153,"org.easymock.tests.MockingTest.testTwoMocks":421,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":317,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":126,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":157,"org.easymock.samples.ExampleTest.removeNonExistingDocument":468,"org.easymock.tests.UsageStrictMockTest.differentMethods":436,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":110,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":14,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":453,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":62,"org.easymock.tests2.MockBuilderTest.testCreateMockString":102,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":188,"org.easymock.tests.UsageExpectAndThrowTest.floatType":311,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":183,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":57,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":208,"org.easymock.tests.UsageVerifyTest.twoThrows":354,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":197,"org.easymock.samples.ExampleTest.voteAgainstRemoval":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":230,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":298,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":37,"org.easymock.tests.LimitationsTest.privateConstructor":279,"org.easymock.tests2.UsageConstraintsTest.testNotNull":156,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":380,"org.easymock.tests2.UsageTest.defaultResetToNice":125,"org.easymock.samples.ExampleTest.voteAgainstRemovals":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":231,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":272,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":104,"org.easymock.tests.UsageVarargTest.differentLength":335,"org.easymock.tests2.CallbackTest.callback":209,"org.easymock.tests2.UsageConstraintsTest.equals":134,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":33,"org.easymock.tests.UsageTest.openCallCountByLastCall":414,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":447,"org.easymock.tests.UsageCallCountTest.tooFewCalls":404,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":163,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":305,"org.easymock.tests.UsageThrowableTest.throwCheckedException":377,"org.easymock.tests.MockingTest.testStrictClassMocking":419,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":165,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":342,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":109,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":370,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":164,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":59,"org.easymock.tests.ObjectMethodsTest.testHashCode":253,"org.easymock.tests2.NameTest.nameForNiceMock":6,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":64,"org.easymock.tests2.DependencyTest.testInterfaceMocking":71,"org.easymock.samples.ExampleTest.addDocument":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":204,"org.easymock.tests2.DelegateToTest.testStubDelegate":212,"org.easymock.tests2.AnswerTest.stubAnswer":58,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":433,"org.easymock.tests.UsageVarargTest.varargLongAccepted":337,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":228,"org.easymock.tests.UsageExpectAndReturnTest.floatType":259,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":275,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":206,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":473,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":21,"org.easymock.tests.UsageThrowableTest.noUpperLimit":374,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":131,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":177,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":78,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":482,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":452,"org.easymock.tests2.UsageConstraintsTest.testSame":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":258,"org.easymock.samples.SupportTest.addDocument":476,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":189,"org.easymock.tests.GenericTest.testPackageScope":283,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":20,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":426,"org.easymock.tests2.NameTest.nameForMock":4,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":269,"org.easymock.tests2.UsageStrictMockTest.differentMethods":172,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":101,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":34,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":261,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":323,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":251,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":384,"org.easymock.tests2.MockedExceptionTest.testRealException":68,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":297,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":233,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":232,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":446,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":372,"org.easymock.tests2.NameTest.nameForStrictMock":5,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":92,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":174,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":178,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":454,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":151,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":89,"org.easymock.tests2.UsageStrictMockTest.range":171,"org.easymock.tests2.UsageConstraintsTest.lessThan":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":16,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":227,"org.easymock.tests2.CaptureTest.testCaptureRightOne":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":193,"org.easymock.tests2.UsageConstraintsTest.testOr":138,"org.easymock.tests.UsageRangeTest.combination":381,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":25,"org.easymock.tests.UsageTest.wrongArguments":413,"org.easymock.tests2.MockBuilderTest.testWithConstructor":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":190,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":220,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":270,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":456,"org.easymock.tests.UsageVarargTest.varargShortAccepted":336,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":407,"org.easymock.tests2.UsageConstraintsTest.cmpTo":143,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":222,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests2.CaptureTest.testCaptureFromStub":84,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":362,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":90,"org.easymock.tests.UsageTest.unexpectedCallWithArray":412,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":432,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":405,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":271,"org.easymock.tests2.CaptureTest.testCapture":480,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":434,"org.easymock.tests2.UsageConstraintsTest.constraints":132,"org.easymock.samples.ExampleTest.addAndChangeDocument":469,"org.easymock.tests.UsageStrictMockTest.testVerify":438,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":475,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":431,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":357,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":289,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":263,"org.easymock.tests.LimitationsTest.abstractClass":278,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":47,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":330}}]
