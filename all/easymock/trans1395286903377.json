[{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[14,15,2,16,4,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[78,79,80,81,82],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[83,0,1,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,14,15,2,103,104,105,106,107,108,109,110,111,112,16,113,114,115,116,117,118,119,120,4,17,121,5,122,123,124,18,19,20,21,22,125,126,127,128,129,130,131,132,133,134,135,136,137,138,23,24,25,26,27,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,6,7,163,164,8,9,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,82,197,28,29,198,199,200,201,202,30,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,31,246,10,247,248,249,250,251,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,60,61,62,273,274,275,11,276,277,278,279,280,12,13,281,282,283,284,285,286,287,288,289,290,63,64,65,66,67,68,69,70,71,72,73,74,75,76,291,292,293,294,295,296,297,298,299,300,301,302,303,304,77,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[84,85,325,86,87,89,92,102,326,327,328,329,330,331,130,332,175,176,333,334,177,180,335,336,198,337,204,206,207,208,209,210,211,338,339,340,242,341,249,251,342,252,253,343,254,255,344,260,261,262,263,264,265,345,346,347,266,267,348,268,269,270,271,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,298,299,301,302,303,304,77,374,305,306,307,308,309,310,375,376,315,377,378,379,379,380,380,381],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[355,365,379,380,381],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[83,0,1,86,87,89,93,95,96,97,98,99,100,101,14,15,2,103,104,105,106,107,108,109,110,111,112,16,113,114,115,119,120,4,17,121,5,122,123,18,19,20,21,22,125,126,127,128,129,130,131,132,133,134,135,136,137,138,23,24,25,26,27,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,6,7,163,164,8,9,165,168,169,170,171,172,173,174,175,176,183,184,185,186,28,29,198,199,200,201,202,30,203,212,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,382,238,239,240,241,242,243,383,244,245,31,246,10,247,248,249,250,251,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,384,385,386,387,388,389,390,391,392,393,394,395,396,342,252,253,343,397,254,255,256,257,258,259,260,261,264,265,345,346,266,267,268,269,270,271,272,61,62,273,274,275,11,276,277,278,279,280,12,13,281,282,283,284,285,286,63,64,65,66,67,68,69,70,71,72,73,74,75,76,291,292,293,294,296,297,352,355,365,371,298,299,300,301,302,303,304,77,306,307,308,309,311,398,399,400,377,378,401,379,380,381,317,318,319,320,321,322,324,402],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[35,37,40,42,57,63,73],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[403,404,4,6,405,406],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[403,404,4,6,405,406],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[329,407],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[83,0,1,86,87,89,93,14,15,2,103,104,105,106,107,109,110,111,112,16,114,115,119,120,4,17,121,5,122,18,19,20,21,22,125,126,127,128,129,130,131,132,133,134,135,136,137,138,23,24,25,26,27,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,6,7,163,164,8,9,165,168,170,171,175,176,28,29,198,199,200,201,202,30,203,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,382,238,239,240,241,242,243,383,244,245,31,246,10,247,249,250,251,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,384,385,386,387,388,389,390,392,393,394,395,396,342,252,253,343,397,254,255,264,345,346,267,268,271,61,408,62,273,274,275,11,276,277,278,279,12,13,282,283,284,285,286,63,64,65,66,67,68,69,70,71,72,73,74,75,76,292,293,294,295,296,297,352,355,365,371,298,300,301,302,303,77,308,311,398,399,400,377,378,401,379,380,381,317,318,319,320,321,322,324,402],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[280,305],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[294,295],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[83,0,1,86,87,89,409,410,411,412,413,93,94,95,96,414,415,14,15,416,417,418,2,113,114,115,419,17,5,122,18,19,20,21,22,125,126,127,128,129,130,131,132,133,134,135,136,137,138,23,24,25,26,27,79,80,81,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,168,175,333,28,29,198,199,200,201,202,30,203,420,421,422,423,212,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,382,424,238,239,240,425,241,242,243,383,31,10,247,249,250,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,384,385,386,387,388,389,390,391,392,393,394,395,342,252,253,343,397,254,255,261,264,345,346,267,269,270,271,272,61,62,273,274,275,276,278,279,280,281,282,283,426,427,284,285,286,63,64,66,67,70,71,72,73,74,75,76,291,292,293,294,295,296,297,352,355,365,371,298,299,300,301,302,303,77,307,308,309,311,398,400,379,379,380,380,381,317,318,319,320,322,324],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[309],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:87","sourceCode":"return java.util.List<org.easymock.internal.Injection>","type":"CtReturnImpl"},"failures":[428,429,430,431,432,382,433,434,435,436,437,438,439,440,441,442,443,383,444,445,446,447,448,449,401,402],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[450,50],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[196],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[451],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[37,42,52,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[452,41,47,59],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:201","failures":[333,177,180,249,260,261,262,264,345,346,267,268,355,365,371,304,307,308,375,381],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[453],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[454,455,456],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[16,24,25,26,34,35,37,39,40,57,63,64,65,70,71,73,76],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[34,35,37,39,40,42,52,57,63,65,73],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[325,86,87,89,130,175,176,333,177,180,198,205,457,242,249,251,342,252,253,343,254,255,260,458,261,262,264,265,345,346,266,267,459,268,271,352,355,365,371,298,299,301,302,303,304,77,306,307,308,309,377,378,379,379,380,380,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.Range:44","failures":[83,0,1,84,85,325,86,87,88,89,90,91,92,409,410,411,412,413,93,94,95,96,97,98,99,100,101,460,461,462,463,464,465,466,78,467,468,469,470,471,472,473,474,414,475,476,477,478,479,415,480,481,102,326,327,328,329,330,482,331,14,15,416,417,418,2,103,104,105,483,106,107,108,109,110,111,112,16,484,113,114,115,419,485,116,117,118,486,487,119,120,4,17,121,5,122,123,124,18,19,20,21,22,125,126,127,128,129,130,131,132,133,134,135,136,137,138,23,24,25,26,27,488,79,80,81,489,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,6,7,163,164,8,9,165,166,167,168,169,170,171,172,173,174,332,175,176,333,334,177,490,491,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,82,197,28,29,335,336,198,337,199,200,201,202,30,203,420,421,422,204,205,206,207,208,209,210,211,492,423,493,212,213,214,215,494,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,428,429,430,431,432,382,433,434,435,436,437,438,424,238,239,240,425,241,242,341,495,243,439,440,441,442,443,383,444,445,446,447,448,449,244,245,31,246,10,247,248,249,250,251,32,33,34,35,496,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,384,385,386,387,388,389,390,391,392,393,394,395,396,342,252,253,343,497,397,254,255,498,256,257,258,259,260,499,261,262,500,263,264,265,345,501,346,502,347,266,267,503,268,269,270,271,272,60,61,408,62,273,274,275,11,276,277,278,279,280,12,13,281,282,283,426,427,284,285,286,504,287,288,289,290,63,64,65,66,67,68,69,70,71,72,73,74,75,76,291,292,293,294,295,296,297,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,298,299,300,301,302,303,304,505,77,374,305,306,307,308,309,310,375,506,507,311,398,376,312,313,314,315,508,316,399,400,377,378,401,379,380,381,317,318,319,320,321,322,323,324,402],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:450","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[388,389,370],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[0,93,2,114,119,5,122,131,132,134,135,136,137,138,9,243,244,10,247,35,40,41,43,46,52,53,54,56,385,387,389,390,393,394,395,267,276,277,13,73,299,308],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,1,17,133,165,31,273,282,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":35,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":161,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":394,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":469,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":277,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":401,"org.easymock.tests2.DelegateToTest.testReturnException":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":200,"org.easymock.tests.MockingTest.testPartialClassMocking":86,"org.easymock.tests.MockClassControlTest.testToString":206,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":504,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":141,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":355,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":398,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":41,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":23,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":449,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":185,"org.easymock.samples.ExampleTest.answerVsDelegate":318,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":180,"org.easymock.tests2.UsageConstraintsTest.testNull":37,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":91,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":301,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":393,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":211,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":338,"org.easymock.tests2.CaptureTest.testPrimitive":66,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":27,"org.easymock.tests.UsageTest.moreThanOneArgument":162,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":160,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":127,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":409,"org.easymock.tests.UsageTest.argumentsOrdered":9,"org.easymock.tests.UsageVarargTest.varargIntAccepted":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":18,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":437,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":313,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":22,"org.easymock.tests.ReplayStateInvalidUsageTest.times":195,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":383,"org.easymock.tests2.DependencyTest.testClassMocking":506,"org.easymock.tests2.AnswerTest.answer":283,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":475,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":259,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":491,"org.easymock.tests2.CaptureTest.testAnd":63,"org.easymock.tests2.UsageTest.strictResetToDefault":274,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":500,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":388,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":95,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":413,"org.easymock.tests2.DelegateToTest.testDelegate":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":156,"org.easymock.tests.LimitationsTest.mockFinalMethod":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":30,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":101,"org.easymock.tests2.DependencyTest.testClassMockingSupport":507,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":489,"org.easymock.tests2.CaptureTest.testCapture1_2446744":67,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":505,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":154,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":257,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":189,"org.easymock.tests.UsageThrowableTest.throwError":131,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":179,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":484,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":438,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":373,"org.easymock.samples.PartialClassMockTest.testGetArea":381,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":190,"org.easymock.tests.MockingTest.testInterfaceMocking":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":19,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":417,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":487,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":142,"org.easymock.tests2.UsageTest.niceToStrict":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":456,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":264,"org.easymock.tests2.MockBuilderTest.testCreateMock":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":446,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":405,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":150,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":389,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":490,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":422,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":166,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":183,"org.easymock.tests.UsageOverloadedMethodTest.overloading":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":370,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":47,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":215,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":229,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":46,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":72,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":483,"org.easymock.tests.MockClassControlTest.testEquals":210,"org.easymock.tests2.EasyMockSupportClassTest.testAll":352,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":176,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":158,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":99,"org.easymock.tests2.CaptureTest.testCaptureAll":64,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":258,"org.easymock.tests.MockNameTest.defaultName":488,"org.easymock.tests2.UsageConstraintsTest.testMatches":48,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":128,"org.easymock.samples.ExampleTest.voteForRemovals":322,"org.easymock.tests.UsageVarargTest.allKinds":16,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":100,"org.easymock.samples.BasicClassMockTest.testPrintContent":378,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":137,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":244,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":434,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":203,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":482,"org.easymock.tests2.UsageConstraintsTest.greaterThan":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":353,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":94,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":309,"org.easymock.samples.ExampleTest.voteForRemoval":319,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":331,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":294,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":310,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":348,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":181,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":304,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":130,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":273,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":386,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":199,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":424,"org.easymock.tests2.CaptureTest.testCaptureFirst":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":387,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":282,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":217,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":225,"org.easymock.tests2.CaptureTest.testCapture2_2446744":75,"org.easymock.tests2.UsageTest.moreThanOneArgument":275,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":476,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":267,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":112,"org.easymock.tests.GenericTest.testBridgedEquals":334,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":173,"org.easymock.tests.UsageExpectAndReturnTest.longType":221,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":97,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":459,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":159,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":419,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":55,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":125,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":80,"org.easymock.tests.UsageCallCountTest.tooManyCalls":174,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":146,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":136,"org.easymock.tests.MockingTest.testNiceClassMocking":92,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":252,"org.easymock.tests.MockingTest.testClassMocking":85,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":458,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":167,"org.easymock.tests2.UsageConstraintsTest.testContains":45,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":271,"org.easymock.tests2.UsageConstraintsTest.testFind":36,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":115,"org.easymock.tests.MockTypeTest.fromEasyMockClass":178,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":119,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":62,"org.easymock.tests.UsageExpectAndReturnTest.object":228,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":392,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":107,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":118,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":453,"org.easymock.tests.UsageTest.exactCallCountByLastCall":165,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":492,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":410,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":341,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":103,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":234,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":214,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":429,"org.easymock.tests.MockClassControlTest.testHashCode":209,"org.easymock.tests2.EasyMockSupportTest.testVerify":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":362,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":411,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":421,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":256,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":60,"org.easymock.tests.UsageVarargTest.varargCharAccepted":106,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":481,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":480,"org.easymock.tests2.UsageTest.openCallCountByLastCall":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":454,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":395,"org.easymock.tests.DefaultClassInstantiatorTest.object":102,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":420,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":116,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":3,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":363,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":134,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":340,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":442,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":428,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":208,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":147,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":235,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":79,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":371,"org.easymock.tests2.UsageTest.resumeIfFailure":281,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":177,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":202,"org.easymock.tests2.StubTest.stubWithReturnValue":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":501,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":56,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":227,"org.easymock.tests2.SerializationTest.testAllMockedMethod":251,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":414,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":406,"org.easymock.samples.SupportTest.voteForRemovals":400,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":431,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":153,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":415,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":426,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":493,"org.easymock.tests.UsageExpectAndThrowTest.object":151,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":53,"org.easymock.tests2.DelegateToTest.testWrongClass":240,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":28,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":29,"org.easymock.tests.UsageStrictMockTest.range":5,"org.easymock.samples.ConstructorCalledMockTest.testTax":379,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":508,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":391,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":152,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":345,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":8,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":184,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":403,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":418,"org.easymock.tests2.CaptureTest.testCaptureNone":71,"org.easymock.tests.UsageUnorderedTest.message":2,"org.easymock.tests.UsageVerifyTest.twoReturns":1,"org.easymock.tests.UsageVarargTest.varargByteAccepted":111,"org.easymock.tests2.ThreadingTest.testThreadSafe":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":366,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":171,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":486,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":377,"org.easymock.tests2.CaptureTest.testCapture_2617107":65,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":478,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":26,"org.easymock.tests2.UsageConstraintsTest.any":43,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":194,"org.easymock.tests2.StubTest.stub":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndThrowTest.longType":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":201,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":329,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":193,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":246,"org.easymock.tests2.SerializationTest.testClass":249,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":382,"org.easymock.tests.LimitationsTest.mockNativeMethod":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":237,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":333,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":441,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":248,"org.easymock.tests2.NameTest.nameForMocksControl":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":443,"org.easymock.tests2.MockedExceptionTest.testMockedException":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":354,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":164,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":408,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":145,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":89,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":298,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":346,"org.easymock.tests.MockingTest.testNicePartialClassMocking":87,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":303,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":439,"org.easymock.tests2.CaptureTest.testCaptureLast":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":139,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":40,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":255,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":54,"org.easymock.tests.MockingTest.testTwoMocks":325,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":498,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":149,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":58,"org.easymock.samples.ExampleTest.removeNonExistingDocument":323,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":445,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":191,"org.easymock.tests.UsageStrictMockTest.differentMethods":122,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":430,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":327,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":295,"org.easymock.tests2.MockBuilderTest.testCreateMockString":268,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":204,"org.easymock.tests.UsageExpectAndThrowTest.floatType":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":356,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":495,"org.easymock.tests.UsageVerifyTest.twoThrows":0,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":365,"org.easymock.samples.ExampleTest.voteAgainstRemoval":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":416,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":308,"org.easymock.tests.LimitationsTest.privateConstructor":336,"org.easymock.tests2.UsageConstraintsTest.testNotNull":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":138,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":269,"org.easymock.tests2.UsageTest.defaultResetToNice":280,"org.easymock.samples.ExampleTest.voteAgainstRemovals":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":233,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":440,"org.easymock.tests.UsageVarargTest.differentLength":108,"org.easymock.tests2.CallbackTest.callback":243,"org.easymock.tests2.UsageConstraintsTest.equals":496,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":374,"org.easymock.tests.UsageTest.openCallCountByLastCall":163,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":25,"org.easymock.tests.UsageCallCountTest.tooFewCalls":169,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":186,"org.easymock.tests.UsageThrowableTest.throwCheckedException":135,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":404,"org.easymock.tests.MockingTest.testStrictClassMocking":84,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":15,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":444,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":253,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":397,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":286,"org.easymock.tests2.CompareToTest.testGreateOrEqual":452,"org.easymock.tests.ObjectMethodsTest.testHashCode":117,"org.easymock.tests2.NameTest.nameForNiceMock":289,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":297,"org.easymock.tests2.DependencyTest.testInterfaceMocking":311,"org.easymock.samples.ExampleTest.addDocument":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":367,"org.easymock.tests2.DelegateToTest.testStubDelegate":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.AnswerTest.stubAnswer":285,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":17,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":502,"org.easymock.tests.UsageVarargTest.varargLongAccepted":110,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.floatType":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":242,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":380,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":436,"org.easymock.tests.UsageThrowableTest.noUpperLimit":132,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":51,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":33,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":376,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":68,"org.easymock.tests2.SerializationTest.test":250,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":407,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":326,"org.easymock.tests2.UsageConstraintsTest.testSame":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":219,"org.easymock.samples.SupportTest.addDocument":399,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":497,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":357,"org.easymock.tests.GenericTest.testPackageScope":175,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":435,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":90,"org.easymock.tests2.NameTest.nameForMock":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":230,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":503,"org.easymock.tests2.UsageStrictMockTest.differentMethods":247,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":155,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":485,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":96,"org.easymock.tests2.MockedExceptionTest.testRealException":272,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":472,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":24,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":197,"org.easymock.tests2.NameTest.nameForStrictMock":288,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":455,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":61,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":302,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":315,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":52,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":328,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":261,"org.easymock.tests2.UsageStrictMockTest.range":10,"org.easymock.tests2.UsageConstraintsTest.lessThan":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":432,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":385,"org.easymock.tests2.CaptureTest.testCaptureRightOne":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":361,"org.easymock.tests2.UsageConstraintsTest.testOr":39,"org.easymock.tests.UsageRangeTest.combination":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":299,"org.easymock.tests.UsageTest.wrongArguments":7,"org.easymock.tests2.MockBuilderTest.testWithConstructor":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":358,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":231,"org.easymock.tests.UsageVarargTest.varargShortAccepted":109,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":330,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":172,"org.easymock.tests2.UsageConstraintsTest.cmpTo":44,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":463,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":279,"org.easymock.tests2.CaptureTest.testCaptureFromStub":74,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":188,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":262,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":170,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":232,"org.easymock.tests2.CaptureTest.testCapture":451,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":121,"org.easymock.tests2.UsageConstraintsTest.constraints":34,"org.easymock.samples.ExampleTest.addAndChangeDocument":324,"org.easymock.tests.UsageStrictMockTest.testVerify":124,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":402,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":120,"org.easymock.tests2.CompareToTest.testGreateThan":450,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":98,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":69,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":457,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":20,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":224,"org.easymock.tests.LimitationsTest.abstractClass":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":21,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":390,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":104}}]
