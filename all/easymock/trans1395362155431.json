[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:380","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[13,14,15,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && ((((java.lang.String)(java.lang.Object)).indexOf(java.lang.String)) >= 0)","type":"CtReturnImpl"},"failures":[17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[24,25,26,8,27,28,29,30,31,32,33,34,35,36,9,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[53,54],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,31,1,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,53,93,94,95,54,96,97,98],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:81","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[118,119,120,121,122,123,124,125,126,127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[100,101,102,103,104,128,105,106,107,108,129,130,109,110,111,112,131,113,114,115,116,132,133,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[134,135,136,137],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[138,139,140,141,142,143,144,145,146,0,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,93,94,95,118,178,179,180,134,181,182,183,184,185,186,119,187,120,188,135,189,190,121,122,191,192,193,194,195,196,197,198,199,200,201,136,202,203,204,137,205,206,207,208,209,210,211,212,213,214,215,216,5,217,218,219,220,221,222,223,224,225,226,227,228],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[141,142,121,229],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[118,119,120,121,122,123,124,125,126,127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[263,264,265,24,62,8,27,28,29,266,31,32,267,268,269,9,270,38,39,4,271,272,273,17,274,275,134,188,135,190,96,46,276,277,47,48,278,279,193,136,203,280,281,282,50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[283,200],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[24,285,8,27,28,29,31,32,286,9,38,46,47,48,50],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[119,287,121,122],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[288,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[7,290,274,10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[291],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,292,293,294,65,66,67,68,69,70,71,31,1,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,53,295,296,297,93,94,95,54,96,97,98],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[298,26,27,28,29,30,31,32,9,37,38,39,45,46,47,48,299,300,301,302,49,50,51],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[59,292,293,294,65,67,68,69,70,71,31,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,53,98],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[303,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"value","methodName":"value"}},{"position":"org.easymock.internal.Range:36","failures":[138,139,140,100,141,142,101,305,306,307,308,309,310,311,312,313,314,315,316,317,99,12,318,319,320,321,322,143,144,145,146,0,147,148,149,150,55,56,57,58,59,60,323,324,325,326,327,328,263,264,265,24,252,253,254,255,256,329,257,258,259,260,261,262,330,151,331,332,333,334,335,336,337,61,338,339,340,25,62,26,8,27,341,63,28,29,266,342,64,292,293,294,65,343,66,67,68,69,70,71,344,152,153,154,155,156,157,345,158,159,160,161,162,163,346,164,347,348,165,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,30,31,32,374,375,376,377,378,379,267,380,381,382,383,384,166,167,168,169,170,171,172,173,268,385,386,387,388,389,1,72,390,33,34,391,174,392,393,35,394,175,395,36,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,396,397,398,399,400,401,53,402,403,286,295,296,297,404,405,406,407,269,408,9,37,270,38,39,409,410,411,412,284,413,40,414,415,41,416,417,418,419,420,421,422,423,2,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,3,4,440,441,442,271,272,443,444,273,445,446,447,176,448,449,450,177,42,451,93,94,95,54,452,453,17,454,455,456,457,458,459,18,13,460,461,462,19,463,14,464,274,465,466,467,468,469,470,471,472,473,15,20,102,103,104,128,105,43,106,107,108,129,130,109,474,475,275,476,477,110,111,112,131,113,44,114,115,116,132,133,117,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,118,496,178,288,497,289,498,499,500,501,502,503,504,179,180,134,181,182,183,184,185,186,119,187,505,120,188,135,189,190,96,283,45,46,276,277,506,97,507,47,48,278,279,121,122,191,508,509,510,511,512,513,514,515,516,192,193,517,194,195,196,197,518,198,199,200,201,136,202,203,204,137,205,206,207,208,519,520,209,210,521,522,98,280,523,299,300,301,302,281,524,49,282,50,51,525,211,212,526,213,527,214,215,216,5,217,528,218,219,220,221,529,222,223,224,225,226,227,228,530,531],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[72,431,438,522],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[100,101,102,103,104,105,107,108,109,110,111,112,113,115,116,117],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[329,338,340,476,44],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":454,"org.easymock.tests2.UsageTest.argumentsOrdered":48,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":62,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":445,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":426,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":277,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":100,"org.easymock.tests2.DelegateToTest.testReturnException":497,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":56,"org.easymock.tests.MockingTest.testPartialClassMocking":162,"org.easymock.tests.MockClassControlTest.testToString":168,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":523,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":528,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":73,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":215,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":298,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":495,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":251,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":123,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":388,"org.easymock.tests2.UsageTest.wrongArguments":46,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":117,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":406,"org.easymock.samples.ExampleTest.answerVsDelegate":308,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":175,"org.easymock.tests2.UsageConstraintsTest.testNull":457,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":348,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":194,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":173,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":273,"org.easymock.tests2.CaptureTest.testPrimitive":481,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":390,"org.easymock.tests.UsageTest.moreThanOneArgument":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":92,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":517,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":333,"org.easymock.tests.UsageTest.argumentsOrdered":29,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":315,"org.easymock.tests.UsageVarargTest.varargIntAccepted":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":369,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":179,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":449,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":130,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":373,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":235,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":44,"org.easymock.tests.ReplayStateInvalidUsageTest.times":259,"org.easymock.tests2.DependencyTest.testClassMocking":492,"org.easymock.tests2.AnswerTest.answer":508,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":433,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":504,"org.easymock.tests2.CaptureTest.testAnd":478,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":393,"org.easymock.tests2.UsageTest.strictResetToDefault":283,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":442,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":386,"org.easymock.tests2.DelegateToTest.testDelegate":500,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":12,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":88,"org.easymock.tests.LimitationsTest.mockFinalMethod":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":322,"org.easymock.tests2.DependencyTest.testClassMockingSupport":493,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":33,"org.easymock.tests2.CaptureTest.testCapture1_2446744":482,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":518,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":86,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":502,"org.easymock.tests.UsageThrowableTest.throwError":65,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":254,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":394,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":109,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":335,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":531,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":238,"org.easymock.samples.PartialClassMockTest.testGetArea":138,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":255,"org.easymock.tests.MockingTest.testInterfaceMocking":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":370,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":412,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":416,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":218,"org.easymock.tests2.UsageTest.niceToStrict":276,"org.easymock.tests2.ThreadingTest.testChangeDefault":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":184,"org.easymock.tests2.MockBuilderTest.testCreateMock":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":225,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":116,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":10,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":82,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":271,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":392,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":404,"org.easymock.tests.UsageOverloadedMethodTest.overloading":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":529,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":227,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":14,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":53,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":360,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":463,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":487,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":377,"org.easymock.tests.MockClassControlTest.testEquals":172,"org.easymock.tests2.EasyMockSupportClassTest.testAll":213,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":145,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":23,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":503,"org.easymock.tests2.CaptureTest.testCaptureAll":479,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":320,"org.easymock.tests.MockNameTest.defaultName":25,"org.easymock.tests2.UsageConstraintsTest.testMatches":464,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":334,"org.easymock.samples.ExampleTest.voteForRemovals":312,"org.easymock.tests.UsageVarargTest.allKinds":384,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":30,"org.easymock.samples.BasicClassMockTest.testPrintContent":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":321,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":70,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":281,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":499,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":60,"org.easymock.tests2.UsageConstraintsTest.greaterThan":465,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":127,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":527,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":385,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":203,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":239,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":158,"org.easymock.samples.ExampleTest.voteForRemoval":309,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":475,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":204,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":197,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":231,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":151,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":440,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":212,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":55,"org.easymock.tests2.CaptureTest.testCaptureFirst":491,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":441,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":279,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":356,"org.easymock.tests2.CaptureTest.testCapture2_2446744":490,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":476,"org.easymock.tests2.UsageTest.moreThanOneArgument":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":135,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":383,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":52,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":264,"org.easymock.tests.UsageExpectAndReturnTest.longType":352,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":318,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":91,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":470,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":396,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":89,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":331,"org.easymock.tests.UsageCallCountTest.tooManyCalls":265,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":357,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":133,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":69,"org.easymock.tests.MockingTest.testNiceClassMocking":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":206,"org.easymock.tests.MockingTest.testClassMocking":160,"org.easymock.tests2.UsageConstraintsTest.testContains":19,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":324,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":95,"org.easymock.tests2.UsageConstraintsTest.testFind":456,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":61,"org.easymock.tests.MockTypeTest.fromEasyMockClass":35,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":516,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":269,"org.easymock.tests.UsageExpectAndReturnTest.object":359,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":444,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":124,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":379,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":415,"org.easymock.tests.UsageTest.exactCallCountByLastCall":266,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":316,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":338,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":365,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":374,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":401,"org.easymock.tests.MockClassControlTest.testHashCode":171,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":103,"org.easymock.tests2.EasyMockSupportTest.testVerify":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":220,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":21,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":399,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":293,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":501,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":20,"org.easymock.tests.UsageVarargTest.varargCharAccepted":378,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":344,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":524,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":439,"org.easymock.tests2.UsageTest.openCallCountByLastCall":506,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":446,"org.easymock.tests.DefaultClassInstantiatorTest.object":152,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":292,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":40,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":285,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":221,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":131,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":102,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":170,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":136,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":237,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":79,"org.easymock.tests.ReplayStateInvalidCallsTest.times":243,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":366,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":295,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":244,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":169,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":228,"org.easymock.tests2.UsageTest.resumeIfFailure":278,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":174,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":58,"org.easymock.tests2.StubTest.stubWithReturnValue":98,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":119,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":471,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":358,"org.easymock.tests2.SerializationTest.testAllMockedMethod":178,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":432,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":291,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":11,"org.easymock.samples.SupportTest.voteForRemovals":306,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":85,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":438,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":509,"org.easymock.tests.UsageExpectAndThrowTest.object":83,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":340,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":468,"org.easymock.tests2.DelegateToTest.testWrongClass":498,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":397,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":398,"org.easymock.samples.ConstructorCalledMockTest.testTax":141,"org.easymock.tests.UsageStrictMockTest.range":38,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":42,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":443,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":186,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":211,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":261,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":405,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":6,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":233,"org.easymock.tests2.CaptureTest.testCaptureNone":486,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":284,"org.easymock.tests.UsageUnorderedTest.message":24,"org.easymock.tests.UsageVerifyTest.twoReturns":32,"org.easymock.tests.UsageVarargTest.varargByteAccepted":382,"org.easymock.tests2.ThreadingTest.testThreadSafe":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":223,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":328,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":139,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":41,"org.easymock.tests2.CaptureTest.testCapture_2617107":480,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":72,"org.easymock.tests2.UsageConstraintsTest.any":461,"org.easymock.tests2.StubTest.stub":522,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":258,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":57,"org.easymock.tests.UsageExpectAndThrowTest.longType":76,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":156,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":257,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":282,"org.easymock.tests2.SerializationTest.testClass":118,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":43,"org.easymock.tests.LimitationsTest.mockNativeMethod":149,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":146,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":112,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":249,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":525,"org.easymock.tests2.NameTest.nameForMocksControl":302,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":113,"org.easymock.tests2.MockedExceptionTest.testMockedException":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":214,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":63,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":515,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":77,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":192,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":187,"org.easymock.tests.MockingTest.testNicePartialClassMocking":163,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":196,"org.easymock.tests2.CaptureTest.testCaptureLast":485,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":110,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":34,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":210,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":248,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":469,"org.easymock.tests.MockingTest.testTwoMocks":161,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":245,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":521,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":81,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":47,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":473,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":304,"org.easymock.samples.ExampleTest.removeNonExistingDocument":313,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":115,"org.easymock.tests.UsageStrictMockTest.differentMethods":39,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":104,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":154,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":275,"org.easymock.tests2.MockBuilderTest.testCreateMockString":190,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":166,"org.easymock.tests.UsageExpectAndThrowTest.floatType":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":216,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":526,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":511,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":191,"org.easymock.tests.UsageVerifyTest.twoThrows":31,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":222,"org.easymock.samples.ExampleTest.voteAgainstRemoval":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":411,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":202,"org.easymock.tests.LimitationsTest.privateConstructor":148,"org.easymock.tests2.UsageConstraintsTest.testNotNull":472,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":71,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":93,"org.easymock.tests2.UsageTest.defaultResetToNice":507,"org.easymock.samples.ExampleTest.voteAgainstRemovals":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":364,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":111,"org.easymock.tests.UsageVarargTest.differentLength":267,"org.easymock.tests2.CallbackTest.callback":280,"org.easymock.tests2.UsageConstraintsTest.equals":455,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":199,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":290,"org.easymock.tests.UsageTest.openCallCountByLastCall":341,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":452,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":1,"org.easymock.tests.UsageCallCountTest.tooFewCalls":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":208,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":407,"org.easymock.tests.UsageThrowableTest.throwCheckedException":68,"org.easymock.tests.MockingTest.testStrictClassMocking":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":7,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":114,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":207,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":260,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":520,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":513,"org.easymock.tests.ObjectMethodsTest.testHashCode":414,"org.easymock.tests2.CompareToTest.testGreateOrEqual":16,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":477,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":247,"org.easymock.tests2.NameTest.nameForNiceMock":301,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":242,"org.easymock.tests2.DependencyTest.testInterfaceMocking":494,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":125,"org.easymock.samples.ExampleTest.addDocument":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":530,"org.easymock.tests2.DelegateToTest.testStubDelegate":289,"org.easymock.tests2.AnswerTest.stubAnswer":512,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":37,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":505,"org.easymock.tests.UsageVarargTest.varargLongAccepted":381,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.floatType":351,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":121,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":142,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":466,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":402,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":129,"org.easymock.tests.UsageThrowableTest.noUpperLimit":343,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":453,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":176,"org.easymock.tests2.SerializationTest.test":496,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":483,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":153,"org.easymock.tests2.UsageConstraintsTest.testSame":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":350,"org.easymock.samples.SupportTest.addDocument":305,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":519,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":232,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":5,"org.easymock.tests.GenericTest.testPackageScope":144,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":108,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":347,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":230,"org.easymock.tests2.NameTest.nameForMock":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":361,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":189,"org.easymock.tests2.UsageStrictMockTest.differentMethods":51,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":87,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":413,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":387,"org.easymock.tests2.MockedExceptionTest.testRealException":54,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":36,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":429,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":389,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":262,"org.easymock.tests2.NameTest.nameForStrictMock":300,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":514,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":195,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":177,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":467,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":155,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":134,"org.easymock.tests2.UsageStrictMockTest.range":50,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":236,"org.easymock.tests2.UsageConstraintsTest.lessThan":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":424,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":126,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":4,"org.easymock.tests2.CaptureTest.testCaptureRightOne":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":219,"org.easymock.tests2.UsageConstraintsTest.testOr":459,"org.easymock.tests.UsageRangeTest.combination":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":193,"org.easymock.tests.UsageTest.wrongArguments":27,"org.easymock.tests2.MockBuilderTest.testWithConstructor":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":217,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":362,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":157,"org.easymock.tests.UsageVarargTest.varargShortAccepted":380,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":263,"org.easymock.tests2.UsageConstraintsTest.cmpTo":462,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":250,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":510,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":420,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":97,"org.easymock.tests2.CaptureTest.testCaptureFromStub":489,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":253,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":181,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":246,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":327,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":363,"org.easymock.tests2.UsageConstraintsTest.constraints":17,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":270,"org.easymock.samples.ExampleTest.addAndChangeDocument":314,"org.easymock.tests.UsageStrictMockTest.testVerify":410,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":101,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":408,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":319,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":484,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":371,"org.easymock.tests.LimitationsTest.abstractClass":147,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":355,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":272,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":375}}]
