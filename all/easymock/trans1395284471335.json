[{"position":"org.easymock.internal.ReflectionUtils:184","failures":[0,1,2,3,4,5,6,7,8],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[46,9,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,10,70,71,72,73,74,75,76,77,78,79,80,81,82,11,83,12,13,14,15,16,17,84,85,86,18,87,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,88,89,90,40,91,92,93,94,95,96,97,98,99,100,101,102,103,104,41,105,106,42,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,6,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,43,196,197,198,199,200,201,44,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,45,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[147],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[46,9,47,72,75,76,257,88,107,137,140,141,197],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:85","sourceCode":"return ((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","type":"CtReturnImpl"},"failures":[46,9,47,48,49,50,53,54,55,56,258,57,58,59,60,61,62,63,64,65,66,67,68,69,10,70,72,73,74,75,76,77,78,79,80,81,259,260,261,262,263,82,11,83,12,13,14,15,16,17,84,85,86,18,87,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,88,90,40,93,94,95,96,97,98,99,100,101,102,103,104,264,265,266,267,41,268,105,106,42,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,6,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,269,270,193,271,194,195,43,196,197,199,200,201,44,204,205,206,207,208,272,209,210,211,212,213,214,215,216,217,218,219,273,220,221,222,45,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,274,275,247,248,249,250,251,252,253,254,255],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[146,147,149,151,152,276,163,168,209,211,219],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[277,278],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[146,147,151,152,276,163,209,211,219],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[256,279,280,281,282],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[283,284,71,285,286,287],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[46,9,47,57,288,289,71,72,74,75,290,291,292,88,285,89,91,92,293,294,128,135,137,139,140,197,198,202,203,295],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[296,48,49,50,82,100,101,297,298,299,104,300,301,302,133,6,143,183,184,185,186,188,189,303,304,305,306,190,307,191,192,308,309,310,311,193,228,229,230,231,232,233,235,236,237,312,238,313,314,239,315,244,245,274,274,275,275,247],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[162],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[316],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[46,47,72,39,90,40,93,137,43,201,44,205,206],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[160,200,236],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[147],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[46,9,47,72,75,76,88,317,94,95,137,140,141,197,318,319,320,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[46,9,47,72,75,76,88,317,94,95,137,140,141,197,318,319,320,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[46,9,47,57,283,322,284,323,324,325,71,72,74,75,291,292,88,285,89,91,92,326,327,107,328,329,286,330,331,332,333,334,335,287,336,337,137,139,140,197,198,202,203],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[338],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[9,339,10,18,19,20,23,25,26,27,28,30,31,32,33,35,36,37,38,39,40,41,43,44,45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[6,142,143],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[340],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[341,342,274,274,275,275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:509","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[133,5,6,185,189,343,344,345,7,8,341,346,347,348,349,350,351,352,228,353,354,229,355,356,357,358,359,360,361,362,363,230,364,365,366,367,368,231,369,370,274,275],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[371,6,142,143],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[372],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[46,51,52,53,373,10,74,75,83,90,40,94,139,140,145,146,148,150,151,156,159,162,169,201,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":147,"org.easymock.tests2.UsageTest.argumentsOrdered":203,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":267,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":200,"org.easymock.tests2.StubTest.stubWithReturnValue":45,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":7,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":246,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":117,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":167,"org.easymock.tests2.SerializationTest.testAllMockedMethod":143,"org.easymock.tests2.DelegateToTest.testReturnException":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":265,"org.easymock.tests.MockingTest.testPartialClassMocking":48,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":287,"org.easymock.samples.SupportTest.voteForRemovals":243,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":371,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":19,"org.easymock.tests.UsageExpectAndThrowTest.object":29,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":241,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":0,"org.easymock.tests2.DelegateToTest.testWrongClass":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":102,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":103,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":153,"org.easymock.tests2.UsageTest.wrongArguments":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":84,"org.easymock.samples.ConstructorCalledMockTest.testTax":274,"org.easymock.tests.UsageStrictMockTest.range":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":295,"org.easymock.samples.ExampleTest.answerVsDelegate":249,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":183,"org.easymock.tests2.UsageConstraintsTest.testNull":149,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":30,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":179,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":191,"org.easymock.tests2.CaptureTest.testPrimitive":212,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":350,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":91,"org.easymock.tests.UsageTest.moreThanOneArgument":88,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":38,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":234,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":261,"org.easymock.tests2.CaptureTest.testCaptureNone":217,"org.easymock.tests.UsageUnorderedTest.message":57,"org.easymock.tests.UsageVerifyTest.twoReturns":47,"org.easymock.tests.UsageVarargTest.varargByteAccepted":65,"org.easymock.tests2.ThreadingTest.testThreadSafe":223,"org.easymock.tests.UsageTest.argumentsOrdered":92,"org.easymock.tests.UsageVarargTest.varargIntAccepted":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":364,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":97,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":289,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":244,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":336,"org.easymock.tests2.CaptureTest.testCapture_2617107":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":77,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":337,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":18,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":307,"org.easymock.tests2.UsageConstraintsTest.any":154,"org.easymock.tests2.StubTest.stub":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":266,"org.easymock.tests.UsageExpectAndThrowTest.longType":22,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":332,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":138,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests.LimitationsTest.mockNativeMethod":104,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":135,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":297,"org.easymock.tests2.AnswerTest.answer":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":127,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":276,"org.easymock.tests2.CaptureTest.testAnd":209,"org.easymock.tests2.UsageTest.strictResetToDefault":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":345,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":313,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":141,"org.easymock.tests2.NameTest.nameForMocksControl":321,"org.easymock.tests2.MockedExceptionTest.testMockedException":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":354,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":175,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":40,"org.easymock.tests2.DelegateToTest.testDelegate":132,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":23,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":232,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":192,"org.easymock.tests.MockingTest.testNicePartialClassMocking":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":34,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":237,"org.easymock.tests2.CompareToTest.testNotComparable":316,"org.easymock.tests2.CompareToTest.testCompareEqual":280,"org.easymock.tests2.CaptureTest.testCaptureLast":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":41,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":292,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":189,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":165,"org.easymock.tests.MockingTest.testTwoMocks":296,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":291,"org.easymock.tests2.CaptureTest.testCapture1_2446744":213,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":343,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":27,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":202,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":169,"org.easymock.tests.UsageThrowableTest.throwError":11,"org.easymock.tests.UsageStrictMockTest.differentMethods":75,"org.easymock.tests2.ConstraintsToStringTest.andToString":335,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":225,"org.easymock.tests2.MockBuilderTest.testCreateMockString":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":263,"org.easymock.tests.UsageExpectAndThrowTest.floatType":21,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":352,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":207,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":230,"org.easymock.samples.PartialClassMockTest.testGetArea":247,"org.easymock.tests2.CompareToTest.testLessOrEqual":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":78,"org.easymock.samples.ExampleTest.voteAgainstRemoval":251,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":338,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":359,"org.easymock.tests2.UsageTest.niceToStrict":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":20,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":348,"org.easymock.tests2.UsageConstraintsTest.testNotNull":168,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":17,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":190,"org.easymock.tests2.MockBuilderTest.testCreateMock":308,"org.easymock.samples.ExampleTest.voteAgainstRemovals":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":366,"org.easymock.tests2.CallbackTest.callback":134,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":342,"org.easymock.tests.UsageTest.openCallCountByLastCall":90,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":286,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":28,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":176,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":144,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":86,"org.easymock.tests.UsageCallCountTest.tooFewCalls":95,"org.easymock.tests.UsageOverloadedMethodTest.overloading":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":363,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":42,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":158,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":68,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":119,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":186,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":157,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":218,"org.easymock.tests.UsageThrowableTest.throwCheckedException":14,"org.easymock.tests2.EasyMockSupportClassTest.testAll":228,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":101,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":334,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":36,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":301,"org.easymock.tests2.CaptureTest.testCaptureAll":210,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":258,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":188,"org.easymock.tests.MockNameTest.defaultName":290,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":185,"org.easymock.tests2.UsageConstraintsTest.testMatches":159,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":187,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":262,"org.easymock.tests2.CompareToTest.testGreateOrEqual":281,"org.easymock.samples.ExampleTest.voteForRemovals":253,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":3,"org.easymock.tests2.NameTest.nameForNiceMock":320,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":227,"org.easymock.tests.UsageVarargTest.allKinds":67,"org.easymock.tests2.DependencyTest.testInterfaceMocking":240,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":46,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":2,"org.easymock.samples.BasicClassMockTest.testPrintContent":245,"org.easymock.samples.ExampleTest.addDocument":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":369,"org.easymock.tests2.DelegateToTest.testStubDelegate":130,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":16,"org.easymock.tests2.AnswerTest.stubAnswer":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":268,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":72,"org.easymock.tests2.UsageConstraintsTest.greaterThan":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":353,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":315,"org.easymock.tests.UsageVarargTest.varargLongAccepted":64,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":76,"org.easymock.samples.ExampleTest.voteForRemoval":250,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":224,"org.easymock.tests.UsageExpectAndReturnTest.floatType":110,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":126,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":133,"org.easymock.tests2.ConstraintsToStringTest.orToString":329,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":275,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.UsageThrowableTest.noUpperLimit":83,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":162,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":82,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":145,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":214,"org.easymock.tests2.SerializationTest.test":142,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":173,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":109,"org.easymock.tests2.UsageConstraintsTest.testSame":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":351,"org.easymock.samples.SupportTest.addDocument":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":264,"org.easymock.tests2.CaptureTest.testCaptureFirst":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":174,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":205,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":356,"org.easymock.tests.GenericTest.testPackageScope":100,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":226,"org.easymock.tests2.CaptureTest.testCapture2_2446744":220,"org.easymock.tests2.UsageTest.moreThanOneArgument":197,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":309,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":66,"org.easymock.tests.GenericTest.testBridgedEquals":278,"org.easymock.tests2.NameTest.nameForMock":318,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":98,"org.easymock.tests.UsageExpectAndReturnTest.longType":111,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":171,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":310,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":120,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":35,"org.easymock.tests2.UsageStrictMockTest.differentMethods":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":259,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":112,"org.easymock.tests.UsageCallCountTest.tooManyCalls":99,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":33,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":55,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":367,"org.easymock.tests2.MockedExceptionTest.testRealException":271,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":116,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":323,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":24,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":137,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":85,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":15,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":184,"org.easymock.tests2.NameTest.nameForStrictMock":319,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":304,"org.easymock.tests2.UsageConstraintsTest.testContains":156,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":193,"org.easymock.tests2.UsageConstraintsTest.testFind":148,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":10,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":194,"org.easymock.tests.MockTypeTest.fromEasyMockClass":293,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":236,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":195,"org.easymock.tests.UsageExpectAndReturnTest.object":118,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":163,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":238,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":305,"org.easymock.tests2.UsageStrictMockTest.range":139,"org.easymock.tests2.UsageConstraintsTest.lessThan":170,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":178,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":1,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":349,"org.easymock.tests.UsageTest.exactCallCountByLastCall":93,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":56,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":360,"org.easymock.tests2.CaptureTest.testCaptureRightOne":219,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":51,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":324,"org.easymock.tests2.UsageConstraintsTest.testOr":151,"org.easymock.tests.UsageRangeTest.combination":53,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":233,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":58,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":124,"org.easymock.tests.UsageTest.wrongArguments":89,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":106,"org.easymock.tests2.MockBuilderTest.testWithConstructor":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":357,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":300,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":113,"org.easymock.tests2.EasyMockSupportTest.testVerify":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":373,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":361,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":331,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":52,"org.easymock.tests.UsageVarargTest.varargShortAccepted":63,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":105,"org.easymock.tests2.UsageConstraintsTest.cmpTo":155,"org.easymock.tests.UsageVarargTest.varargCharAccepted":61,"org.easymock.tests2.CompareToTest.testLessThan":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":339,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":136,"org.easymock.tests2.UsageTest.openCallCountByLastCall":201,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":44,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":181,"org.easymock.tests2.CaptureTest.testCaptureFromStub":273,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":306,"org.easymock.tests.UsageTest.unexpectedCallWithArray":285,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":288,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":26,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":13,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":96,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":341,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":122,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":314,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":73,"org.easymock.tests2.UsageConstraintsTest.constraints":146,"org.easymock.samples.ExampleTest.addAndChangeDocument":254,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":25,"org.easymock.tests2.ConstraintsToStringTest.notToString":330,"org.easymock.tests.CapturesMatcherTest.test":340,"org.easymock.tests2.ConstraintsToStringTest.containsToString":372,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":125,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":255,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":231,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":70,"org.easymock.tests2.CompareToTest.testGreateThan":279,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":215,"org.easymock.tests2.UsageTest.resumeIfFailure":204,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":79,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":298,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":80,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":107,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":177}}]
