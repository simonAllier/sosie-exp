[{"position":"org.easymock.internal.MockBuilder:229","failures":[0],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,1,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,0,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[488,388,389,390],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[9,10,13,14,489,105,112,113,219,222,271,277,278,459],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[76,330],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[281,288,308,317,357,0],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[8,9,10,11,13,14,490,491,492,493,494,495,489,30,60,93,94,95,96,97,98,102,103,105,111,112,113,218,219,220,222,223,224,225,496,497,498,499,500,501,502,503,504,505,506,268,270,271,273,277,278,281,303,304,314,315,321,337,375,396,400,403,456,457,458,459,460,461,462],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[507,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,286,287,288,289,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,1,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,416,417,418,419,420,421,422,423,424,0,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[407],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,1,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,0,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[285],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:60","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[329,330],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"message"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[134,137],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[366],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,1,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,0,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[320,321,323,324,325,326,327,328,329,330,339,340,344,345,474,475,476,477,484,485],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[7,8,11,12,33,34,37,39,40,41,42,44,45,46,47,49,50,51,52,68,88,89,90,91,101,105,111,114,115,118,120,121,122,123,125,126,127,128,130,131,132,133,135,222,223,261,270,273,274,275,279,318,319,320,323,324,325,326,332,333,334,335,337,338,345,346,361,363,364,365,366,369,387,459,460,462,475,476,478,479,481,482,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.ConstructorArgs:54","failures":[262,263,282,285,290,293,508,296,509,510,388,391,392,419,420,421,422,423,424,0,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,467,472,473],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[8,9,10,13,14,490,492,495,219,497,502,504,506,270,271,277,278],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[328,334,346,511],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[64,76,77,105,106,107,108,109,110,156,219,220,226,227,246,247,248,249,250,310,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,361,363,367,457,464,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[512,513,514],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[488,388,389,390],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[9,490,492,219,497,504],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":321,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":7,"org.easymock.tests2.UsageTest.argumentsOrdered":278,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":404,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":193,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":273,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":253,"org.easymock.tests2.DelegateToTest.testReturnException":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":153,"org.easymock.tests.MockingTest.testPartialClassMocking":81,"org.easymock.tests.MockClassControlTest.testToString":240,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":407,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":33,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":0,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":301,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":106,"org.easymock.tests2.UsageTest.wrongArguments":271,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":454,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":209,"org.easymock.samples.ExampleTest.answerVsDelegate":255,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":24,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":86,"org.easymock.tests2.UsageConstraintsTest.testNull":324,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":305,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":403,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":245,"org.easymock.tests2.CaptureTest.testPrimitive":477,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":110,"org.easymock.tests.UsageTest.moreThanOneArgument":8,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":52,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":4,"org.easymock.tests.UsageTest.argumentsOrdered":14,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":232,"org.easymock.tests.UsageVarargTest.varargIntAccepted":55,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":246,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":281,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":380,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":250,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":500,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":448,"org.easymock.tests.ReplayStateInvalidUsageTest.times":170,"org.easymock.tests2.DependencyTest.testClassMocking":298,"org.easymock.tests2.AnswerTest.answer":347,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":356,"org.easymock.tests2.CaptureTest.testAnd":474,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":21,"org.easymock.tests2.UsageTest.strictResetToDefault":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":285,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":398,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":90,"org.easymock.tests2.DelegateToTest.testDelegate":387,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":236,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":48,"org.easymock.tests.LimitationsTest.mockFinalMethod":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":146,"org.easymock.tests2.DependencyTest.testClassMockingSupport":299,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":102,"org.easymock.tests2.CaptureTest.testCapture1_2446744":478,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":354,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":164,"org.easymock.tests.UsageThrowableTest.throwError":134,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":23,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":237,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":6,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":442,"org.easymock.samples.PartialClassMockTest.testGetArea":252,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":165,"org.easymock.tests.MockingTest.testInterfaceMocking":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":247,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":429,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":34,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":216,"org.easymock.tests2.UsageTest.niceToStrict":272,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":183,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":287,"org.easymock.tests2.MockBuilderTest.testCreateMock":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":451,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":42,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":399,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":20,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":207,"org.easymock.tests.UsageOverloadedMethodTest.overloading":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":433,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":125,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":99,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":333,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":483,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":56,"org.easymock.tests2.EasyMockSupportClassTest.testAll":422,"org.easymock.tests.MockClassControlTest.testEquals":244,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":149,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":50,"org.easymock.tests2.CaptureTest.testCaptureAll":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":355,"org.easymock.tests.MockNameTest.defaultName":75,"org.easymock.tests2.UsageConstraintsTest.testMatches":335,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":5,"org.easymock.samples.ExampleTest.voteForRemovals":259,"org.easymock.tests.UsageVarargTest.allKinds":64,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":145,"org.easymock.samples.BasicClassMockTest.testPrintContent":265,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":140,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":455,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":377,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":181,"org.easymock.tests2.UsageConstraintsTest.greaterThan":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":89,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":315,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":182,"org.easymock.samples.ExampleTest.voteForRemoval":256,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":316,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":365,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":25,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":308,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":65,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":268,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":396,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":152,"org.easymock.tests2.CaptureTest.testCaptureFirst":487,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":397,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":280,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":121,"org.easymock.tests2.CaptureTest.testCapture2_2446744":486,"org.easymock.tests2.UsageTest.moreThanOneArgument":270,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":201,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":295,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":63,"org.easymock.tests.GenericTest.testBridgedEquals":151,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":73,"org.easymock.tests.UsageExpectAndReturnTest.longType":117,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":394,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":51,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":231,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":49,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":2,"org.easymock.tests.UsageCallCountTest.tooManyCalls":74,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":491,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":438,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":139,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":466,"org.easymock.tests.MockingTest.testNiceClassMocking":87,"org.easymock.tests.MockingTest.testClassMocking":79,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":67,"org.easymock.tests2.UsageConstraintsTest.testContains":332,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":359,"org.easymock.tests2.UsageConstraintsTest.testFind":323,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":101,"org.easymock.tests.MockTypeTest.fromEasyMockClass":22,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":217,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":363,"org.easymock.tests.UsageExpectAndReturnTest.object":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":402,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":58,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":214,"org.easymock.tests.UsageTest.exactCallCountByLastCall":15,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":188,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":16,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":233,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":495,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":130,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":53,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":94,"org.easymock.tests.MockClassControlTest.testHashCode":243,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":371,"org.easymock.tests2.EasyMockSupportTest.testVerify":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":431,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":499,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":31,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":92,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":353,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":464,"org.easymock.tests.UsageVarargTest.varargCharAccepted":57,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":174,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":206,"org.easymock.tests2.UsageTest.openCallCountByLastCall":274,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":513,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":405,"org.easymock.tests.DefaultClassInstantiatorTest.object":175,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":30,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":212,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":432,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":40,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":370,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":242,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":313,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":39,"org.easymock.tests.CapturesMatcherTest.test":507,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":27,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":440,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":241,"org.easymock.tests2.UsageTest.resumeIfFailure":279,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":19,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":155,"org.easymock.tests2.StubTest.stubWithReturnValue":463,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":290,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":123,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":343,"org.easymock.tests2.SerializationTest.testAllMockedMethod":390,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":199,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":504,"org.easymock.samples.SupportTest.voteForRemovals":267,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":45,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":488,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":205,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":348,"org.easymock.tests.UsageExpectAndThrowTest.object":43,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":18,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":340,"org.easymock.tests2.DelegateToTest.testWrongClass":385,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":226,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":227,"org.easymock.tests.UsageStrictMockTest.range":222,"org.easymock.samples.ConstructorCalledMockTest.testTax":262,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":417,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":401,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":465,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":44,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":419,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":172,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":208,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":490,"org.easymock.tests2.CaptureTest.testCaptureNone":482,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":230,"org.easymock.tests.UsageUnorderedTest.message":105,"org.easymock.tests.UsageVerifyTest.twoReturns":113,"org.easymock.tests.UsageVarargTest.varargByteAccepted":62,"org.easymock.tests2.ThreadingTest.testThreadSafe":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":435,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":71,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":215,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":264,"org.easymock.tests2.CaptureTest.testCapture_2617107":476,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":506,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":203,"org.easymock.tests2.UsageConstraintsTest.any":330,"org.easymock.tests2.StubTest.stub":462,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":154,"org.easymock.tests.UsageExpectAndThrowTest.longType":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":204,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":179,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":168,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":458,"org.easymock.tests2.SerializationTest.testClass":388,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":375,"org.easymock.tests.LimitationsTest.mockNativeMethod":160,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":150,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":133,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":445,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":461,"org.easymock.tests2.NameTest.nameForMocksControl":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":447,"org.easymock.tests2.MockedExceptionTest.testMockedException":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":424,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":12,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":37,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":84,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":362,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":302,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":291,"org.easymock.tests.MockingTest.testNicePartialClassMocking":82,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":307,"org.easymock.tests2.CaptureTest.testCaptureLast":481,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":443,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":103,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":472,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":327,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":341,"org.easymock.tests.MockingTest.testTwoMocks":80,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":41,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":277,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":345,"org.easymock.samples.ExampleTest.removeNonExistingDocument":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":450,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":166,"org.easymock.tests.UsageStrictMockTest.differentMethods":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":372,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":177,"org.easymock.tests2.ConstraintsToStringTest.andToString":503,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":366,"org.easymock.tests2.MockBuilderTest.testCreateMockString":297,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":425,"org.easymock.tests.UsageExpectAndThrowTest.floatType":35,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":421,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":393,"org.easymock.tests.UsageVerifyTest.twoThrows":112,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":434,"org.easymock.samples.ExampleTest.voteAgainstRemoval":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":194,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":228,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":314,"org.easymock.tests.LimitationsTest.privateConstructor":159,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":510,"org.easymock.tests2.UsageConstraintsTest.testNotNull":344,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":141,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":357,"org.easymock.tests2.UsageTest.defaultResetToNice":276,"org.easymock.samples.ExampleTest.voteAgainstRemovals":254,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":195,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":444,"org.easymock.tests.UsageVarargTest.differentLength":59,"org.easymock.tests2.CallbackTest.callback":369,"org.easymock.tests2.UsageConstraintsTest.equals":322,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":493,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":311,"org.easymock.tests.UsageTest.openCallCountByLastCall":11,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":108,"org.easymock.tests.UsageCallCountTest.tooFewCalls":69,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":468,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":210,"org.easymock.tests.UsageThrowableTest.throwCheckedException":138,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":492,"org.easymock.tests.MockingTest.testStrictClassMocking":78,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":471,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":77,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":467,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":449,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":171,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":470,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":352,"org.easymock.tests2.CompareToTest.testGreateOrEqual":511,"org.easymock.tests.ObjectMethodsTest.testHashCode":213,"org.easymock.tests2.NameTest.nameForNiceMock":410,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":368,"org.easymock.tests2.DependencyTest.testInterfaceMocking":300,"org.easymock.samples.ExampleTest.addDocument":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.DelegateToTest.testStubDelegate":384,"org.easymock.tests2.AnswerTest.stubAnswer":351,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":220,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":292,"org.easymock.tests.UsageVarargTest.varargLongAccepted":61,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":192,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":132,"org.easymock.tests.UsageExpectAndReturnTest.floatType":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":391,"org.easymock.tests2.ConstraintsToStringTest.orToString":496,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":263,"org.easymock.tests.UsageThrowableTest.noUpperLimit":135,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":96,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":379,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":319,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":412,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":479,"org.easymock.tests2.SerializationTest.test":389,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":115,"org.easymock.tests2.UsageConstraintsTest.testSame":325,"org.easymock.samples.SupportTest.addDocument":266,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":469,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":426,"org.easymock.tests.GenericTest.testPackageScope":148,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":187,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":378,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":85,"org.easymock.tests2.NameTest.nameForMock":408,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":126,"org.easymock.tests2.UsageStrictMockTest.differentMethods":460,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":296,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":47,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":91,"org.easymock.tests2.MockedExceptionTest.testRealException":360,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":197,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":494,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":196,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":173,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":107,"org.easymock.tests2.NameTest.nameForStrictMock":409,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":514,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":361,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":306,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":416,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":178,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":339,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":283,"org.easymock.tests2.UsageStrictMockTest.range":459,"org.easymock.tests2.UsageConstraintsTest.lessThan":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":374,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":191,"org.easymock.tests2.CaptureTest.testCaptureRightOne":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":430,"org.easymock.tests2.UsageConstraintsTest.testOr":326,"org.easymock.tests.UsageRangeTest.combination":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":303,"org.easymock.tests.UsageTest.wrongArguments":10,"org.easymock.tests2.MockBuilderTest.testWithConstructor":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":427,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":127,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":180,"org.easymock.tests.UsageVarargTest.varargShortAccepted":60,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":72,"org.easymock.tests2.UsageConstraintsTest.cmpTo":331,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":186,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":275,"org.easymock.tests2.CaptureTest.testCaptureFromStub":485,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":163,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":284,"org.easymock.tests.UsageTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":219,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":70,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":508,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":128,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":221,"org.easymock.tests2.UsageConstraintsTest.constraints":320,"org.easymock.samples.ExampleTest.addAndChangeDocument":261,"org.easymock.tests2.ConstraintsToStringTest.notToString":498,"org.easymock.tests.UsageStrictMockTest.testVerify":225,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":251,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":143,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":248,"org.easymock.tests.LimitationsTest.abstractClass":158,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":120,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":400,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":54}}]
