[{"position":"org.easymock.internal.LastControl:94","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:48","sourceCode":"for (final java.util.Iterator<org.easymock.IArgumentMatcher> java.util.Iterator<org.easymock.IArgumentMatcher> = java.util.List<org.easymock.IArgumentMatcher>.iterator() ; java.util.Iterator<org.easymock.IArgumentMatcher>.hasNext() ; ) {\n    java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer);\n    if (java.util.Iterator<org.easymock.IArgumentMatcher>.hasNext()) {\n        java.lang.StringBuffer.append(\", \");\n    } \n}","type":"CtForImpl"},"failures":[20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[21,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[24,25,26,27,28,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"i","java.lang.Integer.MAX_VALUE":"i"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[32,33],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[34,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[36,37,38,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[41,42,43,44],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[45,46,41,47,48,0,1,2,3,4,5,6,7,8,9,49,50,51,42,52,53,54,55,10,11,43,56,57,12,13,44,58,59,14,15,16,17,60,61,62,63,64,65,18,19,66,67,68,69,70,71,72,73,74,75,76,35,77,78,79,80,81,82,83,84,85],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[87,88,32,29,89,90,91,92,93,94,95,96,97,98,30,99,100,101,102,102,103,103,104,105,106],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[107],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[108,109,110,97,111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[112],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[113,114,111,115,116,117,118,69,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,79,80,145,146,147,148,82,149,150],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[94,152,153],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[154,155,156,157,158,108,32,109,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,94,152,153,174,175,176,177,178,45,36,96,98,21,179,180,181,182,46,38,183,184,185,186,187,188,189,47,48,0,1,2,3,4,5,6,7,9,49,50,51,42,52,53,54,55,10,11,43,57,12,13,44,58,59,190,100,101,191,192,193,194,195,196,14,15,16,17,61,62,63,64,65,18,67,197,198,199,200,22,201,202,203,204,205,206,207,111,115,116,117,86,118,208,209,210,211,102,103,212,104,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,68,231,232,233,234,235,236,237,70,71,72,73,74,238,239,240,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,241,140,242,243,244,245,246,76,40,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,77,78,81,274,145,146,147,148,82,149,275,276,277,278,279,280,281,282,283,284,150,285,286,287,83,84,288,289,290,291,292,293,294,295,296,85],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:61","sourceCode":"org.easymock.internal.MocksBehavior.lastBehaviorList().addExpected(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result, org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[154,155,156,157,158,298,32,159,160,299,161,162,163,164,165,166,167,168,169,170,171,172,173,94,152,153,174,300,175,176,177,178,45,301,96,302,98,21,179,180,303,181,304,182,46,305,37,38,183,113,184,185,306,186,187,307,114,188,308,309,189,310,47,48,0,1,2,3,4,5,6,7,8,9,49,50,51,42,52,53,54,55,10,11,43,56,57,12,13,44,58,59,190,100,101,191,192,193,194,195,311,312,196,14,15,16,17,60,61,62,63,64,65,18,66,67,22,201,202,203,204,205,206,207,116,86,118,208,209,210,211,212,104,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,313,314,68,315,316,119,237,70,71,72,73,74,238,239,240,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,317,241,140,318,319,320,141,142,242,243,244,321,246,75,76,322,39,40,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,143,269,323,324,144,325,326,327,35,270,271,272,273,77,78,79,80,81,274,328,329,82,330,284,150,285,286,287,83,84,288,289,290,291,292,331,293,294,295,296,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:173","failures":[180],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[332,333,334,335,336,337,338],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[70,281],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[24,25,26,297,112,29,90,94,98,30],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[339,311,340],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[245],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[341,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[117,119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests2.UsageTest.argumentsOrdered":309,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":143,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":148,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":187,"org.easymock.tests2.StubTest.stubWithReturnValue":118,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":29,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":258,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":212,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":57,"org.easymock.tests2.SerializationTest.testAllMockedMethod":153,"org.easymock.tests2.DelegateToTest.testReturnException":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":146,"org.easymock.tests.MockingTest.testPartialClassMocking":242,"org.easymock.samples.SupportTest.voteForRemovals":215,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":132,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":120,"org.easymock.tests.UsageExpectAndThrowTest.object":130,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":193,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":11,"org.easymock.tests2.DelegateToTest.testWrongClass":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":24,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":83,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":84,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":7,"org.easymock.tests2.UsageTest.wrongArguments":306,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":77,"org.easymock.tests.UsageStrictMockTest.range":39,"org.easymock.samples.ConstructorCalledMockTest.testTax":102,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":277,"org.easymock.samples.ExampleTest.answerVsDelegate":217,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":168,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":201,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":131,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":176,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":159,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":170,"org.easymock.tests2.CaptureTest.testPrimitive":17,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":81,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":325,"org.easymock.tests.UsageTest.moreThanOneArgument":269,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":139,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":276,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":233,"org.easymock.tests2.CaptureTest.testCaptureNone":64,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":31,"org.easymock.tests.UsageUnorderedTest.message":35,"org.easymock.tests.UsageVerifyTest.twoReturns":287,"org.easymock.tests.UsageVarargTest.varargByteAccepted":295,"org.easymock.tests2.ThreadingTest.testThreadSafe":194,"org.easymock.tests.UsageTest.argumentsOrdered":326,"org.easymock.tests.UsageVarargTest.varargIntAccepted":290,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":230,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":70,"org.easymock.tests2.CaptureTest.testCapture_2617107":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":28,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":108,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":80,"org.easymock.tests2.UsageConstraintsTest.any":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":109,"org.easymock.tests2.StubTest.stub":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":74,"org.easymock.tests.UsageExpectAndThrowTest.longType":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":147,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":305,"org.easymock.tests2.SerializationTest.testClass":94,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":21,"org.easymock.tests.LimitationsTest.mockNativeMethod":274,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":22,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":268,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":106,"org.easymock.tests2.AnswerTest.answer":154,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":200,"org.easymock.tests2.CaptureTest.testAnd":14,"org.easymock.tests2.UsageTest.strictResetToDefault":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":36,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":183,"org.easymock.tests2.NameTest.nameForMocksControl":211,"org.easymock.tests2.MockedExceptionTest.testMockedException":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":165,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":144,"org.easymock.tests2.DelegateToTest.testDelegate":181,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":124,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":174,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":160,"org.easymock.tests.MockingTest.testNicePartialClassMocking":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":135,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":178,"org.easymock.tests2.CaptureTest.testCaptureLast":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":82,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":207,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":283,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":43,"org.easymock.tests2.CaptureTest.testCapture1_2446744":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":249,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":133,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":128,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":308,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":13,"org.easymock.tests.UsageThrowableTest.throwError":317,"org.easymock.tests.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":311,"org.easymock.tests2.ConstraintsToStringTest.andToString":20,"org.easymock.tests2.MockBuilderTest.testCreateMockString":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":235,"org.easymock.tests.UsageExpectAndThrowTest.floatType":122,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":53,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":155,"org.easymock.tests.UsageVerifyTest.twoThrows":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":101,"org.easymock.samples.PartialClassMockTest.testGetArea":104,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":71,"org.easymock.samples.ExampleTest.voteAgainstRemoval":219,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":121,"org.easymock.tests2.UsageTest.niceToStrict":186,"org.easymock.tests2.UsageConstraintsTest.testNotNull":12,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":32,"org.easymock.tests2.MockBuilderTest.testCreateMock":91,"org.easymock.tests2.UsageTest.defaultResetToNice":188,"org.easymock.samples.ExampleTest.voteAgainstRemovals":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":264,"org.easymock.tests.UsageVarargTest.differentLength":331,"org.easymock.tests2.CallbackTest.callback":158,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":95,"org.easymock.tests.UsageTest.openCallCountByLastCall":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":129,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":47,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":79,"org.easymock.tests.UsageCallCountTest.tooFewCalls":228,"org.easymock.tests.UsageOverloadedMethodTest.overloading":284,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":42,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":119,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":330,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":260,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":204,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":51,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":65,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":278,"org.easymock.tests.UsageThrowableTest.throwCheckedException":319,"org.easymock.tests2.EasyMockSupportClassTest.testAll":190,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":240,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":199,"org.easymock.tests2.CaptureTest.testCaptureAll":15,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":206,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":69,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":203,"org.easymock.tests2.UsageConstraintsTest.testMatches":52,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":205,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":157,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":234,"org.easymock.samples.ExampleTest.voteForRemovals":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":27,"org.easymock.tests2.NameTest.nameForNiceMock":210,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":196,"org.easymock.tests.UsageVarargTest.allKinds":85,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":285,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":282,"org.easymock.samples.BasicClassMockTest.testPrintContent":224,"org.easymock.samples.ExampleTest.addDocument":220,"org.easymock.tests2.DelegateToTest.testStubDelegate":180,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":141,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests2.AnswerTest.stubAnswer":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":149,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":76,"org.easymock.tests2.UsageConstraintsTest.greaterThan":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":112,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":89,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":302,"org.easymock.tests.UsageVarargTest.varargLongAccepted":294,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":247,"org.easymock.samples.ExampleTest.voteForRemoval":218,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":339,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":267,"org.easymock.tests.UsageExpectAndReturnTest.floatType":251,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":23,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":110,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":103,"org.easymock.tests.UsageThrowableTest.noUpperLimit":241,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":55,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":238,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":48,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":61,"org.easymock.tests2.SerializationTest.test":152,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":163,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":250,"org.easymock.tests2.UsageConstraintsTest.testSame":4,"org.easymock.samples.SupportTest.addDocument":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":145,"org.easymock.tests2.CaptureTest.testCaptureFirst":67,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":164,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":310,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":256,"org.easymock.tests.GenericTest.testPackageScope":239,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":312,"org.easymock.tests2.CaptureTest.testCapture2_2446744":66,"org.easymock.tests2.UsageTest.moreThanOneArgument":185,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":296,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":313,"org.easymock.tests2.NameTest.nameForMock":208,"org.easymock.tests.UsageExpectAndReturnTest.longType":252,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":279,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":261,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":138,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":338,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":56,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":92,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":253,"org.easymock.tests.UsageCallCountTest.tooManyCalls":314,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":134,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":273,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":227,"org.easymock.tests2.MockedExceptionTest.testRealException":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":320,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":78,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":202,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":226,"org.easymock.tests2.NameTest.nameForStrictMock":209,"org.easymock.tests2.UsageConstraintsTest.testContains":50,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":116,"org.easymock.tests2.UsageConstraintsTest.testFind":2,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":150,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":177,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":321,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":59,"org.easymock.tests.UsageExpectAndReturnTest.object":259,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":45,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":298,"org.easymock.tests2.UsageStrictMockTest.range":37,"org.easymock.tests2.UsageConstraintsTest.lessThan":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":169,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":25,"org.easymock.tests.UsageTest.exactCallCountByLastCall":327,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":297,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":162,"org.easymock.tests2.CaptureTest.testCaptureRightOne":18,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":328,"org.easymock.tests2.UsageConstraintsTest.testOr":5,"org.easymock.tests.UsageRangeTest.combination":270,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":30,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":300,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":288,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":265,"org.easymock.tests.UsageTest.wrongArguments":323,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":316,"org.easymock.tests2.MockBuilderTest.testWithConstructor":87,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":254,"org.easymock.tests2.EasyMockSupportTest.testVerify":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":262,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":329,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":315,"org.easymock.tests.UsageVarargTest.varargShortAccepted":293,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":197,"org.easymock.tests2.UsageConstraintsTest.cmpTo":49,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":41,"org.easymock.tests.UsageVarargTest.varargCharAccepted":291,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":182,"org.easymock.tests2.UsageTest.openCallCountByLastCall":307,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":114,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":172,"org.easymock.tests2.CaptureTest.testCaptureFromStub":19,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":318,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":75,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":229,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":151,"org.easymock.tests2.ConstraintsToStringTest.anyToString":341,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":263,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":322,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":301,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":126,"org.easymock.tests.CapturesMatcherTest.test":107,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":266,"org.easymock.tests.UsageStrictMockTest.testVerify":248,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":213,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":280,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":62,"org.easymock.tests2.UsageTest.resumeIfFailure":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":72,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":255,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":73,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":167}}]
