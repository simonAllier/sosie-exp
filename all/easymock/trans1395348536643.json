[{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[22,31,32,33,34,35,36,25,26,37],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[40,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[57],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,4,196,197,198,199,200,201,40,202,203,204,205,206,39,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,1,236,237,238,239,240,241,242,5,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,38,267,268,269,270,271,272,273,9,274,25,6,275,276,8,277,278,279,280,37,281,282,283,28,284,29,285,286,287,288,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[289,290,60,291,292,293,294,295,296,64,65,66,68,69,70,71,72,73,74,75,76,77,78,3,297,298,79,80,81,82,83,84,85,86,87,88,89,99,100,299,102,103,104,105,106,107,300,301,302,108,109,110,111,112,113,114,115,116,303,304,305,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,306,137,139,140,141,142,143,144,146,147,307,308,309,310,148,311,312,313,314,315,316,317,318,319,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,320,182,183,184,185,186,321,322,323,188,189,190,191,192,324,193,194,195,4,196,197,199,200,325,10,10,11,11,326,201,327,328,40,329,330,203,204,205,206,39,207,208,209,210,211,331,332,333,334,213,214,215,216,221,335,222,223,224,225,226,227,228,229,230,231,232,233,234,235,1,236,237,238,239,240,241,336,242,337,338,5,339,340,341,342,343,344,345,346,347,348,349,350,243,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,351,261,262,263,264,265,266,38,267,268,269,270,271,352,272,273,9,274,25,353,354,6,355,7,275,276,8,277,278,279,280,356,357,37,281,358,283,28,359,360,284,29,361,285,286,287,362,288,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"toStringMethod","finalizeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[326,40,329,330,41],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[109,111,114,115,139,140,142,143,179,180,181,363,217,218,219,220,224,225,231,232,245,247,248],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[42,364,43,44,45,46,47,48,49,50,52,365,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":254,"org.easymock.tests2.UsageTest.argumentsOrdered":232,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":108,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":87,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":227,"org.easymock.tests2.StubTest.stubWithReturnValue":216,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":22,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":272,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":159,"org.easymock.tests2.SerializationTest.testAllMockedMethod":282,"org.easymock.tests2.DelegateToTest.testReturnException":285,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":85,"org.easymock.tests.MockingTest.testPartialClassMocking":80,"org.easymock.samples.SupportTest.voteForRemovals":325,"org.easymock.tests.MockClassControlTest.testToString":321,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":129,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":332,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":117,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":355,"org.easymock.tests.UsageExpectAndThrowTest.object":127,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":363,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":335,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":270,"org.easymock.tests2.DelegateToTest.testWrongClass":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":32,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":146,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":147,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":260,"org.easymock.tests2.UsageTest.wrongArguments":225,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":182,"org.easymock.samples.ConstructorCalledMockTest.testTax":10,"org.easymock.tests.UsageStrictMockTest.range":142,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":66,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":346,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":358,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":294,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":15,"org.easymock.tests2.UsageConstraintsTest.testNull":256,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":128,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":348,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":329,"org.easymock.tests2.CaptureTest.testPrimitive":46,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":186,"org.easymock.tests.UsageTest.moreThanOneArgument":109,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":114,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":136,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":236,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":302,"org.easymock.tests2.CaptureTest.testCaptureNone":51,"org.easymock.tests.UsageUnorderedTest.message":102,"org.easymock.tests.UsageVerifyTest.twoReturns":181,"org.easymock.tests.UsageVarargTest.varargByteAccepted":97,"org.easymock.tests2.ThreadingTest.testThreadSafe":205,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":315,"org.easymock.tests.UsageTest.argumentsOrdered":115,"org.easymock.tests.UsageVarargTest.varargIntAccepted":92,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":63,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":308,"org.easymock.tests2.CaptureTest.testCapture_2617107":45,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":174,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":201,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":185,"org.easymock.tests2.UsageConstraintsTest.any":261,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":202,"org.easymock.tests2.StubTest.stub":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":86,"org.easymock.tests.UsageExpectAndThrowTest.longType":120,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":246,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":356,"org.easymock.tests2.SerializationTest.testClass":37,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":353,"org.easymock.tests.LimitationsTest.mockNativeMethod":83,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":299,"org.easymock.tests2.AnswerTest.answer":6,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":169,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":212,"org.easymock.tests2.CaptureTest.testAnd":43,"org.easymock.tests2.UsageTest.strictResetToDefault":223,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":241,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":21,"org.easymock.tests2.NameTest.nameForMocksControl":220,"org.easymock.tests2.MockedExceptionTest.testMockedException":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":343,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":172,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":113,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":319,"org.easymock.tests2.DelegateToTest.testDelegate":288,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":82,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":121,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":235,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":330,"org.easymock.tests.MockingTest.testNicePartialClassMocking":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":132,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":239,"org.easymock.tests2.CaptureTest.testCaptureLast":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":88,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":148,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":259,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":107,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":310,"org.easymock.tests2.CaptureTest.testCapture1_2446744":47,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":125,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":231,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":9,"org.easymock.tests.UsageThrowableTest.throwError":71,"org.easymock.tests.UsageStrictMockTest.differentMethods":143,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":149,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":293,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":39,"org.easymock.tests2.MockBuilderTest.testCreateMockString":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":192,"org.easymock.tests.UsageExpectAndThrowTest.floatType":119,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":38,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":275,"org.easymock.tests.UsageVerifyTest.twoThrows":180,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":333,"org.easymock.samples.PartialClassMockTest.testGetArea":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":175,"org.easymock.samples.ExampleTest.voteAgainstRemoval":197,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":301,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":300,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":242,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":309,"org.easymock.tests2.UsageTest.niceToStrict":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":118,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":13,"org.easymock.tests2.UsageConstraintsTest.testNotNull":273,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":277,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":78,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":19,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":40,"org.easymock.tests2.UsageTest.defaultResetToNice":230,"org.easymock.samples.ExampleTest.voteAgainstRemovals":195,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":165,"org.easymock.tests2.CallbackTest.callback":5,"org.easymock.tests.UsageTest.openCallCountByLastCall":112,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":126,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":344,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":251,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":305,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":184,"org.easymock.tests.UsageCallCountTest.tooFewCalls":61,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":16,"org.easymock.tests.UsageOverloadedMethodTest.overloading":193,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":298,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":265,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":359,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":161,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":264,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":67,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":0,"org.easymock.tests.UsageThrowableTest.throwCheckedException":75,"org.easymock.tests2.EasyMockSupportClassTest.testAll":331,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":101,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":211,"org.easymock.tests2.CaptureTest.testCaptureAll":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":105,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":284,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":354,"org.easymock.tests.MockNameTest.defaultName":314,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":28,"org.easymock.tests2.UsageConstraintsTest.testMatches":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":360,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":8,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":191,"org.easymock.samples.ExampleTest.voteForRemovals":199,"org.easymock.tests2.NameTest.nameForNiceMock":219,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":208,"org.easymock.tests.UsageVarargTest.allKinds":99,"org.easymock.tests2.DependencyTest.testInterfaceMocking":221,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":106,"org.easymock.samples.ExampleTest.addDocument":198,"org.easymock.tests2.DelegateToTest.testStubDelegate":286,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":77,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":243,"org.easymock.tests2.AnswerTest.stubAnswer":276,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":89,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":140,"org.easymock.tests2.UsageConstraintsTest.greaterThan":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":36,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":171,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":337,"org.easymock.tests.UsageVarargTest.varargLongAccepted":96,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":144,"org.easymock.samples.ExampleTest.voteForRemoval":196,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":206,"org.easymock.tests.UsageExpectAndReturnTest.floatType":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":168,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":25,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":11,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":268,"org.easymock.tests.UsageThrowableTest.noUpperLimit":72,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":252,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":222,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":68,"org.easymock.tests2.SerializationTest.test":281,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":48,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":341,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":73,"org.easymock.tests2.UsageConstraintsTest.testSame":257,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":84,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":361,"org.easymock.tests2.CaptureTest.testCaptureFirst":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":342,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":157,"org.easymock.tests.GenericTest.testPackageScope":100,"org.easymock.tests2.UsageTest.moreThanOneArgument":224,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":207,"org.easymock.tests2.CaptureTest.testCapture2_2446744":55,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":318,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":203,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":98,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":17,"org.easymock.tests2.NameTest.nameForMock":217,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":14,"org.easymock.tests.UsageExpectAndReturnTest.longType":153,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":103,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":41,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":162,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":352,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":320,"org.easymock.tests2.UsageStrictMockTest.differentMethods":248,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":24,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":133,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":154,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":131,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":173,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":60,"org.easymock.tests2.MockedExceptionTest.testRealException":280,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":296,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":158,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":183,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":283,"org.easymock.tests2.UsageConstraintsTest.testContains":263,"org.easymock.tests2.NameTest.nameForStrictMock":218,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":59,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":279,"org.easymock.tests2.UsageConstraintsTest.testFind":255,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":194,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":27,"org.easymock.tests.MockTypeTest.fromEasyMockClass":292,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":238,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":214,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":137,"org.easymock.tests.UsageExpectAndReturnTest.object":160,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":269,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":240,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":327,"org.easymock.tests2.UsageStrictMockTest.range":247,"org.easymock.tests2.UsageConstraintsTest.lessThan":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":347,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":94,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":33,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":57,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":18,"org.easymock.tests.UsageTest.exactCallCountByLastCall":116,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":69,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":340,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":35,"org.easymock.tests2.CaptureTest.testCaptureRightOne":53,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":316,"org.easymock.tests2.UsageConstraintsTest.testOr":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":26,"org.easymock.tests.UsageRangeTest.combination":170,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":166,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":297,"org.easymock.tests.UsageTest.wrongArguments":111,"org.easymock.tests2.MockBuilderTest.testWithConstructor":20,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":163,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":304,"org.easymock.tests.UsageVarargTest.varargShortAccepted":95,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":209,"org.easymock.tests2.UsageConstraintsTest.cmpTo":262,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":250,"org.easymock.tests.UsageVarargTest.varargCharAccepted":93,"org.easymock.tests2.CaptureTest.testCaptureMultiple":364,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":7,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":244,"org.easymock.tests2.UsageTest.openCallCountByLastCall":228,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":350,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":303,"org.easymock.tests2.CaptureTest.testCaptureFromStub":54,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":328,"org.easymock.tests.UsageTest.unexpectedCallWithArray":110,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":74,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":139,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":62,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":23,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":164,"org.easymock.tests2.CaptureTest.testCapture":365,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":336,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":323,"org.easymock.tests2.UsageConstraintsTest.constraints":253,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.samples.ExampleTest.addAndChangeDocument":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":123,"org.easymock.tests.CapturesMatcherTest.test":42,"org.easymock.tests.UsageStrictMockTest.testVerify":145,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":167,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":334,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":322,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":104,"org.easymock.tests2.UsageTest.resumeIfFailure":233,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":176,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":291,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":156,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":345,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":91}}]
