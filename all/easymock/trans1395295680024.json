[{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[32,33,34,35,36,37,38,39,40,3,41,4,5,42,6,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,27,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[112,113,114,115,116,117,118],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[32,33,34,35,40,119,3,41,4,120,121,122,123,124,125,126,127,128,129,130,131,132,133,8,134,9,10,11,135,12,136,137,138,139,140,141,142,143,144,145,146,147,148,62,64,65,79,80,14,15,18,19,149,91,150,151,152,153,92,154,155,156,157,158,159,160,161,162,163,164,165,166,26,167,168,169,170,171,172,173,98,174,175,176,177,0,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,105,106,202,203,204,205],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[139,206,207],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.Range:36","failures":[208,32,33,34,35,36,37,38,39,209,210,211,212,213,40,119,214,215,216,217,218,3,41,4,5,42,6,43,219,44,220,221,120,222,223,121,224,122,123,124,125,126,127,128,129,225,130,131,132,226,227,228,229,230,231,232,233,234,235,236,7,45,237,238,239,240,241,242,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,133,243,8,134,244,245,9,246,10,247,11,248,249,135,12,250,136,251,252,253,254,255,137,138,256,257,258,259,260,139,261,140,262,141,142,143,144,263,264,265,145,146,147,148,62,63,64,65,266,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,13,14,15,16,267,17,18,19,268,149,269,91,150,151,152,153,92,270,93,271,272,273,274,275,276,277,278,279,280,20,281,282,21,283,284,285,286,287,288,289,290,291,22,292,293,294,295,296,23,297,298,299,300,301,24,302,303,154,304,112,25,113,114,115,155,156,305,306,307,116,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,206,327,328,329,157,158,159,160,330,331,332,161,162,333,163,164,165,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,166,353,354,26,355,356,357,358,359,360,94,27,95,96,97,167,361,362,168,169,170,171,172,173,363,364,98,174,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,175,176,397,398,399,99,100,101,400,401,402,403,404,405,406,407,408,409,177,0,178,179,410,411,412,413,414,415,207,416,417,418,419,420,421,422,423,424,425,426,427,428,1,2,429,430,431,180,181,432,433,434,435,182,117,436,183,184,185,437,438,439,440,102,441,103,104,186,187,188,189,442,443,190,191,192,193,194,195,196,444,445,197,198,199,446,447,200,28,29,448,30,449,450,451,452,201,453,105,106,202,203,204,205,454,455,456,457,458,459,460,107,108,109,110,111,461,462,463,464,465,466,467,468,469,470,471,472,473,118,474,475,476,477,478,479,480,481,482,483,31,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[5,6,91,151,152,105,106,203,204,454],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[488,489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[48,58,65,67,70,72,87],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[128,143],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[299,300,301,490],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[32,33,34,35,141,142,145,146,91,151,152,177,0,178,491,194,196,197,198,105,106,203,204],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[32,33,34,35,36,37,38,39,3,4,5,42,6,44,120,223,228,231,232,233,234,235,45,237,238,239,240,46,48,49,50,51,53,54,55,56,57,58,61,133,9,246,139,261,262,141,143,144,265,147,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,14,15,18,19,269,91,152,153,92,93,299,300,301,24,154,112,25,115,305,329,165,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,26,357,358,94,27,95,96,97,174,365,366,367,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,176,397,398,399,99,100,400,401,402,403,404,177,0,178,179,410,411,412,413,426,427,180,181,432,433,184,437,438,439,440,102,441,103,104,186,187,188,189,442,443,194,28,29,30,452,453,106,204,205,454,107,108,111,471,472,473,118,474,475,476,477,479],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[3,41,5,42,6,44,221,120,121,224,122,238,239,13,16,271,275,278,20,282,283,284,287,290,292,293,296,301,328,329,157,158,159,160,330,331,353,354,26,355,357,358,360,446,447,200,451,452,462,463,464,465,466,467,469,480,481],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[36,37,38,40,119,3,41,4,5,42,6,44,120,222,223,121,122,123,124,125,126,127,128,129,225,130,131,132,226,228,229,230,231,232,233,234,235,236,7,45,237,238,239,240,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,133,8,134,9,10,11,12,136,137,138,139,261,140,262,141,142,143,144,263,264,265,145,146,147,148,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,13,14,15,16,17,18,19,149,91,150,151,152,153,92,93,20,21,22,23,299,300,24,154,304,112,25,113,114,115,155,156,321,206,157,158,159,161,162,163,164,165,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,166,26,357,359,94,27,95,96,97,167,168,169,170,171,172,173,363,364,98,174,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,99,100,101,400,401,402,403,404,405,406,407,408,409,177,0,178,179,410,411,412,413,425,426,427,428,1,2,429,430,180,181,432,433,434,435,117,436,184,437,438,439,440,102,441,103,104,188,193,194,195,196,444,445,197,198,199,28,29,30,452,201,105,106,202,203,204,205,455,456,457,459,107,108,109,110,111,470,471,472,473,118,474,475,477,479,482,482,483,483,31,486],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"hashCodeMethod","finalizeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[36,37,38,39,40,3,41,4,5,42,6,43,44,120,222,223,121,123,124,125,126,127,128,129,225,130,131,132,226,227,228,231,232,233,234,235,236,7,45,237,238,239,240,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,133,8,9,246,10,11,135,12,136,137,139,261,140,262,141,142,143,144,263,264,265,145,146,147,148,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,13,14,15,16,17,18,19,149,269,91,150,151,152,153,92,93,20,21,22,23,299,300,301,24,154,112,25,113,115,492,492,165,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,26,357,358,94,27,95,96,97,98,174,365,366,367,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,175,176,397,398,399,99,100,101,400,401,402,403,404,177,0,178,179,410,411,412,413,425,426,427,428,1,2,429,430,180,432,433,435,117,436,185,437,438,439,440,102,441,103,104,188,189,442,443,190,191,192,193,194,195,196,444,445,197,198,199,28,29,30,452,201,453,105,106,202,203,204,205,107,108,109,110,111,470,471,472,473,118,474,475,476,477,479,480,481,482,483,31,484,485,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[493,494,495,496,497,498,499,500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","value":"delegateTo","this":"this"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[79],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[501,492],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:508","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:172","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[119,138,169],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[364],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[32,33,34,35,40,3,41,4,5,42,6,44,222,223,121,123,124,125,126,127,128,129,225,130,131,132,226,227,228,231,233,7,45,239,46,47,48,49,50,51,52,53,54,55,56,57,58,61,133,8,9,10,11,12,137,140,262,142,143,144,265,145,146,148,65,66,67,68,70,71,72,73,74,76,77,79,80,82,83,84,85,86,87,13,14,15,16,17,18,19,149,269,91,150,151,152,153,20,21,22,23,299,300,301,24,154,112,113,115,335,336,338,343,348,26,357,358,94,27,95,96,97,173,98,174,373,374,376,381,386,391,392,393,395,396,175,176,397,398,399,99,100,0,178,425,426,427,428,1,2,429,430,180,435,117,436,184,102,103,104,186,189,442,443,191,192,196,197,198,199,28,29,30,452,201,453,105,106,202,203,204,205,454,107,108,109,110,111,462,470,471,473,118,474,475,476,477,479,480,481,31,484,485,486,487],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[71],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[502,503,504,505,195,105],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[360],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[220,243,244,247,249,506,250,507,508,509,299,24,302,482,483],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":65,"org.easymock.tests2.UsageTest.argumentsOrdered":146,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":193,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":315,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":144,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":487,"org.easymock.tests2.DelegateToTest.testReturnException":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":438,"org.easymock.tests.MockingTest.testPartialClassMocking":28,"org.easymock.tests.MockClassControlTest.testToString":157,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":208,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":459,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":286,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":371,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":491,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":47,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":71,"org.easymock.tests2.UsageTest.wrongArguments":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":107,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":260,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":366,"org.easymock.samples.ExampleTest.answerVsDelegate":118,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":170,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":450,"org.easymock.tests2.UsageConstraintsTest.testNull":67,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":5,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":131,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":331,"org.easymock.tests2.CaptureTest.testPrimitive":51,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":111,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":390,"org.easymock.tests.UsageTest.moreThanOneArgument":194,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":402,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":405,"org.easymock.tests.UsageTest.argumentsOrdered":198,"org.easymock.tests.UsageVarargTest.varargIntAccepted":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":94,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":217,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":273,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":97,"org.easymock.tests.ReplayStateInvalidUsageTest.times":421,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":137,"org.easymock.tests2.DependencyTest.testClassMocking":241,"org.easymock.tests2.AnswerTest.answer":228,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":322,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":39,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":362,"org.easymock.tests2.UsageTest.strictResetToDefault":262,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":120,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":244,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":401,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":127,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":409,"org.easymock.tests2.DelegateToTest.testDelegate":115,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":386,"org.easymock.tests.LimitationsTest.mockFinalMethod":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":413,"org.easymock.tests2.DependencyTest.testClassMockingSupport":242,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":155,"org.easymock.tests2.CaptureTest.testCapture1_2446744":52,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":219,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":37,"org.easymock.tests.UsageThrowableTest.throwError":425,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":207,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":169,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":431,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":404,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":298,"org.easymock.samples.PartialClassMockTest.testGetArea":31,"org.easymock.tests.MockingTest.testInterfaceMocking":448,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":363,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":164,"org.easymock.tests2.UsageTest.niceToStrict":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":287,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":372,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":9,"org.easymock.tests2.MockBuilderTest.testCreateMock":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":294,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":257,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":380,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":128,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":361,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":186,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":174,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":495,"org.easymock.tests.UsageOverloadedMethodTest.overloading":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":296,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":436,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":77,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":470,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":344,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":76,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":57,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":394,"org.easymock.tests2.EasyMockSupportClassTest.testAll":20,"org.easymock.tests.MockClassControlTest.testEquals":330,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":388,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":411,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":38,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests.MockNameTest.defaultName":166,"org.easymock.tests2.UsageConstraintsTest.testMatches":78,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":414,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":403,"org.easymock.samples.ExampleTest.voteForRemovals":477,"org.easymock.tests.UsageVarargTest.allKinds":99,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":177,"org.easymock.samples.BasicClassMockTest.testPrintContent":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":412,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":429,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":441,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":114,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":214,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":468,"org.easymock.tests2.UsageConstraintsTest.greaterThan":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":281,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":181,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":121,"org.easymock.samples.ExampleTest.voteForRemoval":474,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":469,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":224,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":235,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":171,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":274,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":43,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":452,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":140,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":125,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":437,"org.easymock.tests2.CaptureTest.testCaptureFirst":61,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":126,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":340,"org.easymock.tests2.UsageTest.moreThanOneArgument":141,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":7,"org.easymock.tests2.CaptureTest.testCapture2_2446744":60,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":323,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":399,"org.easymock.tests.GenericTest.testBridgedEquals":360,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":496,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":493,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":191,"org.easymock.tests.UsageExpectAndReturnTest.longType":336,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":179,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":123,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":489,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":389,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":434,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":85,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":387,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":456,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":400,"org.easymock.tests.UsageCallCountTest.tooManyCalls":192,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":295,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":341,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":376,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":2,"org.easymock.tests.MockingTest.testNiceClassMocking":451,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":14,"org.easymock.tests.MockingTest.testClassMocking":447,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":488,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":187,"org.easymock.tests2.UsageConstraintsTest.testContains":75,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":239,"org.easymock.tests2.UsageConstraintsTest.testFind":66,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":472,"org.easymock.tests.MockTypeTest.fromEasyMockClass":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":93,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":201,"org.easymock.tests.UsageExpectAndReturnTest.object":343,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":130,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":396,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":333,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":497,"org.easymock.tests.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":310,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":458,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":406,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":302,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":391,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":349,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":117,"org.easymock.tests.MockClassControlTest.testHashCode":160,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":210,"org.easymock.tests2.EasyMockSupportTest.testVerify":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":289,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":407,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":435,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":36,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":90,"org.easymock.tests.UsageVarargTest.varargCharAccepted":395,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":461,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":327,"org.easymock.tests2.UsageTest.openCallCountByLastCall":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":499,"org.easymock.tests.DefaultClassInstantiatorTest.object":462,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":226,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":368,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":290,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":378,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":428,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":254,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":209,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":159,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":377,"org.easymock.tests.CapturesMatcherTest.test":492,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":455,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":23,"org.easymock.tests2.UsageTest.resumeIfFailure":147,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":440,"org.easymock.tests2.StubTest.stubWithReturnValue":261,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":247,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":86,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":342,"org.easymock.tests2.SerializationTest.testAllMockedMethod":301,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":321,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":509,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":503,"org.easymock.samples.SupportTest.voteForRemovals":486,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":356,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":383,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":490,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":206,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":229,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":460,"org.easymock.tests.UsageExpectAndThrowTest.object":381,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":83,"org.easymock.tests2.DelegateToTest.testWrongClass":113,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":103,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":104,"org.easymock.samples.ConstructorCalledMockTest.testTax":482,"org.easymock.tests.UsageStrictMockTest.range":203,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":276,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":13,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":494,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":382,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":10,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":423,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":278,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":365,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":504,"org.easymock.tests2.CaptureTest.testCaptureNone":56,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":364,"org.easymock.tests.UsageUnorderedTest.message":98,"org.easymock.tests.UsageVerifyTest.twoReturns":178,"org.easymock.tests.UsageVarargTest.varargByteAccepted":398,"org.easymock.tests2.ThreadingTest.testThreadSafe":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":292,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":443,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":480,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":163,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":325,"org.easymock.tests2.UsageConstraintsTest.any":73,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":420,"org.easymock.tests2.StubTest.stub":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":326,"org.easymock.tests.UsageExpectAndThrowTest.longType":374,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":466,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":419,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":150,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":40,"org.easymock.tests2.SerializationTest.testClass":299,"org.easymock.tests.LimitationsTest.mockNativeMethod":26,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":352,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":359,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":253,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":153,"org.easymock.tests2.NameTest.nameForMocksControl":35,"org.easymock.tests2.MockedExceptionTest.testMockedException":238,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":282,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":445,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":30,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":375,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":3,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":11,"org.easymock.tests.MockingTest.testNicePartialClassMocking":29,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":6,"org.easymock.tests2.CaptureTest.testCaptureLast":55,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":251,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":156,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":19,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":70,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":84,"org.easymock.tests.MockingTest.testTwoMocks":200,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":268,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":379,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":145,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":88,"org.easymock.samples.ExampleTest.removeNonExistingDocument":478,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":417,"org.easymock.tests.UsageStrictMockTest.differentMethods":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":211,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":464,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":236,"org.easymock.tests2.MockBuilderTest.testCreateMockString":136,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":283,"org.easymock.tests.UsageExpectAndThrowTest.floatType":373,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":280,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":231,"org.easymock.tests.UsageVerifyTest.twoThrows":0,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":303,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":22,"org.easymock.samples.ExampleTest.voteAgainstRemoval":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":316,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":223,"org.easymock.tests.LimitationsTest.privateConstructor":354,"org.easymock.tests2.UsageConstraintsTest.testNotNull":87,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":430,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":237,"org.easymock.tests2.UsageTest.defaultResetToNice":265,"org.easymock.samples.ExampleTest.voteAgainstRemovals":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":348,"org.easymock.tests.UsageVarargTest.differentLength":175,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":252,"org.easymock.tests2.CallbackTest.callback":154,"org.easymock.tests2.UsageConstraintsTest.equals":266,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":220,"org.easymock.tests.UsageTest.openCallCountByLastCall":444,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":109,"org.easymock.tests.UsageCallCountTest.tooFewCalls":189,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":367,"org.easymock.tests.UsageThrowableTest.throwCheckedException":1,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":505,"org.easymock.tests.MockingTest.testStrictClassMocking":446,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":138,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":15,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":422,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":17,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":233,"org.easymock.tests.ObjectMethodsTest.testHashCode":162,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":45,"org.easymock.tests2.NameTest.nameForNiceMock":34,"org.easymock.tests2.DependencyTest.testInterfaceMocking":46,"org.easymock.samples.ExampleTest.addDocument":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":293,"org.easymock.tests2.DelegateToTest.testStubDelegate":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":297,"org.easymock.tests2.AnswerTest.stubAnswer":232,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":106,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":248,"org.easymock.tests.UsageVarargTest.varargLongAccepted":397,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":314,"org.easymock.tests.UsageExpectAndReturnTest.floatType":335,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":24,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":483,"org.easymock.tests.UsageThrowableTest.noUpperLimit":426,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":183,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":216,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":63,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":271,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":53,"org.easymock.tests2.SerializationTest.test":300,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":463,"org.easymock.tests2.UsageConstraintsTest.testSame":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":334,"org.easymock.samples.SupportTest.addDocument":485,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":267,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":284,"org.easymock.tests.GenericTest.testPackageScope":357,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":215,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":449,"org.easymock.tests2.NameTest.nameForMock":32,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":345,"org.easymock.tests2.UsageStrictMockTest.differentMethods":152,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":250,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":337,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":385,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":433,"org.easymock.tests2.MockedExceptionTest.testRealException":240,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":172,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":508,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":318,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":424,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":108,"org.easymock.tests2.NameTest.nameForStrictMock":33,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":500,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":42,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":275,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":465,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":82,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":8,"org.easymock.tests2.UsageStrictMockTest.range":151,"org.easymock.tests2.UsageConstraintsTest.lessThan":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":213,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":313,"org.easymock.tests2.CaptureTest.testCaptureRightOne":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":288,"org.easymock.tests2.UsageConstraintsTest.testOr":69,"org.easymock.tests.UsageRangeTest.combination":180,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":41,"org.easymock.tests.UsageTest.wrongArguments":196,"org.easymock.tests2.MockBuilderTest.testWithConstructor":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":285,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":346,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":467,"org.easymock.tests.UsageVarargTest.varargShortAccepted":176,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":190,"org.easymock.tests2.UsageConstraintsTest.cmpTo":74,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":308,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":264,"org.easymock.tests2.CaptureTest.testCaptureFromStub":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":415,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":134,"org.easymock.tests.UsageTest.unexpectedCallWithArray":195,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":105,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":442,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":506,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":347,"org.easymock.tests2.CaptureTest.testCapture":501,"org.easymock.tests2.UsageConstraintsTest.constraints":64,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":202,"org.easymock.samples.ExampleTest.addAndChangeDocument":479,"org.easymock.tests.UsageStrictMockTest.testVerify":454,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":484,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":453,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":410,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":95,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":339,"org.easymock.tests.LimitationsTest.abstractClass":353,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":96,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":129}}]
