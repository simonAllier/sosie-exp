[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:136","sourceCode":"if (java.lang.reflect.Method.isVarArgs()) {\n    int = java.lang.Math.java.lang.Math.min(int, ((java.lang.Class<?>[].int) - 1));\n} ","type":"CtIfImpl"},"failures":[4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[7,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[2,3,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[30,31,32,33,34,35,36],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[37],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[12,13,16,20,25,27],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[38,39,40,41],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,4,58,59,60,61,62,63,64,65,5,66,67,68,15,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,37,21,189,190,191,192,193,194,195,196,197,198,199,200,201,9,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,38,236,237,238,239,240,241,242,243,244,245,246,247,248,40,249,250,251,41,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,10,275,276,277,278,279,280],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[281,282,66,67,68,283,15,16,17,18,19,284,285,286,287,288,289,290,291,292,293,20,94,294,295,95,96,296,297,106,298,124,126,127,299,300,301,302,303,304,305,306,307,308,165,174,176,178,179,181,182,188,309,21,22,189,190,23,24,192,310,311,194,312,313,195,196,198,199,200,201,216,314,315,219,220,316,317,318,222,223,226,227,233,246,319,260,320,321,262,322,274,323],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[38,39,40,41],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[49,50,51,52,53,54,55,4,58,59,60,61,62,63,64,65,5,66,67,68,15,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,186,188,37,21,189,190,191,192,193,194,195,196,197,198,199,200,201,9,202,203,204,205,206,207,208,209,210,211,216,217,218,222,223,226,227,228,229,230,231,232,233,234,235,38,236,237,238,239,240,241,242,243,244,245,246,247,248,40,249,250,251,41,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,10,275,276,277,278,279,280],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[42,43,43,44,44,45,46,47,48,49,50,51,52,53,54,324,55,56,57,4,58,59,60,61,281,62,63,64,65,5,66,67,68,283,15,16,17,325,326,18,19,284,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,293,93,20,94,294,295,95,96,97,98,327,99,100,328,329,101,330,331,332,333,334,335,336,337,338,339,340,341,102,103,104,105,2,3,342,106,298,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,299,300,301,130,131,343,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,302,344,157,303,304,305,345,346,347,348,306,349,350,351,158,159,352,353,354,355,356,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,309,37,21,22,189,190,357,358,191,23,24,192,310,311,193,194,312,313,195,196,197,198,199,200,201,9,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,314,217,218,219,220,316,317,318,221,222,223,224,225,226,227,228,229,359,360,230,231,232,233,234,235,38,236,237,238,239,240,241,242,243,244,245,246,247,248,40,249,250,361,251,41,252,253,254,319,255,256,257,258,362,259,260,363,261,320,262,263,264,265,266,364,267,268,269,270,271,272,365,366,273,274,10,275,11,276,277,278,279,280],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[42,48,367,368,369,370,371,322,372,373,374,375,376,377,378,379,380,381,323,382,383,384,385,386],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[47,287,290,387,209,216,388,314,315,217,218,219,220,316,317,389,318,362,390],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[367,368,369,370,371,262,322,372,373,374,375,376,377,378,379,380,381,274,323,382,383,384,385,386],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"qualifier":"qualifier","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[66,67,68,15,17,18,19,20,94,295,95,302,21,22,23,24,194,313,195,198,199,200,201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[327,328,108,109,110,111,112,113,277,278,279,280],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[66,67,68,15,17,18,19,20,94,295,95,106,302,21,22,23,24,194,313,195,198,199,200,201],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":234,"org.easymock.tests2.UsageTest.argumentsOrdered":24,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":283,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":322,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":190,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":48,"org.easymock.tests2.DelegateToTest.testReturnException":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":109,"org.easymock.tests.MockingTest.testPartialClassMocking":70,"org.easymock.tests.MockClassControlTest.testToString":303,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":321,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":134,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":213,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":32,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":99,"org.easymock.tests2.UsageTest.wrongArguments":22,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":386,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":104,"org.easymock.samples.ExampleTest.answerVsDelegate":50,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":290,"org.easymock.tests2.UsageConstraintsTest.testNull":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":256,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":182,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":347,"org.easymock.tests2.CaptureTest.testPrimitive":266,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":153,"org.easymock.tests.UsageTest.moreThanOneArgument":15,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":162,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.UsageVarargTest.varargIntAccepted":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":36,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":216,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":375,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":218,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":118,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":274,"org.easymock.tests.ReplayStateInvalidUsageTest.times":338,"org.easymock.tests2.DependencyTest.testClassMocking":7,"org.easymock.tests2.AnswerTest.answer":9,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":208,"org.easymock.tests2.CaptureTest.testAnd":263,"org.easymock.tests2.UsageTest.strictResetToDefault":37,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":29,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":167,"org.easymock.tests2.DelegateToTest.testDelegate":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":123,"org.easymock.tests2.DependencyTest.testClassMockingSupport":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":285,"org.easymock.tests2.CaptureTest.testCapture1_2446744":364,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":206,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":332,"org.easymock.tests.UsageThrowableTest.throwError":351,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":289,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":164,"org.easymock.samples.PartialClassMockTest.testGetArea":47,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":115,"org.easymock.tests2.UsageTest.niceToStrict":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":135,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":308,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":217,"org.easymock.tests2.MockBuilderTest.testCreateMock":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":383,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":143,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":25,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":124,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":102,"org.easymock.tests.UsageOverloadedMethodTest.overloading":132,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":244,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":342,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":84,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":343,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":243,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":271,"org.easymock.tests2.EasyMockSupportClassTest.testAll":212,"org.easymock.tests.MockClassControlTest.testEquals":346,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":151,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":207,"org.easymock.tests2.CaptureTest.testCaptureAll":264,"org.easymock.tests.MockNameTest.defaultName":282,"org.easymock.tests2.UsageConstraintsTest.testMatches":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":163,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":330,"org.easymock.samples.ExampleTest.voteForRemovals":54,"org.easymock.tests.UsageVarargTest.allKinds":5,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":122,"org.easymock.samples.BasicClassMockTest.testPrintContent":57,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":355,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":372,"org.easymock.tests2.UsageConstraintsTest.greaterThan":247,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":166,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":320,"org.easymock.samples.ExampleTest.voteForRemoval":51,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":229,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":291,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":362,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":107,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":175,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":108,"org.easymock.tests2.CaptureTest.testCaptureFirst":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":176,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":310,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":80,"org.easymock.tests2.UsageTest.moreThanOneArgument":21,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":360,"org.easymock.tests2.CaptureTest.testCapture2_2446744":366,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":317,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":65,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":300,"org.easymock.tests.UsageExpectAndReturnTest.longType":76,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":119,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":389,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":152,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":6,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":160,"org.easymock.tests.UsageCallCountTest.tooManyCalls":301,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":354,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":222,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":388,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":125,"org.easymock.tests2.UsageConstraintsTest.testContains":242,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":279,"org.easymock.tests2.UsageConstraintsTest.testFind":235,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":133,"org.easymock.tests.MockTypeTest.fromEasyMockClass":288,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":170,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests.UsageExpectAndReturnTest.object":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":33,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":61,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":350,"org.easymock.tests.UsageTest.exactCallCountByLastCall":284,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":98,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":14,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":30,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":89,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":3,"org.easymock.tests.MockClassControlTest.testHashCode":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":368,"org.easymock.tests2.EasyMockSupportTest.testVerify":185,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":2,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":205,"org.easymock.tests.UsageVarargTest.varargCharAccepted":60,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests2.UsageTest.openCallCountByLastCall":357,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":184,"org.easymock.tests.DefaultClassInstantiatorTest.object":348,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":306,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":352,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":367,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":305,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":363,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":215,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":304,"org.easymock.tests2.UsageTest.resumeIfFailure":192,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":111,"org.easymock.tests2.StubTest.stubWithReturnValue":172,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":82,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":251,"org.easymock.tests2.SerializationTest.testAllMockedMethod":211,"org.easymock.samples.SupportTest.voteForRemovals":46,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":146,"org.easymock.tests.UsageExpectAndThrowTest.object":144,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":249,"org.easymock.tests2.DelegateToTest.testWrongClass":11,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":156,"org.easymock.samples.ConstructorCalledMockTest.testTax":43,"org.easymock.tests.UsageStrictMockTest.range":295,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":145,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":219,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":103,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":12,"org.easymock.tests2.CaptureTest.testCaptureNone":270,"org.easymock.tests.UsageUnorderedTest.message":302,"org.easymock.tests.UsageVerifyTest.twoReturns":68,"org.easymock.tests.UsageVarargTest.varargByteAccepted":64,"org.easymock.tests2.ThreadingTest.testThreadSafe":228,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":129,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":56,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":307,"org.easymock.tests2.CaptureTest.testCapture_2617107":265,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":28,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":329,"org.easymock.tests2.UsageConstraintsTest.any":240,"org.easymock.tests2.StubTest.stub":171,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":337,"org.easymock.tests.UsageExpectAndThrowTest.longType":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":110,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":336,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":312,"org.easymock.tests2.SerializationTest.testClass":209,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":262,"org.easymock.tests.LimitationsTest.mockNativeMethod":154,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":387,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":92,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":379,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":196,"org.easymock.tests2.NameTest.nameForMocksControl":201,"org.easymock.tests2.MockedExceptionTest.testMockedException":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":381,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":326,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":138,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":72,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":254,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":220,"org.easymock.tests.MockingTest.testNicePartialClassMocking":71,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":258,"org.easymock.tests2.CaptureTest.testCaptureLast":269,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":377,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":286,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":227,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":238,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":142,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":23,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":252,"org.easymock.samples.ExampleTest.removeNonExistingDocument":324,"org.easymock.tests.UsageStrictMockTest.differentMethods":95,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":369,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":359,"org.easymock.tests2.MockBuilderTest.testCreateMockString":318,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":344,"org.easymock.tests.UsageExpectAndThrowTest.floatType":136,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":246,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":202,"org.easymock.tests.UsageVerifyTest.twoThrows":67,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":214,"org.easymock.samples.ExampleTest.voteAgainstRemoval":52,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":261,"org.easymock.tests2.UsageConstraintsTest.testNotNull":41,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":277,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":356,"org.easymock.tests2.UsageTest.defaultResetToNice":191,"org.easymock.samples.ExampleTest.voteAgainstRemovals":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":88,"org.easymock.tests.UsageVarargTest.differentLength":281,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":378,"org.easymock.tests2.CallbackTest.callback":188,"org.easymock.tests.UsageTest.openCallCountByLastCall":325,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":328,"org.easymock.tests.UsageCallCountTest.tooFewCalls":127,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":105,"org.easymock.tests.UsageThrowableTest.throwCheckedException":353,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":13,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":226,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":327,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":223,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":323,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":225,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":204,"org.easymock.tests.ObjectMethodsTest.testHashCode":349,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":35,"org.easymock.tests2.NameTest.nameForNiceMock":200,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":230,"org.easymock.tests2.DependencyTest.testInterfaceMocking":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":34,"org.easymock.samples.ExampleTest.addDocument":53,"org.easymock.tests2.DelegateToTest.testStubDelegate":275,"org.easymock.tests2.AnswerTest.stubAnswer":203,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":94,"org.easymock.tests.UsageVarargTest.varargLongAccepted":63,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":96,"org.easymock.tests.UsageExpectAndReturnTest.floatType":75,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":197,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":44,"org.easymock.tests.UsageThrowableTest.noUpperLimit":158,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":248,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":297,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":374,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":232,"org.easymock.tests2.SerializationTest.test":210,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":267,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":74,"org.easymock.tests2.UsageConstraintsTest.testSame":236,"org.easymock.samples.SupportTest.addDocument":45,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":335,"org.easymock.tests.GenericTest.testPackageScope":130,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":373,"org.easymock.tests2.NameTest.nameForMock":198,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":85,"org.easymock.tests2.UsageStrictMockTest.differentMethods":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":168,"org.easymock.tests2.MockedExceptionTest.testRealException":280,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":292,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":100,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":341,"org.easymock.tests2.NameTest.nameForStrictMock":199,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":169,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":257,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":40,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":314,"org.easymock.tests2.UsageStrictMockTest.range":313,"org.easymock.tests2.UsageConstraintsTest.lessThan":253,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":371,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":174,"org.easymock.tests2.CaptureTest.testCaptureRightOne":272,"org.easymock.tests2.UsageConstraintsTest.testOr":237,"org.easymock.tests.UsageRangeTest.combination":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":319,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":86,"org.easymock.tests.UsageVarargTest.varargShortAccepted":62,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":299,"org.easymock.tests2.UsageConstraintsTest.cmpTo":241,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":358,"org.easymock.tests2.CaptureTest.testCaptureFromStub":365,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":331,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":315,"org.easymock.tests.UsageTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":128,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":87,"org.easymock.tests2.UsageConstraintsTest.constraints":233,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":294,"org.easymock.samples.ExampleTest.addAndChangeDocument":55,"org.easymock.tests.UsageStrictMockTest.testVerify":97,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":42,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":120,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":268,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":116,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":117,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":179,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":58}}]
