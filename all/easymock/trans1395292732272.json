[{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,4,5],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[61,62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[63,51,64,65],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,2,85,86,87,3,88,89,90,91,92,93,94,95,96,97,98,21,21,22,22,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,116,117,48,118,119,49,51,65,120,121,122,123,124,125,126,127,55,128,129,130,131,132,133,134,4,5,135,136,137,138,139],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[140,16,141,20,142],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[143],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[144,145,146,147,148,149,150,151,152,153,154,155,156,157,158],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[159,160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[161],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[162,163,164],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[106,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:117","failures":[165,166,167,168,169,170,171,172],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,70,199,73,75,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,80,81,82,220,221,222,223,224,225,226,140,14,227,16,141,98,228,229,230,231,232,101,102,233,103,104,105,107,111,112,113,26,29,39,45,116,117,48,118,234,119,49,235,236,237,238,143,239,240,241,61,62,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,51,64,121,124,126,127,129,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,4,137,282,283,284,285,286,287,288,289,290,145,146,148,149,152,153,154,155,157,158,291,20,142],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[63,51,64,65],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:721","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[104,248],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[48,49,50,52,53,54,56,57,58,59,5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[194,9,10,11,293,140,13,14,15,227,16,141,260,17,18,19,294,295,296,297,291,20,142],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[21,21,22,22,108,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[145,147,148,149,150,151,152,154,298,155,156,158],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,66,314,315,316,317,67,318,319,320,173,174,175,176,177,321,322,323,324,325,326,327,178,328,179,180,181,182,183,184,329,330,331,332,333,334,335,336,337,338,165,339,340,159,341,185,6,186,187,188,189,190,191,192,342,343,344,345,346,193,194,8,9,195,196,10,11,197,347,348,349,350,351,352,353,354,355,356,357,358,359,198,360,68,69,70,71,199,361,72,73,74,75,76,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,77,78,79,80,81,406,82,407,408,83,12,220,221,409,410,222,84,2,85,86,87,3,88,411,0,412,292,413,414,415,416,417,418,419,1,223,224,225,226,420,421,422,423,424,425,426,427,161,89,90,91,92,93,94,95,96,97,140,13,14,428,429,430,431,432,433,434,15,227,435,16,141,436,437,98,228,166,229,230,438,231,439,440,21,22,441,442,443,232,99,100,101,102,233,103,104,105,106,444,107,108,109,110,111,112,113,114,115,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,116,117,48,118,445,234,119,49,50,167,446,168,235,236,237,238,447,143,239,240,241,61,62,448,242,243,244,245,246,247,248,249,250,251,252,253,449,254,255,256,257,51,64,65,120,121,122,123,124,125,126,127,450,55,128,129,130,258,259,260,17,261,451,262,263,264,18,19,265,266,131,134,452,453,169,454,455,170,267,171,456,457,458,459,460,461,462,463,464,268,465,466,467,468,469,470,269,270,271,272,273,274,275,276,277,278,279,280,471,472,294,295,296,297,473,474,475,476,477,281,478,479,480,481,482,483,4,5,135,136,137,160,172,282,283,284,285,286,484,287,138,139,288,289,485,486,290,487,488,489,145,146,147,148,149,150,151,152,153,154,155,156,157,158,490,491,492,291,493,20,142,494],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[255],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[444],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[51,64,65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:144","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":238,"org.easymock.tests2.UsageTest.argumentsOrdered":19,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":193,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":372,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":451,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":441,"org.easymock.tests2.DelegateToTest.testReturnException":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":334,"org.easymock.tests.MockingTest.testPartialClassMocking":80,"org.easymock.tests.MockClassControlTest.testToString":91,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":472,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":198,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":33,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":386,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":29,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":293,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":289,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":62,"org.easymock.tests2.UsageTest.wrongArguments":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":220,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":483,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":331,"org.easymock.samples.ExampleTest.answerVsDelegate":166,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":67,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":408,"org.easymock.tests2.UsageConstraintsTest.testNull":239,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":103,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":278,"org.easymock.tests2.CaptureTest.testPrimitive":148,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":405,"org.easymock.tests.UsageTest.moreThanOneArgument":194,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":422,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":428,"org.easymock.tests.UsageTest.argumentsOrdered":11,"org.easymock.tests.UsageVarargTest.varargIntAccepted":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":188,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":469,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":133,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":192,"org.easymock.tests.ReplayStateInvalidUsageTest.times":417,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":281,"org.easymock.tests2.DependencyTest.testClassMocking":138,"org.easymock.tests2.AnswerTest.answer":169,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":459,"org.easymock.tests2.CaptureTest.testAnd":145,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":315,"org.easymock.tests2.UsageTest.strictResetToDefault":259,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":421,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":273,"org.easymock.tests2.DelegateToTest.testDelegate":489,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":432,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":401,"org.easymock.tests.LimitationsTest.mockFinalMethod":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":346,"org.easymock.tests2.DependencyTest.testClassMockingSupport":139,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":426,"org.easymock.tests2.CaptureTest.testCapture1_2446744":149,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":444,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":399,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":457,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":412,"org.easymock.tests.UsageThrowableTest.throwError":178,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":317,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":470,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":424,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":47,"org.easymock.samples.PartialClassMockTest.testGetArea":98,"org.easymock.tests.MockingTest.testInterfaceMocking":406,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":189,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":173,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":34,"org.easymock.tests2.UsageTest.niceToStrict":261,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":326,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":124,"org.easymock.tests2.MockBuilderTest.testCreateMock":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":42,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":480,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":395,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":274,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":314,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":301,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":329,"org.easymock.tests.UsageOverloadedMethodTest.overloading":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":38,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":159,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":246,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":211,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":60,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":245,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":154,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":350,"org.easymock.tests2.EasyMockSupportClassTest.testAll":26,"org.easymock.tests.MockClassControlTest.testEquals":95,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":74,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":403,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":458,"org.easymock.tests2.CaptureTest.testCaptureAll":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":344,"org.easymock.tests.MockNameTest.defaultName":327,"org.easymock.tests2.UsageConstraintsTest.testMatches":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":423,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":411,"org.easymock.samples.ExampleTest.voteForRemovals":231,"org.easymock.tests.UsageVarargTest.allKinds":358,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":140,"org.easymock.samples.BasicClassMockTest.testPrintContent":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":345,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":183,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":491,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":488,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":338,"org.easymock.tests2.UsageConstraintsTest.greaterThan":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":27,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":224,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":113,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":88,"org.easymock.samples.ExampleTest.voteForRemoval":229,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":114,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":318,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":106,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":97,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":258,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":271,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":333,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":485,"org.easymock.tests2.CaptureTest.testCaptureFirst":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":272,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":266,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":6,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":207,"org.easymock.tests2.CaptureTest.testCapture2_2446744":157,"org.easymock.tests2.UsageTest.moreThanOneArgument":260,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":285,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":380,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":357,"org.easymock.tests.GenericTest.testBridgedEquals":76,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":309,"org.easymock.tests.UsageExpectAndReturnTest.longType":203,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":342,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":404,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":449,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":425,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":420,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":312,"org.easymock.tests.UsageCallCountTest.tooManyCalls":310,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":482,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":391,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":182,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":117,"org.easymock.tests.MockingTest.testNiceClassMocking":83,"org.easymock.tests.MockingTest.testClassMocking":78,"org.easymock.tests2.UsageConstraintsTest.testContains":244,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":303,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":137,"org.easymock.tests2.UsageConstraintsTest.testFind":143,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":177,"org.easymock.tests.MockTypeTest.fromEasyMockClass":316,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":433,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":168,"org.easymock.tests.UsageExpectAndReturnTest.object":210,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":481,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":277,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":352,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":324,"org.easymock.tests.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":429,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":359,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":216,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":347,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":461,"org.easymock.tests.MockClassControlTest.testHashCode":94,"org.easymock.tests2.EasyMockSupportTest.testVerify":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":36,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":430,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":456,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":490,"org.easymock.tests.UsageVarargTest.varargCharAccepted":351,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":385,"org.easymock.tests2.UsageTest.openCallCountByLastCall":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":163,"org.easymock.tests.DefaultClassInstantiatorTest.object":84,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":280,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":299,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":322,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":37,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":476,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":460,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":111,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":392,"org.easymock.tests.CapturesMatcherTest.test":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":217,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":45,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":92,"org.easymock.tests2.UsageTest.resumeIfFailure":265,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":66,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":336,"org.easymock.tests2.StubTest.stubWithReturnValue":287,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":54,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":209,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":254,"org.easymock.tests2.SerializationTest.testAllMockedMethod":65,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":378,"org.easymock.samples.SupportTest.voteForRemovals":232,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":398,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":63,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":384,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":454,"org.easymock.tests.UsageExpectAndThrowTest.object":396,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":360,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":252,"org.easymock.tests2.DelegateToTest.testWrongClass":487,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":186,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":187,"org.easymock.tests.UsageStrictMockTest.range":16,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":452,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":397,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":126,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":419,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":23,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":330,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":174,"org.easymock.tests2.CaptureTest.testCaptureNone":153,"org.easymock.tests.UsageUnorderedTest.message":12,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests.UsageVarargTest.varargByteAccepted":356,"org.easymock.tests2.ThreadingTest.testThreadSafe":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":40,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":307,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":99,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":325,"org.easymock.tests2.CaptureTest.testCapture_2617107":147,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageConstraintsTest.any":242,"org.easymock.tests2.StubTest.stub":484,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":416,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":313,"org.easymock.tests.UsageExpectAndThrowTest.longType":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":383,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":87,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":415,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":493,"org.easymock.tests2.SerializationTest.testClass":51,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":268,"org.easymock.tests.LimitationsTest.mockNativeMethod":70,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":75,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":219,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":475,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":494,"org.easymock.tests2.NameTest.nameForMocksControl":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":477,"org.easymock.tests2.MockedExceptionTest.testMockedException":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":28,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":196,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":446,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":390,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":82,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":127,"org.easymock.tests.MockingTest.testNicePartialClassMocking":81,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":105,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":473,"org.easymock.tests2.CaptureTest.testCaptureLast":152,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":427,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":49,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":61,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":253,"org.easymock.tests.MockingTest.testTwoMocks":79,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":200,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":394,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":256,"org.easymock.samples.ExampleTest.removeNonExistingDocument":439,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":479,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":413,"org.easymock.tests.UsageStrictMockTest.differentMethods":141,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":462,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":85,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":284,"org.easymock.tests2.MockBuilderTest.testCreateMockString":130,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":89,"org.easymock.tests.UsageExpectAndThrowTest.floatType":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":30,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":25,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":170,"org.easymock.tests.UsageVerifyTest.twoThrows":13,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":39,"org.easymock.samples.ExampleTest.voteAgainstRemoval":230,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":373,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":112,"org.easymock.tests.LimitationsTest.privateConstructor":69,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":59,"org.easymock.tests2.UsageConstraintsTest.testNotNull":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":184,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":135,"org.easymock.tests2.UsageTest.defaultResetToNice":264,"org.easymock.samples.ExampleTest.voteAgainstRemovals":228,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":374,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":474,"org.easymock.tests.UsageVarargTest.differentLength":353,"org.easymock.tests2.CallbackTest.callback":172,"org.easymock.tests2.UsageConstraintsTest.equals":447,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":108,"org.easymock.tests.UsageTest.openCallCountByLastCall":195,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":409,"org.easymock.tests.UsageCallCountTest.tooFewCalls":305,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":332,"org.easymock.tests.UsageThrowableTest.throwCheckedException":181,"org.easymock.tests.MockingTest.testStrictClassMocking":77,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":119,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":361,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":478,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":48,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":418,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":234,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":171,"org.easymock.tests.ObjectMethodsTest.testHashCode":323,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":286,"org.easymock.tests2.NameTest.nameForNiceMock":296,"org.easymock.tests2.DependencyTest.testInterfaceMocking":288,"org.easymock.samples.ExampleTest.addDocument":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":46,"org.easymock.tests2.DelegateToTest.testStubDelegate":290,"org.easymock.tests2.AnswerTest.stubAnswer":267,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":227,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":450,"org.easymock.tests.UsageVarargTest.varargLongAccepted":355,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":371,"org.easymock.tests.UsageExpectAndReturnTest.floatType":202,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":218,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":468,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":250,"org.easymock.tests.UsageThrowableTest.noUpperLimit":328,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":236,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":131,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":150,"org.easymock.tests2.SerializationTest.test":64,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":201,"org.easymock.tests2.UsageConstraintsTest.testSame":240,"org.easymock.samples.SupportTest.addDocument":443,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":445,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":31,"org.easymock.tests.GenericTest.testPackageScope":73,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":467,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":407,"org.easymock.tests2.NameTest.nameForMock":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":212,"org.easymock.tests2.UsageStrictMockTest.differentMethods":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":57,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":400,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":321,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":226,"org.easymock.tests2.MockedExceptionTest.testRealException":160,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":319,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":375,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":221,"org.easymock.tests2.NameTest.nameForStrictMock":295,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":123,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":167,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":104,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":134,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":86,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":121,"org.easymock.tests2.UsageStrictMockTest.range":20,"org.easymock.tests2.UsageConstraintsTest.lessThan":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":464,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":370,"org.easymock.tests2.CaptureTest.testCaptureRightOne":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":35,"org.easymock.tests2.UsageConstraintsTest.testOr":241,"org.easymock.tests.UsageRangeTest.combination":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":102,"org.easymock.tests.UsageTest.wrongArguments":9,"org.easymock.tests2.MockBuilderTest.testWithConstructor":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":32,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":90,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":363,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":3,"org.easymock.tests.UsageVarargTest.varargShortAccepted":354,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":308,"org.easymock.tests2.UsageConstraintsTest.cmpTo":243,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":365,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":263,"org.easymock.tests2.CaptureTest.testCaptureFromStub":156,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":0,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":122,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":306,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":56,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":214,"org.easymock.tests2.CaptureTest.testCapture":298,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":435,"org.easymock.tests2.UsageConstraintsTest.constraints":237,"org.easymock.samples.ExampleTest.addAndChangeDocument":440,"org.easymock.tests.UsageStrictMockTest.testVerify":437,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":442,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":434,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":343,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":190,"org.easymock.tests.LimitationsTest.abstractClass":68,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":191,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":275,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":348}}]
