[{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,0,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,1,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,2,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,0,293,294,295,296,297,298,299,306,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,330,331,332,334,335,336,337,1,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,2,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[494],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[34,35,36,37,38,39,48,146,147,148,179,180,235,236,257,258,259,260,261,341,416,451,456,457,458,459,461,462,463,464,465,466,467,468,469,470,471,472,473,2,474,475,476,477,478,479,480,481,482,483,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,507],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[508,509,235,510,511],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[300],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[132,210],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:120","sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[18,19,40,107,115,143,156,209,210,238,239,250,293,294,453,454,457,458,461,463,464,470,473,475,482],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[465,491,493,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[15,17,20,21,144,145,146,235,236,239,290,291,296,297,437,438,439,440,451,454],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,58,60,61,64,71,72,73,74,75,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,160,161,163,179,180,181,182,183,184,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,287,288,289,290,291,292,0,293,294,295,296,297,298,299,312,313,316,317,318,319,322,323,324,325,326,327,328,330,331,332,334,335,336,337,1,338,339,341,344,345,346,347,355,365,368,378,384,392,399,400,401,402,403,406,407,408,410,412,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,442,443,444,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,462,463,464,465,466,468,469,470,471,472,473,2,474,475,476,477,478,479,480,481,482,483,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,507],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[351,352,354,357,358,361,388,389,391,394,395,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[12,14,15,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,58,60,61,63,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,112,113,141,143,144,145,146,147,148,154,155,156,160,161,163,179,210,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,270,271,272,275,276,277,278,279,280,282,283,284,285,286,287,288,289,290,291,292,0,293,294,295,296,297,298,299,313,316,318,319,323,325,326,327,328,330,331,332,334,335,336,337,1,338,341,345,346,347,355,365,368,378,384,392,403,406,407,408,410,412,414,415,416,417,420,422,423,424,425,426,427,428,429,430,431,432,433,434,435,437,438,439,440,442,444,446,448,449,450,451,452,453,454,455,456,457,458,459,461,462,463,464,465,466,467,468,469,470,471,472,473,2,474,475,476,477,478,479,480,481,482,483,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,503,504,505,507],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,273,274,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,0,293,294,295,296,297,298,299,306,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,330,331,332,334,335,336,337,1,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,2,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[273,273,274,274,320,321,342,410,411,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[3,8,50,51,52,53,54,55,56,57,84,139,140,141,142,157,158,159,160,161,163,166,242,243,244,245,246,247,248,262,263,264,265,266,270,273,273,274,274,283,284,285,306,309,512,312,513,313,314,315,316,317,318,319,321,322,323,514,515,324,325,326,327,328,331,332,334,335,337,1,338,339,341,342,343,344,345,346,347,348,349,516,517,518,519,520,521,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,410,411,418,419,420,488,490],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[476],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[14,15,17,18,19,20,21,22,23,34,35,108,110,113,143,144,145,146,156,235,236,239,251,276,288,290,291,293,294,296,297,299,403,437,438,439,440,446,451,454,462,463,468,469,481,482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[34,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[321,522,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[316,345,346,517,520,521],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":459,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":14,"org.easymock.tests2.UsageTest.argumentsOrdered":297,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":124,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":0,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":287,"org.easymock.tests2.DelegateToTest.testReturnException":442,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":45,"org.easymock.tests.MockingTest.testPartialClassMocking":160,"org.easymock.tests.MockClassControlTest.testToString":52,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":436,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":372,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":213,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":368,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":487,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":206,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":466,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":35,"org.easymock.tests2.UsageTest.wrongArguments":291,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":183,"org.easymock.samples.ExampleTest.answerVsDelegate":276,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":8,"org.easymock.tests2.UsageConstraintsTest.testNull":462,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":165,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":337,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":431,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":57,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":516,"org.easymock.tests2.CaptureTest.testPrimitive":494,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":39,"org.easymock.tests.UsageTest.moreThanOneArgument":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":232,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":151,"org.easymock.tests.UsageTest.argumentsOrdered":21,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":208,"org.easymock.tests.UsageVarargTest.varargIntAccepted":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":257,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":312,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":397,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":308,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":261,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":190,"org.easymock.tests.ReplayStateInvalidUsageTest.times":175,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":355,"org.easymock.tests2.DependencyTest.testClassMocking":484,"org.easymock.tests2.AnswerTest.answer":403,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":402,"org.easymock.tests2.CaptureTest.testAnd":491,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":5,"org.easymock.tests2.UsageTest.strictResetToDefault":289,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":426,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":42,"org.easymock.tests2.DelegateToTest.testDelegate":446,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":212,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":228,"org.easymock.tests.LimitationsTest.mockFinalMethod":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":75,"org.easymock.tests2.DependencyTest.testClassMockingSupport":485,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":11,"org.easymock.tests2.CaptureTest.testCapture1_2446744":495,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":400,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":169,"org.easymock.tests.UsageThrowableTest.throwError":249,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":7,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":398,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":386,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":193,"org.easymock.samples.PartialClassMockTest.testGetArea":285,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":170,"org.easymock.tests.MockingTest.testInterfaceMocking":162,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":258,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":268,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":214,"org.easymock.tests2.UsageTest.niceToStrict":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":373,"org.easymock.tests2.ThreadingTest.testChangeDefault":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":114,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":316,"org.easymock.tests2.MockBuilderTest.testCreateMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":358,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":510,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":222,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":427,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":4,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":78,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":105,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":181,"org.easymock.tests.UsageOverloadedMethodTest.overloading":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":472,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":61,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":96,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":471,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":500,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":26,"org.easymock.tests.MockClassControlTest.testEquals":56,"org.easymock.tests2.EasyMockSupportClassTest.testAll":365,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":230,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":517,"org.easymock.tests2.CaptureTest.testCaptureAll":492,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":73,"org.easymock.tests.MockNameTest.defaultName":207,"org.easymock.tests2.UsageConstraintsTest.testMatches":473,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":152,"org.easymock.samples.ExampleTest.voteForRemovals":280,"org.easymock.tests.UsageVarargTest.allKinds":34,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":74,"org.easymock.samples.BasicClassMockTest.testPrintContent":284,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":255,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":449,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":445,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":49,"org.easymock.tests2.UsageConstraintsTest.greaterThan":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":41,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":347,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":194,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":248,"org.easymock.samples.ExampleTest.voteForRemoval":277,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":414,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":348,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":514,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":9,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":339,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":186,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":270,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":288,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":424,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":44,"org.easymock.tests2.CaptureTest.testCaptureFirst":504,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":425,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":299,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":92,"org.easymock.tests2.CaptureTest.testCapture2_2446744":503,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":416,"org.easymock.tests2.UsageTest.moreThanOneArgument":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":132,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":323,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":33,"org.easymock.tests.GenericTest.testBridgedEquals":266,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":112,"org.easymock.tests.UsageExpectAndReturnTest.longType":88,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":422,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":71,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":515,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":231,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":479,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":149,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":66,"org.easymock.tests.UsageCallCountTest.tooManyCalls":113,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":218,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":254,"org.easymock.tests.MockingTest.testNiceClassMocking":166,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":326,"org.easymock.tests.MockingTest.testClassMocking":158,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":513,"org.easymock.tests2.UsageConstraintsTest.testContains":470,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":106,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":420,"org.easymock.tests2.UsageConstraintsTest.testFind":461,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":156,"org.easymock.tests.MockTypeTest.fromEasyMockClass":6,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":507,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":233,"org.easymock.tests.UsageExpectAndReturnTest.object":95,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":341,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":430,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":28,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":82,"org.easymock.tests.UsageTest.exactCallCountByLastCall":22,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":119,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":68,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":209,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":411,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":101,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":23,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":60,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":388,"org.easymock.tests.MockClassControlTest.testHashCode":55,"org.easymock.tests2.EasyMockSupportTest.testVerify":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":375,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":210,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":58,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":399,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":409,"org.easymock.tests.UsageVarargTest.varargCharAccepted":27,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":137,"org.easymock.tests2.UsageTest.openCallCountByLastCall":293,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":433,"org.easymock.tests.DefaultClassInstantiatorTest.object":242,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":76,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":80,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":376,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":521,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":387,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":54,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":192,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":345,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":219,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":102,"org.easymock.tests.ReplayStateInvalidCallsTest.times":198,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":65,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":384,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":53,"org.easymock.tests2.UsageTest.resumeIfFailure":298,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":3,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":47,"org.easymock.tests2.StubTest.stubWithReturnValue":448,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":480,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":94,"org.easymock.tests2.SerializationTest.testAllMockedMethod":490,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":130,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":522,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":511,"org.easymock.samples.SupportTest.voteForRemovals":272,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":390,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":225,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":136,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":404,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":70,"org.easymock.tests.UsageExpectAndThrowTest.object":223,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":477,"org.easymock.tests2.DelegateToTest.testWrongClass":444,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":147,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":196,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":148,"org.easymock.tests.UsageStrictMockTest.range":238,"org.easymock.samples.ConstructorCalledMockTest.testTax":273,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":310,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":429,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":318,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":177,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":182,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":508,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":188,"org.easymock.tests2.CaptureTest.testCaptureNone":499,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":269,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":301,"org.easymock.tests.UsageUnorderedTest.message":146,"org.easymock.tests.UsageVerifyTest.twoReturns":145,"org.easymock.tests.UsageVarargTest.varargByteAccepted":32,"org.easymock.tests2.ThreadingTest.testThreadSafe":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":379,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":110,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":83,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":283,"org.easymock.tests2.CaptureTest.testCapture_2617107":493,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":38,"org.easymock.tests2.UsageConstraintsTest.any":468,"org.easymock.tests2.StubTest.stub":447,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":46,"org.easymock.tests.UsageExpectAndThrowTest.longType":216,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":246,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":173,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":452,"org.easymock.tests2.SerializationTest.testClass":488,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":392,"org.easymock.tests.LimitationsTest.mockNativeMethod":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":104,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":265,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":520,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":352,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":204,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":455,"org.easymock.tests2.NameTest.nameForMocksControl":440,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":302,"org.easymock.tests2.MockedExceptionTest.testMockedException":419,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":367,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":19,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":506,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":217,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":334,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":319,"org.easymock.tests.MockingTest.testNicePartialClassMocking":161,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":338,"org.easymock.tests2.CaptureTest.testCaptureLast":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":350,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":12,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":465,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":203,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":332,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":478,"org.easymock.tests.MockingTest.testTwoMocks":159,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":200,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":221,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":296,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":482,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":305,"org.easymock.samples.ExampleTest.removeNonExistingDocument":281,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":171,"org.easymock.tests.UsageStrictMockTest.differentMethods":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":389,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":244,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":304,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":415,"org.easymock.tests2.MockBuilderTest.testCreateMockString":324,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":50,"org.easymock.tests.UsageExpectAndThrowTest.floatType":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":369,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":406,"org.easymock.tests.UsageVerifyTest.twoThrows":144,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":378,"org.easymock.samples.ExampleTest.voteAgainstRemoval":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":125,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":346,"org.easymock.tests.LimitationsTest.privateConstructor":140,"org.easymock.tests2.UsageConstraintsTest.testNotNull":481,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":418,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":256,"org.easymock.tests2.UsageTest.defaultResetToNice":295,"org.easymock.samples.ExampleTest.voteAgainstRemovals":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":100,"org.easymock.tests.UsageVarargTest.differentLength":29,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":351,"org.easymock.tests2.CallbackTest.callback":435,"org.easymock.tests2.UsageConstraintsTest.equals":460,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":342,"org.easymock.tests.UsageTest.openCallCountByLastCall":18,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":456,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":37,"org.easymock.tests.UsageCallCountTest.tooFewCalls":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":184,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":303,"org.easymock.tests.UsageThrowableTest.throwCheckedException":253,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":509,"org.easymock.tests.MockingTest.testStrictClassMocking":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":180,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":331,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":327,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":330,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":408,"org.easymock.tests.ObjectMethodsTest.testHashCode":81,"org.easymock.tests2.NameTest.nameForNiceMock":439,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":417,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":202,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":197,"org.easymock.tests2.DependencyTest.testInterfaceMocking":486,"org.easymock.samples.ExampleTest.addDocument":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":380,"org.easymock.tests2.DelegateToTest.testStubDelegate":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.AnswerTest.stubAnswer":407,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":236,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":320,"org.easymock.tests.UsageVarargTest.varargLongAccepted":31,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":103,"org.easymock.tests.UsageExpectAndReturnTest.floatType":87,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":410,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":274,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":475,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":396,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests.UsageThrowableTest.noUpperLimit":250,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":457,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":306,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":496,"org.easymock.tests2.SerializationTest.test":489,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":243,"org.easymock.tests2.UsageConstraintsTest.testSame":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":86,"org.easymock.samples.SupportTest.addDocument":271,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":329,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":187,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":370,"org.easymock.tests.GenericTest.testPackageScope":263,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":118,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":395,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":164,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":185,"org.easymock.tests2.NameTest.nameForMock":437,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":97,"org.easymock.tests2.UsageStrictMockTest.differentMethods":454,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":343,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":227,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":79,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":43,"org.easymock.tests2.MockedExceptionTest.testRealException":421,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":128,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":311,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":127,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":36,"org.easymock.tests2.NameTest.nameForStrictMock":438,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":315,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":505,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":1,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":309,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":476,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":245,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":313,"org.easymock.tests2.UsageStrictMockTest.range":453,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":191,"org.easymock.tests2.UsageConstraintsTest.lessThan":483,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":518,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":391,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":512,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":122,"org.easymock.tests2.CaptureTest.testCaptureRightOne":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":374,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":300,"org.easymock.tests2.UsageConstraintsTest.testOr":464,"org.easymock.tests.UsageRangeTest.combination":40,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":335,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":371,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":51,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":98,"org.easymock.tests.UsageVarargTest.varargShortAccepted":30,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":247,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":111,"org.easymock.tests2.UsageConstraintsTest.cmpTo":469,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":205,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":405,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":117,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":294,"org.easymock.tests2.CaptureTest.testCaptureFromStub":502,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":168,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":314,"org.easymock.tests.UsageTest.unexpectedCallWithArray":16,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":201,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":235,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":109,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":99,"org.easymock.tests2.UsageConstraintsTest.constraints":458,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":237,"org.easymock.samples.ExampleTest.addAndChangeDocument":282,"org.easymock.tests.UsageStrictMockTest.testVerify":241,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":286,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":72,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":497,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":519,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":259,"org.easymock.tests.LimitationsTest.abstractClass":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":91,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":428,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":24}}]
