[{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Invocation:195","failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[64,65,66,67],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[68,8,9,10,11,69,70,71,72,12,13,14,15,16,17,18,19,20,21,22,23,73,24,74,75,76,77,78,79,80,81,82,25,83,84,26,85,27,86,87,88,28,89,90,29,91,30,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,31,129,130,32,131,132,133,134,135,136,33,137,138,139,34,140,35,36,37,38,39,40,41,42,43,44,45,46,47,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,48,49,186,187,188,189,190,50,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,51,52,210,53,211,212,54,213,214,55,56,215,216,217,218,219,57,220,58,59,221,222,223,224,64,65,66,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,60,311,312,313,61,314,62,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,63,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[8,9,10,11,96,143,145,146,149,150,152,153,155,162,163,168,169,182,183,194,196,197,234,319,347,358,359,367,368,371,372,373,393,422,424,427,428,429,431,432,433,434,435,436,450,451,453,454,479,481],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[159],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[166,172,184,497],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[116,122,123,128,164,168,194,306,307,308,309,310,319,359,360,415,417,418,451,463,464,465,466,467],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[96,99,100,199,200,201,481],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[27,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[498,499],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[500],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[470,471,472,474,476],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[166,172,184,497],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[73,24,74,75,76,77,80,83,84,26,105,113,114,130,133,135,33,34,48,49,186,187,189,190,50,194,196,197,210,212,219,222,225,231,276,277,278,279,280,281,284,285,287,288,289,291,292,293,294,295,299,306,307,308,309,310,361,362,363,364,399,400,401,402,417,418,440,441,443,451,453,454,463,480,482,483,485,492,495],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[501,502],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[146,152,153,196,503,319,372,373,430,431,434,435,450,453],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[504],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[469,470,471,472,474,476],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[115,117,125,158,159,164,165,167,177],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[154,255,400,401,402],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Find:41","failures":[505],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[8,9,10,11,69,70,71,72,73,24,74,75,76,77,80,25,84,96,99,100,101,102,103,104,105,106,107,108,109,110,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,31,133,134,34,35,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,48,49,186,190,50,192,193,194,195,196,197,198,199,201,64,65,66,225,228,230,231,232,234,236,263,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,299,302,303,306,307,308,309,310,319,320,321,322,323,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,383,391,392,393,394,395,396,397,398,399,400,401,402,409,411,412,413,414,415,416,417,418,419,420,421,422,423,424,428,429,430,431,432,433,434,435,436,440,441,443,447,448,449,450,451,452,453,454,455,456,463,464,465,466,467,478,479,480,481,482,483,484,485,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[141,253,260,381,466],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[64,65,66,67],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:116","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[64,65,66,67],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[506,507,508,509,430,450],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[96],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[100],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[239,367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[73,24,75,76,77,78,80,81,82,25,83,84,26,85,27,107,108,109,31,501,130,32,132,133,134,135,33,138,139,34,502,35,48,49,186,187,190,50,510,202,206,209,51,52,210,53,211,212,54,213,214,55,56,215,216,217,218,219,57,220,58,59,221,222,223,224,64,66,225,226,262,263,264,265,266,267,268,269,275,297,298,299,300,301,302,303,304,305,60,314,437,438,439,440,441,443,446,447,469,470,471,472,473,474,476,488,489,490,490,491,491,492],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[8,9,10,11,69,70,71,72,73,24,74,75,76,77,80,25,84,96,99,100,101,102,103,104,105,106,107,108,109,110,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,31,133,134,34,35,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,48,49,186,190,50,192,193,194,195,196,197,198,199,201,64,65,66,225,228,230,231,232,234,236,263,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,299,302,303,306,307,308,309,310,319,320,321,322,323,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,383,391,392,393,394,395,396,397,398,399,400,401,402,409,411,412,413,414,415,416,417,418,419,420,421,422,423,424,428,429,430,431,432,433,434,435,436,440,441,443,447,448,449,450,451,452,453,454,455,456,463,464,465,466,467,478,479,480,481,482,483,484,485,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[160],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:86","sourceCode":"return org.easymock.internal.Results.getMainInterval().expectedCount()","type":"CtReturnImpl"},"failures":[8,9,10,11,145,146,152,153,194,196,197,319,371,372,373,429,431,434,435,450,451,453,454],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":159,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":428,"org.easymock.tests2.UsageTest.argumentsOrdered":153,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":248,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":148,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":496,"org.easymock.tests2.DelegateToTest.testReturnException":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":412,"org.easymock.tests.MockingTest.testPartialClassMocking":440,"org.easymock.tests.MockClassControlTest.testToString":264,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":68,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":461,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":55,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":327,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":114,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":463,"org.easymock.tests2.UsageTest.wrongArguments":146,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":322,"org.easymock.samples.ExampleTest.answerVsDelegate":481,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":314,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":445,"org.easymock.tests2.UsageConstraintsTest.testNull":162,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":75,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":92,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":269,"org.easymock.tests2.CaptureTest.testPrimitive":118,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":467,"org.easymock.tests.UsageTest.moreThanOneArgument":429,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":346,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":363,"org.easymock.tests.UsageTest.argumentsOrdered":435,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":366,"org.easymock.tests.UsageVarargTest.varargIntAccepted":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":306,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":22,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":204,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":310,"org.easymock.tests.ReplayStateInvalidUsageTest.times":387,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":41,"org.easymock.tests2.DependencyTest.testClassMocking":111,"org.easymock.tests2.AnswerTest.answer":96,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":255,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":72,"org.easymock.tests2.CaptureTest.testAnd":115,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":312,"org.easymock.tests2.UsageTest.strictResetToDefault":144,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":362,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":89,"org.easymock.tests2.DelegateToTest.testDelegate":234,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":370,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":342,"org.easymock.tests.LimitationsTest.mockFinalMethod":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":415,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":378,"org.easymock.tests2.DependencyTest.testClassMockingSupport":112,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":235,"org.easymock.tests2.CaptureTest.testCapture1_2446744":119,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":340,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":70,"org.easymock.tests.UsageThrowableTest.throwError":391,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":381,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":61,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":23,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":224,"org.easymock.samples.PartialClassMockTest.testGetArea":492,"org.easymock.tests.MockingTest.testInterfaceMocking":442,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":382,"org.easymock.tests2.CompareToTest.testLessOrEqual":504,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":307,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":317,"org.easymock.tests2.UsageTest.niceToStrict":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":56,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":238,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":133,"org.easymock.tests2.MockBuilderTest.testCreateMock":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":58,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":44,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":336,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":90,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":311,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":326,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":419,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":320,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":2,"org.easymock.tests.UsageOverloadedMethodTest.overloading":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":221,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":407,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":172,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":477,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":287,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":498,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":171,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":124,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":350,"org.easymock.tests2.EasyMockSupportClassTest.testAll":210,"org.easymock.tests.MockClassControlTest.testEquals":268,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":303,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":344,"org.easymock.tests2.CaptureTest.testCaptureAll":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":376,"org.easymock.tests.MockNameTest.defaultName":296,"org.easymock.tests2.UsageConstraintsTest.testMatches":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":364,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":379,"org.easymock.samples.ExampleTest.voteForRemovals":485,"org.easymock.tests.UsageVarargTest.allKinds":358,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":371,"org.easymock.samples.BasicClassMockTest.testPrintContent":489,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":377,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":397,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":19,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":233,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":475,"org.easymock.tests2.UsageConstraintsTest.greaterThan":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":53,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":400,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":26,"org.easymock.samples.ExampleTest.voteForRemoval":482,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":476,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":103,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":85,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":78,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":447,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":143,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":88,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":411,"org.easymock.tests2.CaptureTest.testCaptureFirst":128,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":28,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":155,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":410,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":283,"org.easymock.tests2.UsageTest.moreThanOneArgument":145,"org.easymock.tests2.CaptureTest.testCapture2_2446744":127,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":105,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":256,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":357,"org.easymock.tests.GenericTest.testBridgedEquals":305,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":426,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":0,"org.easymock.tests.UsageExpectAndReturnTest.longType":279,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":374,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":502,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":345,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":403,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":180,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":343,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":458,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":361,"org.easymock.tests.UsageCallCountTest.tooManyCalls":427,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":332,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":396,"org.easymock.tests.MockingTest.testNiceClassMocking":446,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":49,"org.easymock.tests.MockingTest.testClassMocking":438,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":501,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":420,"org.easymock.tests2.UsageConstraintsTest.testContains":170,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":109,"org.easymock.tests2.UsageConstraintsTest.testFind":161,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":479,"org.easymock.tests.MockTypeTest.fromEasyMockClass":313,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":448,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":201,"org.easymock.tests.UsageExpectAndReturnTest.object":286,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":45,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":30,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":352,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":273,"org.easymock.tests.UsageTest.exactCallCountByLastCall":436,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":4,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":243,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":460,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":367,"org.easymock.tests2.ConstraintsToStringTest.findToString":505,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":226,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":292,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":347,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":13,"org.easymock.tests.MockClassControlTest.testHashCode":267,"org.easymock.tests2.EasyMockSupportTest.testVerify":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":216,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":368,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":404,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":69,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":185,"org.easymock.tests.UsageVarargTest.varargCharAccepted":351,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":468,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":261,"org.easymock.tests2.UsageTest.openCallCountByLastCall":149,"org.easymock.tests.DefaultClassInstantiatorTest.object":469,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":6,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":94,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":324,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":271,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":217,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":334,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":394,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":39,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":12,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":83,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":266,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":333,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":222,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":265,"org.easymock.tests2.UsageTest.resumeIfFailure":154,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":60,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":414,"org.easymock.tests2.StubTest.stubWithReturnValue":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":181,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":285,"org.easymock.tests2.SerializationTest.testAllMockedMethod":66,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":254,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":507,"org.easymock.samples.SupportTest.voteForRemovals":495,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":339,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":67,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":260,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":97,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":462,"org.easymock.tests.UsageExpectAndThrowTest.object":337,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":178,"org.easymock.tests2.DelegateToTest.testWrongClass":232,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":417,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":418,"org.easymock.samples.ConstructorCalledMockTest.testTax":490,"org.easymock.tests.UsageStrictMockTest.range":453,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":207,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":48,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":338,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":135,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":434,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":209,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":321,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":508,"org.easymock.tests2.CaptureTest.testCaptureNone":123,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":318,"org.easymock.tests.UsageUnorderedTest.message":319,"org.easymock.tests.UsageVerifyTest.twoReturns":373,"org.easymock.tests.UsageVarargTest.varargByteAccepted":356,"org.easymock.tests2.ThreadingTest.testThreadSafe":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":57,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":424,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":488,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":274,"org.easymock.tests2.CaptureTest.testCapture_2617107":117,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":258,"org.easymock.tests2.UsageConstraintsTest.any":168,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":386,"org.easymock.tests2.StubTest.stub":141,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":259,"org.easymock.tests.UsageExpectAndThrowTest.longType":330,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":473,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":385,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":195,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":17,"org.easymock.tests2.SerializationTest.testClass":64,"org.easymock.tests.LimitationsTest.mockNativeMethod":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":295,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":304,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":38,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":198,"org.easymock.tests2.NameTest.nameForMocksControl":11,"org.easymock.tests2.MockedExceptionTest.testMockedException":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":211,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":433,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":443,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":331,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":73,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":33,"org.easymock.tests.MockingTest.testNicePartialClassMocking":441,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":77,"org.easymock.tests2.CaptureTest.testCaptureLast":122,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":36,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":236,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":50,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":179,"org.easymock.tests.MockingTest.testTwoMocks":439,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":335,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":152,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":183,"org.easymock.samples.ExampleTest.removeNonExistingDocument":486,"org.easymock.tests.UsageStrictMockTest.differentMethods":454,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":43,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":14,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":471,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":104,"org.easymock.tests2.MockBuilderTest.testCreateMockString":35,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":54,"org.easymock.tests.UsageExpectAndThrowTest.floatType":329,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":52,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":227,"org.easymock.tests.UsageVerifyTest.twoThrows":372,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":219,"org.easymock.samples.ExampleTest.voteAgainstRemoval":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":249,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":316,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":84,"org.easymock.tests.LimitationsTest.privateConstructor":298,"org.easymock.tests2.UsageConstraintsTest.testNotNull":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":398,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":107,"org.easymock.tests2.UsageTest.defaultResetToNice":151,"org.easymock.samples.ExampleTest.voteAgainstRemovals":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":291,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":37,"org.easymock.tests.UsageVarargTest.differentLength":353,"org.easymock.tests2.CallbackTest.callback":228,"org.easymock.tests2.UsageConstraintsTest.equals":160,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":81,"org.easymock.tests.UsageTest.openCallCountByLastCall":432,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":465,"org.easymock.tests.UsageCallCountTest.tooFewCalls":422,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":323,"org.easymock.tests.UsageThrowableTest.throwCheckedException":395,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":509,"org.easymock.tests.MockingTest.testStrictClassMocking":437,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":360,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":42,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":388,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":189,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":101,"org.easymock.tests2.CompareToTest.testGreateOrEqual":497,"org.easymock.tests.ObjectMethodsTest.testHashCode":272,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":106,"org.easymock.tests2.NameTest.nameForNiceMock":10,"org.easymock.tests2.DependencyTest.testInterfaceMocking":113,"org.easymock.samples.ExampleTest.addDocument":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":223,"org.easymock.tests2.DelegateToTest.testStubDelegate":231,"org.easymock.tests2.AnswerTest.stubAnswer":100,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":451,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":137,"org.easymock.tests.UsageVarargTest.varargLongAccepted":355,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":247,"org.easymock.tests.UsageExpectAndReturnTest.floatType":278,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":225,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":491,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":408,"org.easymock.tests.UsageThrowableTest.noUpperLimit":392,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":21,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":157,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":202,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":120,"org.easymock.tests2.SerializationTest.test":65,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":499,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":470,"org.easymock.tests2.UsageConstraintsTest.testSame":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":277,"org.easymock.samples.SupportTest.addDocument":494,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":188,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":213,"org.easymock.tests.GenericTest.testPackageScope":302,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":20,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":444,"org.easymock.tests2.NameTest.nameForMock":8,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":288,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":140,"org.easymock.tests2.UsageStrictMockTest.differentMethods":197,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":341,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":270,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":402,"org.easymock.tests2.MockedExceptionTest.testRealException":110,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":315,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":252,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":251,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":464,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":390,"org.easymock.tests2.NameTest.nameForStrictMock":9,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":132,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":7,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":199,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":206,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":472,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":177,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":130,"org.easymock.tests2.UsageStrictMockTest.range":196,"org.easymock.tests2.UsageConstraintsTest.lessThan":184,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":16,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":246,"org.easymock.tests2.CaptureTest.testCaptureRightOne":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":215,"org.easymock.tests2.UsageConstraintsTest.testOr":164,"org.easymock.tests.UsageRangeTest.combination":399,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":24,"org.easymock.tests.UsageTest.wrongArguments":431,"org.easymock.tests2.MockBuilderTest.testWithConstructor":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":214,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":289,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":474,"org.easymock.tests.UsageVarargTest.varargShortAccepted":354,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":425,"org.easymock.tests2.UsageConstraintsTest.cmpTo":169,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":241,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":150,"org.easymock.tests2.CaptureTest.testCaptureFromStub":126,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":380,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":32,"org.easymock.tests.UsageTest.unexpectedCallWithArray":430,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":450,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":290,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":452,"org.easymock.tests2.UsageConstraintsTest.constraints":158,"org.easymock.samples.ExampleTest.addAndChangeDocument":487,"org.easymock.tests.UsageStrictMockTest.testVerify":456,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":493,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":449,"org.easymock.tests2.CompareToTest.testGreateThan":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":375,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":121,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":510,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":282,"org.easymock.tests.LimitationsTest.abstractClass":297,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":409,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":29,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":348}}]
