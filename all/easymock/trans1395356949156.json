[{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,6,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,2,163,164,165,166,167,3,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,7,184,185,186,187,188,189,190,191,192,193,194,1,195,196,197,198,199,0,200,201,202,203,204,205,206,4,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[296,297,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:65","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = new java.lang.Class[java.lang.String[].int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[298,261,262],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[233,237],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[246],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[94,299,300,301,302],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[238],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:110","sourceCode":"return ((org.easymock.internal.Invocation.(getMockAndMethodName()) + \"(\") + org.easymock.internal.ArgumentToString.(org.easymock.internal.ArgumentToString.argumentsToString(java.lang.Object[]))) + \")\"","type":"CtReturnImpl"},"failures":[33,57,65,66,69,70,94,97,98,303,304,132,133,168,190,195,196,227,228],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[305],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[306],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[307,8,9,13,14,49,57,63,64,66,69,70,71,92,94,95,96,97,98,99,123,131,132,133,308,309,310,2,3,311,312,313,314,187,189,190,191,192,195,196,198,4,208,209,211,215,216,219,223,225,226,227,228,229,232,246],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[315],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[316,22,24,25,26,27,28,29,32,42,63,317,318,319,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,132,6,145,184,187],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[34,35,36,37,95,97,98,100,101,103,104,105,106,107,108,111,112,114,115,116,118,119,120,121,122,123,320,124,125,126,127,128,129,130,134,138,139,140,141,146,148,149,151,155,159,2,163,165,166,3,172,178,179,180,181,185,186,199,0,200,201,202,203,205,4,207,208,225,227,228,257,271,272,273,274,275,276,277,279],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,321,33,34,35,36,37,55,56,57,63,64,65,67,68,71,317,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,320,124,125,126,127,128,129,130,131,133,322,134,135,137,323,143,144,145,146,147,148,149,150,151,324,155,156,156,159,160,2,163,165,166,167,3,168,169,170,171,172,173,174,178,179,180,181,184,185,186,187,188,189,191,192,193,194,1,195,197,198,199,0,200,201,202,203,205,206,4,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,261,265,267,268,269,270,271,272,273,274,275,276,277,279,282,283,285,286,289,290,291,292,294,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return (this.int) == (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[97,98,325,326,131,227,228],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"maximum","java.lang.Integer.MAX_VALUE":"maximum"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[327],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[307,328,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,321,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,329,100,101,330,331,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,320,124,125,126,127,128,129,130,131,132,133,134,135,136,6,137,332,138,139,140,141,142,144,145,146,147,148,149,150,151,152,162,163,164,3,168,169,170,171,172,173,174,175,176,177,182,183,7,184,311,312,313,314,185,187,188,189,190,191,192,193,194,1,195,196,197,198,199,0,200,201,202,203,205,206,207,209,223,224,225,226,227,228,229,333,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,259,260,261,262,263,264,265,266,268,269,270,272,273,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[335,76,80,81,83,86,97,98,336,337,338,107,111,112,114,117,227,228],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[339,340,304,341,342,343,165,344,273,276],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[345,346,321,33,57,64,65,66,69,70,94,95,97,98,347,330,299,348,300,349,350,351,352,131,132,133,189,190,195,196,353,301,306,354,355,356,357,358,302,359,360,225,227,228,246],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[361,362,8,363,364,365,339,366,367,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,345,31,32,346,321,33,368,34,35,36,37,38,39,40,41,42,43,54,55,369,315,57,58,59,60,61,62,370,371,372,63,64,65,66,67,68,69,70,71,317,318,319,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,373,92,94,95,96,97,98,99,100,101,374,375,376,377,378,340,347,330,379,380,381,382,336,325,326,337,338,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,320,124,125,126,127,128,129,130,131,132,133,322,134,135,136,6,137,323,341,342,343,383,384,385,138,139,140,141,142,143,144,145,146,147,148,149,151,152,155,156,156,157,157,159,162,2,386,163,164,165,166,167,3,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,7,184,185,186,187,188,189,190,191,192,193,194,1,195,196,197,198,199,0,200,201,202,203,204,205,206,4,207,208,5,209,210,211,212,213,214,215,216,217,218,219,220,221,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,387,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,388,259,298,389,260,261,262,263,264,265,266,267,390,268,269,271,272,273,274,275,276,277,391,278,279,280,392,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[393,394,395,396,397,398,399,400,401,268],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[402],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":233,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.UsageTest.argumentsOrdered":196,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":390,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":192,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":158,"org.easymock.tests2.DelegateToTest.testReturnException":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":39,"org.easymock.tests.MockingTest.testPartialClassMocking":34,"org.easymock.tests.MockClassControlTest.testToString":341,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":373,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":5,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":72,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":308,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":395,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":239,"org.easymock.tests2.UsageTest.wrongArguments":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":17,"org.easymock.samples.ExampleTest.answerVsDelegate":147,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":339,"org.easymock.tests2.UsageConstraintsTest.testNull":235,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":201,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":385,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":219,"org.easymock.tests2.CaptureTest.testPrimitive":285,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":137,"org.easymock.tests.UsageTest.moreThanOneArgument":64,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":91,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":140,"org.easymock.tests.UsageTest.argumentsOrdered":70,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":336,"org.easymock.tests.UsageVarargTest.varargIntAccepted":46,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":399,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":162,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":130,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":355,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":258,"org.easymock.tests2.AnswerTest.answer":259,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":387,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":177,"org.easymock.tests2.CaptureTest.testAnd":282,"org.easymock.tests2.UsageTest.strictResetToDefault":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":139,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":214,"org.easymock.tests2.DelegateToTest.testDelegate":281,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":62,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":347,"org.easymock.tests2.CaptureTest.testCapture1_2446744":286,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":85,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":175,"org.easymock.tests.UsageThrowableTest.throwError":22,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":365,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":142,"org.easymock.samples.PartialClassMockTest.testGetArea":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":371,"org.easymock.tests2.UsageTest.niceToStrict":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":73,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":340,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":163,"org.easymock.tests2.MockBuilderTest.testCreateMock":167,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":81,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":301,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":215,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":15,"org.easymock.tests.UsageOverloadedMethodTest.overloading":144,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":32,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":244,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":114,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":243,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":291,"org.easymock.tests.MockClassControlTest.testEquals":384,"org.easymock.tests2.EasyMockSupportClassTest.testAll":178,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":56,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":89,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":60,"org.easymock.tests2.CaptureTest.testCaptureAll":283,"org.easymock.tests.MockNameTest.defaultName":382,"org.easymock.tests2.UsageConstraintsTest.testMatches":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":141,"org.easymock.samples.ExampleTest.voteForRemovals":151,"org.easymock.tests.UsageVarargTest.allKinds":54,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":131,"org.easymock.samples.BasicClassMockTest.testPrintContent":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":61,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":28,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":223,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":400,"org.easymock.tests2.UsageConstraintsTest.greaterThan":247,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":320,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":208,"org.easymock.samples.ExampleTest.voteForRemoval":148,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":170,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":366,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":204,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":19,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":212,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":38,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":391,"org.easymock.tests2.CaptureTest.testCaptureFirst":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":213,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":198,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":33,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":110,"org.easymock.tests2.UsageTest.moreThanOneArgument":189,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":172,"org.easymock.tests2.CaptureTest.testCapture2_2446744":294,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":3,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":53,"org.easymock.tests.GenericTest.testBridgedEquals":315,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":13,"org.easymock.tests.UsageExpectAndReturnTest.longType":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":58,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":210,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":90,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":252,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":322,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":138,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":380,"org.easymock.tests.UsageCallCountTest.tooManyCalls":14,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":348,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":77,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":27,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":272,"org.easymock.tests2.UsageConstraintsTest.testContains":242,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":328,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":265,"org.easymock.tests2.UsageConstraintsTest.testFind":234,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":145,"org.easymock.tests.MockTypeTest.fromEasyMockClass":364,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":183,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":92,"org.easymock.tests.UsageExpectAndReturnTest.object":113,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":396,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":48,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":377,"org.easymock.tests.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":305,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":20,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":325,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":401,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":119,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":44,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":31,"org.easymock.tests.MockClassControlTest.testHashCode":383,"org.easymock.tests2.EasyMockSupportTest.testVerify":222,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":354,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":326,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":30,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":174,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":333,"org.easymock.tests.UsageVarargTest.varargCharAccepted":47,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":224,"org.easymock.tests2.UsageTest.openCallCountByLastCall":193,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":221,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":317,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":375,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":79,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":25,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":4,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":78,"org.easymock.tests.CapturesMatcherTest.test":102,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":120,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":181,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":342,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":356,"org.easymock.tests2.UsageTest.resumeIfFailure":197,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":41,"org.easymock.tests2.StubTest.stubWithReturnValue":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":393,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":112,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":253,"org.easymock.tests2.SerializationTest.testAllMockedMethod":270,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":361,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":297,"org.easymock.samples.SupportTest.voteForRemovals":155,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":302,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":327,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":84,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":362,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":298,"org.easymock.tests.UsageExpectAndThrowTest.object":82,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":250,"org.easymock.tests2.DelegateToTest.testWrongClass":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":100,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":101,"org.easymock.samples.ConstructorCalledMockTest.testTax":156,"org.easymock.tests.UsageStrictMockTest.range":97,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":271,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":83,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":165,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":16,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":299,"org.easymock.tests2.CaptureTest.testCaptureNone":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":372,"org.easymock.tests.UsageUnorderedTest.message":57,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":303,"org.easymock.tests.UsageVerifyTest.twoReturns":133,"org.easymock.tests.UsageVarargTest.varargByteAccepted":52,"org.easymock.tests2.ThreadingTest.testThreadSafe":169,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":11,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":160,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":378,"org.easymock.tests2.CaptureTest.testCapture_2617107":284,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":360,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":6,"org.easymock.tests2.UsageConstraintsTest.any":240,"org.easymock.tests2.StubTest.stub":7,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":40,"org.easymock.tests.UsageExpectAndThrowTest.longType":75,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":226,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":267,"org.easymock.tests2.SerializationTest.testClass":268,"org.easymock.tests.LimitationsTest.mockNativeMethod":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":122,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":369,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":229,"org.easymock.tests2.NameTest.nameForMocksControl":314,"org.easymock.tests2.MockedExceptionTest.testMockedException":264,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":68,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":76,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":199,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":166,"org.easymock.tests.MockingTest.testNicePartialClassMocking":35,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":203,"org.easymock.tests2.CompareToTest.testNotComparable":334,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":394,"org.easymock.tests2.CaptureTest.testCaptureLast":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":330,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":238,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":277,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":251,"org.easymock.tests.MockingTest.testTwoMocks":368,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":80,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":195,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":255,"org.easymock.samples.ExampleTest.removeNonExistingDocument":324,"org.easymock.tests.UsageStrictMockTest.differentMethods":98,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":331,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":171,"org.easymock.tests2.ConstraintsToStringTest.andToString":358,"org.easymock.tests2.MockBuilderTest.testCreateMockString":168,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":323,"org.easymock.tests.UsageExpectAndThrowTest.floatType":74,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":246,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":260,"org.easymock.tests.UsageVerifyTest.twoThrows":132,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":180,"org.easymock.samples.ExampleTest.voteAgainstRemoval":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":370,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":207,"org.easymock.tests2.UsageConstraintsTest.testNotNull":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":29,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":263,"org.easymock.tests2.UsageTest.defaultResetToNice":1,"org.easymock.samples.ExampleTest.voteAgainstRemovals":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":118,"org.easymock.tests.UsageVarargTest.differentLength":49,"org.easymock.tests2.CallbackTest.callback":209,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":349,"org.easymock.tests.UsageTest.openCallCountByLastCall":67,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":230,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":136,"org.easymock.tests.UsageCallCountTest.tooFewCalls":9,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":18,"org.easymock.tests.UsageThrowableTest.throwCheckedException":26,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":300,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":21,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":388,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":273,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":275,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":262,"org.easymock.tests.ObjectMethodsTest.testHashCode":376,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":398,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":173,"org.easymock.tests2.NameTest.nameForNiceMock":313,"org.easymock.tests2.DependencyTest.testInterfaceMocking":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":397,"org.easymock.samples.ExampleTest.addDocument":150,"org.easymock.tests2.DelegateToTest.testStubDelegate":279,"org.easymock.tests2.AnswerTest.stubAnswer":261,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":95,"org.easymock.tests.UsageVarargTest.varargLongAccepted":51,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":99,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":121,"org.easymock.tests.UsageExpectAndReturnTest.floatType":105,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":257,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":157,"org.easymock.tests2.ConstraintsToStringTest.orToString":353,"org.easymock.tests.UsageThrowableTest.noUpperLimit":23,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":248,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":231,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":344,"org.easymock.tests2.SerializationTest.test":269,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":104,"org.easymock.tests2.UsageConstraintsTest.testSame":236,"org.easymock.samples.SupportTest.addDocument":154,"org.easymock.tests.GenericTest.testPackageScope":55,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":337,"org.easymock.tests2.NameTest.nameForMock":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":115,"org.easymock.tests2.UsageStrictMockTest.differentMethods":228,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":107,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":86,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":374,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":125,"org.easymock.tests2.MockedExceptionTest.testRealException":266,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":367,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":350,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":225,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":135,"org.easymock.tests2.NameTest.nameForStrictMock":312,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":182,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":202,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":249,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":309,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":2,"org.easymock.tests2.UsageStrictMockTest.range":227,"org.easymock.tests2.UsageConstraintsTest.lessThan":256,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":335,"org.easymock.tests2.CaptureTest.testCaptureRightOne":292,"org.easymock.tests2.UsageConstraintsTest.testOr":237,"org.easymock.tests.UsageRangeTest.combination":123,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":0,"org.easymock.tests.UsageTest.wrongArguments":66,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":108,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":116,"org.easymock.tests.UsageVarargTest.varargShortAccepted":50,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":12,"org.easymock.tests2.UsageConstraintsTest.cmpTo":241,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":316,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":194,"org.easymock.tests2.CaptureTest.testCaptureFromStub":293,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":386,"org.easymock.tests.UsageTest.unexpectedCallWithArray":65,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":117,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":96,"org.easymock.tests2.UsageConstraintsTest.constraints":232,"org.easymock.samples.ExampleTest.addAndChangeDocument":152,"org.easymock.tests2.ConstraintsToStringTest.notToString":306,"org.easymock.tests.UsageStrictMockTest.testVerify":329,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":153,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":59,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":128,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":129,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":45,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":216,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":310}}]
