[{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,0,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[59,60,61,484],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[17,20,21,93,291,294,295,437,438,439,445,459,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[158],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[59,60,61],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[9,11,14,55,223,322,470],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[19,251,293,485,486,438,439],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[487,77,78,79,80,81,82,83,84,86,488,87,88,89,90,489],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[96,129,148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[490,491,492],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[77,79,87,113,114,119,120,122,132],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[167,169,171,493,235],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[279],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[23,24,26,29,30,33,179,180,182,185,186,189],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[193,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[495],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[96,129,148],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[275],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[15,17,18,19,20,21,27,28,35,37,39,40,42,43,55,65,66,70,71,91,93,94,95,96,100,101,102,103,113,129,140,141,142,143,145,155,158,160,161,163,164,169,171,174,175,177,183,184,237,240,241,251,282,283,284,288,290,291,292,293,294,295,300,302,303,306,307,308,367,427,433,437,438,439,444,445,446,447,450,451,452,457,458,460,463,464,465,466,467,471,474,475,476],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[496,497,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[499,113,121,127,138],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":114,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":444,"org.easymock.tests2.UsageTest.argumentsOrdered":101,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":319,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":96,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":234,"org.easymock.tests2.DelegateToTest.testReturnException":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":479,"org.easymock.tests.MockingTest.testPartialClassMocking":371,"org.easymock.tests.MockClassControlTest.testToString":282,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":139,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":204,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":200,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":343,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":121,"org.easymock.tests2.UsageTest.wrongArguments":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":333,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":455,"org.easymock.samples.ExampleTest.answerVsDelegate":223,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":465,"org.easymock.tests2.UsageConstraintsTest.testNull":117,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":376,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":147,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":43,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":287,"org.easymock.tests2.CaptureTest.testPrimitive":80,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":337,"org.easymock.tests.UsageTest.moreThanOneArgument":445,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":362,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":269,"org.easymock.tests.UsageTest.argumentsOrdered":451,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":338,"org.easymock.tests.UsageVarargTest.varargIntAccepted":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":416,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":188,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":420,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":497,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":27,"org.easymock.tests.ReplayStateInvalidUsageTest.times":260,"org.easymock.tests2.DependencyTest.testClassMocking":5,"org.easymock.tests2.AnswerTest.answer":9,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":4,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":462,"org.easymock.tests2.CaptureTest.testAnd":77,"org.easymock.tests2.UsageTest.strictResetToDefault":92,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":268,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":38,"org.easymock.tests2.DelegateToTest.testDelegate":109,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":358,"org.easymock.tests.LimitationsTest.mockFinalMethod":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":482,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":415,"org.easymock.tests2.DependencyTest.testClassMockingSupport":6,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":457,"org.easymock.tests2.CaptureTest.testCapture1_2446744":81,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":2,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":254,"org.easymock.tests.UsageThrowableTest.throwError":378,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":464,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":218,"org.easymock.samples.PartialClassMockTest.testGetArea":235,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":255,"org.easymock.tests.MockingTest.testInterfaceMocking":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":417,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":298,"org.easymock.tests2.UsageTest.niceToStrict":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":205,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":344,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":167,"org.easymock.tests2.MockBuilderTest.testCreateMock":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":213,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":30,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":352,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":39,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":461,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":266,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":453,"org.easymock.tests.UsageOverloadedMethodTest.overloading":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":215,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":473,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":127,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":441,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":397,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":126,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":86,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":424,"org.easymock.tests2.EasyMockSupportClassTest.testAll":197,"org.easymock.tests.MockClassControlTest.testEquals":286,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":277,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":360,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":413,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":3,"org.easymock.tests2.CaptureTest.testCaptureAll":78,"org.easymock.tests.MockNameTest.defaultName":367,"org.easymock.tests2.UsageConstraintsTest.testMatches":128,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":270,"org.easymock.samples.ExampleTest.voteForRemovals":227,"org.easymock.tests.UsageVarargTest.allKinds":432,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":437,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":414,"org.easymock.samples.BasicClassMockTest.testPrintContent":221,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":384,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":185,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":108,"org.easymock.tests2.UsageConstraintsTest.greaterThan":130,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":158,"org.easymock.samples.ExampleTest.voteForRemoval":224,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":250,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":159,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":48,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":466,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":150,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":477,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":91,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":36,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":478,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":104,"org.easymock.tests2.CaptureTest.testCaptureFirst":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":37,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":103,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":476,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":393,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":50,"org.easymock.tests2.CaptureTest.testCapture2_2446744":89,"org.easymock.tests2.UsageTest.moreThanOneArgument":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":327,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":431,"org.easymock.tests.GenericTest.testBridgedEquals":279,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":307,"org.easymock.tests.UsageExpectAndReturnTest.longType":389,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":411,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":34,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":493,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":361,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":440,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":135,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":273,"org.easymock.tests.UsageCallCountTest.tooManyCalls":308,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":498,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":394,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":32,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":348,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":383,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":65,"org.easymock.tests.MockingTest.testNiceClassMocking":377,"org.easymock.tests.MockingTest.testClassMocking":369,"org.easymock.tests2.UsageConstraintsTest.testContains":125,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":301,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":192,"org.easymock.tests2.UsageConstraintsTest.testFind":116,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":443,"org.easymock.tests.MockTypeTest.fromEasyMockClass":463,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":58,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests.UsageExpectAndReturnTest.object":396,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":42,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":426,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":239,"org.easymock.tests.UsageTest.exactCallCountByLastCall":452,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":408,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":53,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":421,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":402,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":472,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":179,"org.easymock.tests.MockClassControlTest.testHashCode":285,"org.easymock.tests2.EasyMockSupportTest.testVerify":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":207,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":496,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":340,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":470,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":1,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":110,"org.easymock.tests.UsageVarargTest.varargCharAccepted":425,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":242,"org.easymock.tests2.CaptureTest.testCaptureMultiple":487,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":332,"org.easymock.tests2.UsageTest.openCallCountByLastCall":97,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":490,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":45,"org.easymock.tests.DefaultClassInstantiatorTest.object":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":264,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":208,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":350,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":381,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":25,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":178,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":156,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":284,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":349,"org.easymock.tests.CapturesMatcherTest.test":489,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":403,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":216,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":283,"org.easymock.tests2.UsageTest.resumeIfFailure":102,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":481,"org.easymock.tests2.StubTest.stubWithReturnValue":63,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":170,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":395,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":0,"org.easymock.tests2.SerializationTest.testAllMockedMethod":61,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":325,"org.easymock.samples.SupportTest.voteForRemovals":233,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":275,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":355,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":484,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":331,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":10,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":410,"org.easymock.tests.UsageExpectAndThrowTest.object":353,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":133,"org.easymock.tests2.DelegateToTest.testWrongClass":107,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":468,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":469,"org.easymock.samples.ConstructorCalledMockTest.testTax":230,"org.easymock.tests.UsageStrictMockTest.range":293,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":75,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":41,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":354,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":169,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":194,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":454,"org.easymock.tests2.CaptureTest.testCaptureNone":85,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":299,"org.easymock.tests.UsageUnorderedTest.message":251,"org.easymock.tests.UsageVerifyTest.twoReturns":439,"org.easymock.tests.UsageVarargTest.varargByteAccepted":430,"org.easymock.tests2.ThreadingTest.testThreadSafe":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":211,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":305,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":220,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":240,"org.easymock.tests2.CaptureTest.testCapture_2617107":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":329,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":336,"org.easymock.tests2.UsageConstraintsTest.any":123,"org.easymock.tests2.StubTest.stub":62,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":259,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":274,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":330,"org.easymock.tests.UsageExpectAndThrowTest.longType":346,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":247,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":258,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":18,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":183,"org.easymock.tests2.SerializationTest.testClass":59,"org.easymock.tests.LimitationsTest.mockNativeMethod":365,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":405,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":278,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":24,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":21,"org.easymock.tests2.NameTest.nameForMocksControl":143,"org.easymock.tests2.MockedExceptionTest.testMockedException":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":199,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":449,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":57,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":347,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":374,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":144,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":171,"org.easymock.tests.MockingTest.testNicePartialClassMocking":372,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":149,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":22,"org.easymock.tests2.CaptureTest.testCaptureLast":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":458,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":120,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":71,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":134,"org.easymock.tests.MockingTest.testTwoMocks":370,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":386,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":351,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":137,"org.easymock.samples.ExampleTest.removeNonExistingDocument":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":29,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":256,"org.easymock.tests.UsageStrictMockTest.differentMethods":294,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":180,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":245,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":49,"org.easymock.tests2.MockBuilderTest.testCreateMockString":177,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":201,"org.easymock.tests.UsageExpectAndThrowTest.floatType":345,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":196,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":12,"org.easymock.tests.UsageVerifyTest.twoThrows":438,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":54,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":210,"org.easymock.samples.ExampleTest.voteAgainstRemoval":225,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":320,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":157,"org.easymock.tests.LimitationsTest.privateConstructor":364,"org.easymock.tests2.UsageConstraintsTest.testNotNull":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":385,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":190,"org.easymock.tests2.UsageTest.defaultResetToNice":99,"org.easymock.samples.ExampleTest.voteAgainstRemovals":222,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":321,"org.easymock.tests.UsageVarargTest.differentLength":427,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":23,"org.easymock.tests2.CallbackTest.callback":55,"org.easymock.tests2.UsageConstraintsTest.equals":115,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":153,"org.easymock.tests.UsageTest.openCallCountByLastCall":448,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":335,"org.easymock.tests.UsageCallCountTest.tooFewCalls":303,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":67,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":456,"org.easymock.tests.UsageThrowableTest.throwCheckedException":382,"org.easymock.tests.MockingTest.testStrictClassMocking":368,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":407,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":28,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":66,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":261,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":69,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":14,"org.easymock.tests2.CompareToTest.testGreateOrEqual":499,"org.easymock.tests.ObjectMethodsTest.testHashCode":238,"org.easymock.tests2.NameTest.nameForNiceMock":142,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":51,"org.easymock.tests2.DependencyTest.testInterfaceMocking":7,"org.easymock.samples.ExampleTest.addDocument":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":212,"org.easymock.tests2.DelegateToTest.testStubDelegate":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":217,"org.easymock.tests2.AnswerTest.stubAnswer":13,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":291,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":172,"org.easymock.tests.UsageVarargTest.varargLongAccepted":429,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":318,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":404,"org.easymock.tests.UsageExpectAndReturnTest.floatType":388,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":52,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":231,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":474,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":187,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":131,"org.easymock.tests.UsageThrowableTest.noUpperLimit":379,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":112,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":73,"org.easymock.tests2.SerializationTest.test":60,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":82,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":244,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":387,"org.easymock.tests2.UsageConstraintsTest.testSame":118,"org.easymock.samples.SupportTest.addDocument":232,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":68,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":202,"org.easymock.tests.GenericTest.testPackageScope":276,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":186,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":375,"org.easymock.tests2.NameTest.nameForMock":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":398,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":176,"org.easymock.tests2.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":390,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":357,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":236,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":436,"org.easymock.tests2.MockedExceptionTest.testRealException":193,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":467,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":322,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":263,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":334,"org.easymock.tests2.NameTest.nameForStrictMock":141,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":166,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":491,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":148,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":74,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":485,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":132,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":246,"org.easymock.tests.ErrorMessageTest.testGetters":495,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":163,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.UsageConstraintsTest.lessThan":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":182,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":317,"org.easymock.tests2.CaptureTest.testCaptureRightOne":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":206,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":494,"org.easymock.tests2.UsageConstraintsTest.testOr":119,"org.easymock.tests.UsageRangeTest.combination":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":145,"org.easymock.tests.UsageTest.wrongArguments":447,"org.easymock.tests2.MockBuilderTest.testWithConstructor":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":203,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":310,"org.easymock.tests.UsageVarargTest.varargShortAccepted":428,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":248,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":306,"org.easymock.tests2.UsageConstraintsTest.cmpTo":124,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":312,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":98,"org.easymock.tests2.CaptureTest.testCaptureFromStub":88,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":253,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":164,"org.easymock.tests.UsageTest.unexpectedCallWithArray":446,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":290,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":304,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":400,"org.easymock.tests2.CaptureTest.testCapture":488,"org.easymock.tests2.UsageConstraintsTest.constraints":113,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.samples.ExampleTest.addAndChangeDocument":229,"org.easymock.tests.UsageStrictMockTest.testVerify":296,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":219,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":412,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":418,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":392,"org.easymock.tests.LimitationsTest.abstractClass":363,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":475,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":419,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":486,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":40}}]
