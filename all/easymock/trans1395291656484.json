[{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[25,26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2128","sourceCode":"return org.easymock.internal.Invocation.getArguments()","type":"CtReturnImpl"},"failures":[37,38,39,40,41,42],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,12,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,11,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,13,170,14,15,16,17,18,19,25,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,26,279,280,281,282,283,284,285,286,287,288,289,290,37,291,292,293,294,295,296,297,0,298,1,299,300,301,302,303,304,305,2,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,20,327,328,329,330,331,332,333,334,335,336,337,338,339,27,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,3,4,385,386,5,387,6,7,388,8,389,390,391,392,393,394,395,396,397,9,398,399,400,401,10,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,35,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,38,459,39,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,36,485,486,487,488,489,490,491,21,22,23,24,40,492,493,41,42,494],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,79,81,82,83,84,85,94,95,96,97,99,100,109,110,12,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,138,140,142,143,159,160,161,162,163,164,165,166,167,168,169,173,174,177,178,181,185,186,188,205,206,207,209,210,212,213,214,215,216,261,267,268,269,270,271,272,274,275,276,277,278,281,282,283,286,287,288,289,290,37,291,292,293,294,296,297,0,298,1,299,301,302,303,304,305,2,308,309,311,312,314,326,20,333,334,335,336,337,338,339,351,364,374,380,383,384,3,4,386,5,387,6,7,388,389,390,391,392,393,394,395,396,397,9,398,399,400,401,10,402,403,405,406,407,409,412,413,414,416,417,418,424,431,433,434,435,436,439,440,441,442,443,35,444,445,446,447,448,450,451,452,453,458,38,39,467,468,469,470,472,473,474,482,484,485,23,40,41,42,494],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[299],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[386],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[139],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:108","sourceCode":"return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation)","type":"CtReturnImpl"},"failures":[78,83,84,140,297,332,336,337,395,432,436,437,440,450,451,489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:191","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>;\n    try {\n        java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n    }\n    T T;\n    try {\n        java.lang.reflect.Constructor<?>.setAccessible(true);\n        T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n    } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n    }\n    return T;\n} else {\n    net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory;\n    try {\n        net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n    }\n    net.sf.cglib.proxy.Factory.getCallback(0);\n    return ((T)(net.sf.cglib.proxy.Factory));\n}","type":"CtIfImpl"},"failures":[43,45,70,75,136,137,138,139,11,150,151,152,153,154,155,156,157,182,183,184,185,186,188,191,196,197,198,199,200,201,202,203,204,270,281,282,283,284,284,285,285,309,310,312,313,314,315,317,318,319,320,321,322,323,324,325,326,339,27,340,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,35,445,460,464,467,468,469,470,473,474,476,477,478,479,480,481,482,483,484,36,485,487,488,489,490,491,21,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[339,27,29,30,31,34,35,36,487],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[27,29,30,31,34,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.Capture:134","failures":[496,497],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[165,166,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[81,109,110,112,169,262,263,264,265,266,271,272,274,275,276,277,278,284,284,285,285,306,20,334,383,384,386,5,387,6,391,393,394,396,397,9,10,402,403],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[284,285,318,477,499,500,490],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[78,80,82,83,84,173,175,176,179,180,181,261,268,269,332,335,336,337,3,416,446,449,451,455,456,458,489,491],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[80,501,502,175,503,504],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,83,84,109,110,112,137,140,141,142,143,158,159,160,161,163,164,165,166,167,168,169,173,174,177,178,181,185,186,188,259,267,269,271,272,274,275,276,277,278,281,289,290,291,292,294,0,298,299,300,303,304,305,2,307,308,309,310,311,312,313,314,317,321,322,323,20,334,336,337,339,351,361,364,374,380,383,384,3,4,386,5,387,6,7,388,389,390,391,392,393,394,395,396,397,9,398,399,401,10,402,403,406,412,413,414,415,416,417,418,424,431,432,433,434,435,436,437,438,439,440,441,442,35,444,446,447,448,450,452,453,454,457,458,467,468,469,470,472,473,474,478,482,484,485,489,23,40,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[284,285,318,339,27,340,35,477,480,36,486,487,490],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[78,79,80,81,82,83,84,85,86,88,89,92,94,95,96,97,99,100,12,111,133,138,162,176,179,180,205,206,207,209,210,211,212,213,214,215,216,233,261,270,282,283,286,287,288,289,290,291,292,293,294,296,298,1,301,302,303,304,308,309,326,328,329,330,331,332,333,334,335,336,337,338,8,389,400,401,434,440,441,442,443,445,449,451,455,456,478,482,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":505,"org.easymock.tests2.UsageTest.argumentsOrdered":456,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":441,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":227,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":451,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":287,"org.easymock.tests2.DelegateToTest.testReturnException":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":15,"org.easymock.tests.MockingTest.testPartialClassMocking":185,"org.easymock.tests.MockClassControlTest.testToString":152,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":327,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":113,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":364,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":413,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":29,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":388,"org.easymock.tests2.UsageTest.wrongArguments":449,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":109,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":194,"org.easymock.samples.ExampleTest.answerVsDelegate":37,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":75,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":190,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":312,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":440,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":157,"org.easymock.tests2.CaptureTest.testPrimitive":299,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":112,"org.easymock.tests.UsageTest.moreThanOneArgument":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":132,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":311,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":264,"org.easymock.tests.UsageTest.argumentsOrdered":180,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":87,"org.easymock.tests.UsageVarargTest.varargIntAccepted":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":274,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":476,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":33,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":462,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":429,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":219,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":278,"org.easymock.tests.ReplayStateInvalidUsageTest.times":249,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":351,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":498,"org.easymock.tests2.DependencyTest.testClassMocking":410,"org.easymock.tests2.AnswerTest.answer":40,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":234,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":344,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":72,"org.easymock.tests2.UsageTest.strictResetToDefault":447,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":480,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":142,"org.easymock.tests2.DelegateToTest.testDelegate":409,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":128,"org.easymock.tests.LimitationsTest.mockFinalMethod":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":105,"org.easymock.tests2.DependencyTest.testClassMockingSupport":411,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":106,"org.easymock.tests2.CaptureTest.testCapture1_2446744":300,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":316,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":342,"org.easymock.tests.UsageThrowableTest.throwError":161,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":243,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":74,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":430,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":273,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":382,"org.easymock.samples.PartialClassMockTest.testGetArea":281,"org.easymock.tests.MockingTest.testInterfaceMocking":187,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":275,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":134,"org.easymock.tests2.UsageTest.niceToStrict":450,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":217,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":482,"org.easymock.tests2.MockBuilderTest.testCreateMock":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":377,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":354,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":122,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":436,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":71,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":172,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":192,"org.easymock.tests.UsageOverloadedMethodTest.overloading":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":379,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":393,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":257,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":61,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":392,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":305,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":208,"org.easymock.tests.MockClassControlTest.testEquals":156,"org.easymock.tests2.EasyMockSupportClassTest.testAll":361,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":130,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":103,"org.easymock.tests2.CaptureTest.testCaptureAll":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":343,"org.easymock.tests.MockNameTest.defaultName":253,"org.easymock.tests2.UsageConstraintsTest.testMatches":394,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":265,"org.easymock.samples.ExampleTest.voteForRemovals":294,"org.easymock.tests.UsageVarargTest.allKinds":216,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":104,"org.easymock.samples.BasicClassMockTest.testPrintContent":283,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":167,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":426,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":19,"org.easymock.tests2.UsageConstraintsTest.greaterThan":396,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":34,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":362,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":141,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":323,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":204,"org.easymock.samples.ExampleTest.voteForRemoval":291,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":415,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":324,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":463,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":315,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":446,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":270,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":433,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":14,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":404,"org.easymock.tests2.CaptureTest.testCaptureFirst":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":434,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":458,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":57,"org.easymock.tests2.UsageTest.moreThanOneArgument":448,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":417,"org.easymock.tests2.CaptureTest.testCapture2_2446744":307,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":235,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":215,"org.easymock.tests.GenericTest.testBridgedEquals":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":99,"org.easymock.tests.UsageExpectAndReturnTest.longType":53,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":431,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":131,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":400,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":170,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":279,"org.easymock.tests.UsageCallCountTest.tooManyCalls":100,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":378,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":118,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":166,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":468,"org.easymock.tests.MockingTest.testNiceClassMocking":191,"org.easymock.tests.MockingTest.testClassMocking":183,"org.easymock.tests2.UsageConstraintsTest.testContains":391,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":93,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":23,"org.easymock.tests2.UsageConstraintsTest.testFind":386,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":160,"org.easymock.tests.MockTypeTest.fromEasyMockClass":73,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":39,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":78,"org.easymock.tests.UsageExpectAndReturnTest.object":60,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":317,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":355,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":439,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":30,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":210,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":147,"org.easymock.tests.UsageTest.exactCallCountByLastCall":181,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":222,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":47,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":27,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":66,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":205,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":420,"org.easymock.tests.MockClassControlTest.testHashCode":155,"org.easymock.tests2.EasyMockSupportTest.testVerify":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":371,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":89,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":171,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":341,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":345,"org.easymock.tests.UsageVarargTest.varargCharAccepted":209,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":196,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":240,"org.easymock.tests2.UsageTest.openCallCountByLastCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":442,"org.easymock.tests.DefaultClassInstantiatorTest.object":197,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":25,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":145,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":372,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":419,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":154,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":321,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":119,"org.easymock.tests.CapturesMatcherTest.test":496,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":67,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":26,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":380,"org.easymock.tests2.UsageTest.resumeIfFailure":457,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":70,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":17,"org.easymock.tests2.StubTest.stubWithReturnValue":20,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":36,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":401,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":59,"org.easymock.tests2.SerializationTest.testAllMockedMethod":445,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":233,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":504,"org.easymock.samples.SupportTest.voteForRemovals":289,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":136,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":422,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":125,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":239,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":492,"org.easymock.tests.UsageExpectAndThrowTest.object":123,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":49,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":398,"org.easymock.tests2.DelegateToTest.testWrongClass":407,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":271,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":272,"org.easymock.tests.UsageStrictMockTest.range":83,"org.easymock.samples.ConstructorCalledMockTest.testTax":284,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":465,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":438,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":467,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":124,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":484,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":179,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":193,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":501,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":135,"org.easymock.tests2.CaptureTest.testCaptureNone":304,"org.easymock.tests.UsageUnorderedTest.message":261,"org.easymock.tests.UsageVerifyTest.twoReturns":269,"org.easymock.tests.UsageVarargTest.varargByteAccepted":214,"org.easymock.tests2.ThreadingTest.testThreadSafe":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":375,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":97,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":148,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":282,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":237,"org.easymock.tests2.UsageConstraintsTest.any":389,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":248,"org.easymock.tests2.StubTest.stub":326,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":280,"org.easymock.tests.UsageExpectAndThrowTest.longType":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":238,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":201,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":247,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":335,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":424,"org.easymock.tests2.SerializationTest.testClass":35,"org.easymock.tests.LimitationsTest.mockNativeMethod":45,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":139,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":69,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":348,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":338,"org.easymock.tests2.NameTest.nameForMocksControl":331,"org.easymock.tests2.MockedExceptionTest.testMockedException":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":363,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":459,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":188,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":117,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":309,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":485,"org.easymock.tests.MockingTest.testNicePartialClassMocking":186,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":314,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":28,"org.easymock.tests2.CaptureTest.testCaptureLast":303,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":346,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":107,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":474,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":399,"org.easymock.tests.MockingTest.testTwoMocks":184,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":121,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":455,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":402,"org.easymock.samples.ExampleTest.removeNonExistingDocument":295,"org.easymock.tests.UsageStrictMockTest.differentMethods":84,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":245,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":421,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":199,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":416,"org.easymock.tests2.MockBuilderTest.testCreateMockString":491,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":150,"org.easymock.tests.UsageExpectAndThrowTest.floatType":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":365,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":41,"org.easymock.tests.UsageVerifyTest.twoThrows":268,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":340,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":374,"org.easymock.samples.ExampleTest.voteAgainstRemoval":292,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":228,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":322,"org.easymock.tests.LimitationsTest.privateConstructor":44,"org.easymock.tests2.UsageConstraintsTest.testNotNull":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":168,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":21,"org.easymock.tests2.UsageTest.defaultResetToNice":454,"org.easymock.samples.ExampleTest.voteAgainstRemovals":290,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":229,"org.easymock.tests.UsageVarargTest.differentLength":211,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":347,"org.easymock.tests2.CallbackTest.callback":297,"org.easymock.tests2.UsageConstraintsTest.equals":385,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":318,"org.easymock.tests.UsageTest.openCallCountByLastCall":177,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":383,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":12,"org.easymock.tests.UsageCallCountTest.tooFewCalls":95,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":470,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":195,"org.easymock.tests.UsageThrowableTest.throwCheckedException":165,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":502,"org.easymock.tests.MockingTest.testStrictClassMocking":182,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":473,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":13,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":469,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":352,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":250,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":472,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":494,"org.easymock.tests.ObjectMethodsTest.testHashCode":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":32,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":418,"org.easymock.tests2.NameTest.nameForNiceMock":330,"org.easymock.tests2.DependencyTest.testInterfaceMocking":412,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":31,"org.easymock.samples.ExampleTest.addDocument":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":376,"org.easymock.tests2.DelegateToTest.testStubDelegate":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.AnswerTest.stubAnswer":42,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":81,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":486,"org.easymock.tests.UsageVarargTest.varargLongAccepted":213,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":226,"org.easymock.tests.UsageExpectAndReturnTest.floatType":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":68,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":339,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":285,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":428,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":397,"org.easymock.tests.UsageThrowableTest.noUpperLimit":162,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":384,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":460,"org.easymock.tests2.SerializationTest.test":444,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":301,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":198,"org.easymock.tests2.UsageConstraintsTest.testSame":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":51,"org.easymock.samples.SupportTest.addDocument":288,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":471,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":366,"org.easymock.tests.GenericTest.testPackageScope":137,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":221,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":427,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":189,"org.easymock.tests2.NameTest.nameForMock":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":62,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":490,"org.easymock.tests2.UsageStrictMockTest.differentMethods":337,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":319,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":54,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":127,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":144,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":143,"org.easymock.tests2.MockedExceptionTest.testRealException":24,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":77,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":230,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":110,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":252,"org.easymock.tests2.NameTest.nameForStrictMock":329,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":481,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":38,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":313,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":464,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":200,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":478,"org.easymock.tests2.UsageStrictMockTest.range":336,"org.easymock.tests2.UsageConstraintsTest.lessThan":403,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":423,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":495,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":225,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":370,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":310,"org.easymock.tests.UsageTest.wrongArguments":176,"org.easymock.tests2.MockBuilderTest.testWithConstructor":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":367,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":218,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":202,"org.easymock.tests.UsageVarargTest.varargShortAccepted":212,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":98,"org.easymock.tests2.UsageConstraintsTest.cmpTo":390,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":220,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":453,"org.easymock.tests2.CaptureTest.testCaptureFromStub":306,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":242,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":479,"org.easymock.tests.UsageTest.unexpectedCallWithArray":175,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":80,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":96,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":499,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":64,"org.easymock.tests2.CaptureTest.testCapture":497,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":82,"org.easymock.samples.ExampleTest.addAndChangeDocument":296,"org.easymock.tests.UsageStrictMockTest.testVerify":86,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":286,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":102,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":276,"org.easymock.tests.LimitationsTest.abstractClass":43,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":56,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":437,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":206}}]
