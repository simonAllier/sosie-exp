[{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.ConstructorArgs:54","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:106","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : java.lang.reflect.Field[]) {\n    final org.easymock.TestSubject org.easymock.TestSubject = java.lang.reflect.Field.getAnnotation(org.easymock.TestSubject.org.easymock.TestSubject);\n    if (org.easymock.TestSubject != null) {\n        org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field);\n        continue;\n    } \n    final org.easymock.Mock org.easymock.Mock = java.lang.reflect.Field.getAnnotation(org.easymock.Mock.org.easymock.Mock);\n    if (org.easymock.Mock == null) {\n        continue;\n    } \n    final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType();\n    java.lang.String java.lang.String = org.easymock.Mock.java.lang.String();\n    java.lang.String = (java.lang.String.length()) == 0 ? null : java.lang.String;\n    final org.easymock.MockType org.easymock.MockType = org.easymock.Mock.org.easymock.MockType();\n    java.lang.Object java.lang.Object;\n    if (java.lang.Object instanceof org.easymock.EasyMockSupport) {\n        java.lang.Object = ((org.easymock.EasyMockSupport)(java.lang.Object)).createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    } else {\n        java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    }\n    java.lang.reflect.Field.setAccessible(true);\n    try {\n        java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n    }\n    org.easymock.internal.InjectionPlan.addInjection(new org.easymock.internal.Injection(java.lang.Object , org.easymock.Mock));\n}","type":"CtForEachImpl"},"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[90,91],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:74","sourceCode":"java.lang.Object = java.lang.reflect.Field.get(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[92,93,94,95],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"prefix"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[97],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[98,99,100,101,102],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.internal.LastControl:94","failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,96,116,117,118,119,120,121],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[122,112],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[111],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[54,58,59,72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[123,124,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[51,52,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[126,127,128,129,130,64],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[5,6,7,9,10,11,12,15,41,42,43],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[90,91],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:131","failures":[131],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[132,133],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[103,104,108,109,111,113,116,118,120],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[134,135,136,137,138,139,44,126,45,140,141,46,47,142,143,123,144,145,146,147,148,149,150,98,99,100,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,122,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,48,213,214,49,50,215,216,217,218,51,52,219,53,220,221,222,223,224,54,55,56,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,90,258,259,260,91,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,0,279,101,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,92,102,296,297,298,299,1,300,301,302,2,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,129,57,322,58,59,323,324,325,326,327,124,328,125,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,74,347,75,348,349,350,351,352,353,354,355,3,3,4,4,356,357,358,359,360,361,67,68,362,363,364,365,366,69,70,367,368,369,5,370,371,6,372,132,373,374,7,375,8,376,377,10,378,379,380,381,382,383,384,385,386,387,388,389,131,390,391,392,393,394,395,396,397,398,399,400,103,104,401,105,106,107,108,109,110,111,112,402,403,404,405,406,407,408,409,113,114,410,411,412,115,96,413,414,93,415,416,94,95,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,76,77,78,79,80,437,81,82,438,439,440,441,442,443,444,13,445,446,14,15,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,470,471,472,83,84,85,86,87,473,88,89,474,475,476,71,477,72,73,478,479,480,481,482,483,41,484,485,486,42,116,117,118,119,487,488,489,490,491,492,120,121,493,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[495,496,497,498,499],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Invocation:195","failures":[145,147,149,500,369,371,375,377,378,384,393,396,398,434,435,436,76,77,78,79,80,437,81,82,438,451,454,456,462,463,464,465,17,18,20,23,26,27,33,35,36,470,471,472,83,84,85,86,87,473,88,89,474,482,483,42],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[283,287],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[501,13,445,446],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[302],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[126,45,46,47,502,215,53,55,56,129,58,68,69,70,72],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[90,91],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[94,95],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[399,408,412,503],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[504],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[126,127,128,129,130,64],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":104,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests2.UsageTest.argumentsOrdered":70,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":458,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":298,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":363,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":75,"org.easymock.tests2.DelegateToTest.testReturnException":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":262,"org.easymock.tests.MockingTest.testPartialClassMocking":201,"org.easymock.tests.MockClassControlTest.testToString":336,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":461,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":123,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":26,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":154,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":22,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":382,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":110,"org.easymock.tests2.UsageTest.wrongArguments":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":220,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":474,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":312,"org.easymock.samples.ExampleTest.answerVsDelegate":349,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":148,"org.easymock.tests2.UsageConstraintsTest.testNull":106,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":206,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":457,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":341,"org.easymock.tests2.CaptureTest.testPrimitive":119,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":173,"org.easymock.tests.UsageTest.moreThanOneArgument":44,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":385,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":136,"org.easymock.tests.UsageTest.argumentsOrdered":47,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":329,"org.easymock.tests.UsageVarargTest.varargIntAccepted":176,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":342,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":499,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":369,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":82,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":346,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":62,"org.easymock.tests.ReplayStateInvalidUsageTest.times":0,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":85,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":97,"org.easymock.tests2.DependencyTest.testClassMocking":379,"org.easymock.tests2.AnswerTest.answer":414,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":303,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":420,"org.easymock.tests2.CaptureTest.testAnd":116,"org.easymock.tests2.UsageTest.strictResetToDefault":361,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":393,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":6,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":135,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":452,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":210,"org.easymock.tests2.DelegateToTest.testDelegate":444,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":333,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":169,"org.easymock.tests.LimitationsTest.mockFinalMethod":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":257,"org.easymock.tests2.DependencyTest.testClassMockingSupport":380,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":51,"org.easymock.tests2.CaptureTest.testCapture1_2446744":487,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":418,"org.easymock.tests.UsageThrowableTest.throwError":245,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":273,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":147,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":500,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":438,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":138,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":40,"org.easymock.samples.PartialClassMockTest.testGetArea":347,"org.easymock.tests.MockingTest.testInterfaceMocking":203,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":274,"org.easymock.tests2.CompareToTest.testLessOrEqual":503,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":343,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":27,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":319,"org.easymock.tests2.UsageTest.niceToStrict":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":290,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":132,"org.easymock.tests2.MockBuilderTest.testCreateMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":35,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":473,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":163,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":130,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":453,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":153,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":310,"org.easymock.tests.UsageOverloadedMethodTest.overloading":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":31,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":405,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":214,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":236,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":404,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":492,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":177,"org.easymock.tests2.EasyMockSupportClassTest.testAll":19,"org.easymock.tests.MockClassControlTest.testEquals":340,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":171,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":419,"org.easymock.tests2.CaptureTest.testCaptureAll":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":255,"org.easymock.tests.MockNameTest.defaultName":196,"org.easymock.tests2.UsageConstraintsTest.testMatches":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":137,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":271,"org.easymock.samples.ExampleTest.voteForRemovals":353,"org.easymock.tests.UsageVarargTest.allKinds":185,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":256,"org.easymock.samples.BasicClassMockTest.testPrintContent":357,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":251,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":475,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":443,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":266,"org.easymock.tests2.UsageConstraintsTest.greaterThan":408,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":209,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":396,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":289,"org.easymock.samples.ExampleTest.voteForRemoval":350,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":429,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":397,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":389,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":186,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":360,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":450,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":261,"org.easymock.tests2.CaptureTest.testCaptureFirst":494,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":92,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":451,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":368,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":232,"org.easymock.tests2.CaptureTest.testCapture2_2446744":493,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":431,"org.easymock.tests2.UsageTest.moreThanOneArgument":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":304,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":377,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":184,"org.easymock.tests.GenericTest.testBridgedEquals":91,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":194,"org.easymock.tests.UsageExpectAndReturnTest.longType":228,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":448,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":172,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":133,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":411,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":125,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":134,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":99,"org.easymock.tests.UsageCallCountTest.tooManyCalls":195,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":250,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":483,"org.easymock.tests.MockingTest.testNiceClassMocking":207,"org.easymock.tests.MockingTest.testClassMocking":199,"org.easymock.tests2.UsageConstraintsTest.testContains":403,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":188,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":423,"org.easymock.tests2.UsageConstraintsTest.testFind":105,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":218,"org.easymock.tests.MockTypeTest.fromEasyMockClass":146,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":427,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":320,"org.easymock.tests.UsageExpectAndReturnTest.object":235,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":390,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":456,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":179,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":317,"org.easymock.tests.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":295,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":143,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":15,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":174,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":241,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":213,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":435,"org.easymock.tests.MockClassControlTest.testHashCode":339,"org.easymock.tests2.EasyMockSupportTest.testVerify":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":29,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":331,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":152,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":417,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":481,"org.easymock.tests.UsageVarargTest.varargCharAccepted":178,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":281,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":309,"org.easymock.tests2.UsageTest.openCallCountByLastCall":364,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":459,"org.easymock.tests.DefaultClassInstantiatorTest.object":282,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":151,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":315,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":30,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":248,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":83,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":394,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":338,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":160,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":38,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":337,"org.easymock.tests2.UsageTest.resumeIfFailure":367,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":264,"org.easymock.tests2.StubTest.stubWithReturnValue":480,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":412,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":234,"org.easymock.tests2.SerializationTest.testAllMockedMethod":446,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":2,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":496,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":64,"org.easymock.samples.SupportTest.voteForRemovals":359,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":166,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":308,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":93,"org.easymock.tests.UsageExpectAndThrowTest.object":164,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":144,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":114,"org.easymock.tests2.DelegateToTest.testWrongClass":442,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":325,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":326,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests.UsageStrictMockTest.range":58,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":468,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":455,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":482,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":165,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":374,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":101,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":311,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":127,"org.easymock.tests2.CaptureTest.testCaptureNone":491,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":328,"org.easymock.tests.UsageUnorderedTest.message":53,"org.easymock.tests.UsageVerifyTest.twoReturns":56,"org.easymock.tests.UsageVarargTest.varargByteAccepted":183,"org.easymock.tests2.ThreadingTest.testThreadSafe":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":33,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":192,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":318,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":356,"org.easymock.tests2.CaptureTest.testCapture_2617107":118,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":66,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":219,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":306,"org.easymock.tests2.UsageConstraintsTest.any":112,"org.easymock.tests2.StubTest.stub":479,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":100,"org.easymock.tests.UsageExpectAndThrowTest.longType":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":307,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":286,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":277,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":477,"org.easymock.tests2.SerializationTest.testClass":13,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":78,"org.easymock.tests.LimitationsTest.mockNativeMethod":269,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":244,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":260,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":472,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":478,"org.easymock.tests2.NameTest.nameForMocksControl":465,"org.easymock.tests2.MockedExceptionTest.testMockedException":422,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":21,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":141,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":426,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":158,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":204,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":383,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":375,"org.easymock.tests.MockingTest.testNicePartialClassMocking":202,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":388,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":497,"org.easymock.tests2.CaptureTest.testCaptureLast":490,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":470,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":52,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":42,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":410,"org.easymock.tests.MockingTest.testTwoMocks":200,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":162,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":69,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.samples.ExampleTest.removeNonExistingDocument":354,"org.easymock.tests.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":87,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":275,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":436,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":284,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":430,"org.easymock.tests2.ConstraintsToStringTest.andToString":63,"org.easymock.tests2.MockBuilderTest.testCreateMockString":378,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":334,"org.easymock.tests.UsageExpectAndThrowTest.floatType":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":23,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":18,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":447,"org.easymock.tests.UsageVerifyTest.twoThrows":55,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":32,"org.easymock.samples.ExampleTest.voteAgainstRemoval":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":299,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":327,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":395,"org.easymock.tests.LimitationsTest.privateConstructor":268,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":12,"org.easymock.tests2.UsageConstraintsTest.testNotNull":115,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":421,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":252,"org.easymock.tests2.UsageTest.defaultResetToNice":366,"org.easymock.samples.ExampleTest.voteAgainstRemovals":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":471,"org.easymock.tests.UsageVarargTest.differentLength":180,"org.easymock.tests2.CallbackTest.callback":433,"org.easymock.tests2.UsageConstraintsTest.equals":401,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":391,"org.easymock.tests.UsageTest.openCallCountByLastCall":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":399,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":222,"org.easymock.tests.UsageCallCountTest.tooFewCalls":190,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":484,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":313,"org.easymock.tests.UsageThrowableTest.throwCheckedException":249,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":128,"org.easymock.tests.MockingTest.testStrictClassMocking":198,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":486,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":197,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":86,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":485,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":95,"org.easymock.tests.ObjectMethodsTest.testHashCode":316,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":498,"org.easymock.tests2.NameTest.nameForNiceMock":464,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":432,"org.easymock.tests2.DependencyTest.testInterfaceMocking":381,"org.easymock.samples.ExampleTest.addDocument":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":34,"org.easymock.tests2.DelegateToTest.testStubDelegate":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":39,"org.easymock.tests2.AnswerTest.stubAnswer":94,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":57,"org.easymock.tests.UsageVarargTest.varargLongAccepted":182,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":297,"org.easymock.tests.UsageExpectAndReturnTest.floatType":227,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":14,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests2.ConstraintsToStringTest.orToString":60,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":409,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":81,"org.easymock.tests.UsageThrowableTest.noUpperLimit":246,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":400,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":466,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":488,"org.easymock.tests2.SerializationTest.test":445,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":283,"org.easymock.tests2.UsageConstraintsTest.testSame":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":226,"org.easymock.samples.SupportTest.addDocument":358,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":24,"org.easymock.tests.GenericTest.testPackageScope":258,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":294,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":437,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":205,"org.easymock.tests2.NameTest.nameForMock":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":237,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":10,"org.easymock.tests2.UsageStrictMockTest.differentMethods":73,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":392,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":168,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":314,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":211,"org.easymock.tests2.MockedExceptionTest.testRealException":424,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":150,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":301,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":495,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":221,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":280,"org.easymock.tests2.NameTest.nameForStrictMock":463,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":372,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":425,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":467,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":113,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":285,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":370,"org.easymock.tests2.UsageStrictMockTest.range":72,"org.easymock.tests2.UsageConstraintsTest.lessThan":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":77,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":296,"org.easymock.tests2.CaptureTest.testCaptureRightOne":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":28,"org.easymock.tests2.UsageConstraintsTest.testOr":108,"org.easymock.tests.UsageRangeTest.combination":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":384,"org.easymock.tests.UsageTest.wrongArguments":45,"org.easymock.tests2.MockBuilderTest.testWithConstructor":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":25,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":335,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":291,"org.easymock.tests.UsageVarargTest.varargShortAccepted":181,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":287,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":193,"org.easymock.tests2.UsageConstraintsTest.cmpTo":402,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":293,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":365,"org.easymock.tests2.CaptureTest.testCaptureFromStub":121,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":272,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":371,"org.easymock.tests.UsageTest.unexpectedCallWithArray":126,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":129,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":191,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":239,"org.easymock.tests2.UsageConstraintsTest.constraints":103,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":322,"org.easymock.samples.ExampleTest.addAndChangeDocument":355,"org.easymock.tests2.ConstraintsToStringTest.notToString":61,"org.easymock.tests.UsageStrictMockTest.testVerify":324,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":74,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":321,"org.easymock.tests2.CompareToTest.testGreateThan":504,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":254,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":489,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":344,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":231,"org.easymock.tests.LimitationsTest.abstractClass":267,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":454,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":175}}]
