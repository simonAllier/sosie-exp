[{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[14,154,155,55,83,156],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[157,151,152,153],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[158],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[124],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[114,116,123,159,139,160,161,140,162,146,163],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[4,5,164,7,30,165,166,45,46,47,167,168,169,170,171,172,173,174,175,175,176,176,63,66,67,76,77,78,79,81,82,91,94,177,178,179,95,180,96,97,181,182,183,98,99,100,101,102,103,105,106,107,184,108,185,186,109,187,188,151,153],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[189],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[190,191,192,193,194,195,196,197,198,199,91,200],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[97],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"position":"org.easymock.internal.Range:83","failures":[202,203,204,9,205,10,206,207,14,154,208,26,209,155,27,28,29,44,195,210,211,55,56,212,74,213,214,197,83,215,85,216,156,88,89,90,217,218,219,220,110,221,222,115,116,223,118,119,120,121,124,160,142,145,163,224],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[225,226,227,228],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[229,164,167,168,175,176,63,198,94,230,231,177,232,178,179,233,234,95,180,96,235,97,236,237,181,182,238,183,99,100,101,184,239,186,109,188,151],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[240,241],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[190,12,15,16,17,18,19,33,191,192,193,194,195,196,210,242,243,50,51,244,52,245,246,247,248,53,249,250,251,252,54,253,254,255,256,55,197,198,199,91,200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[257],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[258,190,259,225,226,260,261,262,263,0,1,264,2,3,229,4,5,164,265,266,267,202,268,6,203,204,269,270,271,272,273,274,275,276,277,278,279,280,281,282,7,283,284,8,9,205,10,206,207,11,285,12,13,14,15,16,17,18,19,286,287,20,21,288,22,289,290,291,292,23,293,294,295,296,24,297,298,299,300,301,25,302,303,304,305,154,208,306,26,209,155,27,28,29,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,227,228,30,332,333,334,335,336,337,338,339,340,341,31,342,32,33,343,34,344,35,36,37,345,38,39,346,40,41,42,43,44,347,348,349,350,351,352,353,354,165,355,356,357,166,45,46,358,47,359,360,361,191,192,193,194,195,196,362,363,364,365,366,167,367,368,369,370,168,371,372,373,374,375,169,170,171,172,173,174,376,377,48,49,210,242,243,50,51,244,52,245,246,247,248,53,249,250,251,252,54,253,254,255,256,378,379,380,381,211,55,56,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,57,58,59,60,61,62,400,401,175,176,63,64,65,66,67,68,69,402,403,404,405,406,70,407,408,409,410,411,412,413,414,71,72,415,73,212,74,213,214,75,416,197,417,418,419,420,421,422,423,76,77,78,79,424,80,81,82,425,83,84,215,85,86,87,216,156,426,88,89,427,90,198,199,91,200,428,429,430,92,93,94,230,231,431,217,218,219,220,177,232,178,179,233,234,95,180,96,235,97,236,237,181,182,238,183,432,433,434,98,435,436,99,437,438,439,440,441,442,443,444,445,100,446,447,448,449,450,101,451,452,102,103,104,105,106,107,184,453,108,239,454,185,186,109,187,455,188,110,456,457,111,221,458,459,460,461,462,112,222,113,463,464,114,115,116,117,223,118,119,120,121,122,123,465,466,124,125,126,127,128,129,130,131,467,132,133,134,135,136,137,468,469,470,471,472,138,473,474,475,476,477,478,479,480,481,482,483,484,159,139,257,485,160,486,161,140,141,162,142,143,487,144,488,489,145,490,491,146,147,148,149,150,163,492,493,151,152,153,224],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[114,116,123,159,139,160,161,140,162,146,163],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[258,4,164,267,202,203,7,205,206,207,12,14,15,16,17,18,19,286,287,20,21,288,22,289,290,291,292,23,293,294,295,296,24,297,298,299,300,304,154,208,209,155,29,316,318,327,328,330,332,333,334,335,336,34,347,348,349,45,46,47,373,374,48,49,210,378,379,380,381,211,56,57,59,60,62,63,69,70,71,72,212,213,214,197,76,77,78,79,80,81,82,83,84,215,86,216,156,426,427,90,91,428,429,430,92,93,94,178,95,96,97,182,98,99,100,101,102,103,104,105,106,107,108,186,109,187,110,221,222,114,115,117,223,120,121,122,123,466,124,125,126,127,128,129,130,131,467,132,133,134,135,138,483,484,159,139,485,160,486,161,140,141,142,143,487,144,488,489,145,490,491,146,147,148,150,163,492,493,151,152],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[204,494],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[9,495,496,306,497,498],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[159,140,487,146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"substring"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[499,114,115,116,117,223,118,119,120,121,122,123,465,466,124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:124","failures":[258,190,262,263,0,1,264,2,3,4,5,267,202,268,6,203,204,7,284,8,9,205,10,206,207,11,12,13,14,15,16,17,18,19,286,287,20,21,288,22,289,290,291,292,23,293,294,295,296,24,297,298,299,300,154,208,306,26,209,155,27,28,29,30,499,499,332,333,334,335,336,337,338,339,340,341,31,32,33,344,35,36,37,38,39,346,40,41,42,43,44,45,46,47,191,192,193,194,195,196,373,374,48,49,210,242,243,50,51,244,52,245,246,247,248,53,249,250,251,252,54,253,254,255,256,378,380,381,211,55,56,382,383,384,385,395,396,397,398,399,57,58,59,60,61,62,401,175,176,63,64,65,66,67,68,69,70,71,72,415,73,212,74,213,214,75,416,197,76,77,78,79,80,81,82,83,84,215,85,86,87,216,156,426,88,89,427,90,198,199,91,200,428,429,430,92,93,94,177,178,95,180,96,97,181,182,183,98,99,100,101,102,103,104,105,106,107,184,108,185,186,109,187,110,111,221,458,459,461,112,222,113,464,114,115,116,117,223,118,119,120,121,122,123,465,466,124,125,126,127,128,129,130,131,467,132,133,134,135,136,138,479,480,481,482,483,484,159,139,485,160,486,161,140,141,142,143,487,144,488,489,145,490,491,146,147,148,149,150,163,492,493,151,152,153,224],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[182,188],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[499,114,115,116,117,223,118,119,120,122,123,465,466,124],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[272,430,455],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[157,151,152,153],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":139,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":154,"org.easymock.tests2.UsageTest.argumentsOrdered":89,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":317,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":87,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":64,"org.easymock.tests2.DelegateToTest.testReturnException":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":192,"org.easymock.tests.MockingTest.testPartialClassMocking":45,"org.easymock.tests.MockClassControlTest.testToString":171,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":431,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":440,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":242,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":72,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":141,"org.easymock.tests2.UsageTest.wrongArguments":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":267,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":478,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":384,"org.easymock.samples.ExampleTest.answerVsDelegate":58,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":168,"org.easymock.tests2.UsageConstraintsTest.testNull":160,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":360,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":133,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":377,"org.easymock.tests2.CaptureTest.testPrimitive":117,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":203,"org.easymock.tests.UsageTest.moreThanOneArgument":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":256,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":397,"org.easymock.tests.UsageTest.argumentsOrdered":28,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":362,"org.easymock.tests.UsageVarargTest.varargIntAccepted":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":332,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":177,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":411,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":336,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":138,"org.easymock.tests.ReplayStateInvalidUsageTest.times":277,"org.easymock.tests2.DependencyTest.testClassMocking":413,"org.easymock.tests2.AnswerTest.answer":110,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":482,"org.easymock.tests2.CaptureTest.testAnd":114,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":368,"org.easymock.tests2.UsageTest.strictResetToDefault":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":185,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":129,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":380,"org.easymock.tests2.DelegateToTest.testDelegate":464,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":366,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":54,"org.easymock.tests.LimitationsTest.mockFinalMethod":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":341,"org.easymock.tests2.DependencyTest.testClassMockingSupport":414,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":301,"org.easymock.tests2.CaptureTest.testCapture1_2446744":223,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":251,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":480,"org.easymock.tests.UsageThrowableTest.throwError":12,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":271,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":370,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":412,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":266,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":452,"org.easymock.samples.PartialClassMockTest.testGetArea":63,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":272,"org.easymock.tests.MockingTest.testInterfaceMocking":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":333,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":441,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":165,"org.easymock.tests2.UsageTest.niceToStrict":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":95,"org.easymock.tests2.MockBuilderTest.testCreateMock":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":448,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":475,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":248,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":130,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":226,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":260,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":382,"org.easymock.tests.UsageOverloadedMethodTest.overloading":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":445,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":488,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":33,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":293,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":158,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":144,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":122,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":345,"org.easymock.tests2.EasyMockSupportClassTest.testAll":98,"org.easymock.tests.MockClassControlTest.testEquals":376,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":481,"org.easymock.tests2.CaptureTest.testCaptureAll":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":339,"org.easymock.tests.MockNameTest.defaultName":375,"org.easymock.tests2.UsageConstraintsTest.testMatches":489,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":398,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":269,"org.easymock.samples.ExampleTest.voteForRemovals":62,"org.easymock.tests.UsageVarargTest.allKinds":44,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":211,"org.easymock.samples.BasicClassMockTest.testPrintContent":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":340,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":18,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":415,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":463,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":196,"org.easymock.tests2.UsageConstraintsTest.greaterThan":490,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":379,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":187,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":394,"org.easymock.samples.ExampleTest.voteForRemoval":59,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":455,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":429,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":371,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":184,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":30,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":127,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":191,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":462,"org.easymock.tests2.CaptureTest.testCaptureFirst":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":128,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":90,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":344,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":290,"org.easymock.tests2.CaptureTest.testCapture2_2446744":466,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":92,"org.easymock.tests2.UsageTest.moreThanOneArgument":215,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":325,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":43,"org.easymock.tests.GenericTest.testBridgedEquals":265,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":2,"org.easymock.tests.UsageExpectAndReturnTest.longType":21,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":337,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":255,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":149,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":395,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":227,"org.easymock.tests.UsageCallCountTest.tooManyCalls":3,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":477,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":17,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":77,"org.easymock.tests.MockingTest.testNiceClassMocking":361,"org.easymock.tests.MockingTest.testClassMocking":357,"org.easymock.tests2.UsageConstraintsTest.testContains":487,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":240,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":261,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":91,"org.easymock.tests2.UsageConstraintsTest.testFind":485,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":210,"org.easymock.tests.MockTypeTest.fromEasyMockClass":369,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":461,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests.UsageExpectAndReturnTest.object":23,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":476,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":132,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":39,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":353,"org.easymock.tests.UsageTest.exactCallCountByLastCall":29,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":303,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":230,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":35,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":297,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":32,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":403,"org.easymock.tests.MockClassControlTest.testHashCode":174,"org.easymock.tests2.EasyMockSupportTest.testVerify":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":443,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":364,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":31,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":225,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":479,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":137,"org.easymock.tests.UsageVarargTest.varargCharAccepted":38,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":386,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":330,"org.easymock.tests2.UsageTest.openCallCountByLastCall":216,"org.easymock.tests.DefaultClassInstantiatorTest.object":387,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":135,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":259,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":444,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":402,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":186,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":173,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":245,"org.easymock.tests.CapturesMatcherTest.test":499,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":331,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":101,"org.easymock.tests2.UsageTest.resumeIfFailure":427,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":194,"org.easymock.tests2.StubTest.stubWithReturnValue":197,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":235,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":292,"org.easymock.tests2.SerializationTest.testAllMockedMethod":153,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":323,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":69,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":405,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":250,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":157,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":329,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":456,"org.easymock.tests.UsageExpectAndThrowTest.object":53,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":305,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":147,"org.easymock.tests2.DelegateToTest.testWrongClass":113,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":373,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":374,"org.easymock.samples.ConstructorCalledMockTest.testTax":175,"org.easymock.tests.UsageStrictMockTest.range":206,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":422,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":467,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":249,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":432,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":279,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":383,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":495,"org.easymock.tests2.CaptureTest.testCaptureNone":121,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":349,"org.easymock.tests.UsageUnorderedTest.message":204,"org.easymock.tests.UsageVerifyTest.twoReturns":56,"org.easymock.tests.UsageVarargTest.varargByteAccepted":42,"org.easymock.tests2.ThreadingTest.testThreadSafe":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":446,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":1,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":66,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":354,"org.easymock.tests2.CaptureTest.testCapture_2617107":116,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":302,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":327,"org.easymock.tests2.UsageConstraintsTest.any":142,"org.easymock.tests2.StubTest.stub":416,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":228,"org.easymock.tests.UsageExpectAndThrowTest.longType":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":328,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":391,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":275,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":74,"org.easymock.tests2.SerializationTest.testClass":151,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":70,"org.easymock.tests.LimitationsTest.mockNativeMethod":7,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":470,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":75,"org.easymock.tests2.NameTest.nameForMocksControl":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":472,"org.easymock.tests2.MockedExceptionTest.testMockedException":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":436,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":155,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":460,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":244,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":102,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":97,"org.easymock.tests.MockingTest.testNicePartialClassMocking":46,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":107,"org.easymock.tests2.CompareToTest.testNotComparable":201,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":468,"org.easymock.tests2.CaptureTest.testCaptureLast":120,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":25,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":140,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":82,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":148,"org.easymock.tests.MockingTest.testTwoMocks":166,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":247,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":88,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":492,"org.easymock.samples.ExampleTest.removeNonExistingDocument":400,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":474,"org.easymock.tests.UsageStrictMockTest.differentMethods":207,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":273,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":404,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":389,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":430,"org.easymock.tests2.MockBuilderTest.testCreateMockString":183,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":437,"org.easymock.tests.UsageExpectAndThrowTest.floatType":50,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":111,"org.easymock.tests.UsageVerifyTest.twoThrows":55,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":231,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":100,"org.easymock.samples.ExampleTest.voteAgainstRemoval":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":318,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":347,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":109,"org.easymock.tests.LimitationsTest.privateConstructor":282,"org.easymock.tests2.UsageConstraintsTest.testNotNull":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":19,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":198,"org.easymock.tests2.UsageTest.defaultResetToNice":426,"org.easymock.samples.ExampleTest.voteAgainstRemovals":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":319,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":469,"org.easymock.tests.UsageVarargTest.differentLength":346,"org.easymock.tests2.CallbackTest.callback":224,"org.easymock.tests2.UsageConstraintsTest.equals":257,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":239,"org.easymock.tests.UsageTest.openCallCountByLastCall":209,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":483,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":268,"org.easymock.tests.UsageCallCountTest.tooFewCalls":263,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":79,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":385,"org.easymock.tests.UsageThrowableTest.throwCheckedException":16,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":496,"org.easymock.tests.MockingTest.testStrictClassMocking":356,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":190,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":473,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":78,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":278,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":80,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":458,"org.easymock.tests.ObjectMethodsTest.testHashCode":352,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":93,"org.easymock.tests2.NameTest.nameForNiceMock":219,"org.easymock.tests2.DependencyTest.testInterfaceMocking":71,"org.easymock.samples.ExampleTest.addDocument":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":451,"org.easymock.tests2.DelegateToTest.testStubDelegate":222,"org.easymock.tests2.AnswerTest.stubAnswer":221,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":205,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":236,"org.easymock.tests.UsageVarargTest.varargLongAccepted":41,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":316,"org.easymock.tests.UsageExpectAndReturnTest.floatType":20,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":94,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":176,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":491,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":410,"org.easymock.tests.UsageThrowableTest.noUpperLimit":13,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":484,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":417,"org.easymock.tests2.SerializationTest.test":152,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":118,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":189,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":388,"org.easymock.tests2.UsageConstraintsTest.testSame":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":287,"org.easymock.samples.SupportTest.addDocument":68,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":424,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":438,"org.easymock.tests.GenericTest.testPackageScope":4,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":409,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":359,"org.easymock.tests2.NameTest.nameForMock":217,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":294,"org.easymock.tests2.UsageStrictMockTest.differentMethods":214,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":238,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":454,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":252,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":350,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":381,"org.easymock.tests2.MockedExceptionTest.testRealException":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":372,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":320,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":202,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":280,"org.easymock.tests2.NameTest.nameForStrictMock":218,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":234,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":459,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":421,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":494,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":390,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":146,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":178,"org.easymock.tests2.UsageStrictMockTest.range":213,"org.easymock.tests2.UsageConstraintsTest.lessThan":493,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":406,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":442,"org.easymock.tests2.CaptureTest.testCaptureRightOne":123,"org.easymock.tests2.UsageConstraintsTest.testOr":161,"org.easymock.tests.UsageRangeTest.combination":378,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":103,"org.easymock.tests.UsageTest.wrongArguments":26,"org.easymock.tests2.MockBuilderTest.testWithConstructor":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":439,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":22,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":308,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":392,"org.easymock.tests.UsageVarargTest.varargShortAccepted":40,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":264,"org.easymock.tests2.UsageConstraintsTest.cmpTo":143,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":310,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests2.CaptureTest.testCaptureFromStub":465,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":270,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":179,"org.easymock.tests.UsageTest.unexpectedCallWithArray":306,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":0,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":296,"org.easymock.tests2.UsageConstraintsTest.constraints":159,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":10,"org.easymock.samples.ExampleTest.addAndChangeDocument":401,"org.easymock.tests.UsageStrictMockTest.testVerify":285,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":65,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":338,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":119,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":334,"org.easymock.tests.LimitationsTest.abstractClass":281,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":289,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":131,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":36}}]
