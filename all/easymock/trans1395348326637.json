[{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","i":"i"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[1],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[77,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"threadSafe","this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,260,261,262,263,264,265,9,266,10,11,12,13,14,15,16,17,18,267,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,268,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,78,79,80,81,82,269,270,271,272,273,274,275,276,277,278,279,280,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,281,282,283,284,110,111,285,116,117,118,119,120,121,122,127,128,286,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,287,182,183,288,289,184,187,188,189,190,290,291,292,293,193,194,196,197,198,199,200,201,202,203,204,205,206,294,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,295,296,297,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[300,301,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[14,16,17,90,91,97,98,112,113,114,115,136,137,139,140,173,174,175,194,196,199,200,303,304,305,250],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:233","failures":[2,3,4,5,6,7,8,306,306,307,307,260,308,261,262,263,264,265,9,266,10,11,12,13,14,15,16,17,18,267,23,24,25,26,27,28,29,30,31,32,309,33,34,35,36,37,38,39,40,41,42,43,44,268,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,310,311,64,65,66,68,69,70,71,72,73,74,312,76,313,77,78,79,80,81,82,269,270,271,272,273,274,275,314,276,277,278,279,280,315,84,316,317,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,281,282,105,106,283,284,107,108,109,110,111,285,318,319,320,112,113,114,115,321,116,117,118,322,119,120,121,122,127,128,323,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,324,173,174,175,176,177,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,300,340,341,342,343,344,345,301,346,179,180,181,347,348,349,287,182,183,184,185,187,188,189,190,290,291,350,351,352,193,194,196,197,198,199,200,201,202,203,204,205,206,294,207,208,209,210,211,212,213,214,215,216,353,217,218,219,220,221,222,223,224,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,295,296,354,355,356,297,298,299,259],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[357],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[14,17,18,90,137,140,141,173,174,175,358,194,259],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[359,360,361,362,363,364,365,366,106,108,367],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[359,362,368,369,370,371,372,373,357],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":26,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":193,"org.easymock.tests2.UsageTest.argumentsOrdered":98,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":335,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":93,"org.easymock.tests2.StubTest.stubWithReturnValue":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":362,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":261,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":45,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":152,"org.easymock.tests2.SerializationTest.testAllMockedMethod":111,"org.easymock.tests2.DelegateToTest.testReturnException":116,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":164,"org.easymock.tests.MockingTest.testPartialClassMocking":179,"org.easymock.samples.SupportTest.voteForRemovals":263,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":242,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":318,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":230,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":310,"org.easymock.tests.UsageExpectAndThrowTest.object":240,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":303,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":266,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":369,"org.easymock.tests2.DelegateToTest.testWrongClass":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":223,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":224,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":218,"org.easymock.tests2.UsageTest.wrongArguments":91,"org.easymock.samples.ConstructorCalledMockTest.testTax":306,"org.easymock.tests.UsageStrictMockTest.range":139,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":125,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":314,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":282,"org.easymock.tests2.UsageConstraintsTest.testNull":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":241,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":71,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":316,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":293,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":277,"org.easymock.tests2.CaptureTest.testPrimitive":52,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":249,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":199,"org.easymock.tests.UsageTest.moreThanOneArgument":194,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":131,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":349,"org.easymock.tests2.CaptureTest.testCaptureNone":57,"org.easymock.tests.UsageUnorderedTest.message":250,"org.easymock.tests.UsageVerifyTest.twoReturns":175,"org.easymock.tests.UsageVarargTest.varargByteAccepted":209,"org.easymock.tests2.ThreadingTest.testThreadSafe":78,"org.easymock.tests.UsageTest.argumentsOrdered":200,"org.easymock.tests.UsageVarargTest.varargIntAccepted":204,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":190,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":212,"org.easymock.tests2.CaptureTest.testCapture_2617107":51,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":373,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":83,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":221,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":85,"org.easymock.tests2.UsageConstraintsTest.any":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":327,"org.easymock.tests2.StubTest.stub":121,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":345,"org.easymock.tests.UsageExpectAndThrowTest.longType":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":165,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":281,"org.easymock.tests2.SerializationTest.testClass":109,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":267,"org.easymock.tests.LimitationsTest.mockNativeMethod":184,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":323,"org.easymock.tests2.AnswerTest.answer":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":162,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":22,"org.easymock.tests2.CaptureTest.testAnd":49,"org.easymock.tests2.UsageTest.strictResetToDefault":89,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":361,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":75,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":18,"org.easymock.tests2.NameTest.nameForMocksControl":115,"org.easymock.tests2.MockedExceptionTest.testMockedException":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":273,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":171,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":198,"org.easymock.tests2.DelegateToTest.testDelegate":119,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":234,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":181,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":68,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":317,"org.easymock.tests.MockingTest.testNicePartialClassMocking":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":245,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":73,"org.easymock.tests2.CaptureTest.testCaptureLast":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":167,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":178,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":31,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":108,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":229,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":44,"org.easymock.tests2.CaptureTest.testCapture1_2446744":53,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":367,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":143,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":20,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":97,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":47,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":302,"org.easymock.tests.UsageThrowableTest.throwError":251,"org.easymock.tests.UsageStrictMockTest.differentMethods":140,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":191,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":80,"org.easymock.tests2.MockBuilderTest.testCreateMockString":87,"org.easymock.tests.UsageExpectAndThrowTest.floatType":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":133,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":39,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":64,"org.easymock.tests.UsageVerifyTest.twoThrows":174,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":319,"org.easymock.samples.PartialClassMockTest.testGetArea":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":213,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":348,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":336,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":231,"org.easymock.tests2.UsageTest.niceToStrict":92,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":366,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":258,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":84,"org.easymock.tests2.UsageTest.defaultResetToNice":96,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":337,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":158,"org.easymock.tests.UsageVarargTest.differentLength":294,"org.easymock.tests2.CallbackTest.callback":120,"org.easymock.tests.UsageTest.openCallCountByLastCall":197,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":239,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":274,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":23,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":356,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":220,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":123,"org.easymock.tests.UsageCallCountTest.tooFewCalls":188,"org.easymock.tests.UsageOverloadedMethodTest.overloading":182,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":299,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":37,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":287,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":154,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":36,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":126,"org.easymock.tests.UsageThrowableTest.throwCheckedException":255,"org.easymock.tests.MockClassControlTest.testEquals":292,"org.easymock.tests2.EasyMockSupportClassTest.testAll":285,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":128,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":227,"org.easymock.tests2.CaptureTest.testCaptureAll":50,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":21,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":107,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":177,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":106,"org.easymock.tests2.UsageConstraintsTest.testMatches":38,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":284,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":132,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":372,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":82,"org.easymock.tests2.NameTest.nameForNiceMock":114,"org.easymock.tests.UsageVarargTest.allKinds":211,"org.easymock.tests2.DependencyTest.testInterfaceMocking":9,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":371,"org.easymock.samples.BasicClassMockTest.testPrintContent":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":228,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.DelegateToTest.testStubDelegate":117,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":257,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":12,"org.easymock.tests2.AnswerTest.stubAnswer":65,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":168,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":357,"org.easymock.tests2.UsageConstraintsTest.greaterThan":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":170,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":313,"org.easymock.tests.UsageVarargTest.varargLongAccepted":208,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":334,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":79,"org.easymock.tests.UsageExpectAndReturnTest.floatType":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":161,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":77,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":307,"org.easymock.tests.UsageThrowableTest.noUpperLimit":252,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":41,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":217,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":88,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":24,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":54,"org.easymock.tests2.SerializationTest.test":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":271,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":253,"org.easymock.tests2.UsageConstraintsTest.testSame":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":144,"org.easymock.samples.SupportTest.addDocument":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":163,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":321,"org.easymock.tests2.CaptureTest.testCaptureFirst":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":272,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":100,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":150,"org.easymock.tests.GenericTest.testPackageScope":127,"org.easymock.tests2.UsageTest.moreThanOneArgument":90,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":81,"org.easymock.tests2.CaptureTest.testCapture2_2446744":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":342,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":210,"org.easymock.tests.GenericTest.testBridgedEquals":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":290,"org.easymock.tests2.NameTest.nameForMock":112,"org.easymock.tests.UsageExpectAndReturnTest.longType":146,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":225,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":155,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":353,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":268,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":364,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":246,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":147,"org.easymock.tests.UsageCallCountTest.tooManyCalls":291,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":244,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":172,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":187,"org.easymock.tests2.MockedExceptionTest.testRealException":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":235,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":219,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":105,"org.easymock.tests2.UsageConstraintsTest.testContains":35,"org.easymock.tests2.NameTest.nameForStrictMock":113,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":186,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":103,"org.easymock.tests2.UsageConstraintsTest.testFind":27,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":10,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":72,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":11,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":134,"org.easymock.tests.UsageExpectAndReturnTest.object":153,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":304,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":74,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":315,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.UsageConstraintsTest.lessThan":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":276,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":370,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":206,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":289,"org.easymock.tests.UsageTest.exactCallCountByLastCall":201,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":333,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":270,"org.easymock.tests2.CaptureTest.testCaptureRightOne":59,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":295,"org.easymock.tests2.UsageConstraintsTest.testOr":30,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":359,"org.easymock.tests.UsageRangeTest.combination":169,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":159,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":298,"org.easymock.tests.UsageTest.wrongArguments":196,"org.easymock.tests2.MockBuilderTest.testWithConstructor":360,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":192,"org.easymock.tests2.EasyMockSupportTest.testVerify":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":156,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":296,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":355,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":297,"org.easymock.tests.UsageVarargTest.varargShortAccepted":207,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":19,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":67,"org.easymock.tests2.UsageConstraintsTest.cmpTo":34,"org.easymock.tests.UsageVarargTest.varargCharAccepted":205,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":328,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":346,"org.easymock.tests2.UsageTest.openCallCountByLastCall":94,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":354,"org.easymock.tests2.CaptureTest.testCaptureFromStub":60,"org.easymock.tests.UsageTest.unexpectedCallWithArray":195,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":237,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":254,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":136,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":189,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":363,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":157,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":312,"org.easymock.tests2.UsageConstraintsTest.constraints":25,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":236,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests2.ConstraintsToStringTest.containsToString":1,"org.easymock.tests.UsageStrictMockTest.testVerify":142,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":160,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":350,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":320,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":226,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":55,"org.easymock.tests2.UsageTest.resumeIfFailure":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":214,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":149,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":215,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":275,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":203}}]
