[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[3,4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[50,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[53,54],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:173","failures":[55],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[56,57,58,59],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[6,10,12,27,32,39],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,65,66,3,67,68],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[69],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[70,71,72,73,74,75,76,77,78,59,50,79,80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[5,81,82,83,84,23,24,25,26,28,29,30,42,47,48,49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[70],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[85,86,87,88,89,90],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","value":"delegateTo","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[91,5,92,93,94,95,96,97,98,99,100,101,102,19,103,104,105,106,107,108,24,26,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,28,29,30,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,42,154,155,156,157,158,159,160,72,161,162,163,164,165,166,167,168,169,170,171,172,173,78,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,46,53,69,191,192,193,194,195,196,197,63,198,199,200,201,202,203,204,205,55,50,51,79,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,47,48,49,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[241,242,243,244,137,245,246,247,248,249,250,251,252,199,253,223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[254,255],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[256],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[257],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"name"}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[259,162],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[260,74,261,262,263,264,265,50,79,80],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[266,50,51,52],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[91,6,7,8,9,94,267,268,269,270,99,23,25,26,271,27,272,29,30,152,43,154,273,44,45,158,159,160,75,163,76,167,173,174,177,46,202,68,207,211,212,215,274,275,48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[259,276,277,278,279,280,96,97,98,281,70,136,282,71,283,284,285,138,286,287,288,254,289,290,0,255,291,292,293,294,295,296,297,298,299,300,146,301,301,302,302,303,304,56,256,160,305,306,307,72,57,161,260,162,74,75,163,308,76,309,310,166,167,169,170,171,58,172,77,311,312,173,78,174,313,59,251,252,199,50,52,79,80,314,315,316,317,318,319,320,321,218,322,323,219,324,325,326,327,328,329,330,331,332,220,333,334,335,336,337,221,338,339,224,225,226,227,229,230],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[266,50,51,52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[259,276,294,146,340,160,72,161,162,163,341,76,58,173,78,342,343,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksBehavior:200","failures":[202],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":178,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":91,"org.easymock.tests2.UsageTest.argumentsOrdered":45,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":247,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":273,"org.easymock.tests2.StubTest.stubWithReturnValue":223,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":260,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":194,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":118,"org.easymock.tests2.SerializationTest.testAllMockedMethod":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":245,"org.easymock.tests.MockingTest.testPartialClassMocking":96,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":39,"org.easymock.samples.SupportTest.voteForRemovals":151,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":70,"org.easymock.tests.MockClassControlTest.testToString":295,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":327,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":266,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":219,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":81,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":192,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":139,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":140,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":184,"org.easymock.tests2.UsageTest.wrongArguments":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":106,"org.easymock.samples.ConstructorCalledMockTest.testTax":301,"org.easymock.tests.UsageStrictMockTest.range":29,"org.easymock.samples.ExampleTest.answerVsDelegate":62,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":213,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":224,"org.easymock.tests2.UsageConstraintsTest.testNull":180,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":169,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":300,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":215,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":161,"org.easymock.tests2.CaptureTest.testPrimitive":233,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":319,"org.easymock.tests.UsageTest.moreThanOneArgument":5,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":8,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":168,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":10,"org.easymock.tests2.CaptureTest.testCaptureNone":236,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":86,"org.easymock.tests.UsageUnorderedTest.message":23,"org.easymock.tests.UsageVerifyTest.twoReturns":26,"org.easymock.tests2.ThreadingTest.testThreadSafe":200,"org.easymock.tests.UsageTest.argumentsOrdered":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":333,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":303,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":141,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":41,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":317,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":57,"org.easymock.tests2.UsageConstraintsTest.any":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":246,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":35,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":275,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":205,"org.easymock.tests2.SerializationTest.testClass":50,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":222,"org.easymock.tests.LimitationsTest.mockNativeMethod":138,"org.easymock.tests2.DependencyTest.testClassMocking":309,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":71,"org.easymock.tests2.AnswerTest.answer":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":128,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":343,"org.easymock.tests2.CaptureTest.testAnd":231,"org.easymock.tests2.UsageTest.strictResetToDefault":153,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":312,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":306,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":87,"org.easymock.tests2.MockedExceptionTest.testMockedException":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":101,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":93,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":4,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":98,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":166,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":162,"org.easymock.tests.MockingTest.testNicePartialClassMocking":97,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":171,"org.easymock.tests.LimitationsTest.mockFinalMethod":286,"org.easymock.tests2.CaptureTest.testCaptureLast":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":248,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":22,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":230,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":183,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":193,"org.easymock.tests2.DependencyTest.testClassMockingSupport":310,"org.easymock.tests.MockingTest.testTwoMocks":280,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":21,"org.easymock.tests2.CaptureTest.testCapture1_2446744":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":109,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":44,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":196,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":90,"org.easymock.tests.UsageThrowableTest.throwError":129,"org.easymock.tests.UsageStrictMockTest.differentMethods":30,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":289,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":89,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":202,"org.easymock.tests2.ConstraintsToStringTest.andToString":38,"org.easymock.tests2.MockBuilderTest.testCreateMockString":76,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":324,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":321,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":314,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":220,"org.easymock.samples.PartialClassMockTest.testGetArea":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":142,"org.easymock.samples.ExampleTest.voteAgainstRemoval":149,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":328,"org.easymock.tests2.UsageTest.niceToStrict":154,"org.easymock.tests.LimitationsTest.privateConstructor":285,"org.easymock.tests2.UsageConstraintsTest.testNotNull":195,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":135,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":72,"org.easymock.tests2.MockBuilderTest.testCreateMock":75,"org.easymock.tests2.UsageTest.defaultResetToNice":157,"org.easymock.samples.ExampleTest.voteAgainstRemovals":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":335,"org.easymock.tests.UsageVarargTest.differentLength":267,"org.easymock.tests2.CallbackTest.callback":68,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":77,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":13,"org.easymock.tests.UsageTest.openCallCountByLastCall":92,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":32,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":211,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":175,"org.easymock.tests.UsageOverloadedMethodTest.overloading":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":332,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":189,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":227,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":120,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":188,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":237,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":88,"org.easymock.tests.UsageThrowableTest.throwCheckedException":132,"org.easymock.tests.MockClassControlTest.testEquals":299,"org.easymock.tests2.EasyMockSupportClassTest.testAll":218,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":282,"org.easymock.tests.MockingTest.testStrictClassMocking":278,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":12,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":37,"org.easymock.tests2.CaptureTest.testCaptureAll":232,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":244,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":229,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":226,"org.easymock.tests2.UsageConstraintsTest.testMatches":190,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":228,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":66,"org.easymock.samples.ExampleTest.voteForRemovals":150,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":204,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":24,"org.easymock.tests2.DependencyTest.testInterfaceMocking":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":263,"org.easymock.samples.BasicClassMockTest.testPrintContent":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":338,"org.easymock.tests2.DelegateToTest.testStubDelegate":55,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":134,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":274,"org.easymock.tests2.AnswerTest.stubAnswer":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":249,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":28,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":265,"org.easymock.tests2.UsageConstraintsTest.greaterThan":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":322,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":100,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":174,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":292,"org.easymock.samples.ExampleTest.voteForRemoval":148,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":313,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":201,"org.easymock.tests.UsageExpectAndReturnTest.floatType":111,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":58,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":302,"org.easymock.tests2.ConstraintsToStringTest.orToString":31,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":69,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":18,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":277,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":152,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":176,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":315,"org.easymock.tests2.SerializationTest.test":51,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":250,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":208,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":110,"org.easymock.tests2.UsageConstraintsTest.testSame":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":320,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":137,"org.easymock.tests2.CaptureTest.testCaptureFirst":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":209,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":159,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":20,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":325,"org.easymock.tests.GenericTest.testPackageScope":136,"org.easymock.tests2.CaptureTest.testCapture2_2446744":239,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":203,"org.easymock.tests2.UsageTest.moreThanOneArgument":42,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":163,"org.easymock.tests.GenericTest.testBridgedEquals":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":269,"org.easymock.tests.UsageExpectAndReturnTest.longType":112,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":206,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":341,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":121,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":257,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":308,"org.easymock.tests2.UsageStrictMockTest.differentMethods":49,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":242,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":311,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":113,"org.easymock.tests.UsageCallCountTest.tooManyCalls":270,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":11,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":336,"org.easymock.tests2.MockedExceptionTest.testRealException":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":117,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":61,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":133,"org.easymock.tests.MockingTest.testNiceClassMocking":281,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":225,"org.easymock.tests.MockingTest.testClassMocking":279,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":340,"org.easymock.tests2.UsageConstraintsTest.testContains":187,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":199,"org.easymock.tests2.UsageConstraintsTest.testFind":179,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":105,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":307,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":3,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":170,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":271,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":67,"org.easymock.tests.UsageExpectAndReturnTest.object":119,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":318,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":290,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":82,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":172,"org.easymock.tests.ErrorMessageTest.testGetters":83,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":160,"org.easymock.tests2.UsageStrictMockTest.range":48,"org.easymock.tests2.UsageConstraintsTest.lessThan":197,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":262,"org.easymock.tests.UsageTest.exactCallCountByLastCall":94,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":95,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":264,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":329,"org.easymock.tests2.CaptureTest.testCaptureRightOne":238,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":85,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":15,"org.easymock.tests2.UsageConstraintsTest.testOr":182,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":80,"org.easymock.tests.UsageRangeTest.combination":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":167,"org.easymock.tests.UsageTest.wrongArguments":7,"org.easymock.tests2.MockBuilderTest.testWithConstructor":256,"org.easymock.tests.MockClassControlTest.testHashCode":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":326,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":330,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":34,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":60,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":268,"org.easymock.tests2.UsageConstraintsTest.cmpTo":186,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":287,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":64,"org.easymock.tests2.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests.DefaultClassInstantiatorTest.object":288,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":217,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":305,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":331,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":123,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":297,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":272,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":173,"org.easymock.tests2.UsageConstraintsTest.constraints":177,"org.easymock.tests2.ConstraintsToStringTest.notToString":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":241,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":221,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":36,"org.easymock.tests2.CompareToTest.testGreateThan":54,"org.easymock.tests2.UsageTest.resumeIfFailure":158,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":143,"org.easymock.tests.LimitationsTest.abstractClass":284,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":259,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":115,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":19,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":212,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":84,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":316}}]
