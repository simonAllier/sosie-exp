[{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[5,6,7,8],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[10,11,12,2,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[46,47,48,49,50,51,52,53],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[14,54,55,56,57,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[24,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[69,70,71,72,9,73,74,75,76],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[77],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[2,3,78],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"result","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[79,80,81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[82,83,84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[85,86,87,88],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[89,90,91,92],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[93,94,80,81],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[2,13,14,54,55,56,57,34,37],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[95,96],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[10,11,12,2,13,14,16,17,20,22,23,31,36,37,38,41,44,45],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[97,95,98,99,96,100],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[95,96],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[102,46,103,104,105,106,107,69,108,70,109,110,111,112,113,114,115,71,116,117,118,2,3,4,48,49,50,52,119,120,13,5,121,72,9,122,89,123,73,74,124,125,126,127,77,128,129,130,6,131,76,132,133,90,7,134,135,0,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,19,163,164,22,165,166,167,91,168,169,170,171,85,86,172,173,174,175,176,177,178,24,58,59,60,25,31,32,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,92,61,62,63,64,65,66,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,67,254,255,256,257,87,88,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,53,275,276,81,277,278,279,68,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[14,54,55,56,304,305,34],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[51,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[10,307,102,46,103,104,105,106,308,107,309,310,311,312,313,11,12,69,108,70,109,110,111,112,113,114,115,71,116,117,118,2,3,4,47,48,49,50,51,52,119,120,13,14,5,121,72,9,314,122,89,123,73,74,124,75,125,126,127,77,128,129,130,6,131,76,132,133,90,7,134,135,0,315,316,317,318,319,320,321,136,137,322,323,324,138,139,325,140,326,327,141,142,143,328,329,330,331,332,333,82,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,16,351,352,353,354,355,356,357,358,359,17,360,361,362,363,364,18,365,366,144,145,146,147,148,149,150,151,152,153,154,155,156,367,157,158,159,160,161,162,19,368,163,20,369,164,21,22,370,371,23,165,372,166,167,91,168,373,169,170,171,85,86,172,374,375,173,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,174,175,176,177,178,395,396,397,398,399,400,83,401,402,403,404,405,24,58,59,60,25,27,28,30,31,32,33,35,36,37,38,39,41,179,406,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,42,407,408,409,84,43,410,411,97,95,98,99,412,96,100,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,210,437,211,212,213,438,214,215,439,216,217,218,219,92,61,62,63,64,65,66,440,441,442,443,444,445,446,447,220,221,222,223,224,448,449,306,450,451,452,453,454,455,456,457,458,459,460,461,462,79,463,464,465,466,467,468,469,225,226,470,227,228,229,230,231,232,233,234,235,236,237,471,472,473,238,239,474,240,475,476,477,241,478,242,243,244,245,246,247,248,249,250,251,252,479,480,481,482,483,484,253,67,485,254,255,256,257,87,88,258,486,44,259,260,45,487,261,262,263,264,488,489,490,491,492,493,494,265,266,267,268,495,269,270,271,272,273,274,93,53,275,94,276,496,497,498,499,500,501,502,80,81,503,504,505,506,507,277,508,509,510,511,512,513,514,278,279,68,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,515,516,517,518,519,520,521,522],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Contains:40","failures":[523],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[307,313,328,329,330,332,82,334,335,338,395,396,397,399,83,401,402,405],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[10,307,102,46,103,104,105,106,107,309,310,311,312,313,69,108,70,109,110,111,112,113,114,115,71,117,118,2,3,4,48,49,50,52,119,120,13,5,121,72,9,122,89,123,73,74,124,75,125,126,127,77,128,129,130,6,131,76,132,133,90,7,134,135,0,321,136,137,322,324,138,139,140,141,142,143,333,348,16,17,18,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,21,22,370,165,166,167,91,168,373,169,170,171,85,86,172,173,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,174,400,59,27,31,33,35,39,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,439,216,217,218,219,92,61,65,449,455,459,79,463,464,225,226,227,228,229,230,231,232,238,239,240,241,478,242,243,248,249,250,251,252,253,67,485,254,255,256,257,87,88,258,486,259,260,261,262,263,264,489,490,493,265,266,267,268,269,270,271,272,273,274,53,275,276,278,279,68,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[344,368,372],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[16],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":9,"org.easymock.tests2.UsageTest.argumentsOrdered":154,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":225,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":457,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":149,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":307,"org.easymock.tests2.DelegateToTest.testReturnException":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":62,"org.easymock.tests.MockingTest.testPartialClassMocking":238,"org.easymock.tests.MockClassControlTest.testToString":442,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":390,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":282,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":376,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":434,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":54,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":124,"org.easymock.tests2.UsageTest.wrongArguments":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":278,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":246,"org.easymock.samples.ExampleTest.answerVsDelegate":46,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":43,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":476,"org.easymock.tests2.UsageConstraintsTest.testNull":89,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":160,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":447,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":386,"org.easymock.tests2.CaptureTest.testPrimitive":109,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":281,"org.easymock.tests.UsageTest.moreThanOneArgument":226,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":301,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":222,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":488,"org.easymock.tests.UsageTest.argumentsOrdered":231,"org.easymock.tests.UsageVarargTest.varargIntAccepted":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":248,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":317,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":252,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":418,"org.easymock.tests.ReplayStateInvalidUsageTest.times":511,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":333,"org.easymock.tests2.DependencyTest.testClassMocking":374,"org.easymock.tests2.AnswerTest.answer":140,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":463,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":178,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":408,"org.easymock.tests2.CaptureTest.testAnd":69,"org.easymock.tests2.UsageTest.strictResetToDefault":145,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":381,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":492,"org.easymock.tests2.DelegateToTest.testDelegate":52,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":417,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":297,"org.easymock.tests.LimitationsTest.mockFinalMethod":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":237,"org.easymock.tests2.DependencyTest.testClassMockingSupport":375,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":80,"org.easymock.tests2.CaptureTest.testCapture1_2446744":110,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":176,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":506,"org.easymock.tests.UsageThrowableTest.throwError":201,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":84,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":421,"org.easymock.samples.PartialClassMockTest.testGetArea":10,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":507,"org.easymock.tests.MockingTest.testInterfaceMocking":474,"org.easymock.tests2.CompareToTest.testLessOrEqual":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":249,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":498,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":521,"org.easymock.tests2.UsageTest.niceToStrict":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":355,"org.easymock.tests2.ThreadingTest.testChangeDefault":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":31,"org.easymock.tests2.MockBuilderTest.testCreateMock":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":291,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":382,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":407,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":502,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":493,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":244,"org.easymock.tests.UsageOverloadedMethodTest.overloading":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":364,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":128,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":192,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":262,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":77,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":115,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":438,"org.easymock.tests.MockClassControlTest.testEquals":446,"org.easymock.tests2.EasyMockSupportClassTest.testAll":348,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":299,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":177,"org.easymock.tests2.CaptureTest.testCaptureAll":108,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":235,"org.easymock.tests.MockNameTest.defaultName":522,"org.easymock.tests2.UsageConstraintsTest.testMatches":129,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":504,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":223,"org.easymock.samples.ExampleTest.voteForRemovals":106,"org.easymock.tests.UsageVarargTest.allKinds":92,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":236,"org.easymock.samples.BasicClassMockTest.testPrintContent":312,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":207,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":373,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":401,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":66,"org.easymock.tests2.UsageConstraintsTest.greaterThan":6,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":478,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":370,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":422,"org.easymock.samples.ExampleTest.voteForRemoval":103,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":100,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":166,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":371,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":410,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":19,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":414,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":144,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":261,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":379,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":61,"org.easymock.tests2.CaptureTest.testCaptureFirst":118,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":380,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":156,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":496,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":188,"org.easymock.tests2.UsageTest.moreThanOneArgument":146,"org.easymock.tests2.CaptureTest.testCapture2_2446744":117,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":464,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":39,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":219,"org.easymock.tests.GenericTest.testBridgedEquals":487,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":269,"org.easymock.tests.UsageExpectAndReturnTest.longType":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":233,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":377,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":300,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":515,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":90,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":480,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":220,"org.easymock.tests.UsageCallCountTest.tooManyCalls":270,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":287,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":206,"org.easymock.tests.MockingTest.testNiceClassMocking":477,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":136,"org.easymock.tests.MockingTest.testClassMocking":472,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":494,"org.easymock.tests2.UsageConstraintsTest.testContains":127,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":59,"org.easymock.tests2.UsageConstraintsTest.testFind":122,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":264,"org.easymock.tests.MockTypeTest.fromEasyMockClass":409,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":485,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":180,"org.easymock.tests.UsageExpectAndReturnTest.object":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":385,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":55,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":215,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":519,"org.easymock.tests.UsageTest.exactCallCountByLastCall":232,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":489,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":482,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":197,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":211,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":53,"org.easymock.tests.MockClassControlTest.testHashCode":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":396,"org.easymock.tests2.EasyMockSupportTest.testVerify":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":357,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":490,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":501,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":274,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":175,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":367,"org.easymock.tests.UsageVarargTest.varargCharAccepted":214,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":469,"org.easymock.tests2.UsageTest.openCallCountByLastCall":150,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":388,"org.easymock.tests.DefaultClassInstantiatorTest.object":97,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":500,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":517,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":358,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":395,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":444,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":420,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":21,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":288,"org.easymock.tests.ReplayStateInvalidCallsTest.times":426,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":198,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":479,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":427,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":18,"org.easymock.tests2.UsageTest.resumeIfFailure":155,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":42,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":64,"org.easymock.tests2.StubTest.stubWithReturnValue":120,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":190,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":7,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":79,"org.easymock.samples.SupportTest.voteForRemovals":310,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":398,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":294,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":78,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":468,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":326,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":484,"org.easymock.tests.UsageExpectAndThrowTest.object":292,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":132,"org.easymock.tests2.DelegateToTest.testWrongClass":50,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":424,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":302,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":303,"org.easymock.samples.ConstructorCalledMockTest.testTax":11,"org.easymock.tests.UsageStrictMockTest.range":87,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":319,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":384,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":293,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":33,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":513,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":245,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":416,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":499,"org.easymock.tests2.CaptureTest.testCaptureNone":114,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":340,"org.easymock.tests.UsageUnorderedTest.message":209,"org.easymock.tests.UsageVerifyTest.twoReturns":273,"org.easymock.tests.UsageVarargTest.varargByteAccepted":218,"org.easymock.tests2.ThreadingTest.testThreadSafe":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":360,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":268,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":520,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":311,"org.easymock.tests2.CaptureTest.testCapture_2617107":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":466,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":280,"org.easymock.tests2.UsageConstraintsTest.any":125,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":510,"org.easymock.tests2.StubTest.stub":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":63,"org.easymock.tests.UsageExpectAndThrowTest.longType":285,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":412,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":509,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":400,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":210,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":330,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":432,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":172,"org.easymock.tests2.NameTest.nameForMocksControl":394,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":341,"org.easymock.tests2.MockedExceptionTest.testMockedException":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":350,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":406,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":240,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":286,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":157,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":35,"org.easymock.tests.MockingTest.testNicePartialClassMocking":239,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":162,"org.easymock.tests2.CaptureTest.testCaptureLast":113,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":328,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":81,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":431,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":139,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":74,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":133,"org.easymock.tests.MockingTest.testTwoMocks":473,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":428,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":290,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":153,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":135,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":344,"org.easymock.samples.ExampleTest.removeNonExistingDocument":308,"org.easymock.tests.UsageStrictMockTest.differentMethods":88,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":334,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":397,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":98,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":343,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":167,"org.easymock.tests2.MockBuilderTest.testCreateMockString":41,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":440,"org.easymock.tests.UsageExpectAndThrowTest.floatType":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":351,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":347,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":141,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":15,"org.easymock.tests.UsageVerifyTest.twoThrows":272,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":17,"org.easymock.samples.ExampleTest.voteAgainstRemoval":104,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":458,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":22,"org.easymock.tests.LimitationsTest.privateConstructor":436,"org.easymock.tests2.UsageConstraintsTest.testNotNull":134,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":208,"org.easymock.tests2.UsageTest.defaultResetToNice":152,"org.easymock.samples.ExampleTest.voteAgainstRemovals":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":196,"org.easymock.tests.UsageVarargTest.differentLength":439,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":329,"org.easymock.tests2.CallbackTest.callback":174,"org.easymock.tests2.UsageConstraintsTest.equals":314,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":20,"org.easymock.tests.UsageTest.openCallCountByLastCall":228,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":68,"org.easymock.tests.UsageCallCountTest.tooFewCalls":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":247,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":342,"org.easymock.tests.UsageThrowableTest.throwCheckedException":205,"org.easymock.tests.MockingTest.testStrictClassMocking":471,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":138,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":67,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":82,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":512,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":324,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":143,"org.easymock.tests.ObjectMethodsTest.testHashCode":518,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":304,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":430,"org.easymock.tests2.NameTest.nameForNiceMock":393,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":168,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":425,"org.easymock.tests2.DependencyTest.testInterfaceMocking":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":56,"org.easymock.samples.ExampleTest.addDocument":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":361,"org.easymock.tests2.DelegateToTest.testStubDelegate":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.AnswerTest.stubAnswer":142,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":256,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":36,"org.easymock.tests.UsageVarargTest.varargLongAccepted":217,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.floatType":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":13,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":12,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":403,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":131,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":94,"org.easymock.tests.UsageThrowableTest.noUpperLimit":202,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":121,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":315,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":111,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":182,"org.easymock.tests2.UsageConstraintsTest.testSame":123,"org.easymock.samples.SupportTest.addDocument":309,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":323,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":415,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":352,"org.easymock.tests.GenericTest.testPackageScope":259,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":402,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":475,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":413,"org.easymock.tests2.NameTest.nameForMock":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":193,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":40,"org.easymock.tests2.UsageStrictMockTest.differentMethods":86,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":296,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":516,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":243,"org.easymock.tests2.MockedExceptionTest.testRealException":60,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":460,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":170,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":514,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":279,"org.easymock.tests2.NameTest.nameForStrictMock":392,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":30,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":179,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":161,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":318,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":99,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":76,"org.easymock.tests.ErrorMessageTest.testGetters":101,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":27,"org.easymock.tests2.UsageStrictMockTest.range":85,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":419,"org.easymock.tests2.UsageConstraintsTest.lessThan":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":455,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":378,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":356,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":339,"org.easymock.tests2.UsageConstraintsTest.testOr":73,"org.easymock.tests.UsageRangeTest.combination":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":158,"org.easymock.tests.UsageTest.wrongArguments":227,"org.easymock.tests2.MockBuilderTest.testWithConstructor":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":353,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":441,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":194,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":96,"org.easymock.tests.UsageVarargTest.varargShortAccepted":216,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":495,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":433,"org.easymock.tests2.UsageConstraintsTest.cmpTo":126,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":327,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":423,"org.easymock.tests2.CompareToTest.testLessThan":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":450,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":151,"org.easymock.tests2.CaptureTest.testCaptureFromStub":116,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":505,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":28,"org.easymock.tests.UsageTest.unexpectedCallWithArray":470,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":429,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":255,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":267,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":195,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":257,"org.easymock.samples.ExampleTest.addAndChangeDocument":107,"org.easymock.tests2.ConstraintsToStringTest.containsToString":523,"org.easymock.tests.UsageStrictMockTest.testVerify":486,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":313,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":234,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":112,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":250,"org.easymock.tests.LimitationsTest.abstractClass":435,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":251,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":212,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":383}}]
