[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:114","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[184,185,186],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[51,187,188,189,190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[2,191,3,4,5,192,193,193,194,194,6,7,8,9,195,196,197,10,198,11,12,199,200,201,202,203,13,204,14,15,16,1,17,18,19,20,21,22,205,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,206,207,45,46,47,48,208,49,50,51,209,210,211,52,212,53,54,55,56,57,58,213,59,214,60,61,62,215,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,216,217,81,218,82,219,83,84,220,85,221,86,87,88,222,89,223,90,91,92,224,225,93,94,226,227,95,228,96,229,97,98,99,100,101,102,103,104,105,106,107,108,109,230,187,110,188,231,232,233,234,111,235,236,237,238,112,239,240,241,242,243,244,245,246,247,113,248,114,115,249,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,250,251,252,253,254,255,136,137,138,139,140,141,256,142,143,144,257,258,259,260,261,150,151,152,153,154,155,156,157,158,262,263,264,265,266,267,268,269,270,271,272,273,159,274,275,276,277,278,279,280,281,282,283,284,160,161,285,286,162,163,287,288,164,289,165,166,167,168,169,290,291,292,170,171,293,294,172,173,174,175,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,176,320,177,178,179,180,181,182,321,322,323,324,325,326,327,328,189,329,190,330,331,183,332],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[33],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[264,275,279],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[333],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[197,10,198,11,12,199,13,204,16,29,54,214,62,215,70,72,74,75,77,78,217,81,218,83,84,220,85,221,86,88,222,89,223,224,225,93,94,96,229,98,99,102,103,334,335,336,337,233,246,247,113,248,114,115,249,136,141,256,142,257,258,263,266,267,268,269,270,271,272,273,338,274,339,340,341,342,276,277,278,160,161,285,286,287,288,164,343,291,319,329,331,183,332],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[31],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[344],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[2,191,3,4,345,5,346,192,193,194,347,6,348,349,7,350,351,352,353,8,9,354,355,356,357,358,359,195,360,196,197,361,10,198,11,12,199,200,201,202,203,362,363,364,365,366,13,204,367,368,369,370,371,14,15,16,1,372,17,18,19,20,21,22,205,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,206,207,45,46,47,48,208,49,50,51,209,210,211,52,212,373,53,54,55,56,57,58,213,374,59,375,376,214,60,61,62,377,215,63,378,64,379,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,216,217,81,218,380,82,219,83,84,381,382,220,85,221,86,87,88,222,89,223,90,91,92,224,225,93,94,226,227,95,228,383,384,385,386,387,96,229,388,389,390,391,392,97,98,99,100,393,101,102,103,394,104,105,395,396,397,398,106,399,400,107,401,402,403,404,405,406,407,408,409,108,410,411,412,413,414,109,415,416,417,418,334,335,336,337,230,187,110,188,231,232,233,234,111,235,236,237,238,0,112,419,239,240,241,242,243,244,245,420,421,422,423,424,425,426,246,427,247,113,248,114,115,249,428,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,250,251,252,253,254,255,136,137,138,139,429,140,430,141,256,142,143,144,257,258,431,432,433,434,435,436,437,438,439,440,145,441,146,442,443,444,445,259,446,447,448,147,148,260,149,449,450,261,150,151,451,152,452,453,454,153,154,155,156,157,158,262,263,264,265,266,267,268,455,456,269,270,271,272,273,457,458,159,459,338,460,274,339,461,462,340,341,342,463,464,465,466,467,468,469,470,471,472,473,474,275,475,276,277,278,279,280,281,282,283,284,160,161,285,286,162,163,287,288,164,476,477,478,479,480,481,343,482,483,484,485,289,165,166,167,168,169,290,291,292,170,171,293,294,172,173,174,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,175,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,176,320,177,178,179,180,181,182,321,322,323,324,325,326,327,328,189,329,190,330,331,183,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[214,215,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[508],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[65,66],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.Capture:82","failures":[509,40,42,43,44,206,207,45,47,510,48,208,50],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[442,259,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[193,193,194,194,6,350,351,53,54,56,57,58,213,59,214,60,61,62,63,217,511,81,218,82,219,83,84,220,85,512,221,95,97,98,99,100,102,103,104,395,106,107,108,109,513,112,419,239,261,150,151,152,268,271,159,475,292],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":160,"org.easymock.tests2.UsageTest.argumentsOrdered":225,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":79,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":441,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":223,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":348,"org.easymock.tests2.DelegateToTest.testReturnException":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":251,"org.easymock.tests.MockingTest.testPartialClassMocking":150,"org.easymock.tests.MockClassControlTest.testToString":276,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":418,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":404,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":299,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":9,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":507,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":170,"org.easymock.tests2.UsageTest.wrongArguments":222,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":237,"org.easymock.samples.ExampleTest.answerVsDelegate":191,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":271,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":453,"org.easymock.tests2.UsageConstraintsTest.testNull":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":56,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":78,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":281,"org.easymock.tests2.CaptureTest.testPrimitive":43,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":172,"org.easymock.tests.UsageTest.moreThanOneArgument":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":318,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":243,"org.easymock.tests.UsageTest.argumentsOrdered":288,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":321,"org.easymock.tests.UsageVarargTest.varargIntAccepted":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":445,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":165,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":391,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":356,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":169,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":491,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":185,"org.easymock.tests.ReplayStateInvalidUsageTest.times":471,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":13,"org.easymock.tests2.DependencyTest.testClassMocking":352,"org.easymock.tests2.AnswerTest.answer":51,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":446,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":203,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":456,"org.easymock.tests2.CaptureTest.testAnd":40,"org.easymock.tests2.UsageTest.strictResetToDefault":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":242,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":73,"org.easymock.tests2.DelegateToTest.testDelegate":232,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":325,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":490,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":314,"org.easymock.tests.LimitationsTest.mockFinalMethod":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":298,"org.easymock.tests2.DependencyTest.testClassMockingSupport":353,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":257,"org.easymock.tests2.CaptureTest.testCapture1_2446744":44,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":374,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":312,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":201,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":465,"org.easymock.tests.UsageThrowableTest.throwError":176,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":270,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":392,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":416,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":494,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":466,"org.easymock.tests.MockingTest.testInterfaceMocking":451,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":166,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":405,"org.easymock.tests2.UsageTest.niceToStrict":89,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":300,"org.easymock.tests2.ThreadingTest.testChangeDefault":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":82,"org.easymock.tests2.MockBuilderTest.testCreateMock":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":412,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":368,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":308,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":74,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":455,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":235,"org.easymock.tests.UsageOverloadedMethodTest.overloading":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":409,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":27,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":330,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":127,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":26,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":47,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":479,"org.easymock.tests2.EasyMockSupportClassTest.testAll":106,"org.easymock.tests.MockClassControlTest.testEquals":280,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":419,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":316,"org.easymock.tests2.CaptureTest.testCaptureAll":41,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":296,"org.easymock.tests.MockNameTest.defaultName":291,"org.easymock.tests2.UsageConstraintsTest.testMatches":28,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":463,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":244,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":289,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":297,"org.easymock.samples.BasicClassMockTest.testPrintContent":351,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":181,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":388,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":255,"org.easymock.tests2.UsageConstraintsTest.greaterThan":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":399,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":137,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":62,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":495,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":426,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":65,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":377,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":272,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":213,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":487,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":86,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":292,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":71,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":250,"org.easymock.tests2.CaptureTest.testCaptureFirst":50,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":72,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":94,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":332,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":123,"org.easymock.tests2.CaptureTest.testCapture2_2446744":49,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":67,"org.easymock.tests2.UsageTest.moreThanOneArgument":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":447,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":85,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":485,"org.easymock.tests.GenericTest.testBridgedEquals":240,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":341,"org.easymock.tests.UsageExpectAndReturnTest.longType":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":175,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":69,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":512,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":317,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":35,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":283,"org.easymock.tests.UsageCallCountTest.tooManyCalls":342,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":186,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":304,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":180,"org.easymock.tests.MockingTest.testNiceClassMocking":454,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":98,"org.easymock.tests.MockingTest.testClassMocking":450,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":511,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":460,"org.easymock.tests2.UsageConstraintsTest.testContains":25,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":95,"org.easymock.tests2.UsageConstraintsTest.testFind":17,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":158,"org.easymock.tests.MockTypeTest.fromEasyMockClass":269,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":196,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":246,"org.easymock.tests.UsageExpectAndReturnTest.object":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":369,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":77,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":481,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":265,"org.easymock.tests.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":429,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":322,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":378,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":476,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":132,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":190,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":384,"org.easymock.tests.MockClassControlTest.testHashCode":279,"org.easymock.tests2.EasyMockSupportTest.testVerify":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":407,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":184,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":323,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":189,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":200,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":373,"org.easymock.tests.UsageVarargTest.varargCharAccepted":480,"org.easymock.tests2.CaptureTest.testCaptureMultiple":509,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":149,"org.easymock.tests2.UsageTest.openCallCountByLastCall":90,"org.easymock.tests.DefaultClassInstantiatorTest.object":420,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":80,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":326,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":408,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":306,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":383,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":493,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":60,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":278,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":305,"org.easymock.tests.ReplayStateInvalidCallsTest.times":499,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":133,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":282,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":109,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":277,"org.easymock.tests2.UsageTest.resumeIfFailure":93,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":268,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":253,"org.easymock.tests2.StubTest.stubWithReturnValue":111,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":125,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":36,"org.easymock.tests2.SerializationTest.testAllMockedMethod":395,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":259,"org.easymock.samples.SupportTest.voteForRemovals":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":311,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":260,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":209,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":430,"org.easymock.tests.UsageExpectAndThrowTest.object":309,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":33,"org.easymock.tests2.DelegateToTest.testWrongClass":188,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":497,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":173,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":174,"org.easymock.tests.UsageStrictMockTest.range":114,"org.easymock.samples.ConstructorCalledMockTest.testTax":193,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":358,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":76,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":310,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":83,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":396,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":287,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":236,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":489,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":155,"org.easymock.tests2.CaptureTest.testCaptureNone":46,"org.easymock.tests.UsageUnorderedTest.message":319,"org.easymock.tests.UsageVerifyTest.twoReturns":142,"org.easymock.tests.UsageVarargTest.varargByteAccepted":484,"org.easymock.tests2.ThreadingTest.testThreadSafe":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":410,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":462,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":266,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":350,"org.easymock.tests2.CaptureTest.testCapture_2617107":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":294,"org.easymock.tests2.UsageConstraintsTest.any":23,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":470,"org.easymock.tests2.StubTest.stub":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":252,"org.easymock.tests.UsageExpectAndThrowTest.longType":302,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":424,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":469,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.SerializationTest.testClass":104,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":96,"org.easymock.tests.LimitationsTest.mockNativeMethod":159,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":135,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":239,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":364,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":505,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":199,"org.easymock.tests2.NameTest.nameForMocksControl":337,"org.easymock.tests2.MockedExceptionTest.testMockedException":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":400,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":163,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":303,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":360,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":84,"org.easymock.tests.MockingTest.testNicePartialClassMocking":151,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":58,"org.easymock.tests2.CaptureTest.testCaptureLast":45,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":362,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":258,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":504,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":103,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":21,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":34,"org.easymock.tests.MockingTest.testTwoMocks":261,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":501,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":116,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":307,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":224,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":38,"org.easymock.samples.ExampleTest.removeNonExistingDocument":346,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":467,"org.easymock.tests.UsageStrictMockTest.differentMethods":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":385,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":422,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":417,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":66,"org.easymock.tests2.MockBuilderTest.testCreateMockString":221,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":401,"org.easymock.tests.UsageExpectAndThrowTest.floatType":301,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":211,"org.easymock.tests.UsageVerifyTest.twoThrows":256,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":108,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":146,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":61,"org.easymock.tests.LimitationsTest.privateConstructor":458,"org.easymock.tests2.UsageConstraintsTest.testNotNull":37,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":182,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":226,"org.easymock.tests2.UsageTest.defaultResetToNice":92,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":131,"org.easymock.tests.UsageVarargTest.differentLength":343,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":363,"org.easymock.tests2.CallbackTest.callback":233,"org.easymock.tests2.UsageConstraintsTest.equals":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":375,"org.easymock.tests.UsageTest.openCallCountByLastCall":162,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":293,"org.easymock.tests.UsageCallCountTest.tooFewCalls":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":100,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":238,"org.easymock.tests.UsageThrowableTest.throwCheckedException":179,"org.easymock.tests.MockingTest.testStrictClassMocking":449,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":144,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":204,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":472,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":101,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":212,"org.easymock.tests.ObjectMethodsTest.testHashCode":264,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":503,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":68,"org.easymock.tests2.NameTest.nameForNiceMock":336,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":498,"org.easymock.tests2.DependencyTest.testInterfaceMocking":8,"org.easymock.samples.ExampleTest.addDocument":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":415,"org.easymock.tests2.DelegateToTest.testStubDelegate":110,"org.easymock.tests2.AnswerTest.stubAnswer":52,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":113,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":381,"org.easymock.tests.UsageVarargTest.varargLongAccepted":483,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":134,"org.easymock.tests.UsageExpectAndReturnTest.floatType":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":63,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":390,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":31,"org.easymock.tests.UsageThrowableTest.noUpperLimit":320,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":354,"org.easymock.tests2.SerializationTest.test":105,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":206,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":421,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":117,"org.easymock.tests2.UsageConstraintsTest.testSame":19,"org.easymock.samples.SupportTest.addDocument":349,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":393,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":488,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":402,"org.easymock.tests.GenericTest.testPackageScope":112,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":389,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":452,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":486,"org.easymock.tests2.NameTest.nameForMock":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":128,"org.easymock.tests2.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":376,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":120,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":313,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":139,"org.easymock.tests2.MockedExceptionTest.testRealException":228,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":443,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":474,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":171,"org.easymock.tests2.NameTest.nameForStrictMock":335,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":380,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":195,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":357,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":423,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":32,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":81,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":492,"org.easymock.tests2.UsageConstraintsTest.lessThan":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":406,"org.easymock.tests2.CaptureTest.testCaptureRightOne":48,"org.easymock.tests2.UsageConstraintsTest.testOr":20,"org.easymock.tests.UsageRangeTest.combination":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":54,"org.easymock.tests.UsageTest.wrongArguments":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":403,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":475,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":129,"org.easymock.tests.UsageVarargTest.varargShortAccepted":482,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":425,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":340,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":506,"org.easymock.tests2.UsageConstraintsTest.cmpTo":24,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":210,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":435,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":91,"org.easymock.tests2.CaptureTest.testCaptureFromStub":208,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":464,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":218,"org.easymock.tests.UsageTest.unexpectedCallWithArray":285,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":502,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":247,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":461,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":130,"org.easymock.tests2.CaptureTest.testCapture":510,"org.easymock.tests2.UsageConstraintsTest.constraints":16,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":248,"org.easymock.samples.ExampleTest.addAndChangeDocument":192,"org.easymock.tests2.ConstraintsToStringTest.notToString":508,"org.easymock.tests.UsageStrictMockTest.testVerify":428,"org.easymock.tests2.ConstraintsToStringTest.containsToString":344,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":347,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":427,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":295,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":207,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":513,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":167,"org.easymock.tests.LimitationsTest.abstractClass":457,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":122,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":168,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":75}}]
