[{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.internal.Range:44","failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,0,46,1,2,47,48,49,50,51,52,3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,4,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,5,6,120,121,122,123,124,7,8,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,9,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,10,260,261,11,262,263,264,265,266,267,268,269,270,271,12,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,13,14,310,15,16,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,17,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,18,19,20,453,454,455,456,457,21,22,23,458,459,24,25,460,461,462,463,464,26,27,465,466,467,468,28,469,470,471,29,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[191,488],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[132],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[489,490,491],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[265,269],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.LastControl:92","failures":[104,106,114,136,137,142,143,145,155],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[104,106,114,136,137,140,142,143,145,155,160],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:83","failures":[492],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[155],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:557","failures":[36,37,38,39,40,41,42,43,0,1,2,3,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,80,81,83,84,85,87,88,89,90,91,92,94,95,96,104,105,107,108,111,112,113,114,115,116,117,118,119,5,120,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,168,169,170,171,172,173,176,180,181,182,187,191,193,195,199,9,213,214,215,216,220,223,233,239,245,246,247,248,250,252,253,253,254,254,256,258,12,284,285,286,287,288,289,290,291,292,293,294,296,298,14,15,16,313,314,315,318,341,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,381,387,388,390,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,425,432,433,434,435,436,449,450,451,452,18,19,20,453,454,455,456,457,21,458,459,460,27,472,473,474,476,477,479,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[264,265,269],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[145],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[493,494,13,495,496,22],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[295,296,297,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","candidateMethod":"bridgeMethod","candidateMethods":"candidateMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[268,497,498],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:94","failures":[104,105,106,107,114,115,136,137,139,140,141,142,143,144,145,146,155,156,160,161],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[30,31,32,33,36,37,38,41,42,43,45,0,2,47,3,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,83,84,85,86,87,88,89,90,91,92,94,95,96,104,105,106,107,109,110,111,112,113,114,117,119,5,120,121,124,125,128,129,132,134,135,136,137,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,164,165,166,167,168,170,171,172,173,176,179,181,185,191,192,193,195,9,213,214,215,216,220,223,233,239,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,287,288,289,290,291,296,297,301,309,14,16,311,312,316,317,318,319,320,321,349,350,353,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,381,387,388,390,395,396,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,427,428,429,430,431,432,433,434,435,436,437,438,439,441,442,444,445,446,447,448,449,450,451,452,18,19,20,455,456,21,461,462,463,464,465,472,473,479,481,482,483,484,485,486,487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"position":"org.easymock.internal.RecordState:183","failures":[36,37,38,41,42,43,45,0,46,1,2,47,3,59,61,62,63,64,67,68,69,70,71,72,74,75,76,77,80,81,83,84,85,86,87,88,89,90,91,92,94,95,96,104,105,106,107,109,110,111,112,113,114,117,118,119,5,120,121,122,123,126,128,129,130,132,134,135,136,137,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,170,171,173,191,193,195,9,215,223,233,239,242,243,244,245,246,247,248,249,250,252,255,256,257,258,12,297,309,14,310,15,16,311,318,319,320,321,323,324,349,350,351,352,353,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,381,387,388,390,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,432,433,434,435,436,437,438,439,441,442,444,445,446,447,448,449,451,452,18,19,20,455,456,457,21,458,459,460,472,473,481],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[78,499,500,501,502,503,194],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[124],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[77,78,84,174,177,180,181,184,185,187,188,190,191,193,195,196,197,199,201,213,223,233,239,253,253,254,254,258,295,298,466,470],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[77,78,504,84,86,89,90,91,92,95,96,98,102,168,169,171,172,173,174,176,177,178,179,180,181,182,183,184,185,505,187,188,190,191,192,193,195,197,198,199,488,201,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,253,253,254,254,258,262,264,265,266,267,268,269,271,295,296,297,298,299,300,301,302,303,304,305,306,307,379,380,381,382,384,385,386,387,388,390,393,466,470,481],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[88,118,123,284,285,286,328,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,394,396,397,398,399,400,401,19,456,457,459,477,486],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[42,253,253,254,254],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[36,37,38,41,45,0,46,1,2,47,3,59,60,61,62,63,64,65,67,68,69,70,71,75,76,77,80,84,85,86,89,90,91,92,94,95,96,104,105,106,107,109,110,111,112,113,114,117,118,119,6,120,121,7,8,126,128,130,132,137,140,143,144,146,147,149,152,155,156,157,158,159,160,168,169,170,171,172,173,176,181,191,193,195,9,215,220,223,233,239,242,243,244,245,246,247,248,249,250,252,255,256,257,258,12,296,297,309,13,14,310,15,16,311,319,320,321,323,324,349,350,351,352,361,362,364,369,374,381,387,388,390,394,395,396,397,398,399,400,401,404,405,407,412,417,437,438,439,441,442,444,445,446,447,448,449,19,20,454,455,23,24,25,460,474,476,477,479,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":137,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":457,"org.easymock.tests2.UsageTest.argumentsOrdered":8,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":335,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":121,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":257,"org.easymock.tests2.DelegateToTest.testReturnException":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":483,"org.easymock.tests.MockingTest.testPartialClassMocking":387,"org.easymock.tests.MockClassControlTest.testToString":302,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":163,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":425,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":227,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":359,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":37,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":499,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":144,"org.easymock.tests2.UsageTest.wrongArguments":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":349,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":463,"org.easymock.samples.ExampleTest.answerVsDelegate":246,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":470,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":392,"org.easymock.tests2.UsageConstraintsTest.testNull":140,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":171,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":68,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":307,"org.easymock.tests2.CaptureTest.testPrimitive":107,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":353,"org.easymock.tests.UsageTest.moreThanOneArgument":21,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":378,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":289,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":354,"org.easymock.tests.UsageVarargTest.varargIntAccepted":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":432,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":503,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":185,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":100,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":211,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":436,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":3,"org.easymock.tests.ReplayStateInvalidUsageTest.times":280,"org.easymock.tests2.DependencyTest.testClassMocking":34,"org.easymock.tests2.AnswerTest.answer":38,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":342,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":33,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":468,"org.easymock.tests2.CaptureTest.testAnd":104,"org.easymock.tests2.UsageTest.strictResetToDefault":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":189,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":63,"org.easymock.tests2.DelegateToTest.testDelegate":132,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":358,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":374,"org.easymock.tests.LimitationsTest.mockFinalMethod":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":431,"org.easymock.tests2.DependencyTest.testClassMockingSupport":35,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":26,"org.easymock.tests2.CaptureTest.testCapture1_2446744":108,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":31,"org.easymock.tests.UsageThrowableTest.throwError":394,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":274,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":469,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":212,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":383,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":241,"org.easymock.samples.PartialClassMockTest.testGetArea":258,"org.easymock.tests.MockingTest.testInterfaceMocking":389,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":433,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":314,"org.easymock.tests2.UsageTest.niceToStrict":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":228,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":191,"org.easymock.tests2.MockBuilderTest.testCreateMock":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":236,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":55,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":368,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":64,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":467,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":316,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":461,"org.easymock.tests.UsageOverloadedMethodTest.overloading":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":238,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":477,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":150,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":413,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":497,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":149,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":113,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":440,"org.easymock.tests2.EasyMockSupportClassTest.testAll":220,"org.easymock.tests.MockClassControlTest.testEquals":306,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":297,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":491,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":376,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":429,"org.easymock.tests2.CaptureTest.testCaptureAll":105,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":32,"org.easymock.tests.MockNameTest.defaultName":17,"org.easymock.tests2.UsageConstraintsTest.testMatches":151,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":290,"org.easymock.samples.ExampleTest.voteForRemovals":250,"org.easymock.tests.UsageVarargTest.allKinds":448,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":430,"org.easymock.samples.BasicClassMockTest.testPrintContent":244,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":400,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":487,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":208,"org.easymock.tests2.UsageConstraintsTest.greaterThan":153,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":450,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":182,"org.easymock.samples.ExampleTest.voteForRemoval":247,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":271,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":183,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":73,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":471,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":101,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":174,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":481,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":61,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":482,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":127,"org.easymock.tests2.CaptureTest.testCaptureFirst":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":62,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":126,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":409,"org.easymock.tests2.CaptureTest.testCapture2_2446744":116,"org.easymock.tests2.UsageTest.moreThanOneArgument":5,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":75,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":343,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":447,"org.easymock.tests.GenericTest.testBridgedEquals":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":323,"org.easymock.tests.UsageExpectAndReturnTest.longType":405,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":427,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":59,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":488,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":377,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":453,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":293,"org.easymock.tests.UsageCallCountTest.tooManyCalls":324,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":237,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":410,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":57,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":364,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":399,"org.easymock.tests.MockingTest.testNiceClassMocking":393,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":90,"org.easymock.tests.MockingTest.testClassMocking":385,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":505,"org.easymock.tests2.UsageConstraintsTest.testContains":148,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":317,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":215,"org.easymock.tests2.UsageConstraintsTest.testFind":139,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":456,"org.easymock.tests.MockTypeTest.fromEasyMockClass":28,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":83,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":308,"org.easymock.tests.UsageExpectAndReturnTest.object":412,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":500,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":442,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":261,"org.easymock.tests.UsageTest.exactCallCountByLastCall":460,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":355,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":78,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":437,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":418,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":476,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":203,"org.easymock.tests.MockClassControlTest.testHashCode":305,"org.easymock.tests2.EasyMockSupportTest.testVerify":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":230,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":489,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":356,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":474,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":30,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":133,"org.easymock.tests.UsageVarargTest.varargCharAccepted":441,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":263,"org.easymock.tests2.CaptureTest.testCaptureMultiple":492,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":348,"org.easymock.tests2.UsageTest.openCallCountByLastCall":122,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":70,"org.easymock.tests.DefaultClassInstantiatorTest.object":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":284,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":231,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":366,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":397,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":51,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":202,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":180,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":304,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":365,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":419,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":292,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":239,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":303,"org.easymock.tests2.UsageTest.resumeIfFailure":125,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":466,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":485,"org.easymock.tests2.StubTest.stubWithReturnValue":88,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":194,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":411,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":159,"org.easymock.tests2.SerializationTest.testAllMockedMethod":86,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":341,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":494,"org.easymock.samples.SupportTest.voteForRemovals":256,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":295,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":371,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":347,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":39,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":426,"org.easymock.tests.UsageExpectAndThrowTest.object":369,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":156,"org.easymock.tests2.DelegateToTest.testWrongClass":130,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":472,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":473,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.samples.ConstructorCalledMockTest.testTax":253,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":4,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":370,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":193,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":217,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":462,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":495,"org.easymock.tests2.CaptureTest.testCaptureNone":112,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":315,"org.easymock.tests.UsageUnorderedTest.message":12,"org.easymock.tests.UsageVerifyTest.twoReturns":20,"org.easymock.tests.UsageVarargTest.varargByteAccepted":446,"org.easymock.tests2.ThreadingTest.testThreadSafe":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":234,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":321,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":11,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":243,"org.easymock.tests2.CaptureTest.testCapture_2617107":106,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":345,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":352,"org.easymock.tests2.UsageConstraintsTest.any":146,"org.easymock.tests2.StubTest.stub":87,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":346,"org.easymock.tests.UsageExpectAndThrowTest.longType":362,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":268,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":278,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":46,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":9,"org.easymock.tests2.SerializationTest.testClass":84,"org.easymock.tests.LimitationsTest.mockNativeMethod":381,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":421,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":298,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":50,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":47,"org.easymock.tests2.NameTest.nameForMocksControl":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":52,"org.easymock.tests2.MockedExceptionTest.testMockedException":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":222,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":459,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":390,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":82,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":363,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":168,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":195,"org.easymock.tests.MockingTest.testNicePartialClassMocking":388,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":173,"org.easymock.tests2.CaptureTest.testCaptureLast":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":48,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":27,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":96,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":157,"org.easymock.tests.MockingTest.testTwoMocks":386,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":402,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":367,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":161,"org.easymock.samples.ExampleTest.removeNonExistingDocument":251,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":54,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":204,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":266,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":74,"org.easymock.tests2.MockBuilderTest.testCreateMockString":201,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":224,"org.easymock.tests.UsageExpectAndThrowTest.floatType":361,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":219,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":41,"org.easymock.tests.UsageVerifyTest.twoThrows":19,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":79,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":233,"org.easymock.samples.ExampleTest.voteAgainstRemoval":248,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":336,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":181,"org.easymock.tests.LimitationsTest.privateConstructor":380,"org.easymock.tests2.UsageConstraintsTest.testNotNull":160,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":401,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":213,"org.easymock.tests2.UsageTest.defaultResetToNice":124,"org.easymock.samples.ExampleTest.voteAgainstRemovals":245,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":337,"org.easymock.tests.UsageVarargTest.differentLength":443,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":49,"org.easymock.tests2.CallbackTest.callback":80,"org.easymock.tests2.UsageConstraintsTest.equals":138,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":177,"org.easymock.tests.UsageTest.openCallCountByLastCall":458,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":351,"org.easymock.tests.UsageCallCountTest.tooFewCalls":319,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":464,"org.easymock.tests.UsageThrowableTest.throwCheckedException":398,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":496,"org.easymock.tests.MockingTest.testStrictClassMocking":384,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":423,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":53,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":91,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":94,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":43,"org.easymock.tests.ObjectMethodsTest.testHashCode":260,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":502,"org.easymock.tests2.NameTest.nameForNiceMock":166,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":76,"org.easymock.tests2.DependencyTest.testInterfaceMocking":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":501,"org.easymock.samples.ExampleTest.addDocument":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":235,"org.easymock.tests2.DelegateToTest.testStubDelegate":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":240,"org.easymock.tests2.AnswerTest.stubAnswer":42,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":196,"org.easymock.tests.UsageVarargTest.varargLongAccepted":445,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":334,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":420,"org.easymock.tests.UsageExpectAndReturnTest.floatType":404,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":77,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":254,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests.UsageThrowableTest.noUpperLimit":395,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":210,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":135,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":98,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":109,"org.easymock.tests2.SerializationTest.test":85,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":498,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":403,"org.easymock.tests2.UsageConstraintsTest.testSame":141,"org.easymock.samples.SupportTest.addDocument":255,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":93,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":225,"org.easymock.tests.GenericTest.testPackageScope":296,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":209,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":391,"org.easymock.tests2.NameTest.nameForMock":164,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":414,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":200,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":178,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":406,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":373,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":259,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":452,"org.easymock.tests2.MockedExceptionTest.testRealException":216,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":29,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":338,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":283,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":350,"org.easymock.tests2.NameTest.nameForStrictMock":165,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":190,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":81,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":172,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":102,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":155,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":267,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":187,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":206,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":333,"org.easymock.tests2.CaptureTest.testCaptureRightOne":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":229,"org.easymock.tests2.UsageConstraintsTest.testOr":142,"org.easymock.tests.UsageRangeTest.combination":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":169,"org.easymock.tests.UsageTest.wrongArguments":23,"org.easymock.tests2.MockBuilderTest.testWithConstructor":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":226,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":326,"org.easymock.tests.UsageVarargTest.varargShortAccepted":444,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":269,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":322,"org.easymock.tests2.UsageConstraintsTest.cmpTo":147,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":328,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":123,"org.easymock.tests2.CaptureTest.testCaptureFromStub":115,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":273,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":188,"org.easymock.tests.UsageTest.unexpectedCallWithArray":22,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":416,"org.easymock.tests2.UsageConstraintsTest.constraints":136,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":310,"org.easymock.samples.ExampleTest.addAndChangeDocument":252,"org.easymock.tests.UsageStrictMockTest.testVerify":312,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":242,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":309,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":428,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":110,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":504,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":434,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":408,"org.easymock.tests.LimitationsTest.abstractClass":379,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":435,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":65}}]
