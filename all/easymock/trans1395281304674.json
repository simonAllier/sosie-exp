[{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:71","sourceCode":"return new org.easymock.internal.Result(new ReturningAnswer() , true)","type":"CtReturnImpl"},"failures":[3,4,1,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,2,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,240,241,241],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[15,90,96,97,173,176,242,243,204,244,207,210,211,214],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[34,39,49,54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[245,6,7,8,9,10,12,14,15,16,17,246,247,248,18,19,20,21,22,23,24,27,32,37,38,40,41,43,46,49,50,51,52,53,57,58,59,60,61,62,63,64,65,67,68,69,70,71,75,76,249,83,84,85,86,88,90,91,92,96,97,100,101,102,103,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,124,125,126,130,131,133,138,143,148,149,150,151,250,153,251,155,156,252,253,158,254,255,164,165,166,2,168,169,170,172,173,175,176,177,178,194,195,196,197,198,199,243,207,210,211,256,257,258,213,214,215,216,217,218,219,221,222,223,224,225,259,260,261,262,263,226,227,228,229,230,231,232,233,234,235,236,237,238,239],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[8,9,10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[13,15,16,79,80,81,82,89,90,96,97,173,174,176,177,203,243,204,264,206,207,210,211],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[265,266,173,267,268,244],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.Capture:82","failures":[100,102,103,104,105,106,107,109,269,110,111,113],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[31,32,34,36,37,39,49,54,100,102,110],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[270,8,10,18,21,22,23,271,24,272,26,27,273,274,275,276,277,278,279,83,280,281,84,282,283,284,285,286,287,288,289,290,85,291,292,293,294,295,86,296,297,114,117,298,121,299,300,301,302,303,123,304,305,124,306,125,126,307,127,308,309,310,0,311,312,313,314,315,230,231,232,240,240,241,241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"searchType"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[316],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:222","failures":[254,255,317,318],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[13,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,319,320,100,101,102,103,104,105,106,107,108,109,110,111,112,113,321,157,322,164,165,166,2,167,173,174,183,184,185,186,187,188,189,323,214,225],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[5,324,298,121,325,322,326,327,328,166,329,330,331,332,323,333],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[325,258],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[316,0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:60","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[319,320,77,249,78,335],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[15,16,173,176,177,244],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[316,148,149,310,0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":32,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":205,"org.easymock.tests2.UsageTest.argumentsOrdered":97,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":332,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":92,"org.easymock.tests2.StubTest.stubWithReturnValue":5,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":229,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":53,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":137,"org.easymock.tests2.SerializationTest.testAllMockedMethod":10,"org.easymock.tests2.DelegateToTest.testReturnException":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":330,"org.easymock.tests.MockingTest.testPartialClassMocking":168,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":266,"org.easymock.samples.SupportTest.voteForRemovals":228,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":316,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":285,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":84,"org.easymock.tests.UsageExpectAndThrowTest.object":262,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":264,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":58,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":50,"org.easymock.tests2.DelegateToTest.testWrongClass":247,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":188,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":189,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":38,"org.easymock.tests2.UsageTest.wrongArguments":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":164,"org.easymock.samples.ConstructorCalledMockTest.testTax":240,"org.easymock.tests.UsageStrictMockTest.range":176,"org.easymock.samples.ExampleTest.answerVsDelegate":335,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":66,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":114,"org.easymock.tests2.UsageConstraintsTest.testNull":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":21,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":68,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":125,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":299,"org.easymock.tests2.CaptureTest.testPrimitive":103,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":277,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":210,"org.easymock.tests.UsageTest.moreThanOneArgument":206,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":20,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":190,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":161,"org.easymock.tests2.CaptureTest.testCaptureNone":108,"org.easymock.tests.UsageUnorderedTest.message":214,"org.easymock.tests.UsageVerifyTest.twoReturns":204,"org.easymock.tests.UsageVarargTest.varargByteAccepted":223,"org.easymock.tests2.ThreadingTest.testThreadSafe":72,"org.easymock.tests.UsageTest.argumentsOrdered":211,"org.easymock.tests.UsageVarargTest.varargIntAccepted":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":291,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":196,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":231,"org.easymock.tests2.CaptureTest.testCapture_2617107":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":183,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":2,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":306,"org.easymock.tests2.UsageConstraintsTest.any":40,"org.easymock.tests2.StubTest.stub":1,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":331,"org.easymock.tests.UsageExpectAndThrowTest.longType":260,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":14,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":6,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":122,"org.easymock.tests.LimitationsTest.mockNativeMethod":158,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":310,"org.easymock.tests2.AnswerTest.answer":77,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":147,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":4,"org.easymock.tests2.CaptureTest.testAnd":100,"org.easymock.tests2.UsageTest.strictResetToDefault":88,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":17,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":25,"org.easymock.tests2.NameTest.nameForMocksControl":82,"org.easymock.tests2.MockedExceptionTest.testMockedException":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":281,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":63,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":209,"org.easymock.tests2.DelegateToTest.testDelegate":248,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":170,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":126,"org.easymock.tests.MockingTest.testNicePartialClassMocking":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":263,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":23,"org.easymock.tests2.CaptureTest.testCaptureLast":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":323,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":255,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":120,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":51,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":254,"org.easymock.tests2.CaptureTest.testCapture1_2446744":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":128,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":3,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":96,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":55,"org.easymock.tests.UsageThrowableTest.throwError":250,"org.easymock.tests.UsageStrictMockTest.differentMethods":177,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":314,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":74,"org.easymock.tests2.MockBuilderTest.testCreateMockString":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":282,"org.easymock.tests.UsageExpectAndThrowTest.floatType":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":163,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":279,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":249,"org.easymock.tests.UsageVerifyTest.twoThrows":243,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":85,"org.easymock.samples.PartialClassMockTest.testGetArea":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":184,"org.easymock.samples.ExampleTest.voteAgainstRemoval":235,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":286,"org.easymock.tests2.UsageTest.niceToStrict":91,"org.easymock.tests2.UsageConstraintsTest.testNotNull":54,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":253,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":124,"org.easymock.tests2.MockBuilderTest.testCreateMock":307,"org.easymock.tests2.UsageTest.defaultResetToNice":95,"org.easymock.samples.ExampleTest.voteAgainstRemovals":233,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":293,"org.easymock.tests.UsageVarargTest.differentLength":220,"org.easymock.tests2.CallbackTest.callback":245,"org.easymock.tests.UsageTest.openCallCountByLastCall":208,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":265,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":64,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":29,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":166,"org.easymock.tests.UsageCallCountTest.tooFewCalls":194,"org.easymock.tests.UsageOverloadedMethodTest.overloading":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":290,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":258,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":44,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":139,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":150,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":43,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":109,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":191,"org.easymock.tests.UsageThrowableTest.throwCheckedException":155,"org.easymock.tests2.EasyMockSupportClassTest.testAll":83,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":149,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":268,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":300,"org.easymock.tests2.CaptureTest.testCaptureAll":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":322,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":119,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":116,"org.easymock.tests2.UsageConstraintsTest.testMatches":45,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":162,"org.easymock.samples.ExampleTest.voteForRemovals":237,"org.easymock.tests2.NameTest.nameForNiceMock":81,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":76,"org.easymock.tests.UsageVarargTest.allKinds":225,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":203,"org.easymock.tests2.DependencyTest.testInterfaceMocking":57,"org.easymock.samples.BasicClassMockTest.testPrintContent":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":182,"org.easymock.samples.ExampleTest.addDocument":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":296,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":252,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":11,"org.easymock.tests2.AnswerTest.stubAnswer":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":333,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":174,"org.easymock.tests2.UsageConstraintsTest.greaterThan":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":280,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":200,"org.easymock.tests.UsageVarargTest.varargLongAccepted":222,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":28,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":178,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":315,"org.easymock.samples.ExampleTest.voteForRemoval":234,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":273,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":73,"org.easymock.tests.UsageExpectAndReturnTest.floatType":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":146,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":241,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":48,"org.easymock.tests.UsageThrowableTest.noUpperLimit":153,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":226,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":87,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":30,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":275,"org.easymock.tests2.SerializationTest.test":9,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":61,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":154,"org.easymock.tests2.UsageConstraintsTest.testSame":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":278,"org.easymock.samples.SupportTest.addDocument":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":329,"org.easymock.tests2.CaptureTest.testCaptureFirst":113,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":62,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":99,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":283,"org.easymock.tests.GenericTest.testPackageScope":148,"org.easymock.tests2.UsageTest.moreThanOneArgument":89,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":75,"org.easymock.tests2.CaptureTest.testCapture2_2446744":112,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":334,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":127,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":224,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":197,"org.easymock.tests2.NameTest.nameForMock":79,"org.easymock.tests.UsageExpectAndReturnTest.longType":131,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":140,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":52,"org.easymock.tests2.UsageStrictMockTest.differentMethods":16,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":159,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":272,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":132,"org.easymock.tests.UsageCallCountTest.tooManyCalls":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":202,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":193,"org.easymock.tests2.MockedExceptionTest.testRealException":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":136,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":261,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":115,"org.easymock.tests2.NameTest.nameForStrictMock":80,"org.easymock.tests2.UsageConstraintsTest.testContains":42,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":121,"org.easymock.tests2.UsageConstraintsTest.testFind":33,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":152,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":305,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":22,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":320,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests.UsageExpectAndReturnTest.object":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":276,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":24,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":123,"org.easymock.tests2.UsageStrictMockTest.range":15,"org.easymock.tests2.UsageConstraintsTest.lessThan":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":67,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":219,"org.easymock.tests.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":302,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":157,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":287,"org.easymock.tests2.CaptureTest.testCaptureRightOne":110,"org.easymock.tests2.UsageConstraintsTest.testOr":36,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":270,"org.easymock.tests.UsageRangeTest.combination":199,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":19,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":144,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":257,"org.easymock.tests.UsageTest.wrongArguments":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":284,"org.easymock.tests2.EasyMockSupportTest.testVerify":71,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":288,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":180,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":256,"org.easymock.tests.UsageVarargTest.varargShortAccepted":221,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":321,"org.easymock.tests2.UsageConstraintsTest.cmpTo":41,"org.easymock.tests.UsageVarargTest.varargCharAccepted":218,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":12,"org.easymock.tests2.UsageTest.openCallCountByLastCall":93,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":94,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":70,"org.easymock.tests2.CaptureTest.testCaptureFromStub":111,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":304,"org.easymock.tests.UsageTest.unexpectedCallWithArray":244,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":289,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":251,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":173,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":195,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":142,"org.easymock.tests2.CaptureTest.testCapture":269,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":26,"org.easymock.tests2.UsageConstraintsTest.constraints":31,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":175,"org.easymock.samples.ExampleTest.addAndChangeDocument":238,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":145,"org.easymock.tests.UsageStrictMockTest.testVerify":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":326,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":86,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":181,"org.easymock.tests2.UsageTest.resumeIfFailure":98,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":185,"org.easymock.tests.LimitationsTest.abstractClass":313,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":134,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":186,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":65}}]
