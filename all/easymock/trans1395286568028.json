[{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,3,69,70,71,72,73,74,75,76,77,78,79,80,81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[82],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[83,84,85,86,87,88,89,90,91,92,93],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[94,95,96,97,98,99],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[1],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[100],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[101,102,103],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[85,88,89,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[104,105,106,11,13,107,108,109,110,111,45,47,112,113,114,115,116,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[104,105,106,118,4,5,6,119,120,121,122,123,7,8,9,10,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,96,11,154,12,13,107,155,14,15,16,17,18,19,20,21,22,156,157,158,159,160,161,162,163,164,165,23,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,108,97,196,197,198,199,200,201,109,110,111,202,203,204,205,206,207,208,209,210,211,212,213,24,25,26,214,215,216,217,218,219,220,221,222,100,223,224,225,226,227,228,229,230,27,28,29,30,31,32,231,232,33,34,233,35,36,37,234,38,39,40,41,42,235,236,237,43,238,239,240,44,241,242,243,244,45,245,46,47,112,101,102,103,246,247,83,84,248,85,249,86,87,250,251,252,253,254,255,256,1,257,258,89,259,260,261,262,90,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,48,49,50,51,52,53,54,278,279,280,281,282,55,56,283,57,58,284,59,285,286,287,288,289,290,291,292,293,113,294,295,2,296,297,298,299,300,301,302,303,304,305,306,307,308,114,115,116,117,91,309,92,82,310,311,312,313,314,315,93,316,317,318,319,320,321,322,323,60,324,61,62,63,64,65,66,67,68,3,69,325,70,326,71,72,73,74,75,327,76,328,329,330,331,331,332,332,77,78,333,79,80,334,81,335,336],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[240],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[89],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[337],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[338,339,340,341,342,343,344],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[345],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:83","failures":[346],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[347,348,349,60,61],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[84,86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[104,105,106,350,351,118,4,5,352,6,353,354,355,119,120,121,122,123,7,8,9,10,124,125,126,127,128,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,129,372,373,374,375,376,130,377,378,379,380,381,382,383,384,385,386,131,132,133,134,135,136,137,138,139,387,140,141,142,143,144,145,146,147,148,149,150,151,388,389,390,391,392,393,152,153,96,11,154,12,13,107,155,14,15,16,17,18,19,20,21,22,156,157,158,159,160,161,162,163,164,165,23,166,167,168,169,394,170,171,172,173,174,395,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,108,97,196,197,198,199,200,201,109,396,110,111,202,203,204,205,206,337,207,208,209,397,345,398,399,400,401,402,210,211,212,213,403,404,405,406,407,347,408,409,410,411,412,413,24,25,414,415,26,416,214,215,216,217,218,219,220,221,222,417,100,418,419,420,421,422,423,348,223,349,224,225,226,227,228,229,230,27,28,29,30,31,32,231,232,33,34,233,35,36,37,234,38,39,40,41,42,424,425,426,427,428,235,429,430,431,432,433,434,236,237,43,238,239,240,44,343,435,241,436,437,438,439,440,242,441,442,443,444,445,446,243,244,45,245,46,47,112,101,102,103,246,247,83,84,447,248,85,249,86,87,250,88,251,252,253,254,255,256,1,257,258,89,259,260,261,262,90,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,48,49,50,51,52,53,54,278,279,280,281,282,448,55,449,450,451,56,283,57,344,58,452,284,59,453,285,286,287,288,289,454,290,455,291,292,293,113,294,295,2,296,297,298,299,300,301,302,303,304,305,306,307,308,456,114,115,116,117,91,309,92,82,310,311,312,313,314,315,93,316,317,318,319,320,321,322,323,60,324,457,458,459,61,460,461,62,462,463,464,465,466,467,468,469,470,63,471,472,473,474,475,64,476,477,65,66,67,68,3,69,325,478,70,479,480,326,71,72,73,481,482,483,484,74,75,485,486,487,488,327,76,328,329,330,331,331,332,332,77,78,333,79,80,334,81,489,335,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[104,105,106,136,96,11,12,13,108,196,199,200,490,491,492,45,46,47,113,294,299,300,114,115,116,117],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[314],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[395],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[354,355,124,125,126,127,128,379,210,211,212,213,278,279,280,281,287,288,295,60,61,326],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[337],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":84,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":195,"org.easymock.tests2.UsageTest.argumentsOrdered":300,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":275,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":366,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":2,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":330,"org.easymock.tests2.DelegateToTest.testReturnException":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":215,"org.easymock.tests.MockingTest.testPartialClassMocking":4,"org.easymock.tests.MockClassControlTest.testToString":418,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":456,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":465,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":175,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":62,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":490,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":75,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":338,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":250,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":23,"org.easymock.tests2.UsageTest.wrongArguments":294,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":446,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":212,"org.easymock.samples.ExampleTest.answerVsDelegate":333,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":400,"org.easymock.tests2.UsageConstraintsTest.testNull":85,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":354,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":68,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":423,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":274,"org.easymock.tests2.CaptureTest.testPrimitive":82,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":169,"org.easymock.tests.UsageTest.moreThanOneArgument":108,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":194,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":21,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":119,"org.easymock.tests.UsageTest.argumentsOrdered":200,"org.easymock.tests.UsageVarargTest.varargIntAccepted":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":282,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":342,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":433,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":18,"org.easymock.tests.ReplayStateInvalidUsageTest.times":410,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":242,"org.easymock.tests2.DependencyTest.testClassMocking":483,"org.easymock.tests2.AnswerTest.answer":303,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":281,"org.easymock.tests2.CaptureTest.testAnd":91,"org.easymock.tests2.UsageTest.strictResetToDefault":293,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":269,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":123,"org.easymock.tests2.DelegateToTest.testDelegate":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":190,"org.easymock.tests.LimitationsTest.mockFinalMethod":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":128,"org.easymock.tests2.DependencyTest.testClassMockingSupport":484,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":173,"org.easymock.tests2.CaptureTest.testCapture1_2446744":310,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":478,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":188,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":279,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":405,"org.easymock.tests.UsageThrowableTest.throwError":158,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":399,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":434,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":477,"org.easymock.samples.PartialClassMockTest.testGetArea":77,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":406,"org.easymock.tests.MockingTest.testInterfaceMocking":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":466,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":393,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":176,"org.easymock.tests2.UsageTest.niceToStrict":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":56,"org.easymock.tests2.MockBuilderTest.testCreateMock":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":473,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":443,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":184,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":98,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":270,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":222,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":109,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":210,"org.easymock.tests.UsageOverloadedMethodTest.overloading":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":470,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":227,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":255,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":35,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":254,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":315,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":387,"org.easymock.tests.MockClassControlTest.testEquals":422,"org.easymock.tests2.EasyMockSupportClassTest.testAll":61,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":280,"org.easymock.tests2.CaptureTest.testCaptureAll":309,"org.easymock.tests.MockNameTest.defaultName":394,"org.easymock.tests2.UsageConstraintsTest.testMatches":256,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":22,"org.easymock.samples.ExampleTest.voteForRemovals":81,"org.easymock.tests.UsageVarargTest.allKinds":147,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":104,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":127,"org.easymock.samples.BasicClassMockTest.testPrintContent":329,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":164,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":219,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":239,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":385,"org.easymock.tests2.UsageConstraintsTest.greaterThan":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":8,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":73,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":386,"org.easymock.samples.ExampleTest.voteForRemoval":79,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":481,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":322,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":401,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":325,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":157,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":292,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":267,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":214,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":236,"org.easymock.tests2.CaptureTest.testCaptureFirst":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":268,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":302,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":232,"org.easymock.tests2.UsageTest.moreThanOneArgument":113,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":60,"org.easymock.tests2.CaptureTest.testCapture2_2446744":317,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":373,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":146,"org.easymock.tests.GenericTest.testBridgedEquals":397,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":205,"org.easymock.tests.UsageExpectAndReturnTest.longType":30,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":124,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":193,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":151,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":261,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":171,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":19,"org.easymock.tests.UsageCallCountTest.tooManyCalls":206,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":474,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":445,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":163,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":49,"org.easymock.tests.MockingTest.testNiceClassMocking":355,"org.easymock.tests.MockingTest.testClassMocking":351,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":396,"org.easymock.tests2.UsageConstraintsTest.testContains":253,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":288,"org.easymock.tests2.UsageConstraintsTest.testFind":248,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":150,"org.easymock.tests.MockTypeTest.fromEasyMockClass":398,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":152,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":291,"org.easymock.tests.UsageExpectAndReturnTest.object":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":273,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":339,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":391,"org.easymock.tests.UsageTest.exactCallCountByLastCall":201,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":120,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":348,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":343,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":39,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":226,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":425,"org.easymock.tests.MockClassControlTest.testHashCode":421,"org.easymock.tests2.EasyMockSupportTest.testVerify":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":468,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":121,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":221,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":278,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":454,"org.easymock.tests.UsageVarargTest.varargCharAccepted":140,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":378,"org.easymock.tests2.CaptureTest.testCaptureMultiple":346,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":377,"org.easymock.tests2.UsageTest.openCallCountByLastCall":296,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":276,"org.easymock.tests.DefaultClassInstantiatorTest.object":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":220,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":469,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":424,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":420,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":181,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":170,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":64,"org.easymock.tests2.UsageTest.resumeIfFailure":301,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":217,"org.easymock.tests2.StubTest.stubWithReturnValue":320,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":344,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":34,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":262,"org.easymock.tests2.SerializationTest.testAllMockedMethod":103,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":129,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":99,"org.easymock.samples.SupportTest.voteForRemovals":76,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":337,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":427,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":187,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":130,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":304,"org.easymock.tests.UsageExpectAndThrowTest.object":185,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":349,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":259,"org.easymock.tests2.DelegateToTest.testWrongClass":238,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":24,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":25,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.samples.ConstructorCalledMockTest.testTax":331,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":487,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":272,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":48,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":186,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":457,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":412,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":211,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":94,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":135,"org.easymock.tests2.CaptureTest.testCaptureNone":314,"org.easymock.tests.UsageUnorderedTest.message":136,"org.easymock.tests.UsageVerifyTest.twoReturns":106,"org.easymock.tests.UsageVarargTest.varargByteAccepted":145,"org.easymock.tests2.ThreadingTest.testThreadSafe":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":471,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":203,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":392,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":328,"org.easymock.tests2.CaptureTest.testCapture_2617107":92,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":375,"org.easymock.tests2.UsageConstraintsTest.any":251,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":409,"org.easymock.tests2.StubTest.stub":319,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":172,"org.easymock.tests.UsageExpectAndThrowTest.longType":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":376,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":383,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":408,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":245,"org.easymock.tests2.SerializationTest.testClass":101,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":235,"org.easymock.tests.LimitationsTest.mockNativeMethod":26,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":42,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":209,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":438,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":112,"org.easymock.tests2.NameTest.nameForMocksControl":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":440,"org.easymock.tests2.MockedExceptionTest.testMockedException":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":461,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":198,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":455,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":179,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":6,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":65,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":58,"org.easymock.tests.MockingTest.testNicePartialClassMocking":5,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":69,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":436,"org.easymock.tests2.CaptureTest.testCaptureLast":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":174,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":54,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":87,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":260,"org.easymock.tests.MockingTest.testTwoMocks":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":183,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":299,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":263,"org.easymock.samples.ExampleTest.removeNonExistingDocument":489,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":442,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":407,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":426,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":381,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":323,"org.easymock.tests2.MockBuilderTest.testCreateMockString":285,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":462,"org.easymock.tests.UsageExpectAndThrowTest.floatType":177,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":459,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":306,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":435,"org.easymock.tests.UsageVerifyTest.twoThrows":105,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":63,"org.easymock.samples.ExampleTest.voteAgainstRemoval":80,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":367,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":72,"org.easymock.tests.LimitationsTest.privateConstructor":415,"org.easymock.tests2.UsageConstraintsTest.testNotNull":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":165,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":286,"org.easymock.tests2.UsageTest.defaultResetToNice":298,"org.easymock.samples.ExampleTest.voteAgainstRemovals":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":437,"org.easymock.tests.UsageVarargTest.differentLength":142,"org.easymock.tests2.CallbackTest.callback":241,"org.easymock.tests2.UsageConstraintsTest.equals":447,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":479,"org.easymock.tests.UsageTest.openCallCountByLastCall":197,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":246,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":167,"org.easymock.tests.UsageCallCountTest.tooFewCalls":111,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":213,"org.easymock.tests.UsageThrowableTest.throwCheckedException":162,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":95,"org.easymock.tests.MockingTest.testStrictClassMocking":350,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":132,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":441,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":50,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":411,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":52,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":308,"org.easymock.tests.ObjectMethodsTest.testHashCode":390,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":341,"org.easymock.tests2.NameTest.nameForNiceMock":116,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":324,"org.easymock.tests2.DependencyTest.testInterfaceMocking":74,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":340,"org.easymock.samples.ExampleTest.addDocument":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":476,"org.easymock.tests2.DelegateToTest.testStubDelegate":43,"org.easymock.tests2.AnswerTest.stubAnswer":307,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests.UsageVarargTest.varargLongAccepted":144,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":365,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":41,"org.easymock.tests.UsageExpectAndReturnTest.floatType":29,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":44,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":432,"org.easymock.tests.UsageThrowableTest.noUpperLimit":159,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":228,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":258,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":247,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":485,"org.easymock.tests2.SerializationTest.test":102,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":311,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":28,"org.easymock.tests2.UsageConstraintsTest.testSame":249,"org.easymock.samples.SupportTest.addDocument":327,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":463,"org.easymock.tests.GenericTest.testPackageScope":207,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":431,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":353,"org.easymock.tests2.NameTest.nameForMock":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":453,"org.easymock.tests2.UsageStrictMockTest.differentMethods":47,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":480,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":31,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":189,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":388,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":10,"org.easymock.tests2.MockedExceptionTest.testRealException":289,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":402,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":369,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":166,"org.easymock.tests2.NameTest.nameForStrictMock":115,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":451,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":290,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":3,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":486,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":491,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":89,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":382,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":55,"org.easymock.tests2.UsageStrictMockTest.range":46,"org.easymock.tests2.UsageConstraintsTest.lessThan":264,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":428,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":467,"org.easymock.tests2.CaptureTest.testCaptureRightOne":93,"org.easymock.tests2.UsageConstraintsTest.testOr":86,"org.easymock.tests.UsageRangeTest.combination":7,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":66,"org.easymock.tests.UsageTest.wrongArguments":196,"org.easymock.tests2.MockBuilderTest.testWithConstructor":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":464,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":32,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":357,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":384,"org.easymock.tests.UsageVarargTest.varargShortAccepted":143,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":204,"org.easymock.tests2.UsageConstraintsTest.cmpTo":252,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":359,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":297,"org.easymock.tests2.CaptureTest.testCaptureFromStub":316,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":404,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":449,"org.easymock.tests.UsageTest.unexpectedCallWithArray":97,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":96,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":202,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":234,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":154,"org.easymock.tests2.UsageConstraintsTest.constraints":83,"org.easymock.samples.ExampleTest.addAndChangeDocument":335,"org.easymock.tests.UsageStrictMockTest.testVerify":155,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":336,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":125,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":312,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":16,"org.easymock.tests.LimitationsTest.abstractClass":414,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":17,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":229,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":492,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":271}}]
