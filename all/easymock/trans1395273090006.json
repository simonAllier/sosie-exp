[{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,24,25,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[26,27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[42,43,44,45,46,11,47,12,48,49,21,50,22,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[88,89,89,90,90,91,92,93,94,32,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,3,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,31,42,139,43,140,44,141,142,45,143,144,46,145,146,147,148,149,150,151,152,153,154,52,155,10,156,157,158,53,159,160,161,162,163,164,165,166,167,168,169,170,54,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,24,25,197,11,198,47,12,13,41,199,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,75,243,244,245,246,247,248,249,76,14,48,250,251,77,252,253,254,255,256,257,258,259,260,261,262,263,78,79,80,81,82,83,84,264,265,266,85,267,268,269,270,271,272,273,274,275,276,277,86,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,87,295,15,16,17,296,297,298,299,300,49,21,301,50,22,23,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[148,228,302,303],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[88,91,304,93,305,306,32,307,125,127,128,130,31,42,139,43,140,44,142,143,144,46,148,164,165,168,171,172,173,174,175,176,177,191,192,193,194,11,47,12,200,201,202,203,204,205,208,209,211,212,213,215,216,217,218,219,220,221,222,235,236,237,238,246,247,248,249,275,276,283,284,285,286,287,298,299,21,50,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[3,140,308],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[309,86],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[88,89,89,90,90,310,311,32,124,312,307,313,125,126,127,128,129,130,314,131,31,42,43,140,44,141,142,45,143,144,46,152,171,172,173,174,176,177,315,316,317,191,192,193,194,41,318,319,220,221,222,320,321,322,264,323,324,268,275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[112],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[88,124,312,307,313,125,126,127,128,129,130,314,131,141,41,320,321,324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[241,325,326,245],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[327,328,329,330,48,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[162,309,247,248,249,331],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[356,357,358,359,360,361],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[89,89,90,90,310,311,32,33,124,307,313,362,125,126,127,128,35,129,130,131,31,42,43,140,44,141,142,363,364,45,143,144,46,365,366,150,151,152,367,368,369,171,172,173,174,176,177,370,371,372,191,373,374,192,375,376,377,378,379,380,381,382,383,193,384,385,386,387,388,194,389,390,41,318,391,392,319,220,221,222,393,320,321,322,260,4,394,395,396,5,397,398,264,323,324,399,267,268,269,270,271,272,273,274,400,401,275,402],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":98,"org.easymock.tests2.UsageTest.argumentsOrdered":161,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":76,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":339,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":308,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":332,"org.easymock.tests2.DelegateToTest.testReturnException":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":292,"org.easymock.tests.MockingTest.testPartialClassMocking":220,"org.easymock.tests.MockClassControlTest.testToString":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":378,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":55,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":192,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":36,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":104,"org.easymock.tests2.UsageTest.wrongArguments":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":276,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":281,"org.easymock.samples.ExampleTest.answerVsDelegate":92,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":321,"org.easymock.tests2.UsageConstraintsTest.testNull":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":43,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":187,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":274,"org.easymock.tests2.CaptureTest.testPrimitive":133,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":278,"org.easymock.tests.UsageTest.moreThanOneArgument":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":74,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":237,"org.easymock.tests.UsageTest.argumentsOrdered":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":283,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":124,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":343,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":287,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests.ReplayStateInvalidUsageTest.times":231,"org.easymock.tests2.AnswerTest.answer":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":123,"org.easymock.tests2.CaptureTest.testAnd":132,"org.easymock.tests2.UsageTest.strictResetToDefault":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":248,"org.easymock.tests2.DelegateToTest.testDelegate":170,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":70,"org.easymock.tests.LimitationsTest.mockFinalMethod":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":259,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":326,"org.easymock.tests2.CaptureTest.testCapture1_2446744":134,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":121,"org.easymock.tests.UsageThrowableTest.throwError":78,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":225,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":390,"org.easymock.samples.PartialClassMockTest.testGetArea":88,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":284,"org.easymock.tests2.UsageTest.niceToStrict":157,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":379,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":125,"org.easymock.tests2.MockBuilderTest.testCreateMock":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":386,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":64,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":327,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":29,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":279,"org.easymock.tests.UsageOverloadedMethodTest.overloading":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":109,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":211,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":265,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":108,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":135,"org.easymock.tests2.EasyMockSupportClassTest.testAll":191,"org.easymock.tests.MockClassControlTest.testEquals":273,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":72,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":257,"org.easymock.tests2.UsageConstraintsTest.testMatches":110,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":238,"org.easymock.samples.ExampleTest.voteForRemovals":305,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":258,"org.easymock.samples.BasicClassMockTest.testPrintContent":311,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":83,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":295,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":340,"org.easymock.tests2.UsageConstraintsTest.greaterThan":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":46,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":397,"org.easymock.samples.ExampleTest.voteForRemoval":304,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":146,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":365,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":141,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":322,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":180,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":371,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":291,"org.easymock.tests2.CaptureTest.testCaptureFirst":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":181,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":207,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":148,"org.easymock.tests2.CaptureTest.testCapture2_2446744":138,"org.easymock.tests2.UsageTest.moreThanOneArgument":10,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":130,"org.easymock.tests.GenericTest.testBridgedEquals":399,"org.easymock.tests.UsageExpectAndReturnTest.longType":203,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":73,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":314,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":71,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":235,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":354,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":82,"org.easymock.tests.MockingTest.testNiceClassMocking":393,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":172,"org.easymock.tests.MockingTest.testClassMocking":392,"org.easymock.tests2.UsageConstraintsTest.testContains":107,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":296,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":312,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":152,"org.easymock.tests2.UsageConstraintsTest.testFind":99,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":85,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":300,"org.easymock.tests.UsageExpectAndReturnTest.object":210,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":142,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":37,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":290,"org.easymock.tests.UsageTest.exactCallCountByLastCall":254,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":262,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":216,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":242,"org.easymock.tests.MockClassControlTest.testHashCode":272,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":335,"org.easymock.tests2.EasyMockSupportTest.testVerify":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":381,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":28,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":120,"org.easymock.tests2.CaptureTest.testCaptureMultiple":2,"org.easymock.tests2.UsageTest.openCallCountByLastCall":158,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":189,"org.easymock.tests.DefaultClassInstantiatorTest.object":260,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":382,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":334,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":143,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":61,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":194,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":270,"org.easymock.tests2.UsageTest.resumeIfFailure":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":320,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":294,"org.easymock.tests2.StubTest.stubWithReturnValue":54,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":34,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":209,"org.easymock.tests2.SerializationTest.testAllMockedMethod":318,"org.easymock.samples.SupportTest.voteForRemovals":306,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":328,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":398,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":67,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":0,"org.easymock.tests.UsageExpectAndThrowTest.object":65,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":303,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":114,"org.easymock.tests2.DelegateToTest.testWrongClass":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":298,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":299,"org.easymock.tests.UsageStrictMockTest.range":50,"org.easymock.samples.ConstructorCalledMockTest.testTax":89,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":185,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":171,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":66,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":127,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":233,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":280,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":329,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":357,"org.easymock.tests.UsageUnorderedTest.message":261,"org.easymock.tests.UsageVerifyTest.twoReturns":17,"org.easymock.tests2.ThreadingTest.testThreadSafe":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":384,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":86,"org.easymock.tests2.UsageConstraintsTest.any":105,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":230,"org.easymock.tests2.StubTest.stub":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":27,"org.easymock.tests.UsageExpectAndThrowTest.longType":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":293,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":396,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":229,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":154,"org.easymock.tests2.SerializationTest.testClass":41,"org.easymock.tests.LimitationsTest.mockNativeMethod":275,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":219,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":324,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":317,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":347,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":13,"org.easymock.tests2.NameTest.nameForMocksControl":9,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":358,"org.easymock.tests2.MockedExceptionTest.testMockedException":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":374,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":59,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":222,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":31,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":128,"org.easymock.tests.MockingTest.testNicePartialClassMocking":221,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":44,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":345,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":245,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":177,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":103,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":115,"org.easymock.tests.MockingTest.testTwoMocks":319,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":200,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":63,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":160,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":118,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":361,"org.easymock.samples.ExampleTest.removeNonExistingDocument":94,"org.easymock.tests.UsageStrictMockTest.differentMethods":22,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":336,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":394,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":360,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":147,"org.easymock.tests2.MockBuilderTest.testCreateMockString":131,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":267,"org.easymock.tests.UsageExpectAndThrowTest.floatType":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":375,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":196,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":193,"org.easymock.samples.ExampleTest.voteAgainstRemoval":93,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":144,"org.easymock.tests.LimitationsTest.privateConstructor":401,"org.easymock.tests2.UsageConstraintsTest.testNotNull":117,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":150,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":84,"org.easymock.tests2.UsageTest.defaultResetToNice":159,"org.easymock.samples.ExampleTest.voteAgainstRemovals":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":215,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":346,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":363,"org.easymock.tests.UsageTest.openCallCountByLastCall":251,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":95,"org.easymock.tests.UsageCallCountTest.tooFewCalls":20,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":174,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":282,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":359,"org.easymock.tests.UsageThrowableTest.throwCheckedException":81,"org.easymock.tests.MockingTest.testStrictClassMocking":391,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":330,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":176,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":263,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":350,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":175,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":25,"org.easymock.tests.ObjectMethodsTest.testHashCode":289,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":149,"org.easymock.tests2.NameTest.nameForNiceMock":8,"org.easymock.tests2.DependencyTest.testInterfaceMocking":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.DelegateToTest.testStubDelegate":168,"org.easymock.tests2.AnswerTest.stubAnswer":24,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":23,"org.easymock.tests.UsageExpectAndReturnTest.floatType":202,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":218,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":32,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":90,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":112,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":342,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":96,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":367,"org.easymock.tests2.SerializationTest.test":199,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":4,"org.easymock.tests2.UsageConstraintsTest.testSame":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":201,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":376,"org.easymock.tests.GenericTest.testPackageScope":264,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":341,"org.easymock.tests2.NameTest.nameForMock":6,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":212,"org.easymock.tests2.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":364,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":69,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":249,"org.easymock.tests2.MockedExceptionTest.testRealException":153,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":277,"org.easymock.tests2.NameTest.nameForStrictMock":7,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":362,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":140,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":369,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":395,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":113,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":307,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests2.UsageConstraintsTest.lessThan":119,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":338,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":39,"org.easymock.tests2.CaptureTest.testCaptureRightOne":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":380,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":356,"org.easymock.tests2.UsageConstraintsTest.testOr":102,"org.easymock.tests.UsageRangeTest.combination":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":42,"org.easymock.tests.UsageTest.wrongArguments":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":377,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":268,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":213,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":5,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":297,"org.easymock.tests2.UsageConstraintsTest.cmpTo":106,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests2.CaptureTest.testCaptureFromStub":137,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":224,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":313,"org.easymock.tests.UsageTest.unexpectedCallWithArray":48,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":49,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":214,"org.easymock.tests2.UsageConstraintsTest.constraints":97,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":301,"org.easymock.tests.UsageStrictMockTest.testVerify":51,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":333,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":285,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":316,"org.easymock.tests.LimitationsTest.abstractClass":400,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":206,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":184}}]
