[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[5,6,7,8,9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[10,11,12,13,14],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[19,20,21,22,23,24,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[15,26,19,20,21,22,27,28,25,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:88","sourceCode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:41","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[10,14],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[19,30,31,32,33,34,35,36,25,37,38],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[65,66,67,68,69,70,71,72,73,73,74,74,75,76,77,78,79,80,81,82,83,84,85,15,16,86,87,88,89,90,91,0,92,26,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,30,121,122,123,31,124,125,126,127,128,129,130,131,132,133,134,135,136,39,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,43,44,45,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,50,213,214,215,216,217,218,219,220,221,222,223,224,225,2,226,54,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,59,60,61,11,13,248,249,250,251,252,253,254,255,256,257,62,63,64,258,259,260,261,262,263,264,265,266,267,268,269,270,271,4,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[75,296,82,95,96,100,101],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[297,298,299,300,301,58],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[15,26,19,20,21,22,27,28,25,29],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[225],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[73,73,74,74,15,26,19,302,303,29],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[110,6],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[118,5],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[15,16,17,18],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[75,296,82,95,96,98,100,101,304,112,116],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[65,305,306,73,73,74,74,15,17,26,19,307,308,119,120,30,121,123,31,309,310,311,131,312,313,132,314,315,316,317,318,319,320,321,322,133,323,324,325,326,327,134,328,329,143,144,146,147,148,330,149,302,331,332,150,151,152,333,334,174,175,176,335,178,336,337,179,338,180,181,29,339,182,340,341,342,343,344,345,346,347,348,349,350,351,213,352,353,354,355,356,357,358,359,360,361,362,363,230,231,232,364,10,11,12,13,14,248,365],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[75,296,77,78,366,367,79,81,368,82,83,85],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":96,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":226,"org.easymock.tests2.UsageTest.argumentsOrdered":42,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":217,"org.easymock.tests2.StubTest.stubWithReturnValue":92,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":194,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":115,"org.easymock.tests2.SerializationTest.testAllMockedMethod":17,"org.easymock.tests2.DelegateToTest.testReturnException":87,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":215,"org.easymock.tests.MockingTest.testPartialClassMocking":230,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":298,"org.easymock.samples.SupportTest.voteForRemovals":72,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":10,"org.easymock.tests.MockClassControlTest.testToString":355,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":317,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":18,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":273,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":2,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":132,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":125,"org.easymock.tests.UsageExpectAndThrowTest.object":283,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":51,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":113,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":159,"org.easymock.tests2.DelegateToTest.testWrongClass":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":20,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":293,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":294,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":102,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":269,"org.easymock.tests2.UsageTest.wrongArguments":40,"org.easymock.samples.ConstructorCalledMockTest.testTax":73,"org.easymock.tests.UsageStrictMockTest.range":60,"org.easymock.samples.ExampleTest.answerVsDelegate":67,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":167,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":119,"org.easymock.tests2.UsageConstraintsTest.testNull":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":284,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":146,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":360,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":169,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":180,"org.easymock.tests2.CaptureTest.testPrimitive":77,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":309,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":292,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":56,"org.easymock.tests.UsageTest.moreThanOneArgument":54,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":145,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":222,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":264,"org.easymock.tests2.CaptureTest.testCaptureNone":80,"org.easymock.tests.UsageUnorderedTest.message":50,"org.easymock.tests.UsageVerifyTest.twoReturns":64,"org.easymock.tests2.ThreadingTest.testThreadSafe":153,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":252,"org.easymock.tests.UsageTest.argumentsOrdered":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":323,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":1,"org.easymock.tests2.CaptureTest.testCapture_2617107":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":237,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":335,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":4,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":338,"org.easymock.tests2.UsageConstraintsTest.any":103,"org.easymock.tests2.StubTest.stub":0,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":241,"org.easymock.tests.UsageExpectAndThrowTest.longType":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":216,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":347,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":173,"org.easymock.tests.LimitationsTest.mockNativeMethod":213,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":204,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":13,"org.easymock.tests2.AnswerTest.answer":124,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":304,"org.easymock.tests2.CaptureTest.testAnd":75,"org.easymock.tests2.UsageTest.strictResetToDefault":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":332,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":36,"org.easymock.tests2.NameTest.nameForMocksControl":49,"org.easymock.tests2.MockedExceptionTest.testMockedException":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":313,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":164,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":228,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":256,"org.easymock.tests2.DelegateToTest.testDelegate":91,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":277,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":232,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":181,"org.easymock.tests.MockingTest.testNicePartialClassMocking":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":288,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":148,"org.easymock.tests.LimitationsTest.mockFinalMethod":352,"org.easymock.tests2.CaptureTest.testCaptureLast":79,"org.easymock.tests2.CompareToTest.testCompareEqual":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":218,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":268,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":31,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":101,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":114,"org.easymock.tests.MockingTest.testTwoMocks":363,"org.easymock.tests2.CaptureTest.testCapture1_2446744":78,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":281,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":117,"org.easymock.tests.UsageThrowableTest.throwError":205,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":3,"org.easymock.tests.UsageStrictMockTest.differentMethods":61,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":345,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":155,"org.easymock.tests2.MockBuilderTest.testCreateMockString":340,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":314,"org.easymock.tests.UsageExpectAndThrowTest.floatType":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":224,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":311,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":127,"org.easymock.tests.UsageVerifyTest.twoThrows":63,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":133,"org.easymock.samples.PartialClassMockTest.testGetArea":65,"org.easymock.tests2.CompareToTest.testLessOrEqual":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":238,"org.easymock.samples.ExampleTest.voteAgainstRemoval":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":263,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":262,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":151,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":274,"org.easymock.tests2.UsageTest.niceToStrict":137,"org.easymock.tests.LimitationsTest.privateConstructor":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":34,"org.easymock.tests2.UsageConstraintsTest.testNotNull":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":212,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":174,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":179,"org.easymock.tests2.MockBuilderTest.testCreateMock":339,"org.easymock.tests2.UsageTest.defaultResetToNice":140,"org.easymock.samples.ExampleTest.voteAgainstRemovals":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":325,"org.easymock.tests2.CallbackTest.callback":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":302,"org.easymock.tests.UsageTest.openCallCountByLastCall":227,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":297,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":282,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":165,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":93,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":271,"org.easymock.tests.UsageOverloadedMethodTest.overloading":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":322,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":260,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":107,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":121,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":106,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":81,"org.easymock.tests.UsageThrowableTest.throwCheckedException":209,"org.easymock.tests.MockClassControlTest.testEquals":359,"org.easymock.tests2.EasyMockSupportClassTest.testAll":131,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":12,"org.easymock.tests.MockingTest.testStrictClassMocking":361,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":290,"org.easymock.tests2.CaptureTest.testCaptureAll":76,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":247,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":123,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":30,"org.easymock.tests2.UsageConstraintsTest.testMatches":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":122,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":223,"org.easymock.tests2.CompareToTest.testGreateOrEqual":8,"org.easymock.samples.ExampleTest.voteForRemovals":70,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":23,"org.easymock.tests2.NameTest.nameForNiceMock":48,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":157,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":62,"org.easymock.tests2.DependencyTest.testInterfaceMocking":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":22,"org.easymock.samples.BasicClassMockTest.testPrintContent":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":328,"org.easymock.tests2.DelegateToTest.testStubDelegate":88,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":211,"org.easymock.tests2.AnswerTest.stubAnswer":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":219,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":90,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":28,"org.easymock.tests2.UsageConstraintsTest.greaterThan":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":312,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":303,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":234,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":152,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":349,"org.easymock.samples.ExampleTest.voteForRemoval":68,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":333,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":203,"org.easymock.tests.UsageExpectAndReturnTest.floatType":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":26,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":74,"org.easymock.tests.UsageThrowableTest.noUpperLimit":206,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":111,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":248,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":94,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":307,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":366,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":29,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":162,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":207,"org.easymock.tests2.UsageConstraintsTest.testSame":99,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":214,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":86,"org.easymock.tests2.CaptureTest.testCaptureFirst":85,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":163,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":315,"org.easymock.tests.GenericTest.testPackageScope":11,"org.easymock.tests2.CaptureTest.testCapture2_2446744":84,"org.easymock.tests2.UsageTest.moreThanOneArgument":39,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":156,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":255,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":182,"org.easymock.tests.GenericTest.testBridgedEquals":14,"org.easymock.tests2.NameTest.nameForMock":46,"org.easymock.tests.UsageExpectAndReturnTest.longType":188,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":197,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":295,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":289,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":38,"org.easymock.tests2.UsageStrictMockTest.differentMethods":45,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":220,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":331,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":189,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":287,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":236,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":326,"org.easymock.tests2.MockedExceptionTest.testRealException":177,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":278,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":210,"org.easymock.tests.MockingTest.testNiceClassMocking":364,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":120,"org.easymock.tests.MockingTest.testClassMocking":362,"org.easymock.tests2.NameTest.nameForStrictMock":47,"org.easymock.tests2.UsageConstraintsTest.testContains":105,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":176,"org.easymock.tests2.UsageConstraintsTest.testFind":97,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":251,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":337,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":183,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":147,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":184,"org.easymock.tests.UsageExpectAndReturnTest.object":195,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":308,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":346,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":52,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":149,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":178,"org.easymock.tests2.UsageStrictMockTest.range":44,"org.easymock.tests2.UsageConstraintsTest.lessThan":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":21,"org.easymock.tests.UsageTest.exactCallCountByLastCall":229,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":246,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":27,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":319,"org.easymock.tests2.CaptureTest.testCaptureRightOne":82,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":253,"org.easymock.tests2.UsageConstraintsTest.testOr":100,"org.easymock.tests.UsageRangeTest.combination":233,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":144,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":259,"org.easymock.tests.UsageTest.wrongArguments":55,"org.easymock.tests2.MockBuilderTest.testWithConstructor":35,"org.easymock.tests.MockClassControlTest.testHashCode":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":316,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":354,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":320,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":254,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":348,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":266,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":258,"org.easymock.tests2.UsageConstraintsTest.cmpTo":104,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":126,"org.easymock.tests2.CompareToTest.testLessThan":5,"org.easymock.tests2.UsageTest.openCallCountByLastCall":138,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests.DefaultClassInstantiatorTest.object":343,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":171,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":265,"org.easymock.tests2.CaptureTest.testCaptureFromStub":83,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":336,"org.easymock.tests.UsageTest.unexpectedCallWithArray":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":321,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":280,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":208,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":58,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":37,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":199,"org.easymock.tests2.CaptureTest.testCapture":368,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":357,"org.easymock.tests2.UsageConstraintsTest.constraints":95,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":279,"org.easymock.samples.ExampleTest.addAndChangeDocument":71,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":202,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":242,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":134,"org.easymock.tests2.CompareToTest.testGreateThan":6,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":367,"org.easymock.tests2.UsageTest.resumeIfFailure":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":239,"org.easymock.tests.LimitationsTest.abstractClass":350,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":341,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":191,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":240,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":166}}]
