[{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[7,8,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[27,28,29,0,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,3,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,4,5,93,94,95,96,6,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"org.easymock.MockType.STRICT","org.easymock.MockType.STRICT":"type"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:262","failures":[115,116,117,118,57,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,4,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,97,157,158,159,160,161,162,163,164,165],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[166,167],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:89","sourceCode":"if (!(org.easymock.internal.Injection.isMatched())) {\n    throw new java.lang.RuntimeException(java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[169,170,171,172,173,32,33,174,175,176,177,178,179,180,181,182,183,49,50,184,185,186,187,188,189,190],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","fieldName":"qualifier","this":"qualifier"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[191,192],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[115,116,117,118,57,119,120,121,122,123,124,125,126,127,134,135,136,4,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,97,157,158,159,160,161,162,163,164,165],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[193,194,195,196,166,167,27,197,28,29,0,30,31,198,199,200,32,201,202,203,204,205,206,207,208,209,210,211,34,35,36,37,38,212,213,39,214,215,216,217,218,219,220,221,222,223,224,225,226,227,40,228,229,230,231,232,233,234,235,236,237,42,238,44,45,47,11,12,13,14,15,16,17,18,19,20,22,23,24,25,49,239,51,240,52,241,53,54,242,55,56,243,244,245,115,116,117,118,7,246,8,247,248,249,57,250,58,59,60,61,251,119,252,62,63,64,65,253,254,66,67,255,256,68,69,257,120,258,70,259,260,261,262,263,264,265,72,266,267,268,189,269,269,270,270,271,272,190,273,274,275,276,277,278,279,280,281,282,283,284,285,286,121,122,123,124,125,126,287,288,127,289,290,74,291,75,76,77,3,78,79,292,293,294,81,295,296,297,128,129,130,131,132,133,298,299,82,300,134,83,84,301,302,303,304,305,191,135,136,306,92,4,5,307,308,309,310,311,312,313,314,315,316,317,318,319,93,320,321,322,323,192,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,6,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,97,98,100,344,157,101,102,103,345,346,347,348,349,104,105,350,351,158,352,159,160,161,162,163,164,353,165,354,355,356,357,106,107,108,358,359,110,111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[40,61,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[360,361,362],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[194,166,167,363],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:299","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[41,364,365,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[40,261],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[214,219,230],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[39,219,11,13,22],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[8],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[361],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:79","sourceCode":"return java.util.List<java.lang.reflect.Field>","type":"CtReturnImpl"},"failures":[169,170,171,172,173,32,33,174,175,176,177,178,179,180,181,182,183,49,50,184,185,186,187,188,189,190],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[28,0,30,32,33,35,36,37,38,41,43,44,45,47,48,49,50,52,54,55,58,59,62,63,66,67,68,69,70,71,72,73,75,76,3,78,80,86,87,88,89,90,91,92,4,5,94,95,96,6,98,99,100,101,102,104,105,112,113,114],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":214,"org.easymock.tests2.UsageTest.argumentsOrdered":63,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":9,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":61,"org.easymock.tests2.StubTest.stubWithReturnValue":120,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":333,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":234,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":189,"org.easymock.tests2.SerializationTest.testAllMockedMethod":200,"org.easymock.tests2.DelegateToTest.testReturnException":246,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":122,"org.easymock.tests.MockingTest.testPartialClassMocking":355,"org.easymock.samples.SupportTest.voteForRemovals":272,"org.easymock.tests.MockClassControlTest.testToString":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":182,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":149,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":290,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":137,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":194,"org.easymock.tests.UsageExpectAndThrowTest.object":147,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":267,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":231,"org.easymock.tests2.DelegateToTest.testWrongClass":247,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":350,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":351,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":305,"org.easymock.tests2.UsageTest.wrongArguments":59,"org.easymock.samples.ConstructorCalledMockTest.testTax":269,"org.easymock.tests.UsageStrictMockTest.range":3,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":178,"org.easymock.samples.ExampleTest.answerVsDelegate":274,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":254,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":89,"org.easymock.tests2.UsageConstraintsTest.testNull":216,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":148,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":56,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":44,"org.easymock.tests2.CaptureTest.testPrimitive":14,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":306,"org.easymock.tests.UsageTest.moreThanOneArgument":98,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":156,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":309,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":304,"org.easymock.tests2.CaptureTest.testCaptureNone":19,"org.easymock.tests.UsageUnorderedTest.message":6,"org.easymock.tests.UsageVerifyTest.twoReturns":5,"org.easymock.tests.UsageVarargTest.varargByteAccepted":322,"org.easymock.tests2.ThreadingTest.testThreadSafe":201,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":345,"org.easymock.tests.UsageTest.argumentsOrdered":102,"org.easymock.tests.UsageVarargTest.varargIntAccepted":317,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":359,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":280,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":282,"org.easymock.tests2.CaptureTest.testCapture_2617107":13,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":41,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":136,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":187,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":364,"org.easymock.tests2.UsageConstraintsTest.any":222,"org.easymock.tests2.StubTest.stub":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":286,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":123,"org.easymock.tests.UsageExpectAndThrowTest.longType":140,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":360,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":29,"org.easymock.tests2.SerializationTest.testClass":198,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":49,"org.easymock.tests.LimitationsTest.mockNativeMethod":298,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":32,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":343,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":314,"org.easymock.tests2.AnswerTest.answer":193,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":221,"org.easymock.tests2.CaptureTest.testAnd":11,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":171,"org.easymock.tests2.UsageTest.strictResetToDefault":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":71,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":31,"org.easymock.tests2.NameTest.nameForMocksControl":38,"org.easymock.tests2.MockedExceptionTest.testMockedException":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":308,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":241,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":157,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":349,"org.easymock.tests2.DelegateToTest.testDelegate":249,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":357,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":141,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":258,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":45,"org.easymock.tests.MockingTest.testNicePartialClassMocking":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":152,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":262,"org.easymock.tests2.CaptureTest.testCaptureLast":18,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":125,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":105,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":219,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":69,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":232,"org.easymock.tests.MockingTest.testTwoMocks":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":104,"org.easymock.tests2.CaptureTest.testCapture1_2446744":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":324,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":150,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":145,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":62,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":236,"org.easymock.tests.UsageThrowableTest.throwError":158,"org.easymock.tests.UsageStrictMockTest.differentMethods":78,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":174,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":88,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":181,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":203,"org.easymock.tests2.MockBuilderTest.testCreateMockString":48,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":311,"org.easymock.tests.UsageExpectAndThrowTest.floatType":139,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":40,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":196,"org.easymock.tests.UsageVerifyTest.twoThrows":4,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":208,"org.easymock.samples.PartialClassMockTest.testGetArea":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":283,"org.easymock.samples.ExampleTest.voteAgainstRemoval":276,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":303,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":302,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":265,"org.easymock.tests2.UsageTest.niceToStrict":60,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":138,"org.easymock.tests2.UsageConstraintsTest.testNotNull":235,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":164,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":238,"org.easymock.tests2.UsageTest.defaultResetToNice":252,"org.easymock.tests2.MockBuilderTest.testCreateMock":46,"org.easymock.samples.ExampleTest.voteAgainstRemovals":273,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":339,"org.easymock.tests.UsageVarargTest.differentLength":93,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":170,"org.easymock.tests2.CallbackTest.callback":34,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":175,"org.easymock.tests.UsageTest.openCallCountByLastCall":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":146,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":53,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":212,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":130,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":135,"org.easymock.tests.UsageCallCountTest.tooFewCalls":108,"org.easymock.tests.UsageOverloadedMethodTest.overloading":288,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":226,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":335,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":287,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":255,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":361,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":225,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":20,"org.easymock.tests.UsageThrowableTest.throwCheckedException":161,"org.easymock.tests2.EasyMockSupportClassTest.testAll":206,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":313,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":154,"org.easymock.tests2.CaptureTest.testCaptureAll":12,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":68,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":165,"org.easymock.tests.MockNameTest.defaultName":80,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":33,"org.easymock.tests2.UsageConstraintsTest.testMatches":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":256,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":310,"org.easymock.samples.ExampleTest.voteForRemovals":278,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":205,"org.easymock.tests2.NameTest.nameForNiceMock":37,"org.easymock.tests.UsageVarargTest.allKinds":192,"org.easymock.tests2.DependencyTest.testInterfaceMocking":266,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":92,"org.easymock.samples.BasicClassMockTest.testPrintContent":281,"org.easymock.samples.ExampleTest.addDocument":277,"org.easymock.tests2.DelegateToTest.testStubDelegate":8,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":163,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":27,"org.easymock.tests2.AnswerTest.stubAnswer":166,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":184,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":76,"org.easymock.tests2.UsageConstraintsTest.greaterThan":228,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":295,"org.easymock.tests.UsageVarargTest.varargLongAccepted":321,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":72,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":79,"org.easymock.samples.ExampleTest.voteForRemoval":275,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":202,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":342,"org.easymock.tests.UsageExpectAndReturnTest.floatType":326,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":365,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":253,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":270,"org.easymock.tests.UsageThrowableTest.noUpperLimit":352,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":229,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":83,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":186,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":293,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":213,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":57,"org.easymock.tests2.SerializationTest.test":199,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":16,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":240,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":159,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":325,"org.easymock.tests2.UsageConstraintsTest.testSame":217,"org.easymock.samples.SupportTest.addDocument":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":121,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":7,"org.easymock.tests2.CaptureTest.testCaptureFirst":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":52,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":65,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":85,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":331,"org.easymock.tests.GenericTest.testPackageScope":312,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":204,"org.easymock.tests2.UsageTest.moreThanOneArgument":58,"org.easymock.tests2.CaptureTest.testCapture2_2446744":24,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":348,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":47,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":185,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":323,"org.easymock.tests2.NameTest.nameForMock":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":110,"org.easymock.tests.UsageExpectAndReturnTest.longType":327,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":336,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":155,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":294,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":233,"org.easymock.tests2.UsageStrictMockTest.differentMethods":30,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":307,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":328,"org.easymock.tests.UsageCallCountTest.tooManyCalls":111,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":151,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":297,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":107,"org.easymock.tests2.MockedExceptionTest.testRealException":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":332,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":177,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":142,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":191,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":66,"org.easymock.tests2.UsageConstraintsTest.testContains":224,"org.easymock.tests2.NameTest.nameForStrictMock":36,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":117,"org.easymock.tests2.UsageConstraintsTest.testFind":215,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":127,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":210,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":261,"org.easymock.tests.MockTypeTest.fromEasyMockClass":87,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":211,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":74,"org.easymock.tests.UsageExpectAndReturnTest.object":334,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":230,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":263,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":176,"org.easymock.tests2.UsageConstraintsTest.lessThan":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":55,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":319,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":183,"org.easymock.tests.UsageTest.exactCallCountByLastCall":103,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":353,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":51,"org.easymock.tests2.CaptureTest.testCaptureRightOne":22,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":346,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":168,"org.easymock.tests2.UsageConstraintsTest.testOr":218,"org.easymock.tests.UsageRangeTest.combination":81,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":340,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":315,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":70,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":300,"org.easymock.tests.UsageTest.wrongArguments":100,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":329,"org.easymock.tests2.EasyMockSupportTest.testVerify":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":337,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":347,"org.easymock.tests.UsageVarargTest.varargShortAccepted":320,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":299,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":129,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":109,"org.easymock.tests2.UsageConstraintsTest.cmpTo":223,"org.easymock.tests.UsageVarargTest.varargCharAccepted":318,"org.easymock.tests2.CaptureTest.testCaptureMultiple":10,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":195,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests2.UsageTest.openCallCountByLastCall":251,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":244,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":128,"org.easymock.tests2.CaptureTest.testCaptureFromStub":23,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":43,"org.easymock.tests.UsageTest.unexpectedCallWithArray":99,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":94,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":144,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":160,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":358,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":172,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":338,"org.easymock.tests2.CaptureTest.testCapture":21,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":264,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":77,"org.easymock.tests2.UsageConstraintsTest.constraints":39,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":114,"org.easymock.samples.ExampleTest.addAndChangeDocument":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":143,"org.easymock.tests.CapturesMatcherTest.test":26,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":341,"org.easymock.tests.UsageStrictMockTest.testVerify":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":131,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":190,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":209,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":113,"org.easymock.tests2.UsageTest.resumeIfFailure":64,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":284,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":330,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":285,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":84,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":54,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":2}}]
