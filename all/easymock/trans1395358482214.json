[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[64,64,65,65,66,67,68,69,70,9,71,72,73,74,10,75,76,77,11,78,79,80,81,82,83,84,15,85,86,87,88,89,16,90,91,92,17,93,94,18,20,21,95,96,97,98,99,100,101,0,2,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,27,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,46,47,48,49,50,51,52,53,153],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[155,156,150,153],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[103],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[84,157,158,159,160,161,162],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[136,163,164],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[166],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"defaultValue","properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[167],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":100,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":43,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":34,"org.easymock.tests.ObjectMethodsTest.testHashCode":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":161,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.MockingTest.testPartialClassMocking":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":160,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":58,"org.easymock.samples.BasicClassMockTest.testPrintContent":68,"org.easymock.tests.MockClassControlTest.testToString":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":112,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":106,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":158,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":138,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":81,"org.easymock.samples.ConstructorCalledMockTest.testTax":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":25,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":10,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":83,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":13,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":65,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":153,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":69,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":72,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":90,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":92,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":164,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":102,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":103,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":167,"org.easymock.tests2.CaptureTest.testCaptureFirst":63,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":39,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":110,"org.easymock.tests.GenericTest.testPackageScope":129,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":93,"org.easymock.tests.GenericTest.testBridgedEquals":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":119,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":162,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":12,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":55,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":94,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":16,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":41,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":77,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":136,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":40,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":22,"org.easymock.tests.LimitationsTest.mockNativeMethod":151,"org.easymock.tests.ReplayStateInvalidUsageTest.times":42,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":8,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":122,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":7,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":11,"org.easymock.tests2.MockedExceptionTest.testMockedException":21,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":45,"org.easymock.tests.MockingTest.testNiceClassMocking":145,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":156,"org.easymock.tests.MockingTest.testClassMocking":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":107,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":32,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":85,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":144,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":9,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":91,"org.easymock.tests.MockingTest.testNicePartialClassMocking":143,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":74,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":155,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":88,"org.easymock.tests.LimitationsTest.mockFinalMethod":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":73,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":70,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":135,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":75,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":86,"org.easymock.tests.MockingTest.testTwoMocks":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":159,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":31,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":5,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":62,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":36,"org.easymock.samples.ExampleTest.removeNonExistingDocument":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":114,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":38,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":71,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":134,"org.easymock.tests2.MockBuilderTest.testCreateMockString":18,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":46,"org.easymock.tests.MockClassControlTest.testHashCode":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":109,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":47,"org.easymock.tests2.EasyMockSupportTest.testVerify":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":115,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":137,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":33,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":118,"org.easymock.samples.PartialClassMockTest.testGetArea":66,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":37,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":61,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":79,"org.easymock.tests2.UsageTest.niceToStrict":165,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":113,"org.easymock.tests.LimitationsTest.privateConstructor":150,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":20,"org.easymock.tests.DefaultClassInstantiatorTest.object":27,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":89,"org.easymock.tests2.MockBuilderTest.testCreateMock":17,"org.easymock.tests2.UsageTest.defaultResetToNice":19,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":121,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":87,"org.easymock.tests.UsageTest.unexpectedCallWithArray":54,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":29,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":117,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":50,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":78,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.UsageStrictMockTest.testVerify":28,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":163,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":154,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":124,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":56,"org.easymock.tests2.EasyMockSupportClassTest.testAll":105,"org.easymock.tests.MockClassControlTest.testEquals":52,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":127,"org.easymock.tests.LimitationsTest.abstractClass":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":147,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":130,"org.easymock.tests.MockingTest.testStrictClassMocking":139,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":57}}]
