[{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[157],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[248,249],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[251,252,253],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[254,255,256,257,258,259,260,261],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[262,263],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl() : org.easymock.EasyMockSupport.createNiceControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[264,265,266,267,268,269,270,14,271,272,273,59,60,274,275,248,276,277,100,278,279,131,132,280,281,134,282,283,284,285,286,250,287,288,289,178,182,183,186,190,290,291,292,202,206,220],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[131],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[217],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[293,294,136,295,296,284,286,297,154,298,169,299,232],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[300,301,302,24,303,304,305,306,307,57,308,309,70,71,72,310,311,312,313,314,315,316,317,318,293,110,111,294,319,112,115,115,116,116,124,125,126,320,321,135,283,322,323,136,137,138,139,296,284,285,286,140,141,142,143,145,146,147,250,149,150,151,324,152,297,325,153,287,154,288,326,298,327,328,329,156,330,331,157,332,333,334,335,336,337,338,339,340,158,341,342,343,344,345,159,346,347,169,299,173,174,175,232,234],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[11,12,349,350,13,22,274,61,62,73,351,99,105,106,107,108,109,201,211,214,236,241,242,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[265,352,353,248,249,354],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[355],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[57,70,71,72,106,126,283,136,138,139,285,140,141,142,143,144,145,146,147,148,149,151,156,157,158,159,169,357,196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[264,0,358,359,269,11,12,13,14,15,16,17,25,251,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,252,57,58,60,61,62,63,64,65,66,67,360,68,69,70,71,72,73,99,277,100,361,104,362,363,364,365,366,105,106,107,108,109,110,294,367,253,368,114,115,115,116,116,117,119,120,122,126,278,129,130,131,369,370,133,134,282,283,136,138,139,285,140,141,142,143,144,145,146,147,250,148,149,150,151,152,287,154,288,155,156,157,158,159,160,167,169,170,171,289,357,172,175,177,178,179,180,181,182,183,184,185,186,187,188,196,199,201,292,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,238,371,241,242,243,244,372,373,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":207,"org.easymock.tests2.UsageTest.argumentsOrdered":281,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":264,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":262,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":132,"org.easymock.tests2.StubTest.stubWithReturnValue":199,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":226,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":40,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":128,"org.easymock.tests2.SerializationTest.testAllMockedMethod":234,"org.easymock.tests2.DelegateToTest.testReturnException":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":19,"org.easymock.tests.MockingTest.testPartialClassMocking":70,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":354,"org.easymock.samples.SupportTest.voteForRemovals":114,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":293,"org.easymock.tests.MockClassControlTest.testToString":303,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":298,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":335,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":78,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":157,"org.easymock.tests.UsageExpectAndThrowTest.object":88,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":231,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":224,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":61,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":62,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":213,"org.easymock.tests2.UsageTest.wrongArguments":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":11,"org.easymock.tests.UsageStrictMockTest.range":277,"org.easymock.samples.ConstructorCalledMockTest.testTax":115,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":76,"org.easymock.samples.ExampleTest.answerVsDelegate":118,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":301,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":140,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":255,"org.easymock.tests2.UsageConstraintsTest.testNull":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":89,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":149,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":306,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":138,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":186,"org.easymock.tests2.CaptureTest.testPrimitive":238,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":327,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":267,"org.easymock.tests.UsageTest.moreThanOneArgument":0,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":97,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":75,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":148,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":352,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":368,"org.easymock.tests2.CaptureTest.testCaptureNone":242,"org.easymock.tests.UsageUnorderedTest.message":274,"org.easymock.tests.UsageVerifyTest.twoReturns":60,"org.easymock.tests.UsageVarargTest.varargByteAccepted":8,"org.easymock.tests2.ThreadingTest.testThreadSafe":170,"org.easymock.tests.UsageTest.argumentsOrdered":268,"org.easymock.tests.UsageVarargTest.varargIntAccepted":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":341,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":56,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":356,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":124,"org.easymock.tests2.CaptureTest.testCapture_2617107":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":105,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":350,"org.easymock.tests2.UsageConstraintsTest.any":214,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":137,"org.easymock.tests2.StubTest.stub":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":109,"org.easymock.tests.UsageExpectAndThrowTest.longType":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":20,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":315,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":291,"org.easymock.tests2.SerializationTest.testClass":232,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":160,"org.easymock.tests.LimitationsTest.mockNativeMethod":57,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":155,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":50,"org.easymock.tests2.AnswerTest.answer":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":164,"org.easymock.tests2.CaptureTest.testAnd":235,"org.easymock.tests2.UsageTest.strictResetToDefault":129,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":203,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":153,"org.easymock.tests2.NameTest.nameForMocksControl":194,"org.easymock.tests2.MockedExceptionTest.testMockedException":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":331,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":181,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":359,"org.easymock.tests2.DelegateToTest.testDelegate":197,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":82,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":72,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":147,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":139,"org.easymock.tests.MockingTest.testNicePartialClassMocking":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":93,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":151,"org.easymock.tests.LimitationsTest.mockFinalMethod":308,"org.easymock.tests2.CaptureTest.testCaptureLast":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":22,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":212,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":146,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":30,"org.easymock.tests.MockingTest.testTwoMocks":309,"org.easymock.tests2.CaptureTest.testCapture1_2446744":371,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":86,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":162,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":280,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":228,"org.easymock.tests.UsageThrowableTest.throwError":361,"org.easymock.tests.UsageStrictMockTest.differentMethods":100,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":313,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":289,"org.easymock.tests2.MockBuilderTest.testCreateMockString":286,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":332,"org.easymock.tests.UsageExpectAndThrowTest.floatType":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":67,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":329,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":166,"org.easymock.tests.UsageVerifyTest.twoThrows":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":158,"org.easymock.samples.PartialClassMockTest.testGetArea":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":106,"org.easymock.samples.ExampleTest.voteAgainstRemoval":120,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":367,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":253,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":79,"org.easymock.tests2.UsageTest.niceToStrict":131,"org.easymock.tests2.UsageConstraintsTest.testNotNull":227,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":366,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":173,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":259,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":136,"org.easymock.tests2.MockBuilderTest.testCreateMock":284,"org.easymock.tests2.UsageTest.defaultResetToNice":133,"org.easymock.samples.ExampleTest.voteAgainstRemovals":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":343,"org.easymock.tests.UsageVarargTest.differentLength":270,"org.easymock.tests2.CallbackTest.callback":190,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":297,"org.easymock.tests.UsageTest.openCallCountByLastCall":358,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":249,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":87,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":204,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":74,"org.easymock.tests.UsageCallCountTest.tooFewCalls":54,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":256,"org.easymock.tests.UsageOverloadedMethodTest.overloading":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":340,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":218,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":42,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":143,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":217,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":243,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":77,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":348,"org.easymock.tests.UsageThrowableTest.throwCheckedException":363,"org.easymock.tests2.EasyMockSupportClassTest.testAll":156,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":111,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":353,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":95,"org.easymock.tests2.CaptureTest.testCaptureAll":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":163,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":351,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":145,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":142,"org.easymock.tests2.UsageConstraintsTest.testMatches":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":144,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":66,"org.easymock.samples.ExampleTest.voteForRemovals":122,"org.easymock.tests2.NameTest.nameForNiceMock":193,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":172,"org.easymock.tests.UsageVarargTest.allKinds":10,"org.easymock.tests2.DependencyTest.testInterfaceMocking":230,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":29,"org.easymock.samples.BasicClassMockTest.testPrintContent":125,"org.easymock.samples.ExampleTest.addDocument":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":346,"org.easymock.tests2.DelegateToTest.testStubDelegate":196,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":365,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":290,"org.easymock.tests2.AnswerTest.stubAnswer":167,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":23,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":99,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":317,"org.easymock.tests2.UsageConstraintsTest.greaterThan":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":15,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":288,"org.easymock.tests.UsageVarargTest.varargLongAccepted":7,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":101,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":318,"org.easymock.samples.ExampleTest.voteForRemoval":119,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":326,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":49,"org.easymock.tests.UsageExpectAndReturnTest.floatType":33,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":324,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":169,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":116,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":222,"org.easymock.tests.UsageThrowableTest.noUpperLimit":103,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":278,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":205,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":112,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":320,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":239,"org.easymock.tests2.SerializationTest.test":233,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":296,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":179,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":104,"org.easymock.tests2.UsageConstraintsTest.testSame":210,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":328,"org.easymock.samples.SupportTest.addDocument":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":18,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":263,"org.easymock.tests2.CaptureTest.testCaptureFirst":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":180,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":282,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":333,"org.easymock.tests.GenericTest.testPackageScope":110,"org.easymock.tests2.CaptureTest.testCapture2_2446744":373,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":357,"org.easymock.tests2.UsageTest.moreThanOneArgument":130,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":285,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":9,"org.easymock.tests.GenericTest.testBridgedEquals":319,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":257,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":272,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":254,"org.easymock.tests2.NameTest.nameForMock":191,"org.easymock.tests.UsageExpectAndReturnTest.longType":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":26,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":43,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":96,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":252,"org.easymock.tests2.UsageStrictMockTest.differentMethods":202,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":63,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":35,"org.easymock.tests.UsageCallCountTest.tooManyCalls":273,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":92,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":17,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":344,"org.easymock.tests2.MockedExceptionTest.testRealException":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":39,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":83,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":364,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":12,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":141,"org.easymock.tests2.UsageConstraintsTest.testContains":216,"org.easymock.tests2.NameTest.nameForStrictMock":192,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":52,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":175,"org.easymock.tests2.UsageConstraintsTest.testFind":208,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":69,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":261,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":246,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":150,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":275,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":247,"org.easymock.tests.UsageExpectAndReturnTest.object":41,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":321,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":314,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":223,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":152,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":283,"org.easymock.tests2.UsageStrictMockTest.range":292,"org.easymock.tests2.UsageConstraintsTest.lessThan":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":185,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":5,"org.easymock.tests.UsageTest.exactCallCountByLastCall":269,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":258,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":73,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":337,"org.easymock.tests2.CaptureTest.testCaptureRightOne":244,"org.easymock.tests2.UsageConstraintsTest.testOr":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":299,"org.easymock.tests.UsageRangeTest.combination":14,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":250,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":47,"org.easymock.tests.UsageTest.wrongArguments":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":334,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":24,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":36,"org.easymock.tests2.EasyMockSupportTest.testVerify":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":338,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":316,"org.easymock.tests.UsageVarargTest.varargShortAccepted":6,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":161,"org.easymock.tests2.UsageConstraintsTest.cmpTo":215,"org.easymock.tests.UsageVarargTest.varargCharAccepted":4,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":310,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":200,"org.easymock.tests2.UsageTest.openCallCountByLastCall":369,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":370,"org.easymock.tests.DefaultClassInstantiatorTest.object":311,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":260,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":188,"org.easymock.tests2.CaptureTest.testCaptureFromStub":372,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":322,"org.easymock.tests.UsageTest.unexpectedCallWithArray":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":339,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":85,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":362,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":248,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":55,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":45,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":305,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":287,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":276,"org.easymock.tests2.UsageConstraintsTest.constraints":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":84,"org.easymock.samples.ExampleTest.addAndChangeDocument":123,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":48,"org.easymock.tests.UsageStrictMockTest.testVerify":102,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":127,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":304,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":27,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":240,"org.easymock.tests2.UsageTest.resumeIfFailure":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":107,"org.easymock.tests.LimitationsTest.abstractClass":307,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":37,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":108,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":183}}]
