[{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,0,1,2,3,143,144,145,146,147,4,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,12,13,14,15,16,17,244,245,246,247,248,249,250,251,252,253,254],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[255,256,257,258,259],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[18,19,31,35,39,40,41,114,260,261,262,263,264,115,116,117,265,118,266,267,268,269,270,271,272,273,274,126,275,141,276,277,0,278,279,280,281],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[72,73],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[282,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[284,285,286],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[29,30,287,288,289,290,291,292,293,294,295,296],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[278,181,182,279,297],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[46,47,51,52,298,63,78,80,87],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[299,117,129,132,300,301,302,303,304,281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[53,58,69,305],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[306,307,308,309],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[53,58,69,305],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[97,310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[311,312,313],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[57],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[314,315,316,317,318,319],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[21,92,320,94,321],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[18,18,19,19,44,45,48,49,50,51,56,58,59,61,62,67,68,69,322,144,152,193,194,196,197,198,229,230,231,232,233,240,244,245,246,247,248],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[118,280],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[323,324,325],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[35,36,37],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[326,327],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[147,328],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[329,78,80,81,330,82,83,84,86,331,87,322,88],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[332,312,333,334,335,318,336,313,337,223,224,338,319,339],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[35,36,340],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":47,"org.easymock.tests2.UsageTest.argumentsOrdered":333,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":15,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":98,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":265,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":66,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":30,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":165,"org.easymock.tests2.SerializationTest.testAllMockedMethod":37,"org.easymock.tests2.DelegateToTest.testReturnException":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":13,"org.easymock.tests.MockingTest.testPartialClassMocking":153,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":315,"org.easymock.samples.SupportTest.voteForRemovals":33,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":278,"org.easymock.tests.MockClassControlTest.testToString":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":212,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":200,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":39,"org.easymock.tests.UsageExpectAndThrowTest.object":210,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":64,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":135,"org.easymock.tests2.DelegateToTest.testWrongClass":320,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":194,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":53,"org.easymock.tests2.UsageTest.wrongArguments":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":196,"org.easymock.tests.UsageStrictMockTest.range":339,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":291,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":150,"org.easymock.samples.ExampleTest.answerVsDelegate":21,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":108,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":127,"org.easymock.tests2.UsageConstraintsTest.testNull":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":211,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":121,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":110,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":117,"org.easymock.tests2.CaptureTest.testPrimitive":81,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":198,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":219,"org.easymock.tests.UsageTest.moreThanOneArgument":199,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":6,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":120,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":149,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":246,"org.easymock.tests2.CaptureTest.testCaptureNone":85,"org.easymock.tests.UsageUnorderedTest.message":338,"org.easymock.tests.UsageVerifyTest.twoReturns":224,"org.easymock.tests.UsageVarargTest.varargByteAccepted":190,"org.easymock.tests2.ThreadingTest.testThreadSafe":89,"org.easymock.tests.UsageTest.argumentsOrdered":337,"org.easymock.tests.UsageVarargTest.varargIntAccepted":185,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":254,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":229,"org.easymock.tests2.CaptureTest.testCapture_2617107":80,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":328,"org.easymock.tests2.UsageConstraintsTest.any":54,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":116,"org.easymock.tests2.StubTest.stub":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":10,"org.easymock.tests.UsageExpectAndThrowTest.longType":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":14,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":323,"org.easymock.tests2.SerializationTest.testClass":35,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":142,"org.easymock.tests.LimitationsTest.mockNativeMethod":227,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":136,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":279,"org.easymock.tests2.AnswerTest.answer":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":175,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":289,"org.easymock.tests2.CaptureTest.testAnd":78,"org.easymock.tests2.UsageTest.strictResetToDefault":95,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":125,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":146,"org.easymock.tests2.NameTest.nameForMocksControl":140,"org.easymock.tests2.MockedExceptionTest.testMockedException":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":178,"org.easymock.tests2.DelegateToTest.testDelegate":94,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":204,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":155,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":118,"org.easymock.tests.MockingTest.testNicePartialClassMocking":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":215,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":123,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":287,"org.easymock.tests2.CaptureTest.testCaptureLast":84,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":16,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":307,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":52,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":238,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":65,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":306,"org.easymock.tests2.CaptureTest.testCapture1_2446744":330,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":156,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":213,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":75,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":312,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":68,"org.easymock.tests.UsageStrictMockTest.differentMethods":241,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":294,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":304,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":296,"org.easymock.tests2.MockBuilderTest.testCreateMockString":271,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":248,"org.easymock.tests.UsageExpectAndThrowTest.floatType":202,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":60,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":277,"org.easymock.tests.UsageVerifyTest.twoThrows":223,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":40,"org.easymock.samples.PartialClassMockTest.testGetArea":31,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":230,"org.easymock.samples.ExampleTest.voteAgainstRemoval":23,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":126,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":201,"org.easymock.tests2.UsageTest.niceToStrict":97,"org.easymock.tests2.UsageConstraintsTest.testNotNull":67,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":0,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":255,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":115,"org.easymock.tests2.MockBuilderTest.testCreateMock":268,"org.easymock.tests2.UsageTest.defaultResetToNice":99,"org.easymock.samples.ExampleTest.voteAgainstRemovals":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":171,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":288,"org.easymock.tests2.CallbackTest.callback":34,"org.easymock.tests2.UsageConstraintsTest.equals":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":290,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":273,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":314,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":209,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":106,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":249,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":7,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":148,"org.easymock.tests.UsageCallCountTest.tooFewCalls":252,"org.easymock.tests.UsageOverloadedMethodTest.overloading":220,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":58,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":167,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":324,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":57,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":86,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":151,"org.easymock.tests2.EasyMockSupportClassTest.testAll":38,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":182,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":236,"org.easymock.tests2.CaptureTest.testCaptureAll":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":76,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":5,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":132,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":129,"org.easymock.tests2.UsageConstraintsTest.testMatches":59,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":131,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":247,"org.easymock.tests2.CompareToTest.testGreateOrEqual":305,"org.easymock.samples.ExampleTest.voteForRemovals":25,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":91,"org.easymock.tests2.NameTest.nameForNiceMock":139,"org.easymock.tests.UsageVarargTest.allKinds":192,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":222,"org.easymock.tests2.DependencyTest.testInterfaceMocking":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":237,"org.easymock.samples.BasicClassMockTest.testPrintContent":28,"org.easymock.samples.ExampleTest.addDocument":24,"org.easymock.tests2.DelegateToTest.testStubDelegate":93,"org.easymock.tests2.AnswerTest.stubAnswer":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":17,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":240,"org.easymock.tests2.UsageConstraintsTest.greaterThan":61,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":177,"org.easymock.tests.UsageVarargTest.varargLongAccepted":189,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":242,"org.easymock.samples.ExampleTest.voteForRemoval":22,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":90,"org.easymock.tests.UsageExpectAndReturnTest.floatType":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":141,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests.UsageThrowableTest.noUpperLimit":225,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":62,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":195,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":45,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":299,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":82,"org.easymock.tests2.SerializationTest.test":36,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":267,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":11,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":103,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":226,"org.easymock.tests2.UsageConstraintsTest.testSame":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":157,"org.easymock.samples.SupportTest.addDocument":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":12,"org.easymock.tests2.CaptureTest.testCaptureFirst":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":104,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":163,"org.easymock.tests.GenericTest.testPackageScope":181,"org.easymock.tests2.UsageTest.moreThanOneArgument":96,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":295,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":191,"org.easymock.tests.GenericTest.testBridgedEquals":297,"org.easymock.tests2.NameTest.nameForMock":137,"org.easymock.tests.UsageExpectAndReturnTest.longType":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":234,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":218,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":168,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":216,"org.easymock.tests2.UsageStrictMockTest.differentMethods":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":244,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":160,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":214,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":179,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":251,"org.easymock.tests2.MockedExceptionTest.testRealException":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":258,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":205,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":197,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":128,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":250,"org.easymock.tests2.UsageConstraintsTest.testContains":56,"org.easymock.tests2.NameTest.nameForStrictMock":138,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.UsageConstraintsTest.testFind":48,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":221,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":286,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":122,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":43,"org.easymock.tests.UsageExpectAndReturnTest.object":166,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":63,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":124,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":261,"org.easymock.tests2.UsageStrictMockTest.range":334,"org.easymock.tests2.UsageConstraintsTest.lessThan":69,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":109,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":257,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":102,"org.easymock.tests2.CaptureTest.testCaptureRightOne":87,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":283,"org.easymock.tests2.UsageConstraintsTest.testOr":51,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":276,"org.easymock.tests.UsageRangeTest.combination":176,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":172,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":183,"org.easymock.tests.UsageTest.wrongArguments":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":321,"org.easymock.tests2.MockBuilderTest.testWithConstructor":260,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":293,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":180,"org.easymock.tests2.EasyMockSupportTest.testVerify":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":169,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":327,"org.easymock.tests.UsageVarargTest.varargShortAccepted":188,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":74,"org.easymock.tests2.UsageConstraintsTest.cmpTo":55,"org.easymock.tests.UsageVarargTest.varargCharAccepted":186,"org.easymock.tests2.CaptureTest.testCaptureMultiple":329,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":143,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":285,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":112,"org.easymock.tests2.CaptureTest.testCaptureFromStub":322,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":262,"org.easymock.tests.UsageTest.unexpectedCallWithArray":318,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":335,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":207,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":253,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":292,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":170,"org.easymock.tests2.CaptureTest.testCapture":331,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":303,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":274,"org.easymock.tests2.UsageConstraintsTest.constraints":46,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":206,"org.easymock.samples.ExampleTest.addAndChangeDocument":26,"org.easymock.tests.UsageStrictMockTest.testVerify":243,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":173,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":8,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":29,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":302,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":235,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":83,"org.easymock.tests2.UsageTest.resumeIfFailure":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":231,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":280,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":162,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":232,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":228,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":107,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":184}}]
