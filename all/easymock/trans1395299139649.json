[{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[11,12,13,14,15,16],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"position":"org.easymock.Capture:134","failures":[19,20],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[107,108],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","state":"threadSafe","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[109,110,111,99,112,113,114,115,116,117],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[118,24,25,26,27,28,29,30,119,120,121,122,54,123,124,125,126,14,64,79,127,128,129,130,0,1,131,2,132,3,4,133,5,134,135,136,137,138,139,140,141,142,6,143,144,145,146,7,147,148,8,149,9,150,151,152,153,154,155,156,10,157,158,159,17,104],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,118,178,179,180,181,121,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,124,125,202,203,204,205,206,207,208,209],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[211,212,32,213,214,33,215,216,217,218,219,51,52,53,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,67,237,238,239,240,73,74,76,77,78,241,79,242,243,80,81,82,244,245,246,83,247,248,249,250,251,252,253,254,87,88,89,90,92,93,255,256,257,205,206,207],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[258],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[259,260,261],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[63],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[262,263,264,265,266,267,268,166,167,269,168,169,170,171,172,173,270,271,272,273,174,175,176,177,118,178,274,24,25,26,27,28,29,30,275,276,277,278,279,180,280,13,281,282,181,283,284,285,286,287,288,289,290,291,292,293,294,119,32,120,121,33,215,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,35,36,37,38,39,40,295,296,41,42,297,43,44,45,298,46,47,48,49,50,51,52,53,122,54,123,124,125,126,299,300,301,302,303,304,55,56,57,58,59,60,61,62,305,306,229,236,307,202,308,309,310,14,64,311,65,66,312,313,67,68,314,69,70,315,71,316,237,237,238,238,317,318,319,72,239,240,73,74,75,76,77,78,79,243,81,83,84,85,86,87,88,89,90,91,92,93,127,128,129,130,0,1,131,2,132,3,4,133,134,135,136,137,138,139,140,141,142,6,143,144,146,7,147,148,109,320,255,321,95,322,96,97,98,323,203,324,325,326,327,328,329,204,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,99,205,206,207,208,362,363,364,365,100,366,367,209,101,102,368,103,369,370,8,149,9,150,151,152,153,154,155,156,10,157,158,159,17,18,371,104,372,105,106,373],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[374],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[160,161,162,262,263,264,265,266,267,375,376,377,163,164,165,378,379,380,381,382,383,384,385,386,21,22,23,268,166,387,388,389,390,391,392,393,167,269,168,169,170,171,172,173,270,271,272,273,174,175,176,177,118,178,394,395,396,179,397,274,398,24,25,26,27,28,29,30,275,276,277,278,279,180,280,13,281,282,181,283,284,285,286,287,288,399,289,290,400,291,292,293,294,119,401,31,402,211,212,32,213,120,121,214,33,215,34,216,403,404,405,406,407,408,107,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,35,36,37,38,39,40,295,296,41,42,297,43,44,45,298,46,47,48,49,50,217,218,219,51,52,426,53,427,428,220,122,54,123,124,125,126,221,222,223,224,225,226,227,429,299,430,300,301,431,302,432,433,303,434,304,55,56,57,58,59,60,61,62,305,63,435,306,436,228,229,230,231,232,233,234,235,236,307,202,308,437,438,439,440,441,309,310,14,64,311,65,66,312,313,67,68,314,69,70,315,71,442,316,237,238,317,318,319,72,239,240,73,74,75,76,77,78,241,443,79,444,242,243,80,81,82,244,245,246,445,446,83,447,247,84,248,249,448,449,250,450,451,251,452,85,252,253,453,454,254,86,455,456,87,88,89,90,457,91,92,93,458,127,459,128,129,130,0,1,460,131,2,132,3,4,133,5,134,135,136,137,138,139,140,141,142,6,143,144,145,146,7,147,148,109,320,255,321,94,461,462,95,322,96,97,463,111,464,98,323,203,324,325,326,327,328,329,204,330,331,332,333,334,256,257,465,466,335,108,467,336,337,338,339,340,341,342,468,469,470,471,472,343,473,474,475,476,477,478,344,345,346,347,348,349,350,351,352,353,354,355,356,374,357,358,359,360,479,480,481,482,483,361,484,485,486,487,488,489,99,112,205,206,207,208,362,363,364,365,100,366,367,209,490,491,101,102,492,368,103,369,493,370,8,149,9,150,151,152,153,154,155,156,10,157,158,159,17,18,371,104,372,105,106,373],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[180,420,183,189,195,199,201,36,296,45,48,50,122,439,151,158],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[494],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[222,226],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[222,226],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[495],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:161","sourceCode":"for (final org.easymock.internal.Injection org.easymock.internal.Injection : java.util.List<org.easymock.internal.Injection>) {\n    final java.lang.reflect.Field java.lang.reflect.Field = org.easymock.internal.Injector.org.easymock.internal.Injector.getFieldByName(java.lang.Class<?>, org.easymock.internal.Injection.getQualifier());\n    final org.easymock.internal.InjectionTarget org.easymock.internal.InjectionTarget = org.easymock.internal.Injector.org.easymock.internal.Injector.injectionTargetWithField(java.lang.reflect.Field);\n    if (org.easymock.internal.InjectionTarget == null) {\n        continue;\n    } \n    if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n        org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n        java.util.List<java.lang.reflect.Field>.remove(org.easymock.internal.InjectionTarget.getTargetField());\n    } \n}","type":"CtForEachImpl"},"failures":[317,318,469,470,472,343,474,475,478,344,480,481,483,361,485,486,489,99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[79,135,496],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[109,320,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[370],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[497,8,9,150,151,152,153,154,156,20,10,157,159],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[11,12,13,14,15,16],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:156","sourceCode":"final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\")","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[280,281,283,284,122,435,306,307,202,308,64,65,66,325,326,331,332,498,499,500,501,16,502,503,104,105,106],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[420,439],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[23,268,166,167,269,168,169,170,171,172,173,174,175,176,177,118,178,394,396,179,24,25,26,27,28,29,30,180,280,282,181,285,286,287,288,289,290,291,292,293,294,119,120,215,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,35,36,37,38,39,40,295,296,41,42,297,43,44,45,298,46,47,48,49,50,122,54,123,124,125,126,59,60,61,62,305,307,202,308,310,64,311,65,66,312,68,314,69,70,315,71,316,317,318,319,72,239,240,74,77,81,1,2,3,4,7,109,320,95,96,97,203,324,325,327,328,329,204,333,334,335,336,337,343,344,345,346,347,348,349,350,352,353,354,355,361,362,363,364,365,366,367,209,101,102,368,103,369,370,8,149,154,155,10,159,371,104,372,105,106,373],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:79","sourceCode":"return java.util.List<java.lang.reflect.Field>","type":"CtReturnImpl"},"failures":[317,318,468,469,470,471,472,343,473,474,475,476,477,478,479,480,481,482,483,361,484,485,486,487,488,489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:315","failures":[166,168,172,173,174,175,176,177,118,178,179,180,181,121,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,124,125,203,204,205,206,207,208,209],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":180,"org.easymock.tests2.UsageTest.argumentsOrdered":332,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":354,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":412,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":328,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":317,"org.easymock.tests2.DelegateToTest.testReturnException":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":175,"org.easymock.tests.MockingTest.testPartialClassMocking":51,"org.easymock.tests.MockClassControlTest.testToString":230,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":374,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":449,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":182,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":84,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":113,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":54,"org.easymock.tests2.UsageTest.wrongArguments":326,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":489,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":272,"org.easymock.samples.ExampleTest.answerVsDelegate":314,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":383,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":428,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":76,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":235,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":353,"org.easymock.tests2.CaptureTest.testPrimitive":150,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":126,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":201,"org.easymock.tests.UsageTest.moreThanOneArgument":280,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":61,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":437,"org.easymock.tests.UsageTest.argumentsOrdered":284,"org.easymock.tests.UsageVarargTest.varargIntAccepted":288,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":26,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":321,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":477,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":30,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":500,"org.easymock.tests.ReplayStateInvalidUsageTest.times":433,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":361,"org.easymock.tests2.DependencyTest.testClassMocking":490,"org.easymock.tests2.AnswerTest.answer":335,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":419,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":342,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":380,"org.easymock.tests2.UsageTest.strictResetToDefault":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":60,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":57,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":348,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":441,"org.easymock.tests2.DelegateToTest.testDelegate":370,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":197,"org.easymock.tests.LimitationsTest.mockFinalMethod":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":279,"org.easymock.tests2.DependencyTest.testClassMockingSupport":491,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":435,"org.easymock.tests2.CaptureTest.testCapture1_2446744":151,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":443,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":195,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":340,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":430,"org.easymock.tests.UsageThrowableTest.throwError":167,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":382,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":478,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":456,"org.easymock.samples.PartialClassMockTest.testGetArea":67,"org.easymock.tests.MockingTest.testInterfaceMocking":426,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":21,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":392,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":250,"org.easymock.tests2.UsageTest.niceToStrict":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":259,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":95,"org.easymock.tests2.MockBuilderTest.testCreateMock":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":453,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":486,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":191,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":15,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":349,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":162,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":270,"org.easymock.tests.UsageOverloadedMethodTest.overloading":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":254,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":179,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":43,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":23,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":137,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":156,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":399,"org.easymock.tests2.EasyMockSupportClassTest.testAll":83,"org.easymock.tests.MockClassControlTest.testEquals":234,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":199,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":494,"org.easymock.tests2.CaptureTest.testCaptureAll":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":341,"org.easymock.tests.MockNameTest.defaultName":393,"org.easymock.tests2.UsageConstraintsTest.testMatches":139,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":429,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":62,"org.easymock.samples.ExampleTest.voteForRemovals":71,"org.easymock.tests.UsageVarargTest.allKinds":119,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":307,"org.easymock.samples.BasicClassMockTest.testPrintContent":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":278,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":172,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":18,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":493,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":178,"org.easymock.tests2.UsageConstraintsTest.greaterThan":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":447,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":56,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":82,"org.easymock.samples.ExampleTest.voteForRemoval":69,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":227,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":244,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":364,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":241,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":203,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":236,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":346,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":174,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":492,"org.easymock.tests2.CaptureTest.testCaptureFirst":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":347,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":334,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":296,"org.easymock.tests2.CaptureTest.testCapture2_2446744":158,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":100,"org.easymock.tests2.UsageTest.moreThanOneArgument":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":420,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":98,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":294,"org.easymock.tests.GenericTest.testBridgedEquals":216,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":376,"org.easymock.tests.UsageExpectAndReturnTest.longType":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":275,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":344,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":200,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":145,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":63,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":198,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":59,"org.easymock.tests.UsageCallCountTest.tooManyCalls":377,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":454,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":88,"org.easymock.tests.MockingTest.testNiceClassMocking":220,"org.easymock.tests.MockingTest.testClassMocking":218,"org.easymock.tests2.UsageConstraintsTest.testContains":136,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":263,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":207,"org.easymock.tests2.UsageConstraintsTest.testFind":131,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":166,"org.easymock.tests.MockTypeTest.fromEasyMockClass":381,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":128,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":309,"org.easymock.tests.UsageExpectAndReturnTest.object":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":487,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":352,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":114,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":290,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":390,"org.easymock.tests.UsageTest.exactCallCountByLastCall":285,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":438,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":401,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":112,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":47,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":286,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":396,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":469,"org.easymock.tests.MockClassControlTest.testHashCode":233,"org.easymock.tests2.EasyMockSupportTest.testVerify":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":451,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":439,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":394,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":339,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":17,"org.easymock.tests.UsageVarargTest.varargCharAccepted":289,"org.easymock.tests2.CaptureTest.testCaptureMultiple":497,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":425,"org.easymock.tests2.UsageTest.openCallCountByLastCall":329,"org.easymock.tests.DefaultClassInstantiatorTest.object":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":260,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":355,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":160,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":388,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":482,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":468,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":80,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":232,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":188,"org.easymock.tests.CapturesMatcherTest.test":19,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":48,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":86,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":231,"org.easymock.tests2.UsageTest.resumeIfFailure":333,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":177,"org.easymock.tests2.StubTest.stubWithReturnValue":209,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":110,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":42,"org.easymock.tests2.SerializationTest.testAllMockedMethod":255,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":418,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":210,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":16,"org.easymock.samples.SupportTest.voteForRemovals":72,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":471,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":194,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":424,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":108,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":402,"org.easymock.tests.UsageExpectAndThrowTest.object":192,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":143,"org.easymock.tests2.DelegateToTest.testWrongClass":369,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":24,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":25,"org.easymock.tests.UsageStrictMockTest.range":65,"org.easymock.samples.ConstructorCalledMockTest.testTax":237,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":465,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":96,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":246,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":271,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":11,"org.easymock.tests2.CaptureTest.testCaptureNone":155,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":22,"org.easymock.tests.UsageUnorderedTest.message":122,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":258,"org.easymock.tests.UsageVerifyTest.twoReturns":308,"org.easymock.tests.UsageVarargTest.varargByteAccepted":293,"org.easymock.tests2.ThreadingTest.testThreadSafe":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":252,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":267,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":391,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":239,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":503,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":125,"org.easymock.tests2.UsageConstraintsTest.any":134,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":432,"org.easymock.tests2.StubTest.stub":367,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndThrowTest.longType":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":176,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":225,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":302,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":372,"org.easymock.tests2.SerializationTest.testClass":109,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":343,"org.easymock.tests.LimitationsTest.mockNativeMethod":32,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":34,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":50,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":481,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":373,"org.easymock.tests2.NameTest.nameForMocksControl":360,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":483,"org.easymock.tests2.MockedExceptionTest.testMockedException":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":247,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":181,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":459,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":186,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":53,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":73,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":97,"org.easymock.tests.MockingTest.testNicePartialClassMocking":52,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":78,"org.easymock.tests2.CompareToTest.testCompareEqual":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":479,"org.easymock.tests2.CaptureTest.testCaptureLast":154,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":306,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":93,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":144,"org.easymock.tests.MockingTest.testTwoMocks":219,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":190,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":331,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":147,"org.easymock.samples.ExampleTest.removeNonExistingDocument":442,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":485,"org.easymock.tests.UsageStrictMockTest.differentMethods":66,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":301,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":470,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":223,"org.easymock.tests2.ConstraintsToStringTest.andToString":501,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":365,"org.easymock.tests2.MockBuilderTest.testCreateMockString":323,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":228,"org.easymock.tests.UsageExpectAndThrowTest.floatType":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":248,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":446,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":336,"org.easymock.tests.UsageVerifyTest.twoThrows":202,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":85,"org.easymock.samples.ExampleTest.voteAgainstRemoval":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":413,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":386,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":81,"org.easymock.tests.LimitationsTest.privateConstructor":212,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":173,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":205,"org.easymock.tests2.UsageTest.defaultResetToNice":330,"org.easymock.samples.ExampleTest.voteAgainstRemovals":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":46,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":480,"org.easymock.tests.UsageVarargTest.differentLength":400,"org.easymock.tests2.CallbackTest.callback":362,"org.easymock.tests2.UsageConstraintsTest.equals":460,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":444,"org.easymock.tests.UsageTest.openCallCountByLastCall":282,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":124,"org.easymock.tests.UsageCallCountTest.tooFewCalls":265,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":273,"org.easymock.tests.UsageThrowableTest.throwCheckedException":170,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":12,"org.easymock.tests.MockingTest.testStrictClassMocking":217,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":121,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":484,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":89,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":303,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":91,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":338,"org.easymock.tests.ObjectMethodsTest.testHashCode":389,"org.easymock.tests2.NameTest.nameForNiceMock":359,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":366,"org.easymock.tests2.DependencyTest.testInterfaceMocking":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":115,"org.easymock.samples.ExampleTest.addDocument":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.DelegateToTest.testStubDelegate":103,"org.easymock.tests2.AnswerTest.stubAnswer":337,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":64,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":463,"org.easymock.tests.UsageVarargTest.varargLongAccepted":292,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.floatType":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":49,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":99,"org.easymock.tests2.ConstraintsToStringTest.orToString":498,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":476,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":397,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":142,"org.easymock.tests.UsageThrowableTest.noUpperLimit":269,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":130,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":256,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":152,"org.easymock.tests2.SerializationTest.test":320,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":495,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":222,"org.easymock.tests2.UsageConstraintsTest.testSame":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":36,"org.easymock.samples.SupportTest.addDocument":319,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":457,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":249,"org.easymock.tests.GenericTest.testPackageScope":33,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":475,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":427,"org.easymock.tests2.NameTest.nameForMock":357,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":44,"org.easymock.tests2.UsageStrictMockTest.differentMethods":106,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":242,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":39,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":196,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":387,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":58,"org.easymock.tests2.MockedExceptionTest.testRealException":208,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":385,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":415,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":123,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":304,"org.easymock.tests2.NameTest.nameForStrictMock":358,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":462,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":77,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":257,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":224,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":94,"org.easymock.tests2.UsageStrictMockTest.range":105,"org.easymock.tests2.UsageConstraintsTest.lessThan":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":410,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":116,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":450,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":74,"org.easymock.tests.UsageTest.wrongArguments":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":448,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":45,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":226,"org.easymock.tests.UsageVarargTest.varargShortAccepted":291,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":375,"org.easymock.tests2.UsageConstraintsTest.cmpTo":135,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":406,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":204,"org.easymock.tests2.CaptureTest.testCaptureFromStub":157,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":299,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":461,"org.easymock.tests.UsageTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":298,"org.easymock.tests2.CaptureTest.testCapture":20,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":311,"org.easymock.samples.ExampleTest.addAndChangeDocument":316,"org.easymock.tests2.ConstraintsToStringTest.notToString":499,"org.easymock.tests.UsageStrictMockTest.testVerify":313,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":318,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":276,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":28,"org.easymock.tests.LimitationsTest.abstractClass":211,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":29,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":274,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":350}}]
