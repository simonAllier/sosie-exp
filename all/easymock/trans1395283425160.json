[{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,1,487,488,489,490,491,2,492,493,494,495,496,497,498,499,500,501,502,3,503,504,505,506,507,508],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[509,477,494,497],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:60","sourceCode":"org.easymock.internal.MocksBehavior.addBehaviorListIfNecessary(org.easymock.internal.ExpectedInvocation)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,48,49,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,83,86,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,138,139,141,142,143,144,145,146,151,153,155,156,158,160,161,162,163,164,165,166,167,168,172,173,175,203,205,206,207,208,210,211,212,213,214,238,239,240,241,242,246,247,248,250,251,252,253,254,255,256,257,280,281,284,295,296,297,298,299,300,303,307,308,309,312,313,314,315,316,317,318,319,320,321,322,324,325,326,328,329,330,331,335,338,348,354,357,360,362,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,389,396,397,398,399,401,402,403,406,407,408,409,411,412,413,415,417,420,422,423,427,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,461,462,463,464,470,477,478,479,480,482,484,485,486,1,487,488,489,490,491,2,492,493,494,495,496,497,498,499,500,502,3,504,506,507],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[493],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[366,367],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,48,49,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,86,87,94,95,96,97,98,99,100,101,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,158,159,160,161,162,163,164,165,166,167,168,172,173,175,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,246,247,248,250,251,252,253,254,255,256,257,280,281,284,295,296,297,298,299,300,301,303,306,307,308,309,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,335,338,348,354,357,358,359,360,361,362,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,389,396,397,398,399,401,402,403,406,407,408,409,411,412,413,415,416,417,420,421,422,423,426,427,428,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,461,462,463,464,470,477,478,479,480,482,483,484,485,486,1,488,489,490,491,2,492,493,494,495,496,497,498,499,500,501,502,3,504,506,507],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[368,369,370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[510],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:93","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,48,49,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,86,94,95,96,97,98,99,100,101,102,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,159,160,161,162,163,164,165,166,172,173,175,205,207,208,212,213,214,215,216,217,218,219,238,239,240,241,242,246,247,248,250,251,253,254,255,256,257,280,281,284,295,296,297,298,299,300,301,303,306,307,308,309,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,330,331,335,338,348,354,357,358,359,360,361,362,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,389,396,397,398,399,401,402,403,411,412,413,415,416,420,421,422,423,426,427,428,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,455,456,457,458,461,462,464,470,477,478,479,480,482,483,484,485,486,1,488,489,490,491,2,492,493,494,495,496,497,498,500,501,502,3,504,506,507],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[511,512,513,514,515,516,508],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[130,423],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[47,51],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[517],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,280,281,282,283,284,285,286,287,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,425,426,427,428,429,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,1,487,488,489,490,491,2,492,493,494,495,496,497,498,499,500,501,502,3,504,505,506,507,508],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[486],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[483,487,496,501],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[4,5,7,8,10,14,42,43,45,48,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,114,116,117,118,119,120,121,122,123,126,127,129,138,139,142,143,146,158,163,165,166,172,173,175,188,190,199,200,202,212,213,214,238,239,240,241,242,280,281,284,295,296,297,298,299,300,303,307,308,309,312,313,315,316,319,320,321,322,324,325,326,328,329,330,331,335,338,348,354,360,362,366,368,369,371,372,373,374,375,376,377,378,379,380,381,382,389,396,397,398,399,401,402,403,412,417,420,422,423,427,435,436,437,439,441,442,443,446,447,450,452,453,461,462,464,470,477,478,479,480,482,483,484,485,486,1,488,489,490,491,2,492,493,494,495,496,497,498,500,501,502,3,507],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[53,518,128,129,140,141,144,145,162,165,438,444,445,452],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[53,74,519,520,521,518,128,129,138,140,141,144,145,146,160,162,164,165,166,209,210,211,252,296,307,309,357,372,376,377,380,417,426,427,428,435,438,439,440,444,445,446,447,448,451,452,453,479,493],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,79,114,116,117,118,119,120,121,124,125,128,138,143,147,148,149,150,151,152,156,214,358,359,360,361,435,442,464],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[4,50,130,135,301,307,308,311,338,348,354,368,416,417,418,420,421,422,423,426,427,428],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[507,508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":480,"org.easymock.tests2.UsageTest.argumentsOrdered":445,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":138,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":381,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":189,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":440,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":20,"org.easymock.tests2.DelegateToTest.testReturnException":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":148,"org.easymock.tests.MockingTest.testPartialClassMocking":172,"org.easymock.tests.MockClassControlTest.testToString":108,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":405,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":198,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":21,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":338,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":462,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":511,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":1,"org.easymock.tests2.UsageTest.wrongArguments":438,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":122,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":395,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":96,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":135,"org.easymock.tests2.UsageConstraintsTest.testNull":483,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":177,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":298,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":113,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":380,"org.easymock.tests2.CaptureTest.testPrimitive":315,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":126,"org.easymock.tests.UsageTest.moreThanOneArgument":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":40,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":217,"org.easymock.tests.UsageTest.argumentsOrdered":145,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":81,"org.easymock.tests.UsageVarargTest.varargIntAccepted":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":238,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":515,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":431,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":242,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":263,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":389,"org.easymock.tests.ReplayStateInvalidUsageTest.times":234,"org.easymock.tests2.DependencyTest.testClassMocking":459,"org.easymock.tests2.AnswerTest.answer":362,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":458,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":132,"org.easymock.tests2.CaptureTest.testAnd":312,"org.easymock.tests2.UsageTest.strictResetToDefault":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":216,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":375,"org.easymock.tests2.DelegateToTest.testDelegate":415,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":85,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":36,"org.easymock.tests.LimitationsTest.mockFinalMethod":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":102,"org.easymock.tests2.DependencyTest.testClassMockingSupport":460,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":286,"org.easymock.tests2.CaptureTest.testCapture1_2446744":316,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":302,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":34,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":456,"org.easymock.tests.UsageThrowableTest.throwError":114,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":228,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":134,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":520,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":476,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":356,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":266,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.MockingTest.testInterfaceMocking":174,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":239,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":42,"org.easymock.tests2.UsageTest.niceToStrict":439,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":22,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":343,"org.easymock.tests2.ThreadingTest.testChangeDefault":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":179,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":420,"org.easymock.tests2.MockBuilderTest.testCreateMock":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":351,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":392,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":30,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":376,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":131,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":245,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":203,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":94,"org.easymock.tests.UsageOverloadedMethodTest.overloading":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":353,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":156,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":2,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":65,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":212,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":491,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":321,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":249,"org.easymock.tests.MockClassControlTest.testEquals":112,"org.easymock.tests2.EasyMockSupportClassTest.testAll":335,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":38,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":457,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":100,"org.easymock.tests2.CaptureTest.testCaptureAll":313,"org.easymock.tests.MockNameTest.defaultName":52,"org.easymock.tests2.UsageConstraintsTest.testMatches":492,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":218,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":226,"org.easymock.samples.ExampleTest.voteForRemovals":10,"org.easymock.tests.UsageVarargTest.allKinds":257,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":101,"org.easymock.samples.BasicClassMockTest.testPrintContent":19,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":120,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":448,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":472,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":152,"org.easymock.tests2.UsageConstraintsTest.greaterThan":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":336,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":75,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":309,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":267,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":93,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":310,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":328,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":517,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":301,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":259,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":435,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":86,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":186,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":373,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":147,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":410,"org.easymock.tests2.CaptureTest.testCaptureFirst":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":374,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":447,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":159,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":61,"org.easymock.tests2.UsageTest.moreThanOneArgument":437,"org.easymock.tests2.CaptureTest.testCapture2_2446744":324,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":330,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":197,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":256,"org.easymock.tests.GenericTest.testBridgedEquals":51,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":210,"org.easymock.tests.UsageExpectAndReturnTest.longType":57,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":98,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":371,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":39,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":499,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":80,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":37,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":215,"org.easymock.tests.UsageCallCountTest.tooManyCalls":211,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":26,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":119,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":397,"org.easymock.tests.MockingTest.testNiceClassMocking":178,"org.easymock.tests.MockingTest.testClassMocking":170,"org.easymock.tests2.UsageConstraintsTest.testContains":490,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":204,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":360,"org.easymock.tests2.UsageConstraintsTest.testFind":482,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":214,"org.easymock.tests.MockTypeTest.fromEasyMockClass":133,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":506,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":160,"org.easymock.tests.UsageExpectAndReturnTest.object":64,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":379,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":512,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":251,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":223,"org.easymock.tests.UsageTest.exactCallCountByLastCall":146,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":184,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":44,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":508,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":70,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":246,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":155,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":466,"org.easymock.tests.MockClassControlTest.testHashCode":111,"org.easymock.tests2.EasyMockSupportTest.testVerify":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":345,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":83,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":153,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":244,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":521,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":455,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":503,"org.easymock.tests.UsageVarargTest.varargCharAccepted":250,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":202,"org.easymock.tests2.UsageTest.openCallCountByLastCall":441,"org.easymock.tests.DefaultClassInstantiatorTest.object":87,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":382,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":243,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":221,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":518,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":346,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":387,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":465,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":110,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":265,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":27,"org.easymock.tests.CapturesMatcherTest.test":510,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":71,"org.easymock.tests.ReplayStateInvalidCallsTest.times":271,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":103,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":272,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":354,"org.easymock.tests2.UsageTest.resumeIfFailure":446,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":130,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":150,"org.easymock.tests2.StubTest.stubWithReturnValue":464,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":516,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":500,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":63,"org.easymock.tests2.SerializationTest.testAllMockedMethod":370,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":195,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":33,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":201,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":363,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":46,"org.easymock.tests.UsageExpectAndThrowTest.object":31,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":497,"org.easymock.tests2.DelegateToTest.testWrongClass":413,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":269,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":281,"org.easymock.tests.UsageStrictMockTest.range":165,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":433,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":378,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":396,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":32,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":422,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":144,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":95,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":261,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":43,"org.easymock.tests2.CaptureTest.testCaptureNone":320,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":290,"org.easymock.tests.UsageUnorderedTest.message":53,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":519,"org.easymock.tests.UsageVerifyTest.twoReturns":129,"org.easymock.tests.UsageVarargTest.varargByteAccepted":255,"org.easymock.tests2.ThreadingTest.testThreadSafe":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":349,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":208,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":18,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":224,"org.easymock.tests2.CaptureTest.testCapture_2617107":314,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":199,"org.easymock.tests2.UsageConstraintsTest.any":488,"org.easymock.tests2.StubTest.stub":463,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":149,"org.easymock.tests.UsageExpectAndThrowTest.longType":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":200,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":91,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":232,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":451,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":470,"org.easymock.tests2.SerializationTest.testClass":368,"org.easymock.tests.LimitationsTest.mockNativeMethod":284,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":50,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":386,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":277,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":454,"org.easymock.tests2.NameTest.nameForMocksControl":409,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":388,"org.easymock.tests2.MockedExceptionTest.testMockedException":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":337,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":143,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":505,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":25,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":295,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":423,"org.easymock.tests.MockingTest.testNicePartialClassMocking":173,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":384,"org.easymock.tests2.CaptureTest.testCaptureLast":319,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":287,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":486,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":403,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":276,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":498,"org.easymock.tests.MockingTest.testTwoMocks":171,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":273,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":29,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":444,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":502,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":294,"org.easymock.samples.ExampleTest.removeNonExistingDocument":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":391,"org.easymock.tests.UsageStrictMockTest.differentMethods":166,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":230,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":467,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":89,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":293,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":329,"org.easymock.tests2.MockBuilderTest.testCreateMockString":428,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":106,"org.easymock.tests.UsageExpectAndThrowTest.floatType":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":339,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":334,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":365,"org.easymock.tests.UsageVerifyTest.twoThrows":128,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":348,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":41,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":308,"org.easymock.tests.LimitationsTest.privateConstructor":283,"org.easymock.tests2.UsageConstraintsTest.testNotNull":501,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":121,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":358,"org.easymock.tests2.UsageTest.defaultResetToNice":443,"org.easymock.samples.ExampleTest.voteAgainstRemovals":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":69,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":385,"org.easymock.tests.UsageVarargTest.differentLength":252,"org.easymock.tests2.CallbackTest.callback":357,"org.easymock.tests2.UsageConstraintsTest.equals":481,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":304,"org.easymock.tests.UsageTest.openCallCountByLastCall":142,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":477,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":124,"org.easymock.tests.UsageCallCountTest.tooFewCalls":206,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":399,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":97,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":292,"org.easymock.tests.UsageThrowableTest.throwCheckedException":118,"org.easymock.tests.MockingTest.testStrictClassMocking":169,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":402,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":79,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":398,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":390,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":401,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":367,"org.easymock.tests2.CompareToTest.testGreateOrEqual":0,"org.easymock.tests.ObjectMethodsTest.testHashCode":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":514,"org.easymock.tests2.NameTest.nameForNiceMock":408,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":275,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":331,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":270,"org.easymock.tests2.DependencyTest.testInterfaceMocking":461,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":513,"org.easymock.samples.ExampleTest.addDocument":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":350,"org.easymock.tests2.DelegateToTest.testStubDelegate":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.AnswerTest.stubAnswer":366,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":163,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":424,"org.easymock.tests.UsageVarargTest.varargLongAccepted":254,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":188,"org.easymock.tests.UsageExpectAndReturnTest.floatType":56,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":72,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":507,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":495,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":474,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":157,"org.easymock.tests.UsageThrowableTest.noUpperLimit":115,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":478,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":429,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":317,"org.easymock.tests2.SerializationTest.test":369,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":88,"org.easymock.tests2.UsageConstraintsTest.testSame":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":55,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":400,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":260,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":340,"org.easymock.tests.GenericTest.testPackageScope":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":183,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":473,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":176,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":258,"org.easymock.tests2.NameTest.nameForMock":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":66,"org.easymock.tests2.UsageStrictMockTest.differentMethods":453,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":58,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":35,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":220,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":77,"org.easymock.tests2.MockedExceptionTest.testRealException":361,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":137,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":193,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":123,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":237,"org.easymock.tests2.NameTest.nameForStrictMock":407,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":419,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":504,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":299,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":432,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":417,"org.easymock.tests2.UsageStrictMockTest.range":452,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":264,"org.easymock.tests2.UsageConstraintsTest.lessThan":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":187,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":372,"org.easymock.tests2.CaptureTest.testCaptureRightOne":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":344,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":289,"org.easymock.tests2.UsageConstraintsTest.testOr":485,"org.easymock.tests.UsageRangeTest.combination":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":296,"org.easymock.tests.UsageTest.wrongArguments":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":341,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":67,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":92,"org.easymock.tests.UsageVarargTest.varargShortAccepted":253,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":209,"org.easymock.tests2.UsageConstraintsTest.cmpTo":489,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":278,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":364,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":182,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":442,"org.easymock.tests2.CaptureTest.testCaptureFromStub":323,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":227,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":418,"org.easymock.tests.UsageTest.unexpectedCallWithArray":140,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":274,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":162,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":207,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":68,"org.easymock.tests2.UsageConstraintsTest.constraints":479,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":164,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests.UsageStrictMockTest.testVerify":168,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":15,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":161,"org.easymock.tests2.CompareToTest.testGreateThan":509,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":99,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":60,"org.easymock.tests.LimitationsTest.abstractClass":282,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":241,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":377}}]
