[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:134","sourceCode":"final java.util.Set<org.easymock.internal.MethodSerializationWrapper> java.util.Set<org.easymock.internal.MethodSerializationWrapper> = new java.util.HashSet<org.easymock.internal.MethodSerializationWrapper>(java.util.Set<java.lang.reflect.Method>.size())","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[29],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[30,31],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,18,54,55,19,56,57,58,59,60,61,62,63,64,20,65,66,67,68,69,21,70,71],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[120,38,39,121,122,123,124,125,126,127,40,128,129],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[32,33,131,34,35,36,37,132,38,39,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[32,33,131,34,35,36,37,132,38,39,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[134],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[135,136,137,138,139,72,140,141,142,143,73,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,94,188,189,190,0,1,191,2,192,193,194,195,196,197,198,199,200,201,95,202,203,204,205,206,96,207,208,209,210,211,212,97,98,213,214,99,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,100,236,101,102,103,104,105,106,237,238,239,240,241,242,243,244,245,246,107,108,109,110,111,112,247,248,3,249,250,251,252,253,254,255,256,257,258,259,260,261,262,30,263,264,265,31,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,4,330,331,332,333,5,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,113,349,350,351,352,353,354,114,355,356,357,358,359,360,6,361,362,7,363,8,9,364,41,365,10,366,367,368,369,370,11,371,12,13,372,14,373,374,375,376,377,133,378,379,380,381,382,383,384,32,33,385,386,131,387,34,35,134,36,388,389,390,391,392,393,394,395,396,37,130,397,398,399,132,400,401,402,403,404,405,406,407,408,409,410,411,115,116,117,118,412,413,414,415,416,417,15,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,16,434,435,436,48,437,438,17,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,51,52,53,18,54,55,19,56,57,58,59,60,61,62,63,64,20,65,66,67,68,69,21,70,71,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,119,482,22,23,24,25,483,26,27,28,484,38,485,39,121,122,123,124,125,486,126,40,128,487,129],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[149],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[391],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[488],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[489,490,491,492,493,494,439],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[333,334,420,421,422,428,431,462,463,464,470,473],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[140,78,82,83,85,88,203,209,214,99,215,304,307,308,350,476,479,480],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[150,155,176,190,0,1,2,243,244,245,3,322,5,343,343,344,344,345,346,360,495,6,361,7,363,8,9,365,10,496,366,11,371,13,372,14,373,375,133,378,379,380,117,497,48,438,17,18,19,20,21,22,23,24,25,27,28],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:317","failures":[159,160,162,163],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:299","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[489,41,490,491,492,498,499,48,17,439],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[406,407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[135,136,137,138,139,72,140,141,142,143,73,144,145,146,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,164,165,166,168,169,171,172,173,174,175,176,177,178,179,180,181,182,187,94,0,1,2,195,196,197,198,203,206,96,210,211,212,97,98,213,214,99,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,100,236,101,102,103,104,105,106,237,238,239,240,241,243,244,107,108,109,110,111,112,3,251,253,254,256,259,261,291,292,293,294,301,302,303,304,305,306,307,308,309,310,311,322,329,4,330,331,332,333,5,334,335,336,337,338,339,340,342,343,343,344,344,345,346,347,348,113,349,350,351,352,353,354,114,355,356,357,358,359,360,7,363,8,9,10,366,369,370,11,371,12,13,372,14,375,133,379,383,384,32,33,386,131,387,34,35,134,388,389,390,391,392,393,394,395,396,37,130,397,399,132,400,401,402,405,406,407,408,409,410,411,115,116,117,118,412,414,415,416,417,15,418,419,425,433,16,434,436,48,437,438,17,440,441,442,443,444,445,446,447,448,449,450,451,452,454,455,456,457,18,19,20,21,467,474,475,476,477,478,479,480,481,119,22,23,24,25,26,27,28,38,485,39,121,122,123,124,125,486,126,40,128,487,129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[395,500],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[366,379,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[199,336,402,405,407,412,414,419],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[150,155,245,5,360,495,6,361,7,363,8,9,365,10,502,496,366,373,48],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":33,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests2.UsageTest.argumentsOrdered":357,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":450,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":277,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":353,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":334,"org.easymock.tests2.DelegateToTest.testReturnException":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":108,"org.easymock.tests.MockingTest.testPartialClassMocking":0,"org.easymock.tests.MockClassControlTest.testToString":323,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":453,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":59,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":74,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":370,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":490,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":211,"org.easymock.tests2.UsageTest.wrongArguments":351,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":473,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":293,"org.easymock.samples.ExampleTest.answerVsDelegate":336,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":155,"org.easymock.tests2.UsageConstraintsTest.testNull":131,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":193,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":13,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":449,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":328,"org.easymock.tests2.CaptureTest.testPrimitive":121,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":213,"org.easymock.tests.UsageTest.moreThanOneArgument":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":93,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":12,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":137,"org.easymock.tests.UsageTest.argumentsOrdered":145,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":316,"org.easymock.tests.UsageVarargTest.varargIntAccepted":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":329,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":494,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":430,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":332,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":467,"org.easymock.tests.ReplayStateInvalidUsageTest.times":258,"org.easymock.tests2.DependencyTest.testClassMocking":367,"org.easymock.tests2.AnswerTest.answer":402,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":411,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":152,"org.easymock.tests2.CaptureTest.testAnd":38,"org.easymock.tests2.UsageTest.strictResetToDefault":349,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":444,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":197,"org.easymock.tests2.DelegateToTest.testDelegate":436,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":89,"org.easymock.tests.LimitationsTest.mockFinalMethod":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":241,"org.easymock.tests2.DependencyTest.testClassMockingSupport":368,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":207,"org.easymock.tests2.CaptureTest.testCapture1_2446744":122,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":374,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":87,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":409,"org.easymock.tests.UsageThrowableTest.throwError":100,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":252,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":154,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":71,"org.easymock.samples.PartialClassMockTest.testGetArea":5,"org.easymock.tests.MockingTest.testInterfaceMocking":191,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":75,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":300,"org.easymock.tests2.UsageTest.niceToStrict":352,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":267,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":7,"org.easymock.tests2.MockBuilderTest.testCreateMock":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":67,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":470,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":83,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":445,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":151,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":163,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":291,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":44,"org.easymock.tests.UsageOverloadedMethodTest.overloading":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":69,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":392,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":95,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":227,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":391,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":126,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":167,"org.easymock.tests2.EasyMockSupportClassTest.testAll":18,"org.easymock.tests.MockClassControlTest.testEquals":327,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":91,"org.easymock.tests2.CaptureTest.testCaptureAll":485,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":410,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":239,"org.easymock.tests.MockNameTest.defaultName":186,"org.easymock.tests2.UsageConstraintsTest.testMatches":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":138,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":250,"org.easymock.samples.ExampleTest.voteForRemovals":340,"org.easymock.tests.UsageVarargTest.allKinds":175,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":240,"org.easymock.samples.BasicClassMockTest.testPrintContent":346,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":105,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":474,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":499,"org.easymock.tests2.UsageConstraintsTest.greaterThan":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":196,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":380,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":266,"org.easymock.samples.ExampleTest.voteForRemoval":337,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":416,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":381,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":502,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":373,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":176,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":442,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":107,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":432,"org.easymock.tests2.CaptureTest.testCaptureFirst":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":443,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":359,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":223,"org.easymock.tests2.CaptureTest.testCapture2_2446744":487,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":15,"org.easymock.tests2.UsageTest.moreThanOneArgument":350,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":285,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":174,"org.easymock.tests.GenericTest.testBridgedEquals":246,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":184,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":42,"org.easymock.tests.UsageExpectAndReturnTest.longType":219,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":440,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":237,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":496,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":92,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":398,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":315,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":90,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":135,"org.easymock.tests.UsageCallCountTest.tooManyCalls":185,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":79,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":23,"org.easymock.tests.MockingTest.testNiceClassMocking":194,"org.easymock.tests.MockingTest.testClassMocking":189,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":495,"org.easymock.tests2.UsageConstraintsTest.testContains":390,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":178,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":117,"org.easymock.tests2.UsageConstraintsTest.testFind":386,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":96,"org.easymock.tests.MockTypeTest.fromEasyMockClass":153,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":414,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":301,"org.easymock.tests.UsageExpectAndReturnTest.object":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":491,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":169,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":298,"org.easymock.tests.UsageTest.exactCallCountByLastCall":146,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":46,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":272,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":147,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":317,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":439,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":232,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":201,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":421,"org.easymock.tests.MockClassControlTest.testHashCode":326,"org.easymock.tests2.EasyMockSupportTest.testVerify":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":62,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":318,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":162,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":199,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":488,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":408,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":482,"org.easymock.tests.UsageVarargTest.varargCharAccepted":168,"org.easymock.tests2.CaptureTest.testCaptureMultiple":120,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":290,"org.easymock.tests2.UsageTest.openCallCountByLastCall":354,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":451,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":49,"org.easymock.tests.DefaultClassInstantiatorTest.object":262,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":161,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":63,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":81,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":420,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":325,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":378,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":80,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":21,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":324,"org.easymock.tests2.UsageTest.resumeIfFailure":358,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":110,"org.easymock.tests2.StubTest.stubWithReturnValue":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":489,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":399,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":225,"org.easymock.tests2.SerializationTest.testAllMockedMethod":438,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":283,"org.easymock.samples.SupportTest.voteForRemovals":348,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":423,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":86,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":289,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":403,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":149,"org.easymock.tests.UsageExpectAndThrowTest.object":84,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":130,"org.easymock.tests2.DelegateToTest.testWrongClass":434,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":310,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":311,"org.easymock.tests.UsageStrictMockTest.range":306,"org.easymock.samples.ConstructorCalledMockTest.testTax":343,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":460,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":447,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":22,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":85,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":8,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":51,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":260,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":292,"org.easymock.tests2.CaptureTest.testCaptureNone":486,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":314,"org.easymock.tests.UsageUnorderedTest.message":210,"org.easymock.tests.UsageVerifyTest.twoReturns":215,"org.easymock.tests.UsageVarargTest.varargByteAccepted":173,"org.easymock.tests2.ThreadingTest.testThreadSafe":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":65,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":182,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":299,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":345,"org.easymock.tests2.CaptureTest.testCapture_2617107":39,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":287,"org.easymock.tests2.UsageConstraintsTest.any":388,"org.easymock.tests2.StubTest.stub":481,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":257,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":109,"org.easymock.tests.UsageExpectAndThrowTest.longType":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":288,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":265,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":256,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":477,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":425,"org.easymock.tests2.SerializationTest.testClass":48,"org.easymock.tests.LimitationsTest.mockNativeMethod":3,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":235,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":245,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":464,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":480,"org.easymock.tests2.NameTest.nameForMocksControl":457,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":466,"org.easymock.tests2.MockedExceptionTest.testMockedException":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":55,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":73,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":413,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":2,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":78,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":11,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":9,"org.easymock.tests.MockingTest.testNicePartialClassMocking":1,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":462,"org.easymock.tests2.CaptureTest.testCaptureLast":125,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":208,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":28,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":397,"org.easymock.tests.MockingTest.testTwoMocks":190,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":82,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":356,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":400,"org.easymock.samples.ExampleTest.removeNonExistingDocument":341,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":469,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":254,"org.easymock.tests.UsageStrictMockTest.differentMethods":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":422,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":263,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":417,"org.easymock.tests2.MockBuilderTest.testCreateMockString":366,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":56,"org.easymock.tests.UsageExpectAndThrowTest.floatType":76,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":53,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":405,"org.easymock.tests.UsageVerifyTest.twoThrows":99,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":20,"org.easymock.samples.ExampleTest.voteAgainstRemoval":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":278,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":312,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":379,"org.easymock.tests.LimitationsTest.privateConstructor":248,"org.easymock.tests2.UsageConstraintsTest.testNotNull":132,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":106,"org.easymock.tests2.UsageTest.defaultResetToNice":355,"org.easymock.samples.ExampleTest.voteAgainstRemovals":335,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":463,"org.easymock.tests.UsageVarargTest.differentLength":170,"org.easymock.tests2.CallbackTest.callback":419,"org.easymock.tests2.UsageConstraintsTest.equals":385,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":376,"org.easymock.tests.UsageTest.openCallCountByLastCall":143,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":383,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":97,"org.easymock.tests.UsageCallCountTest.tooFewCalls":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":294,"org.easymock.tests.UsageThrowableTest.throwCheckedException":103,"org.easymock.tests.MockingTest.testStrictClassMocking":188,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":27,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":468,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":24,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":259,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":26,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":407,"org.easymock.tests.ObjectMethodsTest.testHashCode":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":493,"org.easymock.tests2.NameTest.nameForNiceMock":456,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":418,"org.easymock.tests2.DependencyTest.testInterfaceMocking":369,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":492,"org.easymock.samples.ExampleTest.addDocument":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":66,"org.easymock.tests2.DelegateToTest.testStubDelegate":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":70,"org.easymock.tests2.AnswerTest.stubAnswer":406,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":304,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":364,"org.easymock.tests.UsageVarargTest.varargLongAccepted":172,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":276,"org.easymock.tests.UsageExpectAndReturnTest.floatType":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":17,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":396,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests.UsageThrowableTest.noUpperLimit":236,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":384,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":458,"org.easymock.tests2.SerializationTest.test":437,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":123,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":30,"org.easymock.tests2.UsageConstraintsTest.testSame":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":217,"org.easymock.samples.SupportTest.addDocument":347,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":483,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":57,"org.easymock.tests.GenericTest.testPackageScope":243,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":271,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":428,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":192,"org.easymock.tests2.NameTest.nameForMock":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":228,"org.easymock.tests2.UsageStrictMockTest.differentMethods":479,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":377,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":220,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":88,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":198,"org.easymock.tests2.MockedExceptionTest.testRealException":118,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":157,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":212,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":261,"org.easymock.tests2.NameTest.nameForStrictMock":455,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":362,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":412,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":50,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":372,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":459,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":37,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":264,"org.easymock.tests.ErrorMessageTest.testGetters":501,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":6,"org.easymock.tests2.UsageStrictMockTest.range":478,"org.easymock.tests2.UsageConstraintsTest.lessThan":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":424,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":498,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":275,"org.easymock.tests2.CaptureTest.testCaptureRightOne":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":61,"org.easymock.tests2.UsageConstraintsTest.testOr":34,"org.easymock.tests.UsageRangeTest.combination":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":371,"org.easymock.tests.UsageTest.wrongArguments":142,"org.easymock.tests2.MockBuilderTest.testWithConstructor":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":58,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":268,"org.easymock.tests.UsageVarargTest.varargShortAccepted":171,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":31,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":183,"org.easymock.tests2.UsageConstraintsTest.cmpTo":389,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":270,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":114,"org.easymock.tests2.CaptureTest.testCaptureFromStub":128,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":251,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":361,"org.easymock.tests.UsageTest.unexpectedCallWithArray":141,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":181,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":230,"org.easymock.tests2.CaptureTest.testCapture":127,"org.easymock.tests2.UsageConstraintsTest.constraints":32,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":305,"org.easymock.samples.ExampleTest.addAndChangeDocument":342,"org.easymock.tests.UsageStrictMockTest.testVerify":309,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":333,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":302,"org.easymock.tests2.CompareToTest.testGreateThan":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":238,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":124,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":330,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":222,"org.easymock.tests.LimitationsTest.abstractClass":247,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":446,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":165}}]
