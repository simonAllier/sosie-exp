[{"position":"org.easymock.internal.MockBuilder:218","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,0,1,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,2,3,4,245,246,247,248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[5,6,7,8,13,249,250,20,251,252,23,25,27,28,30,31,59,253,254,62,63,255,256,257,64,258,259,68,260,69,70,261,262,72,263,75,89,100,101,104,105,264,107,265,266,108,109,118,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,192,193,194,202,284,285,206,286,215,217,218,287,288,289,290,221,291,292,293,294,295,296,297,227,298,299,228,229],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[300,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[13,14,250,15,16,17,18,19,302,21,251,22,23,24,25,26,27,28,29,30,31,32,33,35,37,39,40,303,304,41,44,46,47,48,49,51,305,54,55,56,57,306,307,58,253,60,62,63,256,64,66,259,67,68,69,308,309,71,72,263,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,266,108,112,0,1,113,114,115,117,120,267,268,310,311,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,312,147,148,149,150,151,313,314,186,187,188,189,190,191,192,194,315,201,316,317,318,319,320,202,203,204,205,321,206,213,214,290,221,322,323,295,222,223,224,227,299,228,324,231,232,233,325,234,235,236,238,239,241,2,2,3,3,4,247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[114,115,116,326],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[327,302,21,42,100,101,104,105,300,222,223,224,2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[250,302,251,23,27,28,31,253,255,256,257,259,260,69,70,261,262,72,263,75,89,264,265,266,108,118,328,329,282,283,193,194,330,331,202,287,288,289,290,291,292,293,294,295,296,297,298,299,228],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[13,14,250,15,16,17,18,19,302,21,251,22,23,24,25,26,27,28,29,30,31,32,33,37,39,40,303,304,41,44,46,47,48,49,51,305,54,55,56,57,307,58,253,60,62,63,256,64,66,259,67,68,69,308,309,71,72,263,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,266,108,112,0,1,113,114,115,117,120,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,312,147,148,149,150,151,186,192,194,315,201,316,317,318,319,320,202,203,204,205,206,213,214,290,221,322,323,295,222,223,224,227,299,228,231,232,233,325,234,235,236,238,239,241,4,247],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[82,87,98,332],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[39,40,303,49,54,55,58,68,73,87,90,98,110,111,118,121,333,310,124,130,136,140,142,282,156,162,168,172,174,334,221,235,242],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[327,336,302,21,252,42,59,337,253,254,338,339,60,61,62,340,63,341,342,255,256,343,257,0,1,113,114,117,344,345,300,312,276,279,2,3,4],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[346],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"qualifier":"name","this":"name"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[114,115,116,326],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:262","failures":[42,43,44,45,66,259,309,348,349,350,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,351,193,315,201,316,317,318,319,320,352,207,208,209,210,211,212,290,323,353,354,355,356,357,235],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[358,359,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[266,193,194,361,299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:131","failures":[362],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[363],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[65,364,311,365,357],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":76,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":290,"org.easymock.tests2.UsageTest.argumentsOrdered":262,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":210,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":70,"org.easymock.tests2.StubTest.stubWithReturnValue":66,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":340,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":248,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":133,"org.easymock.tests2.SerializationTest.testAllMockedMethod":116,"org.easymock.tests2.DelegateToTest.testReturnException":119,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":208,"org.easymock.tests.MockingTest.testPartialClassMocking":222,"org.easymock.samples.SupportTest.voteForRemovals":247,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":300,"org.easymock.tests.MockClassControlTest.testToString":269,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":347,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":168,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":326,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":311,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":0,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":156,"org.easymock.tests.UsageExpectAndThrowTest.object":166,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":93,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":47,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":213,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":214,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":82,"org.easymock.tests2.UsageTest.wrongArguments":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":231,"org.easymock.tests.UsageStrictMockTest.range":299,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":154,"org.easymock.samples.ExampleTest.answerVsDelegate":237,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":29,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":99,"org.easymock.tests2.UsageConstraintsTest.testNull":78,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":16,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":167,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":62,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":31,"org.easymock.tests2.CaptureTest.testPrimitive":51,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":233,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":293,"org.easymock.tests.UsageTest.moreThanOneArgument":221,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":175,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":189,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":314,"org.easymock.tests2.CaptureTest.testCaptureNone":55,"org.easymock.tests.UsageUnorderedTest.message":282,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":330,"org.easymock.tests.UsageVerifyTest.twoReturns":194,"org.easymock.tests.UsageVarargTest.varargByteAccepted":183,"org.easymock.tests2.ThreadingTest.testThreadSafe":39,"org.easymock.tests.UsageTest.argumentsOrdered":294,"org.easymock.tests.UsageVarargTest.varargIntAccepted":178,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":220,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":273,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":364,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":147,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":357,"org.easymock.tests2.UsageConstraintsTest.any":83,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":61,"org.easymock.tests2.StubTest.stub":65,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":355,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":209,"org.easymock.tests.UsageExpectAndThrowTest.longType":159,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":265,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":13,"org.easymock.tests2.SerializationTest.testClass":114,"org.easymock.tests.ReplayStateInvalidUsageTest.times":334,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":64,"org.easymock.tests.LimitationsTest.mockNativeMethod":144,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":312,"org.easymock.tests2.AnswerTest.answer":35,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":12,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests2.UsageTest.strictResetToDefault":67,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":338,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":20,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":109,"org.easymock.tests2.NameTest.nameForMocksControl":8,"org.easymock.tests2.MockedExceptionTest.testMockedException":43,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":26,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":323,"org.easymock.tests2.DelegateToTest.testDelegate":121,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":160,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":14,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":63,"org.easymock.tests.MockingTest.testNicePartialClassMocking":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":171,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":18,"org.easymock.tests2.CaptureTest.testCaptureLast":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":211,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":268,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":81,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":199,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":267,"org.easymock.tests2.CaptureTest.testCapture1_2446744":305,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":362,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":124,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":10,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":164,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":261,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":97,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":365,"org.easymock.tests.UsageThrowableTest.throwError":315,"org.easymock.tests.UsageStrictMockTest.differentMethods":228,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":278,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":303,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":331,"org.easymock.tests2.MockBuilderTest.testCreateMockString":257,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":358,"org.easymock.tests.UsageExpectAndThrowTest.floatType":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":191,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":89,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":36,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":345,"org.easymock.tests.UsageVerifyTest.twoThrows":193,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":1,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":148,"org.easymock.samples.ExampleTest.voteAgainstRemoval":239,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":335,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":313,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":21,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":274,"org.easymock.tests2.UsageTest.niceToStrict":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":157,"org.easymock.tests2.UsageConstraintsTest.testNotNull":96,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":320,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":42,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":60,"org.easymock.tests2.MockBuilderTest.testCreateMock":255,"org.easymock.tests2.UsageTest.defaultResetToNice":71,"org.easymock.samples.ExampleTest.voteAgainstRemovals":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":139,"org.easymock.tests.UsageVarargTest.differentLength":283,"org.easymock.tests2.CallbackTest.callback":118,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":336,"org.easymock.tests.UsageTest.openCallCountByLastCall":322,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":165,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":27,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":73,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":350,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":152,"org.easymock.tests.UsageCallCountTest.tooFewCalls":218,"org.easymock.tests.UsageOverloadedMethodTest.overloading":234,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":352,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":87,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":135,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":86,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":56,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":155,"org.easymock.tests.UsageThrowableTest.throwCheckedException":317,"org.easymock.tests2.EasyMockSupportClassTest.testAll":112,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":146,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":197,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":11,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":351,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":104,"org.easymock.tests.MockNameTest.defaultName":275,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":258,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":101,"org.easymock.tests2.UsageConstraintsTest.testMatches":88,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":103,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":190,"org.easymock.tests.ObjectMethodsTest.testHashCode":360,"org.easymock.tests2.CompareToTest.testGreateOrEqual":332,"org.easymock.samples.ExampleTest.voteForRemovals":241,"org.easymock.tests2.NameTest.nameForNiceMock":7,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":41,"org.easymock.tests.UsageVarargTest.allKinds":185,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":192,"org.easymock.tests2.DependencyTest.testInterfaceMocking":46,"org.easymock.samples.BasicClassMockTest.testPrintContent":244,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":198,"org.easymock.samples.ExampleTest.addDocument":240,"org.easymock.tests2.DelegateToTest.testStubDelegate":120,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":319,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests2.AnswerTest.stubAnswer":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":212,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":227,"org.easymock.tests2.UsageConstraintsTest.greaterThan":90,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":341,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":203,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":251,"org.easymock.tests.UsageVarargTest.varargLongAccepted":182,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":229,"org.easymock.samples.ExampleTest.voteForRemoval":238,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":40,"org.easymock.tests.UsageExpectAndReturnTest.floatType":126,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":142,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":280,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":327,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":117,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests.UsageThrowableTest.noUpperLimit":200,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":91,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":259,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":225,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":74,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":52,"org.easymock.tests2.SerializationTest.test":115,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":24,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":201,"org.easymock.tests2.UsageConstraintsTest.testSame":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":125,"org.easymock.samples.SupportTest.addDocument":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":207,"org.easymock.tests2.CaptureTest.testCaptureFirst":58,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":25,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":263,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":131,"org.easymock.tests.GenericTest.testPackageScope":145,"org.easymock.tests2.CaptureTest.testCapture2_2446744":307,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":304,"org.easymock.tests2.UsageTest.moreThanOneArgument":68,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":256,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":184,"org.easymock.tests.GenericTest.testBridgedEquals":301,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":288,"org.easymock.tests2.NameTest.nameForMock":5,"org.easymock.tests.UsageExpectAndReturnTest.longType":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":195,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":22,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":136,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":174,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":321,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":343,"org.easymock.tests2.UsageStrictMockTest.differentMethods":108,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":172,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":128,"org.easymock.tests.UsageCallCountTest.tooManyCalls":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":205,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":217,"org.easymock.tests2.MockedExceptionTest.testRealException":45,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":281,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":132,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":107,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":161,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":232,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":100,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":216,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests2.NameTest.nameForStrictMock":6,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":44,"org.easymock.tests2.UsageConstraintsTest.testFind":77,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":235,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":339,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":110,"org.easymock.tests.MockTypeTest.fromEasyMockClass":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":17,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":296,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":111,"org.easymock.tests.UsageExpectAndReturnTest.object":134,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":253,"org.easymock.tests2.UsageStrictMockTest.range":266,"org.easymock.tests2.UsageConstraintsTest.lessThan":98,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":30,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":180,"org.easymock.tests.UsageTest.exactCallCountByLastCall":295,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":186,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":23,"org.easymock.tests2.CaptureTest.testCaptureRightOne":57,"org.easymock.tests2.UsageConstraintsTest.testOr":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":344,"org.easymock.tests.UsageRangeTest.combination":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":250,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":140,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":176,"org.easymock.tests.UsageTest.wrongArguments":292,"org.easymock.tests2.MockBuilderTest.testWithConstructor":337,"org.easymock.tests.MockClassControlTest.testHashCode":359,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":123,"org.easymock.tests2.EasyMockSupportTest.testVerify":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":137,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":349,"org.easymock.tests.UsageVarargTest.varargShortAccepted":181,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":328,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":9,"org.easymock.tests2.UsageConstraintsTest.cmpTo":84,"org.easymock.tests.UsageVarargTest.varargCharAccepted":179,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":363,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":106,"org.easymock.tests2.UsageTest.openCallCountByLastCall":308,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":309,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":33,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":348,"org.easymock.tests2.CaptureTest.testCaptureFromStub":306,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":254,"org.easymock.tests.UsageTest.unexpectedCallWithArray":291,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":272,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":316,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":219,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":138,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":302,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":298,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":271,"org.easymock.tests2.UsageConstraintsTest.constraints":75,"org.easymock.samples.ExampleTest.addAndChangeDocument":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":162,"org.easymock.tests2.ConstraintsToStringTest.containsToString":346,"org.easymock.tests.UsageStrictMockTest.testVerify":230,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":141,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":353,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":245,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":270,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":196,"org.easymock.tests2.UsageTest.resumeIfFailure":72,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":53,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":276,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":130,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":150,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":28,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":177}}]
