[{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:161","sourceCode":"for (final org.easymock.internal.Injection org.easymock.internal.Injection : java.util.List<org.easymock.internal.Injection>) {\n    final java.lang.reflect.Field java.lang.reflect.Field = org.easymock.internal.Injector.org.easymock.internal.Injector.getFieldByName(java.lang.Class<?>, org.easymock.internal.Injection.getQualifier());\n    final org.easymock.internal.InjectionTarget org.easymock.internal.InjectionTarget = org.easymock.internal.Injector.org.easymock.internal.Injector.injectionTargetWithField(java.lang.reflect.Field);\n    if (org.easymock.internal.InjectionTarget == null) {\n        continue;\n    } \n    if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n        org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n        java.util.List<java.lang.reflect.Field>.remove(org.easymock.internal.InjectionTarget.getTargetField());\n    } \n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:143","sourceCode":"for (final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage : java.util.List<org.easymock.internal.ErrorMessage>) {\n    org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int);\n}","type":"CtForEachImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[0,36,37,38,39,40,41,42,43,1,44,45,46,47,48,49,49,50,50,51,52,53,54,55,56,2,3,4,57,5,58,6,7,8,9,10,11,59,60,61,62,63,64,65,66,67,68,69,12,13,14,70,15,71,16,17,18,19,20,21,72,73,74,75,22,23,76,77,78,79,80,81,82,83,84,24,85,86,87,88,89,25,26,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,27,268,28,29,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,30,295,296,31,32,297,298,299,300,301,33,302,303,34,35,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[160,230,235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[169,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[202,203],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[471],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[84,24,25,26,472,473,474,475,30,300,301,33,34,35,476,477,478],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[44,45,48,49,49,50,50,53,55,63,64,65,66,68,69,101,104,114,120,198,200,479,480,481,207,482,208,209,211,212,213,214,216,217,483,218,219,220,222,223,224,225,227,230,231,232,233,251,252,253,255,258,307,315,425,426,427,429,443],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[74,126,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,162,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,227,266,267,27,30,295,313,341,342,343,344,345,346,347,348,349,350,376,377,389],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[138,140,143,146,148,149,150,151,153,187,194,217,243,376],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[374],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[48,55,63,64,65,66,67,68,69,101,104,114,120,126,167,208,211,213,214,217,219,221,222,224,307,347,426,427,429],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[484],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[131,136,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[36,37,38,39,40,41,43,51,52,53,54,55,61,64,65,68,69,73,74,23,76,77,78,79,80,81,83,84,85,86,89,90,92,93,123,124,127,128,129,130,131,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,158,159,160,161,162,164,166,167,170,171,172,173,174,176,177,178,179,180,181,184,198,199,200,201,204,205,206,207,211,212,219,221,222,223,224,227,230,232,237,238,239,240,241,242,243,244,245,246,251,252,261,262,263,264,265,266,267,268,28,29,294,295,32,297,298,300,307,309,310,311,312,313,314,315,339,341,342,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,376,378,379,380,382,383,385,386,387,388,389,392,393,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,426,427,429,433,434,435,436,437,438,443,453,454,455,456,457,470],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[0,36,37,38,39,40,41,42,43,1,44,45,46,47,48,49,50,51,52,53,54,55,56,2,3,4,57,5,58,6,7,8,9,10,11,59,60,61,62,63,64,65,66,485,67,68,69,486,12,13,14,70,15,71,16,17,18,19,20,21,72,73,74,75,22,23,76,487,77,78,79,80,81,82,83,84,24,85,86,87,88,89,25,26,90,91,488,489,490,491,492,493,92,93,94,494,495,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,496,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,497,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,498,499,256,257,258,259,260,261,262,263,264,265,266,267,27,268,28,29,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,30,295,296,31,32,297,298,299,300,301,33,302,303,34,35,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,458,459,460,461,462,463,464,465,466,467,468,469,470],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[56,522,523,524,525,526,527],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[0,36,37,38,39,40,41,42,43,1,44,45,46,47,48,49,50,51,52,53,54,55,56,528,2,3,4,57,5,58,6,7,8,9,10,11,59,60,61,62,63,64,65,66,485,67,68,69,486,12,13,14,70,15,71,16,17,18,19,20,21,72,73,74,75,22,23,76,487,77,78,79,80,81,82,83,84,24,85,86,87,88,89,25,26,90,91,92,93,94,494,495,529,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,530,208,209,531,210,211,212,213,527,214,497,215,216,217,532,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,498,499,256,257,258,259,260,261,262,263,264,265,266,267,27,268,28,29,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,30,295,296,31,32,297,298,299,300,301,33,302,303,34,35,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,533,461,462,463,464,465,466,534,467,535,468,469,470],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[198,199,200,536],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[462,466],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[537,128,147,153],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[426],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[56,522,523,524,525,526,527],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[130,137,149,173],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[461,462,463,464,466,467],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[22,24,25,26,27,28,29,30,31,301,33,34,35,538,340],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[36,37,38,39,41,43,47,48,49,49,50,50,51,52,53,54,55,58,61,62,63,64,65,66,67,68,69,71,74,22,23,81,82,83,84,85,87,88,89,90,91,92,93,101,104,114,120,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,162,164,165,166,167,168,169,170,171,172,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,201,202,203,204,205,206,208,211,213,214,217,219,220,221,222,223,224,227,231,232,233,236,237,238,243,244,245,246,247,248,249,251,253,266,267,27,268,28,29,285,291,295,31,32,299,300,302,303,304,307,309,310,311,312,313,314,315,334,336,337,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,426,427,429,435,451,453,454,455,456,457,458,459,460,469],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[248,249,459,460],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[74,126,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,162,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,227,266,267,27,30,295,313,341,342,343,344,345,346,347,348,349,350,376,377,389],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":131,"org.easymock.tests2.UsageTest.argumentsOrdered":26,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":299,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":279,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":86,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":0,"org.easymock.tests2.DelegateToTest.testReturnException":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":310,"org.easymock.tests.MockingTest.testPartialClassMocking":426,"org.easymock.tests.MockClassControlTest.testToString":444,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":157,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":451,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":108,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":400,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":104,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":62,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":521,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":522,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":138,"org.easymock.tests2.UsageTest.wrongArguments":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":341,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":241,"org.easymock.samples.ExampleTest.answerVsDelegate":37,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":258,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":431,"org.easymock.tests2.UsageConstraintsTest.testNull":134,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":222,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":194,"org.easymock.tests2.CaptureTest.testPrimitive":174,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":345,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":419,"org.easymock.tests.UsageTest.moreThanOneArgument":300,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":455,"org.easymock.tests.UsageTest.argumentsOrdered":35,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":371,"org.easymock.tests.UsageVarargTest.varargIntAccepted":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":346,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":526,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":207,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":495,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":20,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":350,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":505,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":58,"org.easymock.tests.ReplayStateInvalidUsageTest.times":330,"org.easymock.tests2.DependencyTest.testClassMocking":59,"org.easymock.tests2.AnswerTest.answer":201,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":286,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":80,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":499,"org.easymock.tests2.CaptureTest.testAnd":171,"org.easymock.tests2.UsageTest.strictResetToDefault":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":531,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":189,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":245,"org.easymock.tests2.DelegateToTest.testDelegate":170,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":375,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":504,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":415,"org.easymock.tests.LimitationsTest.mockFinalMethod":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":265,"org.easymock.tests2.DependencyTest.testClassMockingSupport":60,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":468,"org.easymock.tests2.CaptureTest.testCapture1_2446744":175,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":413,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":78,"org.easymock.tests.UsageThrowableTest.throwError":391,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":324,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":257,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":535,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":122,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":508,"org.easymock.samples.PartialClassMockTest.testGetArea":48,"org.easymock.tests.MockingTest.testInterfaceMocking":428,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":325,"org.easymock.tests2.CompareToTest.testLessOrEqual":537,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":347,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":421,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":109,"org.easymock.tests2.UsageTest.niceToStrict":85,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":321,"org.easymock.tests2.ThreadingTest.testChangeDefault":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":269,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":211,"org.easymock.tests2.MockBuilderTest.testCreateMock":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":117,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":8,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":472,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":409,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":190,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":498,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":249,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":433,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":239,"org.easymock.tests.UsageOverloadedMethodTest.overloading":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":113,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":144,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":337,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":362,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":143,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":180,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":381,"org.easymock.tests.MockClassControlTest.testEquals":448,"org.easymock.tests2.EasyMockSupportClassTest.testAll":101,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":252,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":473,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":417,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":479,"org.easymock.tests2.CaptureTest.testCaptureAll":172,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":263,"org.easymock.tests.MockNameTest.defaultName":390,"org.easymock.tests2.UsageConstraintsTest.testMatches":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":456,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":322,"org.easymock.samples.ExampleTest.voteForRemovals":41,"org.easymock.tests.UsageVarargTest.allKinds":389,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":268,"org.easymock.samples.BasicClassMockTest.testPrintContent":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":264,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":397,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":72,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":314,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":534,"org.easymock.tests2.UsageConstraintsTest.greaterThan":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":244,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":233,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":509,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":467,"org.easymock.samples.ExampleTest.voteForRemoval":38,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":124,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":234,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":259,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":529,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":225,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":501,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":82,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":315,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":187,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":309,"org.easymock.tests2.CaptureTest.testCaptureFirst":184,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":188,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":91,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":358,"org.easymock.tests2.CaptureTest.testCapture2_2446744":183,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":126,"org.easymock.tests2.UsageTest.moreThanOneArgument":84,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":287,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":388,"org.easymock.tests.GenericTest.testBridgedEquals":254,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":440,"org.easymock.tests.UsageExpectAndReturnTest.longType":354,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":261,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":483,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":418,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":399,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":416,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":459,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":453,"org.easymock.tests.UsageCallCountTest.tooManyCalls":441,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":359,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":405,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":396,"org.easymock.tests.MockingTest.testNiceClassMocking":432,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":64,"org.easymock.tests.MockingTest.testClassMocking":424,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":482,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":434,"org.easymock.tests2.UsageConstraintsTest.testContains":142,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":53,"org.easymock.tests2.UsageConstraintsTest.testFind":133,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":238,"org.easymock.tests.MockTypeTest.fromEasyMockClass":256,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":164,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests.UsageExpectAndReturnTest.object":361,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":523,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":383,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":319,"org.easymock.tests.UsageTest.exactCallCountByLastCall":304,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":274,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":450,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":372,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":478,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":56,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":367,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":378,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":336,"org.easymock.tests.MockClassControlTest.testHashCode":447,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":13,"org.easymock.tests2.EasyMockSupportTest.testVerify":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":111,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":373,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":248,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":77,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":487,"org.easymock.tests.UsageVarargTest.varargCharAccepted":382,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":533,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":292,"org.easymock.tests2.UsageTest.openCallCountByLastCall":87,"org.easymock.tests.DefaultClassInstantiatorTest.object":461,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":196,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":247,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":317,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":538,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":394,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":57,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":12,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":507,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":446,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":231,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":406,"org.easymock.tests.ReplayStateInvalidCallsTest.times":513,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":458,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":514,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":120,"org.easymock.tests2.UsageTest.resumeIfFailure":90,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":255,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":494,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":312,"org.easymock.tests2.StubTest.stubWithReturnValue":93,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":527,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":153,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":360,"org.easymock.tests2.SerializationTest.testAllMockedMethod":200,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":285,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":474,"org.easymock.samples.SupportTest.voteForRemovals":47,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":250,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":70,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":412,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":536,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":291,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":202,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":452,"org.easymock.tests.UsageExpectAndThrowTest.object":410,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":150,"org.easymock.tests2.DelegateToTest.testWrongClass":168,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":511,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":266,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":267,"org.easymock.tests.UsageStrictMockTest.range":31,"org.easymock.samples.ConstructorCalledMockTest.testTax":49,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":96,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":192,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":411,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":98,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":476,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":503,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":422,"org.easymock.tests2.CaptureTest.testCaptureNone":179,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":489,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.UsageVerifyTest.twoReturns":29,"org.easymock.tests.UsageVarargTest.varargByteAccepted":387,"org.easymock.tests2.ThreadingTest.testThreadSafe":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":115,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":438,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":44,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":320,"org.easymock.tests2.CaptureTest.testCapture_2617107":173,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":475,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":289,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":344,"org.easymock.tests2.UsageConstraintsTest.any":140,"org.easymock.tests2.StubTest.stub":92,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":329,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":460,"org.easymock.tests.UsageExpectAndThrowTest.longType":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":311,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":465,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":328,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":75,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":71,"org.easymock.tests2.SerializationTest.testClass":198,"org.easymock.tests.LimitationsTest.mockNativeMethod":307,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":370,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":481,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":4,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":519,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":76,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":490,"org.easymock.tests2.NameTest.nameForMocksControl":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":5,"org.easymock.tests2.MockedExceptionTest.testMockedException":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":103,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":303,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":429,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":404,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":163,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":219,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":214,"org.easymock.tests.MockingTest.testNicePartialClassMocking":427,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":224,"org.easymock.tests2.CaptureTest.testCaptureLast":178,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":469,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":518,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":137,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":69,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":151,"org.easymock.tests.MockingTest.testTwoMocks":425,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":515,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":408,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":155,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":493,"org.easymock.samples.ExampleTest.removeNonExistingDocument":42,"org.easymock.tests.UsageStrictMockTest.differentMethods":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":7,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":326,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":14,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":492,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":463,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":125,"org.easymock.tests2.MockBuilderTest.testCreateMockString":218,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":442,"org.easymock.tests.UsageExpectAndThrowTest.floatType":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":105,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":100,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":204,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":528,"org.easymock.tests.UsageVerifyTest.twoThrows":28,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":114,"org.easymock.samples.ExampleTest.voteAgainstRemoval":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":280,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":232,"org.easymock.tests.LimitationsTest.privateConstructor":306,"org.easymock.tests2.UsageConstraintsTest.testNotNull":154,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":398,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":51,"org.easymock.tests2.UsageTest.defaultResetToNice":89,"org.easymock.samples.ExampleTest.voteAgainstRemovals":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":281,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":366,"org.easymock.tests.UsageVarargTest.differentLength":384,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":3,"org.easymock.tests2.CallbackTest.callback":81,"org.easymock.tests2.UsageConstraintsTest.equals":132,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":228,"org.easymock.tests.UsageTest.openCallCountByLastCall":302,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":343,"org.easymock.tests.UsageCallCountTest.tooFewCalls":436,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":242,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":491,"org.easymock.tests.UsageThrowableTest.throwCheckedException":395,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":477,"org.easymock.tests.MockingTest.testStrictClassMocking":423,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":68,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":377,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":6,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":65,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":331,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":67,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":206,"org.easymock.tests.ObjectMethodsTest.testHashCode":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":525,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":517,"org.easymock.tests2.NameTest.nameForNiceMock":160,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":127,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":512,"org.easymock.tests2.DependencyTest.testInterfaceMocking":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":524,"org.easymock.samples.ExampleTest.addDocument":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":116,"org.easymock.tests2.DelegateToTest.testStubDelegate":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":121,"org.easymock.tests2.AnswerTest.stubAnswer":205,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":295,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":497,"org.easymock.tests.UsageVarargTest.varargLongAccepted":386,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":278,"org.easymock.tests.UsageExpectAndReturnTest.floatType":353,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":369,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":55,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":50,"org.easymock.tests.UsageThrowableTest.noUpperLimit":392,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":19,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":129,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":94,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":176,"org.easymock.tests2.SerializationTest.test":199,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":462,"org.easymock.tests2.UsageConstraintsTest.testSame":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":352,"org.easymock.samples.SupportTest.addDocument":46,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":485,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":502,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":106,"org.easymock.tests.GenericTest.testPackageScope":251,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":273,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":18,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":430,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":500,"org.easymock.tests2.NameTest.nameForMock":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":363,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":532,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":355,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":414,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":316,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":246,"org.easymock.tests2.MockedExceptionTest.testRealException":54,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":260,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":282,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":333,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":342,"org.easymock.tests2.NameTest.nameForStrictMock":159,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":210,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":223,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":95,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":464,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":149,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":208,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":506,"org.easymock.tests2.UsageConstraintsTest.lessThan":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":15,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":277,"org.easymock.tests2.CaptureTest.testCaptureRightOne":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":110,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":488,"org.easymock.tests2.UsageConstraintsTest.testOr":136,"org.easymock.tests.UsageRangeTest.combination":243,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":220,"org.easymock.tests.UsageTest.wrongArguments":33,"org.easymock.tests2.MockBuilderTest.testWithConstructor":530,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":107,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":443,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":364,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":466,"org.easymock.tests.UsageVarargTest.varargShortAccepted":385,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":439,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":520,"org.easymock.tests2.UsageConstraintsTest.cmpTo":141,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":203,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":272,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests2.CaptureTest.testCaptureFromStub":182,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":323,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":209,"org.easymock.tests.UsageTest.unexpectedCallWithArray":301,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":516,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":437,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":484,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":365,"org.easymock.tests2.CaptureTest.testCapture":471,"org.easymock.tests2.UsageConstraintsTest.constraints":130,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.samples.ExampleTest.addAndChangeDocument":43,"org.easymock.tests.UsageStrictMockTest.testVerify":298,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":1,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":262,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":177,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":348,"org.easymock.tests.LimitationsTest.abstractClass":305,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":357,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":191,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":379}}]
