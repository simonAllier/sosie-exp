[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,23,24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[41,42,43,44,45,46,47],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[48,49,50],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[51],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[48,52,53,54,55,56],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[48,52,53,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:112","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,48,0,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,1,2,100,101,3,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,4,150,151,152,153,154,155,156,157,158,54,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,49,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,11,12,13,14,15,202,203,204,205,16,17,18,19,20,21,22,206,207,208,23,23,24,24,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,25,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,26,255,256,257,258,259,260,261,262,263,264,265,266,267,268,27,28,269,270,29,30,31,32,271,272,273,274,33,50,34,35,275,36,37,276,277,278,279,280,38,39,40,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[48,52,53,54,55,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[48,81,349,54,159,162,163,201,203,204,256,312,318,319],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[30,350,276,38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:230","sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[244,351,332,338],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[23,24,259,41,352,353,354,265,355,356,266,357,358,359,360,361,362,363,364,365,267,366,367,368,369,370,268,371,372,306,326,330,373,374,375,47,376,377,378,379,380],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[350,273],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,0,82,83,84,85,86,87,88,89,90,94,95,96,97,98,51,1,2,3,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,140,141,143,144,4,151,152,153,154,155,156,158,165,166,167,168,169,170,171,173,174,175,176,177,179,180,181,182,49,199,11,12,13,14,15,202,203,204,205,16,17,18,19,20,21,22,206,207,208,23,24,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,227,228,229,230,231,232,234,235,237,238,239,240,242,243,245,247,248,249,250,251,252,254,26,257,258,259,260,261,262,263,264,265,266,267,268,27,28,269,270,29,30,31,32,271,272,273,274,33,50,34,35,275,36,37,276,277,278,280,38,39,40,281,282,284,285,286,287,288,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,313,314,317,320,322,323,324,325,326,327,328,329,330,331,333,334,335,336,340,341,342,343,344,345,346,347],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[382,383],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[384,385,57,386,387,388,389,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,390,391,392,393,394,395,396,397,78,79,48,0,80,81,82,83,84,398,399,400,401,402,85,86,87,88,89,90,91,92,93,94,95,96,97,98,403,99,51,1,2,100,101,3,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,404,405,406,381,122,123,407,408,124,125,126,127,409,128,129,130,410,411,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,4,150,5,151,152,153,154,155,156,412,413,414,157,158,54,159,160,161,162,163,164,415,416,417,165,166,418,167,419,420,421,168,169,170,171,422,172,423,424,425,426,427,428,429,173,174,175,430,176,177,178,179,180,181,182,49,6,431,432,433,7,8,434,435,436,437,438,439,440,441,9,442,443,444,445,10,446,447,448,449,183,184,185,186,187,188,189,190,191,192,193,194,450,195,196,197,198,451,199,200,201,11,12,13,14,15,202,203,204,205,16,17,452,18,19,20,21,22,453,454,455,206,207,208,23,24,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,25,233,234,235,236,237,238,239,240,241,456,242,457,458,243,244,245,246,459,351,247,248,460,249,250,251,252,253,254,26,255,256,257,258,259,41,461,260,261,262,263,462,463,464,465,466,467,264,468,469,470,471,472,473,352,353,354,265,355,356,266,357,358,359,360,361,362,363,364,365,267,366,367,368,369,370,268,371,372,27,28,269,270,474,29,30,31,32,271,272,350,273,274,33,50,34,35,275,36,37,276,277,278,279,280,38,39,40,382,281,282,283,383,284,475,476,285,286,287,288,289,290,291,477,478,479,480,481,292,482,483,484,485,486,487,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,348,323,488,489,490,491,492,493,494,324,325,326,327,495,328,329,330,373,331,374,332,496,375,497,333,334,335,47,336,498,376,337,338,378,339,340,341,342,343,344,499,500,345,346,347],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[271],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[384,385,57,386,387,388,389,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,393,395,397,78,79,48,0,80,81,82,83,84,398,399,400,401,402,85,86,87,88,89,90,91,92,93,94,95,96,97,98,403,99,51,1,2,100,101,3,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,404,405,406,381,122,123,407,408,124,125,126,127,409,128,129,130,410,411,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,4,150,5,151,152,153,154,155,156,412,413,414,157,158,54,159,160,161,162,163,164,415,416,417,165,166,418,167,419,420,421,168,169,170,171,172,423,424,425,426,427,429,173,174,175,430,176,177,178,179,180,181,182,49,6,431,432,433,7,8,434,435,436,437,438,439,440,441,9,442,443,444,445,10,446,447,448,449,183,184,185,186,187,188,189,190,191,192,193,194,450,195,196,197,198,451,199,200,201,11,12,13,14,15,202,203,204,205,16,17,18,19,20,21,22,453,454,455,206,207,208,23,23,24,24,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,25,233,234,235,236,237,238,239,240,241,242,457,458,243,244,245,246,459,247,248,460,253,254,26,255,256,257,258,259,41,260,261,262,263,462,463,464,465,466,467,264,468,469,470,471,472,473,352,265,356,266,358,359,362,363,364,365,267,367,370,268,371,372,27,28,269,270,474,29,30,31,32,271,272,350,273,274,33,50,34,35,275,36,37,276,277,278,279,280,38,39,40,382,281,282,283,383,284,285,286,287,288,289,290,291,477,478,479,480,481,292,482,483,484,485,486,487,293,294,295,297,298,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,348,323,488,492,493,494,326,327,328,329,332,497,333,334,335,376,337,340,341,342,343,344,499,500,345,346,347],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[197,214,281,283,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[441,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[214,322,348,323,344,345,346],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[30,350,276,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,48,0,80,81,82,83,84,85,86,87,88,89,90,94,95,96,97,98,1,2,100,101,3,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,140,141,142,143,144,145,146,147,148,149,4,150,151,152,153,154,155,156,157,158,54,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,179,180,181,182,49,184,186,187,189,192,194,199,201,11,12,13,14,15,202,203,204,205,16,17,18,19,20,21,22,206,207,208,23,23,24,24,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,25,233,234,235,236,237,238,239,240,242,243,245,247,248,249,250,251,252,253,254,26,255,256,257,258,259,260,261,262,263,264,265,266,267,268,27,28,269,270,29,30,31,32,271,272,273,274,33,50,34,35,275,36,37,276,277,278,280,38,39,40,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,338,339,340,341,342,343,344,345,346,347],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[501,502,503],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[57,388,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,0,81,82,398,399,400,401,402,87,99,1,2,100,101,3,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,404,405,406,122,407,124,125,126,127,139,140,141,142,143,144,145,146,147,148,149,4,150,5,151,152,153,154,155,156,412,413,414,157,158,160,161,164,165,166,167,443,448,195,197,198,199,201,11,12,13,14,15,202,203,204,205,16,17,18,19,20,21,22,453,454,455,206,23,23,24,24,212,213,214,215,216,218,220,221,222,223,225,226,229,230,231,232,25,233,234,235,236,237,238,239,240,242,244,245,246,247,248,26,256,257,259,264,265,266,267,268,27,28,269,270,29,30,31,32,271,272,273,274,33,50,34,35,275,36,37,276,277,278,280,38,39,40,382,281,282,283,383,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,309,310,311,313,315,316,317,320,321,322,323,324,325,326,327,328,329,330,332,333,335,336,338,340,341,342,343,344,499,500,345,346,347],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[346,347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:81","sourceCode":"return org.easymock.internal.Results.getMainInterval().contains(org.easymock.internal.Results.getCallCount())","type":"CtReturnImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,87,89,90,1,2,3,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,140,141,143,144,4,155,165,166,167,173,174,175,176,177,179,180,181,182,49,202,203,204,205,16,17,18,19,20,21,22,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,227,228,229,230,231,232,234,235,237,238,239,240,242,245,247,248,254,255,256,257,259,264,265,266,267,268,27,28,269,270,29,30,31,32,271,272,273,274,33,50,34,35,275,36,37,276,277,278,280,38,39,40,281,282,284,285,286,287,288,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,310,313,314,320,322,323,324,325,326,327,328,329,330,333,335,336,342,344,345,346,347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":270,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":157,"org.easymock.tests2.UsageTest.argumentsOrdered":319,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":303,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":438,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":314,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":210,"org.easymock.tests2.DelegateToTest.testReturnException":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":152,"org.easymock.tests.MockingTest.testPartialClassMocking":165,"org.easymock.tests.MockClassControlTest.testToString":133,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":460,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":10,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":102,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":266,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":42,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":272,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":1,"org.easymock.tests2.UsageTest.wrongArguments":312,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":473,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":170,"org.easymock.samples.ExampleTest.answerVsDelegate":214,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":395,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":420,"org.easymock.tests2.UsageConstraintsTest.testNull":30,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":238,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":138,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":302,"org.easymock.tests2.CaptureTest.testPrimitive":225,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":3,"org.easymock.tests.UsageTest.moreThanOneArgument":158,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":121,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":13,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":398,"org.easymock.tests.UsageTest.argumentsOrdered":163,"org.easymock.tests.UsageVarargTest.varargIntAccepted":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":18,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":46,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":331,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":486,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":22,"org.easymock.tests.ReplayStateInvalidUsageTest.times":191,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":264,"org.easymock.tests2.DependencyTest.testClassMocking":475,"org.easymock.tests2.AnswerTest.answer":344,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":444,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":263,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":392,"org.easymock.tests2.CaptureTest.testAnd":222,"org.easymock.tests2.UsageTest.strictResetToDefault":310,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":243,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":12,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":297,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":402,"org.easymock.tests2.DelegateToTest.testDelegate":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":117,"org.easymock.tests.LimitationsTest.mockFinalMethod":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":98,"org.easymock.tests2.DependencyTest.testClassMockingSupport":476,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":403,"org.easymock.tests2.CaptureTest.testCapture1_2446744":226,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":456,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":261,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":185,"org.easymock.tests.UsageThrowableTest.throwError":142,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":394,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":487,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":15,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":372,"org.easymock.samples.PartialClassMockTest.testGetArea":206,"org.easymock.tests.MockingTest.testInterfaceMocking":418,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":19,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":405,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":411,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":103,"org.easymock.tests2.UsageTest.niceToStrict":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":361,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":6,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":333,"org.easymock.tests2.MockBuilderTest.testCreateMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":470,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":111,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":55,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":298,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":391,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":414,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":168,"org.easymock.tests.UsageOverloadedMethodTest.overloading":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":370,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":34,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":198,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":69,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":50,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":231,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":430,"org.easymock.tests.MockClassControlTest.testEquals":137,"org.easymock.tests2.EasyMockSupportClassTest.testAll":265,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":123,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":96,"org.easymock.tests2.CaptureTest.testCaptureAll":223,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":262,"org.easymock.tests.MockNameTest.defaultName":450,"org.easymock.tests2.UsageConstraintsTest.testMatches":35,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":14,"org.easymock.samples.ExampleTest.voteForRemovals":218,"org.easymock.tests.UsageVarargTest.allKinds":49,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":97,"org.easymock.samples.BasicClassMockTest.testPrintContent":208,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":148,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":253,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":156,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":383,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":428,"org.easymock.tests2.UsageConstraintsTest.greaterThan":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":355,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":125,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":246,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":429,"org.easymock.samples.ExampleTest.voteForRemoval":215,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":459,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":288,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":491,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":241,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":205,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":309,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":295,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":151,"org.easymock.tests2.CaptureTest.testCaptureFirst":234,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":296,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":321,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":65,"org.easymock.tests2.CaptureTest.testCapture2_2446744":233,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":290,"org.easymock.tests2.UsageTest.moreThanOneArgument":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":445,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":338,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":182,"org.easymock.tests.GenericTest.testBridgedEquals":408,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":92,"org.easymock.tests.UsageExpectAndReturnTest.longType":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":94,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":120,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":5,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":279,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":118,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":454,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":11,"org.easymock.tests.UsageCallCountTest.tooManyCalls":93,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":147,"org.easymock.tests.MockingTest.testNiceClassMocking":421,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":325,"org.easymock.tests.MockingTest.testClassMocking":416,"org.easymock.tests2.UsageConstraintsTest.testContains":33,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":86,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":342,"org.easymock.tests2.UsageConstraintsTest.testFind":29,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":141,"org.easymock.tests.MockTypeTest.fromEasyMockClass":393,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":78,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":323,"org.easymock.tests.UsageExpectAndReturnTest.object":68,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":301,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":43,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":130,"org.easymock.tests.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":8,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":399,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":387,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":41,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":74,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":197,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":478,"org.easymock.tests.MockClassControlTest.testHashCode":136,"org.easymock.tests2.EasyMockSupportTest.testVerify":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":363,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":400,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":413,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":195,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":260,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":462,"org.easymock.tests.UsageVarargTest.varargCharAccepted":176,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":422,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":449,"org.easymock.tests2.UsageTest.openCallCountByLastCall":315,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":501,"org.easymock.tests.DefaultClassInstantiatorTest.object":172,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":304,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":412,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":128,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":349,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":364,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":477,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":135,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":75,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":453,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":268,"org.easymock.tests2.UsageTest.resumeIfFailure":320,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":390,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":154,"org.easymock.tests2.StubTest.stubWithReturnValue":248,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":47,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":67,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":280,"org.easymock.tests2.SerializationTest.testAllMockedMethod":308,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":443,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":56,"org.easymock.samples.SupportTest.voteForRemovals":212,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":381,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":114,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":448,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":499,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":389,"org.easymock.tests.UsageExpectAndThrowTest.object":112,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":277,"org.easymock.tests2.DelegateToTest.testWrongClass":283,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":16,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":17,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.tests.UsageStrictMockTest.range":81,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":493,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":300,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":324,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":335,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":162,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":169,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":52,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":406,"org.easymock.tests2.CaptureTest.testCaptureNone":230,"org.easymock.tests.UsageUnorderedTest.message":201,"org.easymock.tests.UsageVerifyTest.twoReturns":204,"org.easymock.tests.UsageVarargTest.varargByteAccepted":181,"org.easymock.tests2.ThreadingTest.testThreadSafe":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":366,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":90,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":410,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":207,"org.easymock.tests2.CaptureTest.testCapture_2617107":224,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":101,"org.easymock.tests2.UsageConstraintsTest.any":273,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":190,"org.easymock.tests2.StubTest.stub":247,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":153,"org.easymock.tests.UsageExpectAndThrowTest.longType":105,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":426,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":189,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":292,"org.easymock.tests2.SerializationTest.testClass":306,"org.easymock.tests.LimitationsTest.mockNativeMethod":57,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":407,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":465,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":258,"org.easymock.tests2.NameTest.nameForMocksControl":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":467,"org.easymock.tests2.MockedExceptionTest.testMockedException":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":356,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":161,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":106,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":348,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":235,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":336,"org.easymock.tests.MockingTest.testNicePartialClassMocking":166,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":463,"org.easymock.tests2.CaptureTest.testCaptureLast":229,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":99,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":271,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":330,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":278,"org.easymock.tests.MockingTest.testTwoMocks":417,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":373,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":110,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":318,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":39,"org.easymock.samples.ExampleTest.removeNonExistingDocument":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":469,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":187,"org.easymock.tests.UsageStrictMockTest.differentMethods":82,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":479,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":424,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":289,"org.easymock.tests2.MockBuilderTest.testCreateMockString":339,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":131,"org.easymock.tests.UsageExpectAndThrowTest.floatType":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":357,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":345,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":461,"org.easymock.tests.UsageVerifyTest.twoThrows":203,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":267,"org.easymock.samples.ExampleTest.voteAgainstRemoval":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":404,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":245,"org.easymock.tests.LimitationsTest.privateConstructor":385,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":380,"org.easymock.tests2.UsageConstraintsTest.testNotNull":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":149,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":340,"org.easymock.tests2.UsageTest.defaultResetToNice":317,"org.easymock.samples.ExampleTest.voteAgainstRemovals":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":464,"org.easymock.tests.UsageVarargTest.differentLength":178,"org.easymock.tests2.CallbackTest.callback":221,"org.easymock.tests2.UsageConstraintsTest.equals":474,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":457,"org.easymock.tests.UsageTest.openCallCountByLastCall":160,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":100,"org.easymock.tests.UsageCallCountTest.tooFewCalls":88,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":171,"org.easymock.tests.UsageThrowableTest.throwCheckedException":146,"org.easymock.tests.MockingTest.testStrictClassMocking":415,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":53,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":150,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":329,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":468,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":326,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":192,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":328,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":347,"org.easymock.tests.ObjectMethodsTest.testHashCode":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":45,"org.easymock.tests2.NameTest.nameForNiceMock":251,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":291,"org.easymock.tests2.DependencyTest.testInterfaceMocking":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":44,"org.easymock.samples.ExampleTest.addDocument":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":367,"org.easymock.tests2.DelegateToTest.testStubDelegate":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.AnswerTest.stubAnswer":346,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":0,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":498,"org.easymock.tests.UsageVarargTest.varargLongAccepted":180,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndReturnTest.floatType":60,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":76,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":259,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":485,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":451,"org.easymock.tests.UsageThrowableTest.noUpperLimit":143,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":37,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":488,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":227,"org.easymock.tests2.SerializationTest.test":307,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":423,"org.easymock.tests2.UsageConstraintsTest.testSame":31,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":59,"org.easymock.samples.SupportTest.addDocument":211,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":495,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":358,"org.easymock.tests.GenericTest.testPackageScope":122,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":7,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":484,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":419,"org.easymock.tests2.NameTest.nameForMock":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":70,"org.easymock.tests2.UsageStrictMockTest.differentMethods":257,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":378,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":458,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":62,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":116,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":409,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":127,"org.easymock.tests2.MockedExceptionTest.testRealException":343,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":397,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":441,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":2,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":194,"org.easymock.tests2.NameTest.nameForStrictMock":250,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":497,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":502,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":322,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":239,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":492,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":425,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":276,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":332,"org.easymock.tests2.UsageStrictMockTest.range":256,"org.easymock.tests2.UsageConstraintsTest.lessThan":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":436,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":294,"org.easymock.tests2.CaptureTest.testCaptureRightOne":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":362,"org.easymock.tests2.UsageConstraintsTest.testOr":32,"org.easymock.tests.UsageRangeTest.combination":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":236,"org.easymock.tests.UsageTest.wrongArguments":159,"org.easymock.tests2.MockBuilderTest.testWithConstructor":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":359,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":71,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":427,"org.easymock.tests.UsageVarargTest.varargShortAccepted":179,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":91,"org.easymock.tests2.UsageConstraintsTest.cmpTo":274,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":433,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":316,"org.easymock.tests2.CaptureTest.testCaptureFromStub":25,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":184,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":496,"org.easymock.tests.UsageTest.unexpectedCallWithArray":54,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":48,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":89,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":377,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":72,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":80,"org.easymock.tests2.UsageConstraintsTest.constraints":269,"org.easymock.samples.ExampleTest.addAndChangeDocument":220,"org.easymock.tests.UsageStrictMockTest.testVerify":84,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":209,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":95,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":20,"org.easymock.tests.LimitationsTest.abstractClass":384,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":21,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":199,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":299}}]
