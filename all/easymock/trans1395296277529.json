[{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,7,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,0,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[43,44,45,46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[47,48,49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[2,50],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[51,52,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[54,55,56,57,58,59,60],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[7,7,8,8,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,2,3,4,76,77,78,79,80,81,9,10,82,83,11,12,13,14,84,85,86,87,88,15,89,16,17,90,18,19,91,92,93,94,95,20,21,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,22,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,6,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,23,188,189,190,191,192,193,24,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,25,26,27,45,29,30,240,241,31,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,32,33,34,35,36,297,53,298,299,300,301,302,303,304,37,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,38,39,40,41,42,321,322,323,324,325,326,327],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[61,63,64,66,72,74,2,3,76,77,78,79,9,10,82,83,11,12,13,14,84,85,87,88,15,89,16,17,90,18,19,91,92,93,95,20,21,0,96,100,102,103,105,106,109,110,111,112,113,114,115,116,117,118,119,122,126,127,128,130,132,133,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,6,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,180,181,184,23,189,190,193,24,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,221,222,223,224,225,228,25,26,29,30,31,242,243,245,246,249,270,271,272,273,275,276,277,278,282,284,285,286,287,288,289,290,296,32,33,34,35,36,37,306,307],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[102,103,104,105,106,107,108,109,110,111,112,22,113,114,328],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[329,330,331],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[134],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[82,83,12,14,84,86,91,20,102,104,112],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[192],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[2,54,50,55,56,57,332,333,180,60],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[7,8,61,62,63,64,65,66,334,67,68,69,70,71,72,73,74,75,2,3,4,335,336,337,338,339,340,341,342,343,344,76,345,346,77,347,348,349,350,351,352,353,354,355,78,356,357,358,359,360,79,361,362,80,363,81,9,10,82,83,364,11,12,13,14,84,85,86,87,88,15,89,16,17,90,18,19,91,92,93,94,95,20,21,0,96,97,98,99,100,101,365,366,367,368,102,103,104,105,106,107,108,109,110,111,112,22,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,369,370,371,152,372,373,374,153,375,154,54,155,376,50,377,156,378,379,157,6,158,159,160,161,380,381,162,382,383,384,163,164,165,385,386,166,167,168,169,387,170,171,172,388,389,390,173,174,391,392,393,394,395,175,396,397,398,399,400,401,402,176,177,178,179,180,60,403,404,405,406,407,408,181,409,410,411,412,413,414,182,183,184,185,186,187,23,188,189,190,191,192,193,415,416,417,418,419,24,194,420,421,422,423,424,47,425,426,427,428,429,195,196,197,430,198,431,432,433,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,434,435,436,437,438,439,440,221,222,223,224,441,442,443,444,445,446,447,448,449,225,226,227,450,451,228,452,229,230,231,453,232,233,234,235,236,237,238,239,25,26,454,27,45,28,455,51,456,457,458,459,460,461,462,463,464,29,30,240,241,31,242,243,465,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,466,467,468,469,470,471,472,473,279,280,281,282,283,284,285,286,287,288,289,474,46,290,475,291,292,293,294,295,296,476,32,33,34,35,36,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,52,297,492,493,494,495,496,53,497,498,499,500,501,502,298,299,300,301,302,303,304,37,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,38,39,40,41,42,321,503,322,323,324,325,504,326,327],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[449,450],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[82,83,12,14,84,86,91,20,102,104,112],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[61,63,64,66,72,74,2,3,76,77,78,79,9,10,82,83,11,12,13,14,84,85,87,88,15,89,16,17,90,18,19,91,92,93,95,20,21,0,96,100,102,103,105,106,109,110,111,112,113,114,115,116,117,118,119,122,126,127,128,130,132,133,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,6,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,180,181,184,23,189,190,193,24,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,221,222,223,224,225,227,228,25,26,29,30,31,242,243,245,246,249,270,271,272,273,275,276,277,278,282,284,285,286,287,288,289,290,296,32,33,34,35,36,486,488,495,496,497,37,306,307],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[129,135,136,189,505,465,244,247,248,274,275,476,301,304,306],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,7,8,8,61,62,63,64,65,66,334,67,68,69,70,71,72,73,74,75,2,3,4,335,339,340,341,342,343,344,76,345,346,77,347,348,349,350,351,352,353,354,355,78,356,357,358,359,360,79,361,362,80,363,81,9,10,82,83,364,11,12,13,14,84,85,86,87,88,15,89,16,17,90,18,19,91,92,93,94,95,20,21,0,96,97,98,99,100,101,365,366,367,368,102,103,104,105,106,107,108,109,110,111,112,22,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,369,370,371,152,372,373,374,153,375,154,54,155,50,377,156,378,379,157,6,158,159,160,161,380,381,162,382,383,384,163,164,165,385,386,166,167,168,169,170,171,172,389,390,173,174,391,392,393,394,395,175,396,397,398,399,400,401,402,176,177,178,179,180,60,403,404,405,406,407,408,181,409,410,411,412,413,414,182,183,184,185,186,187,23,188,189,190,191,192,193,415,416,417,418,419,24,194,420,421,422,423,424,47,425,426,427,428,429,195,196,197,430,198,431,432,433,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,434,435,436,437,438,439,440,221,222,223,224,441,442,443,444,445,446,447,448,449,225,226,227,450,451,228,452,229,230,231,453,232,233,234,235,236,237,238,239,25,26,27,45,28,455,51,456,457,458,459,460,461,462,463,464,29,30,240,241,31,242,243,465,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,466,469,470,471,472,473,279,280,281,282,283,284,285,286,287,288,289,474,46,290,475,291,292,293,294,295,296,476,32,33,34,35,36,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,52,297,492,493,494,495,496,53,497,498,499,500,501,502,298,299,300,301,302,303,304,37,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,38,39,40,41,42,321,503,322,323,324,325,504,326,327],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[506,507,508,509,465,304],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[396,409,470],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,7,8,8,61,62,63,64,65,66,334,67,68,69,70,71,72,73,74,75,2,3,4,335,339,340,341,342,343,344,76,345,346,77,347,348,349,350,351,352,353,354,355,78,356,357,358,359,360,79,361,362,80,363,81,9,10,82,83,364,11,12,13,14,84,85,86,87,88,15,89,16,17,90,18,19,91,92,93,94,95,20,21,0,96,97,98,99,100,101,365,366,367,368,102,103,104,105,106,107,108,109,110,111,112,22,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,369,370,371,152,372,373,374,153,375,154,54,155,50,377,156,378,379,157,6,158,159,160,161,380,381,162,382,383,384,163,164,165,385,386,166,167,168,169,170,171,172,389,390,173,174,391,392,393,394,395,175,396,397,398,399,400,401,402,176,177,178,179,180,60,403,404,405,406,407,408,181,409,410,411,412,413,414,182,183,184,185,186,187,23,188,189,190,191,192,193,415,416,417,418,419,24,194,420,421,422,423,424,47,425,426,427,428,429,195,196,197,430,198,431,432,433,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,434,435,436,437,438,439,440,221,222,223,224,441,442,443,444,445,446,447,448,449,225,226,227,450,451,228,452,229,230,231,453,232,233,234,235,236,237,238,239,25,26,27,45,28,455,51,456,457,458,459,460,461,462,463,464,29,30,240,241,31,242,243,465,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,466,469,470,471,472,473,279,280,281,282,283,284,285,286,287,288,289,474,46,290,475,291,292,293,294,295,296,476,32,33,34,35,36,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,52,297,492,493,494,495,496,53,497,498,499,500,501,502,298,299,300,301,302,303,304,37,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,38,39,40,41,42,321,503,322,323,324,325,504,326,327],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[506,507,508,509,465,304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:299","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[75,82,90,126,128,129,130,131,135,136,138,140,144,145,148,511,506,512,513,514,515,516,517,507,518,519,6,163,165,186,23,188,189,190,191,508,520,509,521,522,523,505,219,220,234,242,243,465,244,247,248,249,273,274,275,292,295,296,476,301,302,304,37,305,306,307,308],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[7,7,8,8,68,69,72,2,4,335,336,337,339,342,343,344,76,345,346,77,347,348,349,350,351,352,353,354,355,78,356,357,358,359,360,79,361,362,370,152,372,374,153,375,154,155,50,377,156,379,157,6,159,160,161,380,162,382,383,384,163,164,165,385,386,166,167,168,169,171,172,389,390,180,60,182,183,184,421,422,423,424,47,425,427,428,429,195,196,197,198,433,441,442,443,444,445,446,447,448,449,225,226,227,450,45,466,471,474,46,290,475],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[9,82,18,95],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":83,"org.easymock.tests2.UsageTest.argumentsOrdered":136,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":242,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":149,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":487,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":131,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":71,"org.easymock.tests2.DelegateToTest.testReturnException":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":311,"org.easymock.tests.MockingTest.testPartialClassMocking":196,"org.easymock.tests.MockClassControlTest.testToString":443,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":402,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":494,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":77,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":250,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":55,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":85,"org.easymock.tests2.UsageTest.wrongArguments":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":29,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":401,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":417,"org.easymock.samples.ExampleTest.answerVsDelegate":62,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":471,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":432,"org.easymock.tests2.UsageConstraintsTest.testNull":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":159,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":448,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":148,"org.easymock.tests2.CaptureTest.testPrimitive":105,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":31,"org.easymock.tests.UsageTest.moreThanOneArgument":243,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":269,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":40,"org.easymock.tests.UsageTest.argumentsOrdered":248,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":316,"org.easymock.tests.UsageVarargTest.varargIntAccepted":231,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":52,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":32,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":59,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":370,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":413,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":337,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":36,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":514,"org.easymock.tests.ReplayStateInvalidUsageTest.times":461,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":510,"org.easymock.tests2.DependencyTest.testClassMocking":389,"org.easymock.tests2.AnswerTest.answer":96,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":492,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":368,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":468,"org.easymock.tests2.CaptureTest.testAnd":102,"org.easymock.tests2.UsageTest.strictResetToDefault":127,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":384,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":223,"org.easymock.tests2.DelegateToTest.testDelegate":125,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":265,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":43,"org.easymock.tests.LimitationsTest.mockFinalMethod":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":502,"org.easymock.tests2.DependencyTest.testClassMockingSupport":390,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":219,"org.easymock.tests2.CaptureTest.testCapture1_2446744":106,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":263,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":366,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":51,"org.easymock.tests.UsageThrowableTest.throwError":282,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":470,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":454,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":414,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":362,"org.easymock.samples.PartialClassMockTest.testGetArea":72,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":456,"org.easymock.tests.MockingTest.testInterfaceMocking":430,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":33,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":277,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":440,"org.easymock.tests2.UsageTest.niceToStrict":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":329,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":153,"org.easymock.tests2.MockBuilderTest.testCreateMock":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":398,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":259,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":144,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":467,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":300,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":415,"org.easymock.tests.UsageOverloadedMethodTest.overloading":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":360,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":16,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":210,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":270,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":48,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":89,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":111,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":453,"org.easymock.tests.MockClassControlTest.testEquals":447,"org.easymock.tests2.EasyMockSupportClassTest.testAll":76,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":226,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":516,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":500,"org.easymock.tests2.CaptureTest.testCaptureAll":103,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":367,"org.easymock.tests.MockNameTest.defaultName":419,"org.easymock.tests2.UsageConstraintsTest.testMatches":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":41,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":28,"org.easymock.samples.ExampleTest.voteForRemovals":66,"org.easymock.tests.UsageVarargTest.allKinds":239,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":501,"org.easymock.samples.BasicClassMockTest.testPrintContent":69,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":288,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":186,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":410,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":315,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":426,"org.easymock.tests2.UsageConstraintsTest.greaterThan":18,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":222,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":165,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":427,"org.easymock.samples.ExampleTest.voteForRemoval":63,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":385,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":116,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":472,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":338,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":380,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":126,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":45,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":484,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":141,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":310,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":120,"org.easymock.tests2.CaptureTest.testCaptureFirst":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":483,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":142,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":138,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":476,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":206,"org.easymock.tests2.UsageTest.moreThanOneArgument":128,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":118,"org.easymock.tests2.CaptureTest.testCapture2_2446744":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":493,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":156,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":238,"org.easymock.tests.GenericTest.testBridgedEquals":450,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":326,"org.easymock.tests.UsageExpectAndReturnTest.longType":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":498,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":268,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":27,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":94,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":266,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":38,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":280,"org.easymock.tests.UsageCallCountTest.tooManyCalls":327,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":520,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":400,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":287,"org.easymock.tests.MockingTest.testNiceClassMocking":433,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":167,"org.easymock.tests.MockingTest.testClassMocking":429,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":44,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":503,"org.easymock.tests2.UsageConstraintsTest.testContains":15,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":184,"org.easymock.tests2.UsageConstraintsTest.testFind":11,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":272,"org.easymock.tests.MockTypeTest.fromEasyMockClass":469,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":81,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":302,"org.easymock.tests.UsageExpectAndReturnTest.object":209,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":56,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":233,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":438,"org.easymock.tests.UsageTest.exactCallCountByLastCall":249,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":317,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":523,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":215,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":229,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":293,"org.easymock.tests.MockClassControlTest.testHashCode":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":405,"org.easymock.tests2.EasyMockSupportTest.testVerify":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":353,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":513,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":318,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":299,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":365,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":369,"org.easymock.tests.UsageVarargTest.varargCharAccepted":232,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":420,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":497,"org.easymock.tests2.UsageTest.openCallCountByLastCall":132,"org.easymock.tests.DefaultClassInstantiatorTest.object":421,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":150,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":298,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":436,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":285,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":394,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":404,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":445,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":163,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":256,"org.easymock.tests.CapturesMatcherTest.test":328,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":279,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":515,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":79,"org.easymock.tests2.UsageTest.resumeIfFailure":137,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":466,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":313,"org.easymock.tests2.StubTest.stubWithReturnValue":193,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":54,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":208,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":297,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":507,"org.easymock.samples.SupportTest.voteForRemovals":74,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":449,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":262,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":53,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":97,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":452,"org.easymock.tests.UsageExpectAndThrowTest.object":260,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":92,"org.easymock.tests2.DelegateToTest.testWrongClass":123,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":25,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":26,"org.easymock.samples.ConstructorCalledMockTest.testTax":7,"org.easymock.tests.UsageStrictMockTest.range":306,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":340,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":166,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":261,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":154,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":463,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":416,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":508,"org.easymock.tests2.CaptureTest.testCaptureNone":110,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":278,"org.easymock.tests.UsageUnorderedTest.message":301,"org.easymock.tests.UsageVerifyTest.twoReturns":275,"org.easymock.tests.UsageVarargTest.varargByteAccepted":237,"org.easymock.tests2.ThreadingTest.testThreadSafe":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":356,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":325,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":439,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":68,"org.easymock.tests2.CaptureTest.testCapture_2617107":104,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":519,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":495,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":241,"org.easymock.tests2.UsageConstraintsTest.any":87,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":460,"org.easymock.tests2.StubTest.stub":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":496,"org.easymock.tests.UsageExpectAndThrowTest.longType":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":312,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":47,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":459,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":188,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":181,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":290,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":218,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":227,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":393,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":191,"org.easymock.tests2.NameTest.nameForMocksControl":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":395,"org.easymock.tests2.MockedExceptionTest.testMockedException":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":346,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":246,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":198,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":254,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":363,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":157,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":155,"org.easymock.tests.MockingTest.testNicePartialClassMocking":197,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":161,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":391,"org.easymock.tests2.CaptureTest.testCaptureLast":109,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":220,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":172,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":84,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":93,"org.easymock.tests.MockingTest.testTwoMocks":195,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":258,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":135,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":21,"org.easymock.samples.ExampleTest.removeNonExistingDocument":334,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":457,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":397,"org.easymock.tests.UsageStrictMockTest.differentMethods":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":406,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":423,"org.easymock.tests2.ConstraintsToStringTest.andToString":517,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":117,"org.easymock.tests2.MockBuilderTest.testCreateMockString":379,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":441,"org.easymock.tests.UsageExpectAndThrowTest.floatType":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":403,"org.easymock.tests.UsageVerifyTest.twoThrows":274,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":78,"org.easymock.samples.ExampleTest.voteAgainstRemoval":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":488,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":276,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":164,"org.easymock.tests.LimitationsTest.privateConstructor":46,"org.easymock.tests2.UsageConstraintsTest.testNotNull":20,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":289,"org.easymock.tests2.UsageTest.defaultResetToNice":134,"org.easymock.samples.ExampleTest.voteAgainstRemovals":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":489,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":392,"org.easymock.tests.UsageVarargTest.differentLength":234,"org.easymock.tests2.CallbackTest.callback":75,"org.easymock.tests2.UsageConstraintsTest.equals":364,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":521,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":382,"org.easymock.tests.UsageTest.openCallCountByLastCall":245,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":240,"org.easymock.tests.UsageCallCountTest.tooFewCalls":323,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":169,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":418,"org.easymock.tests.UsageThrowableTest.throwCheckedException":286,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":509,"org.easymock.tests.MockingTest.testStrictClassMocking":428,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":171,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":396,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":168,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":462,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":170,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":101,"org.easymock.tests.ObjectMethodsTest.testHashCode":437,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":58,"org.easymock.tests2.NameTest.nameForNiceMock":178,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":119,"org.easymock.tests2.DependencyTest.testInterfaceMocking":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":57,"org.easymock.samples.ExampleTest.addDocument":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":357,"org.easymock.tests2.DelegateToTest.testStubDelegate":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.AnswerTest.stubAnswer":100,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":37,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":376,"org.easymock.tests.UsageVarargTest.varargLongAccepted":236,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":486,"org.easymock.tests.UsageExpectAndReturnTest.floatType":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":180,"org.easymock.tests2.ConstraintsToStringTest.orToString":511,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":8,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":412,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":19,"org.easymock.tests.UsageThrowableTest.noUpperLimit":283,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":295,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":10,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":335,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":107,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":49,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":422,"org.easymock.tests2.UsageConstraintsTest.testSame":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":200,"org.easymock.samples.SupportTest.addDocument":73,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":387,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":348,"org.easymock.tests.GenericTest.testPackageScope":225,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":481,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":411,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":431,"org.easymock.tests2.NameTest.nameForMock":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":211,"org.easymock.tests2.UsageStrictMockTest.differentMethods":190,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":378,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":383,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":264,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":224,"org.easymock.tests2.MockedExceptionTest.testRealException":185,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":491,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":341,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":522,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":490,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":464,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":30,"org.easymock.tests2.NameTest.nameForStrictMock":177,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":374,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":331,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":160,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":339,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":424,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":152,"org.easymock.tests2.UsageStrictMockTest.range":189,"org.easymock.tests2.UsageConstraintsTest.lessThan":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":485,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":332,"org.easymock.tests2.CaptureTest.testCaptureRightOne":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":352,"org.easymock.tests2.UsageConstraintsTest.testOr":14,"org.easymock.tests.UsageRangeTest.combination":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":6,"org.easymock.tests.UsageTest.wrongArguments":244,"org.easymock.tests2.MockBuilderTest.testWithConstructor":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":349,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":478,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":212,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":425,"org.easymock.tests.UsageVarargTest.varargShortAccepted":235,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":504,"org.easymock.tests2.UsageConstraintsTest.cmpTo":88,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":98,"org.easymock.tests2.CompareToTest.testLessThan":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":480,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":133,"org.easymock.tests2.CaptureTest.testCaptureFromStub":22,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":455,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":372,"org.easymock.tests.UsageTest.unexpectedCallWithArray":465,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":304,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":213,"org.easymock.tests2.UsageConstraintsTest.constraints":82,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":305,"org.easymock.samples.ExampleTest.addAndChangeDocument":67,"org.easymock.tests2.ConstraintsToStringTest.notToString":512,"org.easymock.tests.UsageStrictMockTest.testVerify":309,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":70,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":499,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":34,"org.easymock.tests.LimitationsTest.abstractClass":474,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":35,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":145,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":230}}]
