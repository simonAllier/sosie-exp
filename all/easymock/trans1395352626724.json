[{"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[1,2],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[6,7],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.AT_LEAST_ONCE"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[31,32,33,34,35,20,36,37,38,39,40,41,42,21,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,28,68,69,70,71,72,73,74,75],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[76],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[77,78,79,80,81,82,83],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,14,84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[11,85],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[86],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[87,88,89,90,91,92,93,94,95,8,9,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,10,11,0,12,113,13,14,85,114,84,115,116,15,76,117,16,118,119,17,120,121,122,123,124,125,18,126,77,78,79,80,81,82,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,31,32,33,34,154,155,156,157,158,159,160,161,162,35,163,164,165,166,167,19,20,168,169,170,171,172,173,174,175,176,177,178,179,180,181,36,182,183,184,185,186,187,188,189,190,191,192,193,83,194,194,195,195,196,197,198,199,200,201,202,203,204,205,206,207,37,38,39,40,41,42,208,209,21,210,211,212,213,214,215,23,24,216,217,218,219,220,221,25,222,223,224,225,226,227,228,229,230,231,232,233,43,234,235,236,237,238,239,240,44,45,241,26,46,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,7,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,276,277,278,27,28,279,280,281,282,283,284,285,286,287,288,289,290,68,29,69,70,71,72,73,74,291,75,292,293,294,30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","type":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[97,312,313,314,315,316,105,317,318,106,319,320,321,322,323,324,325,326,327,107,328,329,330,331,332,108,333,334,335,336,77,337,338,78,339,79,80,340,341,81,342,82,31,32,33,343,344,173,345,174,175,176,177,179,180,182,183,185,186,187,346,188,347,348,4,189,190,191,349,5,83,194,194,195,195,350,351,220,352,353,354,355,356,357,358,359,360,231,361,362,363,1,253,364,254,2,365,366,367,368,292,293,294,369,370,371,372,373,374,375,376,377],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[87,90,91,92,93,378,94,95,8,9,96,97,98,312,99,100,101,102,103,104,105,106,107,108,109,379,110,111,112,10,11,0,12,113,13,14,85,114,115,116,15,76,117,16,118,119,17,120,121,122,123,124,125,18,126,335,77,78,339,79,80,341,81,82,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,380,31,32,33,34,155,156,157,159,160,161,162,381,35,163,164,165,166,167,19,20,168,169,170,171,172,173,174,175,176,177,178,179,180,181,36,182,183,184,185,186,187,346,188,4,189,190,191,192,193,83,382,194,195,383,196,384,197,198,199,200,385,201,202,350,351,203,204,205,206,207,37,38,39,40,41,42,208,209,21,212,386,213,214,215,23,24,216,217,218,219,387,220,25,223,224,231,232,233,43,388,239,240,44,45,241,26,46,242,243,244,245,246,247,248,249,250,251,252,253,364,389,390,391,392,393,394,395,396,397,398,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,7,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,276,277,278,27,28,279,280,281,289,290,68,29,69,70,71,72,73,74,291,75,292,293,294,30,399,400,401,402,403,404],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[190],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":170,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":152,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":167,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":382,"org.easymock.tests2.DelegateToTest.testReturnException":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":38,"org.easymock.tests.MockingTest.testPartialClassMocking":292,"org.easymock.tests.MockClassControlTest.testToString":372,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":322,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":47,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":193,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":114,"org.easymock.tests2.UsageTest.wrongArguments":165,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":239,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":219,"org.easymock.samples.ExampleTest.answerVsDelegate":198,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":363,"org.easymock.tests2.UsageConstraintsTest.testNull":113,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":185,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":151,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":377,"org.easymock.tests2.CaptureTest.testPrimitive":130,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":66,"org.easymock.tests.UsageTest.moreThanOneArgument":276,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":245,"org.easymock.tests.UsageTest.argumentsOrdered":280,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":282,"org.easymock.tests.UsageVarargTest.varargIntAccepted":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":203,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":335,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":310,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":207,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests2.AnswerTest.answer":87,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":381,"org.easymock.tests2.CaptureTest.testAnd":127,"org.easymock.tests2.UsageTest.strictResetToDefault":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":146,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":223,"org.easymock.tests2.DelegateToTest.testDelegate":159,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":62,"org.easymock.tests.LimitationsTest.mockFinalMethod":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":252,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":287,"org.easymock.tests2.CaptureTest.testCapture1_2446744":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":60,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":161,"org.easymock.tests.UsageThrowableTest.throwError":68,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":311,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":334,"org.easymock.samples.PartialClassMockTest.testGetArea":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":204,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":237,"org.easymock.tests2.UsageTest.niceToStrict":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":323,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":365,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":78,"org.easymock.tests2.MockBuilderTest.testCreateMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":330,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":56,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":147,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":217,"org.easymock.tests.UsageOverloadedMethodTest.overloading":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":332,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":117,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":43,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":267,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":76,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":136,"org.easymock.tests2.EasyMockSupportClassTest.testAll":105,"org.easymock.tests.MockClassControlTest.testEquals":376,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":364,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":64,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":162,"org.easymock.tests2.CaptureTest.testCaptureAll":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":250,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":295,"org.easymock.tests2.UsageConstraintsTest.testMatches":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":246,"org.easymock.samples.ExampleTest.voteForRemovals":201,"org.easymock.tests.UsageVarargTest.allKinds":255,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":251,"org.easymock.samples.BasicClassMockTest.testPrintContent":351,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":73,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":93,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":42,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":307,"org.easymock.tests2.UsageConstraintsTest.greaterThan":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":317,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":222,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":191,"org.easymock.samples.ExampleTest.voteForRemoval":199,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":358,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":101,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":349,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":346,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":220,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":144,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":37,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":154,"org.easymock.tests2.CaptureTest.testCaptureFirst":140,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":145,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":263,"org.easymock.tests2.UsageTest.moreThanOneArgument":164,"org.easymock.tests2.CaptureTest.testCapture2_2446744":139,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":103,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":81,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":398,"org.easymock.tests.GenericTest.testBridgedEquals":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":403,"org.easymock.tests.UsageExpectAndReturnTest.longType":259,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":65,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":342,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":123,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":221,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":63,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":243,"org.easymock.tests.UsageCallCountTest.tooManyCalls":404,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":302,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":72,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":175,"org.easymock.tests.MockingTest.testNiceClassMocking":369,"org.easymock.tests.MockingTest.testClassMocking":367,"org.easymock.tests2.UsageConstraintsTest.testContains":15,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":336,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":33,"org.easymock.tests2.UsageConstraintsTest.testFind":12,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":21,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":110,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":212,"org.easymock.tests.UsageExpectAndReturnTest.object":266,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":150,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":393,"org.easymock.tests.UsageTest.exactCallCountByLastCall":281,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":291,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":283,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":345,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":389,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":272,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":304,"org.easymock.tests.MockClassControlTest.testHashCode":375,"org.easymock.tests2.EasyMockSupportTest.testVerify":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":325,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":226,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":232,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":160,"org.easymock.tests.UsageVarargTest.varargCharAccepted":392,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":378,"org.easymock.tests2.UsageTest.openCallCountByLastCall":19,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":153,"org.easymock.tests.DefaultClassInstantiatorTest.object":352,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":326,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":70,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":189,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":374,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":53,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":273,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":108,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":373,"org.easymock.tests2.UsageTest.resumeIfFailure":171,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":40,"org.easymock.tests2.StubTest.stubWithReturnValue":36,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":124,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":265,"org.easymock.tests2.SerializationTest.testAllMockedMethod":312,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":210,"org.easymock.samples.SupportTest.voteForRemovals":196,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":59,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":211,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":88,"org.easymock.tests.UsageExpectAndThrowTest.object":57,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":121,"org.easymock.tests2.DelegateToTest.testWrongClass":157,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":289,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":290,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.samples.ConstructorCalledMockTest.testTax":194,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":149,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":174,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":79,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":218,"org.easymock.tests2.CaptureTest.testCaptureNone":135,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":238,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests.UsageVerifyTest.twoReturns":242,"org.easymock.tests.UsageVarargTest.varargByteAccepted":397,"org.easymock.tests2.ThreadingTest.testThreadSafe":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":328,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":401,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":350,"org.easymock.tests2.CaptureTest.testCapture_2617107":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":45,"org.easymock.tests2.UsageConstraintsTest.any":115,"org.easymock.tests2.StubTest.stub":181,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":39,"org.easymock.tests.UsageExpectAndThrowTest.longType":50,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":356,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":95,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests2.SerializationTest.testClass":97,"org.easymock.tests.LimitationsTest.mockNativeMethod":231,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":254,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":275,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":297,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":96,"org.easymock.tests2.MockedExceptionTest.testMockedException":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":318,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":28,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":51,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":294,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":379,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":182,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":80,"org.easymock.tests.MockingTest.testNicePartialClassMocking":293,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":187,"org.easymock.tests2.CompareToTest.testNotComparable":86,"org.easymock.tests2.CaptureTest.testCaptureLast":134,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":288,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":180,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":85,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":122,"org.easymock.tests.MockingTest.testTwoMocks":368,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":55,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":169,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":18,"org.easymock.tests.UsageStrictMockTest.differentMethods":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":299,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":305,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":354,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":102,"org.easymock.tests2.MockBuilderTest.testCreateMockString":82,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":370,"org.easymock.tests.UsageExpectAndThrowTest.floatType":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":319,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":316,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":90,"org.easymock.tests.UsageVerifyTest.twoThrows":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":107,"org.easymock.samples.ExampleTest.voteAgainstRemoval":200,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":236,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":190,"org.easymock.tests.LimitationsTest.privateConstructor":360,"org.easymock.tests2.UsageConstraintsTest.testNotNull":125,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":74,"org.easymock.tests2.UsageTest.defaultResetToNice":168,"org.easymock.samples.ExampleTest.voteAgainstRemovals":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":271,"org.easymock.tests.UsageVarargTest.differentLength":394,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":296,"org.easymock.tests2.CallbackTest.callback":111,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":347,"org.easymock.tests.UsageTest.openCallCountByLastCall":27,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":112,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":44,"org.easymock.tests.UsageCallCountTest.tooFewCalls":399,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":387,"org.easymock.tests.UsageThrowableTest.throwCheckedException":71,"org.easymock.tests.MockingTest.testStrictClassMocking":366,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":179,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":75,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":178,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":92,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":104,"org.easymock.tests2.NameTest.nameForNiceMock":3,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.samples.ExampleTest.addDocument":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":329,"org.easymock.tests2.DelegateToTest.testStubDelegate":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.AnswerTest.stubAnswer":91,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":214,"org.easymock.tests.UsageVarargTest.varargLongAccepted":396,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests.UsageExpectAndReturnTest.floatType":258,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":274,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":173,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":195,"org.easymock.tests.UsageThrowableTest.noUpperLimit":29,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":17,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":309,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":10,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":343,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":132,"org.easymock.tests2.SerializationTest.test":98,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":353,"org.easymock.tests2.UsageConstraintsTest.testSame":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":257,"org.easymock.samples.SupportTest.addDocument":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":320,"org.easymock.tests.GenericTest.testPackageScope":253,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":285,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":268,"org.easymock.tests2.UsageStrictMockTest.differentMethods":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":348,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":260,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":61,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":224,"org.easymock.tests2.MockedExceptionTest.testRealException":34,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":240,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":338,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":109,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":186,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":344,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":120,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":355,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":77,"org.easymock.tests2.UsageStrictMockTest.range":8,"org.easymock.tests2.UsageConstraintsTest.lessThan":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":306,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":143,"org.easymock.tests2.CaptureTest.testCaptureRightOne":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":324,"org.easymock.tests2.UsageConstraintsTest.testOr":14,"org.easymock.tests.UsageRangeTest.combination":25,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":183,"org.easymock.tests.UsageTest.wrongArguments":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":321,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":371,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":22,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":269,"org.easymock.tests.UsageVarargTest.varargShortAccepted":395,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":357,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":402,"org.easymock.tests2.UsageConstraintsTest.cmpTo":116,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":89,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":20,"org.easymock.tests2.CaptureTest.testCaptureFromStub":138,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":337,"org.easymock.tests.UsageTest.unexpectedCallWithArray":277,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":213,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":400,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":270,"org.easymock.tests2.UsageConstraintsTest.constraints":11,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":215,"org.easymock.samples.ExampleTest.addAndChangeDocument":202,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":384,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":386,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":249,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":205,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":262,"org.easymock.tests.LimitationsTest.abstractClass":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":206,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":148}}]
