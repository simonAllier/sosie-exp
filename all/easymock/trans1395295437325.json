[{"position":"org.easymock.internal.LastControl:70","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,12,13,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[148],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[149,150,151],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[12,13,152,153,154,155,156],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[46,157,158,159,160,161,162,163,164,55,165,166,167,168,169],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[170,171,172],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[173,174,175,176,177,178,179,180,181,182,183,184,185],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[186,187,188],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0,1,3,4,6,10,43,45,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,47,213,214,215,216,217,218,219,49,50,53,220,159,221,222,223,224,225,226,56,165,227,228,229,230,231,232,233,57,58,59,60,61,63,64,234,235,236,237,238,239,240,65,241,242,243,66,67,69,70,73,74,75,76,78,79,244,245,246,247,80,248,249,250,251,252,253,173,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,148,282,283,284,285,286,287,288,81,169,289,82,83,290,291,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[46,292,293,294,295,296,297,157,220,158,159,222,160,161,162,163,298,299,226,164,55,56,165,227,300,301,302,303,304,305,306,307,308,309,310,311,312,282,166,167,168,81,169,289,101],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[175,176,177,179,313,181,185],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:196","sourceCode":"java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[0,12,12,13,13,14,15,314,43,44,45,315,316,317,186,187,318,319,170,188,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,228,229,230,335,336,337,234,338,235,236,238,239,240,339,65,152,340,341,241,242,243,342,343,344,345,346,248,347,348,249,349,350,351,352,353,354,355,356,357,250,358,359,360,361,362,251,363,364,365,366,252,173,367,268,269,270,271,273,274,368,153,276,369,370,371,277,372,278,181,279,182,373,280,156,374,375,376,377,378,379,380,184,185,381],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[382,65,96],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[101],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[340,286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[46,209,383,384,385,157,158,159,221,160,161,162,163,225,386,55,387,165,227,388,389,390,391,236,241,243,392,256,260,261,264,276,373,280,374,281,166,283,393,167,168,287,288,394,395,169,289,86,101],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[66,68,76,86,87,89,91,92,94,104,109],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[46,157,158,159,160,161,162,163,164,55,165,166,167,168,169],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[87,88],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[292,294,160,55,303,310],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,396,396,43,44,46,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,212,47,48,316,397,398,399,400,401,402,403,404,405,213,406,214,215,216,217,218,219,49,50,51,52,53,220,158,159,221,222,160,161,223,224,162,163,225,407,408,409,410,54,411,412,413,414,164,386,415,55,56,387,165,227,416,228,229,230,417,418,419,420,388,389,390,231,232,233,421,422,423,424,425,57,58,59,60,61,426,427,428,429,430,391,431,432,433,434,62,63,64,234,235,236,237,238,239,240,339,65,341,241,242,243,66,67,68,69,70,71,72,73,74,75,76,77,78,79,244,245,246,247,80,248,249,250,251,392,365,366,252,435,436,437,253,438,173,254,367,255,256,257,258,259,260,261,262,263,264,265,266,439,267,268,269,270,271,272,273,274,440,275,441,442,368,276,277,372,278,279,373,280,374,281,148,282,166,283,393,284,285,286,167,168,287,288,394,443,81,395,169,289,444,445,446,447,448,82,83,449,290,291,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,184],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[450],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[451],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[292,294,160,55,303,310],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[1,2,3,4,5,6,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,43,44,315,46,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,212,47,48,452,453,316,328,329,213,406,214,215,216,217,218,219,49,50,51,52,53,220,158,159,221,222,223,224,162,225,407,408,409,410,54,411,412,413,414,415,56,387,165,227,416,417,418,419,420,389,390,231,232,233,421,422,423,424,425,454,455,57,58,59,60,61,426,427,428,429,430,431,432,433,434,62,63,64,234,235,236,237,238,239,240,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,244,245,246,247,80,248,392,365,366,252,435,436,437,253,438,254,367,255,256,257,258,259,260,261,263,264,265,266,439,267,268,271,272,440,275,441,442,281,148,282,283,393,284,285,167,287,288,443,81,395,169,289,444,82,83,449,290,291,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injection:74","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"matched":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[173,175,176,177,178,180,181,182,184,185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[456],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[304],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[46,457],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,1,3,4,5,6,8,9,10,11,14,15,16,19,20,22,27,32,43,44,46,191,192,194,199,204,209,316,213,406,215,216,217,218,219,49,50,51,52,158,161,162,163,412,413,414,226,415,55,387,165,227,416,228,229,230,418,419,420,389,390,231,232,426,427,428,429,430,431,432,433,434,62,234,300,301,235,236,237,238,239,240,65,242,66,67,68,69,71,72,73,74,75,76,79,247,80,248,249,250,251,392,252,437,173,254,367,255,256,257,258,259,260,261,263,264,265,266,439,267,268,269,270,271,272,273,274,440,441,442,277,278,279,148,166,283,393,167,168,443,395,169,289,444,82,83,291,87,92,93,95,96,98,101,104,105,106,107,108,184],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"position":"org.easymock.internal.RecordState:85","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,12,13,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,43,44,46,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,47,48,316,186,397,398,399,400,401,402,403,404,405,322,323,324,325,326,327,328,329,213,406,214,215,216,217,218,219,49,50,51,52,53,220,158,159,221,222,160,161,223,224,162,163,225,407,408,409,410,54,411,412,413,414,226,164,386,415,55,56,387,165,227,416,458,228,229,230,459,460,417,418,419,420,388,389,390,231,232,233,421,422,423,424,425,461,462,455,115,116,117,118,119,463,120,121,122,123,124,125,57,58,59,60,61,426,427,428,429,430,391,431,432,433,434,62,63,64,234,235,236,237,238,239,240,339,65,341,241,242,243,66,67,68,69,70,71,72,73,74,75,76,77,78,79,244,245,246,247,80,248,249,250,251,392,365,366,252,435,436,437,253,438,173,254,367,255,256,257,258,259,260,261,262,263,264,265,266,439,267,268,269,270,271,272,273,274,464,465,466,467,440,275,441,442,368,276,277,372,278,279,373,280,374,281,148,282,166,283,393,284,285,286,167,168,287,288,394,443,81,395,169,289,444,445,446,447,448,82,83,449,290,291,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,184],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[468,173,254,367],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[469,470,275],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[209,220,223,224,227,471,233,284,285,289,85,86,88,90,91,97,100,103,110],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[472,473,474,475],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":87,"org.easymock.tests2.UsageTest.argumentsOrdered":168,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":221,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":469,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":393,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":16,"org.easymock.tests2.DelegateToTest.testReturnException":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":408,"org.easymock.tests.MockingTest.testPartialClassMocking":228,"org.easymock.tests.MockClassControlTest.testToString":324,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":17,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":249,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":83,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":175,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":93,"org.easymock.tests2.UsageTest.wrongArguments":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":49,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":399,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":331,"org.easymock.tests2.UsageConstraintsTest.testNull":89,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":238,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":264,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":329,"org.easymock.tests2.CaptureTest.testPrimitive":69,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":36,"org.easymock.tests.UsageTest.moreThanOneArgument":222,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":423,"org.easymock.tests.UsageTest.argumentsOrdered":163,"org.easymock.tests.UsageVarargTest.varargIntAccepted":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":451,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":313,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":368,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":377,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":61,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":131,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":306,"org.easymock.tests.ReplayStateInvalidUsageTest.times":122,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":267,"org.easymock.tests2.DependencyTest.testClassMocking":379,"org.easymock.tests2.AnswerTest.answer":436,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":448,"org.easymock.tests2.CaptureTest.testAnd":66,"org.easymock.tests2.UsageTest.strictResetToDefault":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":341,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":259,"org.easymock.tests2.DelegateToTest.testDelegate":442,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":32,"org.easymock.tests.LimitationsTest.mockFinalMethod":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":405,"org.easymock.tests2.DependencyTest.testClassMockingSupport":380,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":300,"org.easymock.tests2.CaptureTest.testCapture1_2446744":70,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":446,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":117,"org.easymock.tests.UsageThrowableTest.throwError":213,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":364,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":134,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":18,"org.easymock.tests2.UsageTest.niceToStrict":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":353,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":277,"org.easymock.tests2.MockBuilderTest.testCreateMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":26,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":303,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":475,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":459,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":397,"org.easymock.tests.UsageOverloadedMethodTest.overloading":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":362,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":414,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":200,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":231,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":171,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":98,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":75,"org.easymock.tests2.EasyMockSupportClassTest.testAll":248,"org.easymock.tests.MockClassControlTest.testEquals":328,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":44,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":34,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":447,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":403,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":155,"org.easymock.tests2.CaptureTest.testCaptureAll":67,"org.easymock.tests2.UsageConstraintsTest.testMatches":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":424,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":115,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests.UsageVarargTest.allKinds":62,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":404,"org.easymock.samples.BasicClassMockTest.testPrintContent":15,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":218,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":411,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":180,"org.easymock.tests2.UsageConstraintsTest.greaterThan":102,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":347,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":210,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":243,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":135,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":321,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":245,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":342,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":339,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":127,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":281,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":316,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":257,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":407,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":470,"org.easymock.tests2.CaptureTest.testCaptureFirst":79,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":258,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":288,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":196,"org.easymock.tests2.CaptureTest.testCapture2_2446744":78,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":247,"org.easymock.tests2.UsageTest.moreThanOneArgument":282,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":280,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":434,"org.easymock.tests.GenericTest.testBridgedEquals":315,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":389,"org.easymock.tests.UsageExpectAndReturnTest.longType":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":401,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":35,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":107,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":421,"org.easymock.tests.UsageCallCountTest.tooManyCalls":390,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":293,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":361,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":197,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":217,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":269,"org.easymock.tests.MockingTest.testNiceClassMocking":335,"org.easymock.tests.MockingTest.testClassMocking":333,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":460,"org.easymock.tests2.UsageConstraintsTest.testContains":97,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":252,"org.easymock.tests2.UsageConstraintsTest.testFind":88,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":233,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":386,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":114,"org.easymock.tests.UsageExpectAndReturnTest.object":199,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":263,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":430,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":176,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":455,"org.easymock.tests.UsageTest.exactCallCountByLastCall":225,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":47,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":452,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":40,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":297,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":185,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":426,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":205,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":413,"org.easymock.tests.MockClassControlTest.testHashCode":327,"org.easymock.tests2.EasyMockSupportTest.testVerify":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":355,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":305,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":453,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":474,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":412,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":445,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":385,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":112,"org.easymock.tests.UsageVarargTest.varargCharAccepted":429,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":317,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":443,"org.easymock.tests2.UsageTest.openCallCountByLastCall":284,"org.easymock.tests.DefaultClassInstantiatorTest.object":186,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":473,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":461,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":157,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":215,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":133,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":241,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":326,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":23,"org.easymock.tests.CapturesMatcherTest.test":396,"org.easymock.tests.ReplayStateInvalidCallsTest.times":139,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":206,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":251,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":307,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":325,"org.easymock.tests2.UsageTest.resumeIfFailure":287,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":410,"org.easymock.tests2.StubTest.stubWithReturnValue":290,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":181,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":198,"org.easymock.tests2.SerializationTest.testAllMockedMethod":367,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":456,"org.easymock.samples.SupportTest.voteForRemovals":10,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":310,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":29,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":468,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":42,"org.easymock.tests.UsageExpectAndThrowTest.object":27,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":105,"org.easymock.tests2.DelegateToTest.testWrongClass":441,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":137,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":63,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":64,"org.easymock.tests.UsageStrictMockTest.range":165,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":262,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":268,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":28,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":278,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":162,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":398,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":292,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":129,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":39,"org.easymock.tests2.CaptureTest.testCaptureNone":74,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":150,"org.easymock.tests.UsageUnorderedTest.message":46,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":383,"org.easymock.tests.UsageVerifyTest.twoReturns":159,"org.easymock.tests.UsageVarargTest.varargByteAccepted":433,"org.easymock.tests2.ThreadingTest.testThreadSafe":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":358,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":420,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":14,"org.easymock.tests2.CaptureTest.testCapture_2617107":68,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":52,"org.easymock.tests2.UsageConstraintsTest.any":95,"org.easymock.tests2.StubTest.stub":449,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":409,"org.easymock.tests.UsageExpectAndThrowTest.longType":20,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":170,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":120,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":395,"org.easymock.tests2.SerializationTest.testClass":173,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":291,"org.easymock.tests.LimitationsTest.mockNativeMethod":234,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":208,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":145,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":444,"org.easymock.tests2.NameTest.nameForMocksControl":467,"org.easymock.tests2.MockedExceptionTest.testMockedException":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":348,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":21,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":230,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":235,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":279,"org.easymock.tests.MockingTest.testNicePartialClassMocking":229,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":174,"org.easymock.tests2.CaptureTest.testCaptureLast":73,"org.easymock.tests2.CompareToTest.testCompareEqual":382,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":301,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":144,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":92,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":274,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":106,"org.easymock.tests.MockingTest.testTwoMocks":334,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":25,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":167,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":110,"org.easymock.samples.ExampleTest.removeNonExistingDocument":7,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":119,"org.easymock.tests.UsageStrictMockTest.differentMethods":227,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":151,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":318,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":246,"org.easymock.tests2.ConstraintsToStringTest.andToString":309,"org.easymock.tests2.MockBuilderTest.testCreateMockString":374,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":322,"org.easymock.tests.UsageExpectAndThrowTest.floatType":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":349,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":346,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":437,"org.easymock.tests.UsageVerifyTest.twoThrows":158,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":381,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":250,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":37,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":242,"org.easymock.tests.LimitationsTest.privateConstructor":337,"org.easymock.tests2.UsageConstraintsTest.testNotNull":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":219,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":365,"org.easymock.tests2.UsageTest.defaultResetToNice":286,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":204,"org.easymock.tests.UsageVarargTest.differentLength":391,"org.easymock.tests2.CallbackTest.callback":392,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":152,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":295,"org.easymock.tests.UsageTest.openCallCountByLastCall":223,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":51,"org.easymock.tests.UsageCallCountTest.tooFewCalls":418,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":271,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":400,"org.easymock.tests.UsageThrowableTest.throwCheckedException":216,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":294,"org.easymock.tests.MockingTest.testStrictClassMocking":332,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":48,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":273,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":270,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":272,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":438,"org.easymock.tests.ObjectMethodsTest.testHashCode":462,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":179,"org.easymock.tests2.NameTest.nameForNiceMock":466,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":143,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":80,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":138,"org.easymock.tests2.DependencyTest.testInterfaceMocking":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":177,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":359,"org.easymock.tests2.DelegateToTest.testStubDelegate":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":363,"org.easymock.tests2.AnswerTest.stubAnswer":253,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":56,"org.easymock.tests.UsageVarargTest.varargLongAccepted":432,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":416,"org.easymock.tests.UsageExpectAndReturnTest.floatType":191,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":207,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":184,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests2.ConstraintsToStringTest.orToString":302,"org.easymock.tests.UsageThrowableTest.noUpperLimit":406,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":103,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":299,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":85,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":375,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":71,"org.easymock.tests2.SerializationTest.test":254,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":172,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":187,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":190,"org.easymock.tests2.UsageConstraintsTest.testSame":90,"org.easymock.samples.SupportTest.addDocument":9,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":128,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":350,"org.easymock.tests.GenericTest.testPackageScope":43,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":126,"org.easymock.tests2.NameTest.nameForMock":464,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":201,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":156,"org.easymock.tests2.UsageStrictMockTest.differentMethods":289,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":340,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":193,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":31,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":212,"org.easymock.tests2.MockedExceptionTest.testRealException":435,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":183,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":81,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":50,"org.easymock.tests2.NameTest.nameForStrictMock":465,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":371,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":113,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":239,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":378,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":457,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":104,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":319,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":276,"org.easymock.tests2.UsageStrictMockTest.range":169,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":132,"org.easymock.tests2.UsageConstraintsTest.lessThan":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":178,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":256,"org.easymock.tests2.CaptureTest.testCaptureRightOne":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":354,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":149,"org.easymock.tests2.UsageConstraintsTest.testOr":91,"org.easymock.tests.UsageRangeTest.combination":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":236,"org.easymock.tests.UsageTest.wrongArguments":161,"org.easymock.tests2.MockBuilderTest.testWithConstructor":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":351,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":202,"org.easymock.tests.UsageVarargTest.varargShortAccepted":431,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":188,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":388,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":146,"org.easymock.tests2.UsageConstraintsTest.cmpTo":96,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":285,"org.easymock.tests2.CaptureTest.testCaptureFromStub":77,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":116,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":369,"org.easymock.tests.UsageTest.unexpectedCallWithArray":160,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":142,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":419,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":154,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":203,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":387,"org.easymock.tests2.UsageConstraintsTest.constraints":86,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests2.ConstraintsToStringTest.notToString":304,"org.easymock.tests.UsageStrictMockTest.testVerify":458,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":11,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":415,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":402,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":59,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":195,"org.easymock.tests.LimitationsTest.abstractClass":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":60,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":261}}]
