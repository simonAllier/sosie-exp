[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","name":"name","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:305","failures":[2,3,4],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[5,6,7,8,9,10,11,12,13,13,14,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,1,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,2,3,4,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[54],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[359],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[151,152,153,360],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[361,229,255],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:190","failures":[22,23,28,30,31,37,38,39,40,1,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,68,69,72,73,74,75,76,77,78,79,87,90,93,95,96,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,119,126,127,128,130,132,133,134,137,138,141,143,151,152,170,180,182,187,189,190,198,199,200,203,204,205,206,207,219,220,221,222,223,224,226,227,235,236,238,239,276,277,280,281,284,299,301,303,304,307,336,338,339,340,341,342,343,357],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[45,65,67,75],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[162,362],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[80,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[16,92,117,364,118,365,119,120,121,122,123,124,366,125,151,177,367,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[80,83,84,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[95,96,119,369,370,371],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[30,31,189,190,197,201,202,204,207,372,319,323,324,326,329,344,347,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[130],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[81,83,84],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:500","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:520","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[33,34,35,36,92,94,106,108,109,112,117,120,130,171,172,173,174,232,373,374,310,311,312,313,314],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":276,"org.easymock.tests2.UsageTest.argumentsOrdered":136,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":362,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":131,"org.easymock.tests2.StubTest.stubWithReturnValue":170,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":202,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":61,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":17,"org.easymock.tests2.SerializationTest.testAllMockedMethod":153,"org.easymock.tests2.DelegateToTest.testReturnException":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":214,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":4,"org.easymock.tests.MockingTest.testPartialClassMocking":231,"org.easymock.samples.SupportTest.voteForRemovals":19,"org.easymock.tests.MockClassControlTest.testToString":267,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":359,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":327,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":315,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":229,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":155,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":80,"org.easymock.tests.UsageExpectAndThrowTest.object":325,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":58,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":23,"org.easymock.tests2.DelegateToTest.testWrongClass":165,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":308,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":309,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":303,"org.easymock.tests2.UsageTest.wrongArguments":129,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests.UsageStrictMockTest.range":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":173,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":111,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":144,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":373,"org.easymock.tests2.UsageConstraintsTest.testNull":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":326,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":89,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":272,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":121,"org.easymock.tests2.CaptureTest.testPrimitive":68,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":334,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":282,"org.easymock.tests.UsageTest.moreThanOneArgument":277,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":263,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":180,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":236,"org.easymock.tests2.CaptureTest.testCaptureNone":73,"org.easymock.tests.UsageUnorderedTest.message":335,"org.easymock.tests.UsageVerifyTest.twoReturns":226,"org.easymock.tests.UsageVarargTest.varargByteAccepted":293,"org.easymock.tests2.ThreadingTest.testThreadSafe":99,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":344,"org.easymock.tests.UsageTest.argumentsOrdered":283,"org.easymock.tests.UsageVarargTest.varargIntAccepted":287,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":249,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":296,"org.easymock.tests2.CaptureTest.testCapture_2617107":67,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":117,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":306,"org.easymock.tests2.UsageConstraintsTest.any":48,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":120,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":260,"org.easymock.tests2.StubTest.stub":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":275,"org.easymock.tests.UsageExpectAndThrowTest.longType":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":215,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":259,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":29,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests2.SerializationTest.testClass":151,"org.easymock.tests.ReplayStateInvalidUsageTest.times":261,"org.easymock.tests.LimitationsTest.mockNativeMethod":243,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":212,"org.easymock.tests2.AnswerTest.answer":79,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":177,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":47,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":36,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":370,"org.easymock.tests2.CaptureTest.testAnd":65,"org.easymock.tests2.UsageTest.strictResetToDefault":127,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":94,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":32,"org.easymock.tests2.NameTest.nameForMocksControl":161,"org.easymock.tests2.MockedExceptionTest.testMockedException":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":108,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":281,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":348,"org.easymock.tests2.DelegateToTest.testDelegate":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":319,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":233,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":122,"org.easymock.tests.MockingTest.testNicePartialClassMocking":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":330,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":91,"org.easymock.tests2.CaptureTest.testCaptureLast":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":217,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":3,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":45,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":314,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":59,"org.easymock.tests.MockingTest.testTwoMocks":230,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":2,"org.easymock.tests2.CaptureTest.testCapture1_2446744":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":34,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":135,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":63,"org.easymock.tests.UsageThrowableTest.throwError":336,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":255,"org.easymock.samples.ExampleTest.removeNonExistingDocument":11,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":257,"org.easymock.tests.UsageStrictMockTest.differentMethods":190,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":101,"org.easymock.tests2.MockBuilderTest.testCreateMockString":125,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":265,"org.easymock.tests.UsageExpectAndThrowTest.floatType":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":182,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":54,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":82,"org.easymock.tests.UsageVerifyTest.twoThrows":225,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":156,"org.easymock.samples.PartialClassMockTest.testGetArea":16,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":297,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":235,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":234,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":316,"org.easymock.tests2.UsageTest.niceToStrict":130,"org.easymock.tests2.UsageConstraintsTest.testNotNull":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":343,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":139,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":119,"org.easymock.tests2.MockBuilderTest.testCreateMock":123,"org.easymock.tests2.UsageTest.defaultResetToNice":134,"org.easymock.samples.ExampleTest.voteAgainstRemovals":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":208,"org.easymock.tests.UsageVarargTest.differentLength":290,"org.easymock.tests2.CallbackTest.callback":168,"org.easymock.tests.UsageTest.openCallCountByLastCall":280,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":324,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":109,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":38,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":351,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":305,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":171,"org.easymock.tests.UsageCallCountTest.tooFewCalls":247,"org.easymock.tests.UsageOverloadedMethodTest.overloading":238,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":355,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":52,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":204,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":147,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":51,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":74,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":174,"org.easymock.tests.UsageThrowableTest.throwCheckedException":340,"org.easymock.tests.MockClassControlTest.testEquals":271,"org.easymock.tests2.EasyMockSupportClassTest.testAll":154,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":176,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":332,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":369,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":312,"org.easymock.tests2.CaptureTest.testCaptureAll":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":35,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":228,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":149,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":146,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":262,"org.easymock.tests2.UsageConstraintsTest.testMatches":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":148,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":84,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":181,"org.easymock.tests.ObjectMethodsTest.testHashCode":241,"org.easymock.samples.ExampleTest.voteForRemovals":10,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":103,"org.easymock.tests2.NameTest.nameForNiceMock":160,"org.easymock.tests.UsageVarargTest.allKinds":295,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":224,"org.easymock.tests2.DependencyTest.testInterfaceMocking":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":313,"org.easymock.samples.BasicClassMockTest.testPrintContent":21,"org.easymock.samples.ExampleTest.addDocument":9,"org.easymock.tests2.DelegateToTest.testStubDelegate":164,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":342,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":26,"org.easymock.tests2.AnswerTest.stubAnswer":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":218,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":166,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":187,"org.easymock.tests2.UsageConstraintsTest.greaterThan":55,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":220,"org.easymock.tests.UsageVarargTest.varargLongAccepted":292,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":97,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":191,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":100,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":211,"org.easymock.tests.UsageExpectAndReturnTest.floatType":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":92,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":98,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests.UsageThrowableTest.noUpperLimit":337,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":56,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":302,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":39,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":126,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":70,"org.easymock.tests2.SerializationTest.test":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":106,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":338,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":194,"org.easymock.tests2.UsageConstraintsTest.testSame":43,"org.easymock.samples.SupportTest.addDocument":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":213,"org.easymock.tests2.CaptureTest.testCaptureFirst":78,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":107,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":138,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":200,"org.easymock.tests.GenericTest.testPackageScope":175,"org.easymock.tests2.CaptureTest.testCapture2_2446744":77,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":102,"org.easymock.tests2.UsageTest.moreThanOneArgument":128,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":347,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":124,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":251,"org.easymock.tests2.NameTest.nameForMock":158,"org.easymock.tests.UsageExpectAndReturnTest.longType":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":310,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":104,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":366,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":205,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":301,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":60,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":331,"org.easymock.tests2.UsageStrictMockTest.differentMethods":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":178,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":197,"org.easymock.tests.UsageCallCountTest.tooManyCalls":252,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":329,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":222,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":246,"org.easymock.tests2.MockedExceptionTest.testRealException":142,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":320,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":341,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":304,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":264,"org.easymock.tests.MockingTest.testNiceClassMocking":374,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":145,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":364,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":245,"org.easymock.tests2.UsageConstraintsTest.testContains":50,"org.easymock.tests2.NameTest.nameForStrictMock":159,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":141,"org.easymock.tests2.UsageConstraintsTest.testFind":41,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":239,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":24,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":90,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":25,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":184,"org.easymock.tests.UsageExpectAndReturnTest.object":203,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":118,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests2.UsageConstraintsTest.lessThan":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":112,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":289,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":242,"org.easymock.tests.UsageTest.exactCallCountByLastCall":284,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":105,"org.easymock.tests2.CaptureTest.testCaptureRightOne":75,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":345,"org.easymock.tests2.UsageConstraintsTest.testOr":44,"org.easymock.tests.UsageRangeTest.combination":219,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":285,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":87,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":354,"org.easymock.tests.UsageTest.wrongArguments":279,"org.easymock.tests.MockClassControlTest.testHashCode":270,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":198,"org.easymock.tests2.EasyMockSupportTest.testVerify":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":206,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":346,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":352,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":350,"org.easymock.tests.UsageVarargTest.varargShortAccepted":291,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":33,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":85,"org.easymock.tests2.UsageConstraintsTest.cmpTo":49,"org.easymock.tests.UsageVarargTest.varargCharAccepted":288,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":81,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":27,"org.easymock.tests2.UsageTest.openCallCountByLastCall":132,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":133,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":115,"org.easymock.tests.DefaultClassInstantiatorTest.object":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":349,"org.easymock.tests2.CaptureTest.testCaptureFromStub":76,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":254,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":365,"org.easymock.tests.UsageTest.unexpectedCallWithArray":278,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":240,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":322,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":371,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":339,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":186,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":248,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":207,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":269,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":95,"org.easymock.tests2.UsageConstraintsTest.constraints":40,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":188,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":321,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":210,"org.easymock.tests.UsageStrictMockTest.testVerify":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":273,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":15,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":157,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":311,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":71,"org.easymock.tests2.UsageTest.resumeIfFailure":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":298,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":199,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":299,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":110}}]
