[{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:95","sourceCode":"int = java.lang.Integer.int","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,35,36,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[79,80,81,82,83,84,85],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[55,71],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[86],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[87,88,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[90],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Find:41","failures":[91],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[92,77,93,78],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[94],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[79,80,81,82,83,84,85],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[95,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[97],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,72,73,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,14,15,145,16,86,17,18,146,147,148,149,150,19,151,152,20,153,154,21,155,156,157,158,159,160,22,161,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[127,129,137,146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[162,163,164,165,166,167],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[145],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[168,169,127,128,129,130,131,132,133,134,135,136,170,137,138,139,140],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[116,171],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[155],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[172],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[1,173,174,175,10],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[106,108,1,176,177,178,179,180,174,175,10,181,182,183],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[79,80,81,82,83,84,85],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[79,80,81,82,83,84,85],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[151],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:112","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[184,73,185],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:40","failures":[106,108,109,1,2,186,187,188,189,190,176,191,177,9,174,175,121,10,11,192,193,194,195,196,197,198,199],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[200],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":145,"org.easymock.tests2.UsageTest.argumentsOrdered":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":85,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":159,"org.easymock.tests2.SerializationTest.testAllMockedMethod":78,"org.easymock.tests.MockingTest.testPartialClassMocking":29,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":198,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":172,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":200,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":185,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":92,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":63,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":79,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":119,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":120,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":101,"org.easymock.tests2.UsageTest.wrongArguments":181,"org.easymock.tests.UsageStrictMockTest.range":1,"org.easymock.samples.ConstructorCalledMockTest.testTax":35,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":33,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":42,"org.easymock.tests2.UsageConstraintsTest.testNull":86,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":68,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":56,"org.easymock.tests2.CaptureTest.testPrimitive":130,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":105,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":179,"org.easymock.tests.UsageTest.moreThanOneArgument":191,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":188,"org.easymock.tests2.CaptureTest.testCaptureNone":135,"org.easymock.tests.UsageUnorderedTest.message":106,"org.easymock.tests.UsageVerifyTest.twoReturns":175,"org.easymock.tests.UsageTest.argumentsOrdered":180,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":38,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":110,"org.easymock.tests2.CaptureTest.testCapture_2617107":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":83,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":104,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":55,"org.easymock.tests2.UsageConstraintsTest.any":149,"org.easymock.tests2.StubTest.stub":12,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":114,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":122,"org.easymock.tests2.SerializationTest.testClass":77,"org.easymock.tests.LimitationsTest.mockNativeMethod":26,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":25,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":148,"org.easymock.tests2.CaptureTest.testAnd":127,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":97,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":7,"org.easymock.tests2.DelegateToTest.testDelegate":94,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":31,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":66,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":57,"org.easymock.tests.MockingTest.testNicePartialClassMocking":30,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":70,"org.easymock.tests2.CaptureTest.testCaptureLast":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":117,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":187,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":47,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":146,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":157,"org.easymock.tests.MockingTest.testTwoMocks":28,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":186,"org.easymock.tests2.CaptureTest.testCapture1_2446744":131,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":182,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":22,"org.easymock.tests.UsageStrictMockTest.differentMethods":2,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":164,"org.easymock.tests2.ConstraintsToStringTest.andToString":197,"org.easymock.tests2.MockBuilderTest.testCreateMockString":61,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":153,"org.easymock.tests.UsageVerifyTest.twoThrows":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":64,"org.easymock.samples.PartialClassMockTest.testGetArea":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":111,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":75,"org.easymock.tests2.UsageConstraintsTest.testNotNull":160,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":90,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":54,"org.easymock.tests2.MockBuilderTest.testCreateMock":58,"org.easymock.tests2.UsageConstraintsTest.equals":171,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":194,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":103,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":45,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":151,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":136,"org.easymock.tests2.EasyMockSupportClassTest.testAll":62,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":24,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":189,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":40,"org.easymock.tests2.CaptureTest.testCaptureAll":128,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":46,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":99,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":44,"org.easymock.tests2.UsageConstraintsTest.testMatches":20,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":82,"org.easymock.tests2.NameTest.nameForNiceMock":184,"org.easymock.tests.UsageVarargTest.allKinds":116,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":9,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":81,"org.easymock.samples.BasicClassMockTest.testPrintContent":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":118,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":109,"org.easymock.tests2.UsageConstraintsTest.greaterThan":154,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":6,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":76,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":167,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":49,"org.easymock.tests2.ConstraintsToStringTest.orToString":193,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":36,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":21,"org.easymock.tests.UsageThrowableTest.noUpperLimit":3,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":14,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":27,"org.easymock.tests2.SerializationTest.test":93,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":132,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":163,"org.easymock.tests2.UsageConstraintsTest.testSame":17,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":126,"org.easymock.tests2.CaptureTest.testCaptureFirst":140,"org.easymock.tests.GenericTest.testPackageScope":23,"org.easymock.tests2.UsageTest.moreThanOneArgument":192,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":123,"org.easymock.tests2.CaptureTest.testCapture2_2446744":139,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":115,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":141,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":60,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":158,"org.easymock.tests2.UsageStrictMockTest.differentMethods":11,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":88,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":8,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":0,"org.easymock.tests2.MockedExceptionTest.testRealException":96,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":190,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":102,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":43,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":51,"org.easymock.tests2.UsageConstraintsTest.testContains":19,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":48,"org.easymock.tests2.UsageConstraintsTest.testFind":16,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":4,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":69,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":125,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":155,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":72,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":52,"org.easymock.tests2.UsageStrictMockTest.range":10,"org.easymock.tests2.UsageConstraintsTest.lessThan":161,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":80,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":98,"org.easymock.tests2.CaptureTest.testCaptureRightOne":137,"org.easymock.tests2.ConstraintsToStringTest.findToString":91,"org.easymock.tests2.UsageConstraintsTest.testOr":18,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":84,"org.easymock.tests.UsageRangeTest.combination":5,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":67,"org.easymock.tests.UsageTest.wrongArguments":178,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":34,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":166,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":142,"org.easymock.tests2.UsageConstraintsTest.cmpTo":150,"org.easymock.tests2.CaptureTest.testCaptureMultiple":169,"org.easymock.tests.DefaultClassInstantiatorTest.object":162,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":100,"org.easymock.tests2.CaptureTest.testCaptureFromStub":138,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":53,"org.easymock.tests.UsageTest.unexpectedCallWithArray":177,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":176,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":108,"org.easymock.tests2.CaptureTest.testCapture":170,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":74,"org.easymock.tests2.UsageConstraintsTest.constraints":15,"org.easymock.tests2.ConstraintsToStringTest.notToString":195,"org.easymock.tests.CapturesMatcherTest.test":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":87,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":65,"org.easymock.tests2.UsageTest.resumeIfFailure":13,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":133,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":112,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":32,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":113,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":173}}]
