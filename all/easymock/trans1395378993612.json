[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"failures":[3,4],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[25,26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[27,28,29,30,31,21,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,17,63,64,19,65,66,67,68,69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[70,71,72,73,74,45,75,53,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,12,91,92,93,94,95,13,96,97,98,99,100,14,101,102,103,15,104,16,105,106,107,108,19,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[110],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[111,112,113,114,115,116,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[118,119,120,121,122,123],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[124],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"failures":[125,118,119,126,127,128,129,122,130],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[131,132,133,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[136,137,138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[139,140],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[125,118,119,120,126,127,128,141,121,142,129,122,130,123,143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[144,144,145,145,146,147,74,148,149,150,151,152,153,154,4,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[178,179,180,181,182,140],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[183],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[184,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[185,146,131,186,132,187,5,188,189,190,191,192,133,147,6,193,194,195,196,148,149,39,110,150,151,152,153,134,197,198,199,200,154,3,4,155,40,156,157,201,202,203,204,205,158,159,160,161,162,163,164,165,56,166,87,17,167,105,168,169,106,107,170,206,171,172],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[207],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[152],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":110,"org.easymock.tests2.UsageTest.argumentsOrdered":50,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":86,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":48,"org.easymock.tests2.StubTest.stubWithReturnValue":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":122,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":205,"org.easymock.tests2.DelegateToTest.testReturnException":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":84,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":143,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":135,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":90,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":20,"org.easymock.tests.UsageExpectAndThrowTest.object":98,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":202,"org.easymock.tests2.DelegateToTest.testWrongClass":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":126,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":171,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":172,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":197,"org.easymock.tests2.UsageTest.wrongArguments":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":168,"org.easymock.tests.UsageStrictMockTest.range":58,"org.easymock.samples.ConstructorCalledMockTest.testTax":144,"org.easymock.samples.ExampleTest.answerVsDelegate":111,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":183,"org.easymock.tests2.UsageConstraintsTest.testNull":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":99,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":38,"org.easymock.tests2.CaptureTest.testPrimitive":187,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":170,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":175,"org.easymock.tests2.CaptureTest.testCaptureNone":191,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":179,"org.easymock.tests.UsageUnorderedTest.message":17,"org.easymock.tests.UsageVerifyTest.twoReturns":54,"org.easymock.tests.UsageTest.argumentsOrdered":68,"org.easymock.tests2.CaptureTest.testCapture_2617107":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":161,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":142,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":124,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":107,"org.easymock.tests2.UsageConstraintsTest.any":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":165,"org.easymock.tests.UsageExpectAndThrowTest.longType":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":85,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":29,"org.easymock.tests2.SerializationTest.testClass":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":11,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":198,"org.easymock.tests2.CaptureTest.testAnd":131,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":180,"org.easymock.tests2.MockedExceptionTest.testMockedException":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":174,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":109,"org.easymock.tests2.DelegateToTest.testDelegate":115,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":120,"org.easymock.tests2.CaptureTest.testCaptureLast":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":87,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":134,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":203,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":96,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":49,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":159,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":140,"org.easymock.tests.UsageThrowableTest.throwError":76,"org.easymock.tests.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":182,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":27,"org.easymock.tests2.MockBuilderTest.testCreateMockString":44,"org.easymock.tests.UsageExpectAndThrowTest.floatType":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":177,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":40,"org.easymock.tests.UsageVerifyTest.twoThrows":53,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":12,"org.easymock.tests2.UsageTest.niceToStrict":47,"org.easymock.tests2.ThreadingTest.testChangeDefault":139,"org.easymock.tests2.UsageConstraintsTest.testNotNull":158,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":82,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":70,"org.easymock.tests2.MockBuilderTest.testCreateMock":42,"org.easymock.tests.UsageVarargTest.differentLength":63,"org.easymock.tests2.CallbackTest.callback":21,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":97,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":184,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":36,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":148,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":138,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":106,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":4,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":3,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":192,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":181,"org.easymock.tests.UsageThrowableTest.throwCheckedException":79,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":15,"org.easymock.tests2.CaptureTest.testCaptureAll":186,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":105,"org.easymock.tests2.UsageConstraintsTest.testMatches":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":121,"org.easymock.tests.UsageVarargTest.allKinds":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":128,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":81,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":88,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":114,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":129,"org.easymock.tests2.UsageConstraintsTest.greaterThan":156,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":34,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":2,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":125,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":145,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":157,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":149,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":188,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":130,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":23,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":77,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":7,"org.easymock.tests2.UsageConstraintsTest.testSame":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":83,"org.easymock.tests2.CaptureTest.testCaptureFirst":193,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":52,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":8,"org.easymock.tests2.CaptureTest.testCapture2_2446744":6,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":18,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":61,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":104,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":204,"org.easymock.tests2.UsageStrictMockTest.differentMethods":31,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":173,"org.easymock.tests.UsageCallCountTest.tooManyCalls":62,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":101,"org.easymock.tests2.MockedExceptionTest.testRealException":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":123,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":22,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":146,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":169,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":25,"org.easymock.tests2.UsageConstraintsTest.testContains":154,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":72,"org.easymock.tests2.UsageConstraintsTest.testFind":150,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":108,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":195,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":196,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":55,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":201,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":194,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":41,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests2.UsageConstraintsTest.lessThan":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":127,"org.easymock.tests.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":167,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":141,"org.easymock.tests2.CaptureTest.testCaptureRightOne":133,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":178,"org.easymock.tests2.UsageConstraintsTest.testOr":153,"org.easymock.tests.UsageRangeTest.combination":64,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":32,"org.easymock.tests.UsageTest.wrongArguments":66,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":9,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":24,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":137,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":60,"org.easymock.tests2.UsageConstraintsTest.cmpTo":200,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":75,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":136,"org.easymock.tests2.CaptureTest.testCaptureFromStub":147,"org.easymock.tests.UsageTest.unexpectedCallWithArray":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":78,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":56,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":57,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":33,"org.easymock.tests2.UsageConstraintsTest.constraints":39,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":95,"org.easymock.tests2.ConstraintsToStringTest.containsToString":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":10,"org.easymock.tests2.UsageTest.resumeIfFailure":51,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":37,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":0}}]
