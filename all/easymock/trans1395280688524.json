[{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[2,3],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[4],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[13,14,15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[18,19,20,5,6,21,22,23,7,8,9,10,11,12,24,25,26,27,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[32,33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[34,35,36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Invocation:195","failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,15,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[92,93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[94],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[95],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[96,97,98,99,100,101,102,103,104,105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[106,107,108,109,110,0,111,112,113,1,114,115,116,117,3,118,119,120,121,122,123,124,125,126,127,128,129,130,68,131,132,133,134,135,136,82,137,84,138,85,139,140,141,88,142,143,144,145,146,89,90,147,91,148,149,150,151],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[152,153,154,155,32,156,157,158,159,160,161,162,163,164],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[165],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[166,152,153,167,154,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,156,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,117,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,46,265,266,267,268,269,58,270,271,272,161,273,274,92,275,19,5,21,22,11,276,277,278,65,279,280,66,67,281,282,283,13,14,15,284,31,285,286,287,288,289,290,291,292,293,35,24,25,294,295,28,296,297,298,299,300,301,302,88,143,303,304,305,306,307,150,151,308,309,310,311,312,313,314,315,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[317],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[166,152,153,106,107,108,318,319,320,321,322,323,109,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,317,354,355,356,357,358,359,360,361,110,0,111,112,113,1,362,114,167,363,364,365,366,154,168,169,170,367,171,172,368,173,174,175,176,177,37,178,179,180,369,370,371,372,373,374,375,376,181,32,182,183,156,184,185,377,186,187,188,189,190,191,192,193,194,195,115,196,197,198,199,200,201,202,203,204,205,206,207,208,378,379,380,381,382,383,384,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,157,158,231,232,159,160,233,385,386,387,388,389,390,391,392,393,2,116,117,394,3,38,395,396,397,39,398,40,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,234,235,118,119,120,121,236,237,238,239,240,241,416,417,418,122,123,124,125,126,127,128,129,419,420,30,242,421,243,244,422,423,424,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,41,42,43,44,45,46,47,48,49,50,51,52,425,265,266,267,426,268,427,103,428,269,53,54,55,56,57,58,59,60,61,62,63,64,429,270,271,272,161,273,274,92,275,130,430,431,18,19,432,20,5,6,21,22,23,7,8,433,434,435,436,437,438,439,440,9,10,441,442,443,11,12,444,276,277,278,65,279,280,66,445,67,281,282,283,446,68,69,447,131,448,449,450,70,451,452,453,454,455,71,456,457,72,95,458,13,459,14,104,15,460,93,461,73,462,74,463,132,133,464,465,466,467,468,284,31,285,162,286,287,288,289,165,163,164,290,291,292,34,469,293,35,36,470,75,76,77,78,24,25,26,27,471,472,473,294,295,474,28,29,475,296,297,298,299,300,301,476,302,134,79,80,135,81,136,477,82,137,478,83,84,479,480,138,481,482,85,139,86,87,140,483,484,485,141,88,486,142,143,144,487,488,145,489,146,89,490,303,90,147,91,491,492,304,305,148,493,494,495,149,496,497,306,307,150,151,308,498,499,17,309,310,311,312,313,314,500,315,316],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[2,3],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[38,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[96,97,98,100,101,103,104],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[152,153,154,155,32,156,157,158,159,160,424,161,162,163,164],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[318,319,321,329,330,331,332,182,156,184,186,187,188,189,190,191,192,193,194,204,234,235,120,245,246,247,248,249,250,253,254,256,257,258,260,261,262,263,264,266,427,271,161,273,68,69,447,131,449,450,70,457,13,14,15,73,476,135,477,482,483,141,88,486,142,143,144,145,490,303,90,304,305,307,17,309,311,312,314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:315","failures":[363,180,198,202,203,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,232,236,237,238,239,240,241,244,463,132,133,464,284,289,298],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":19,"org.easymock.tests2.UsageTest.argumentsOrdered":164,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":229,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":348,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":287,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":308,"org.easymock.tests2.DelegateToTest.testReturnException":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":237,"org.easymock.tests.MockingTest.testPartialClassMocking":318,"org.easymock.tests.MockClassControlTest.testToString":124,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":470,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":83,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":477,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":209,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":305,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":96,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":23,"org.easymock.tests2.UsageTest.wrongArguments":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":204,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":402,"org.easymock.samples.ExampleTest.answerVsDelegate":310,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":398,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":323,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":142,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":129,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":281,"org.easymock.tests2.CaptureTest.testPrimitive":27,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":228,"org.easymock.tests.UsageTest.moreThanOneArgument":230,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":486,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":193,"org.easymock.tests.UsageTest.argumentsOrdered":160,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":324,"org.easymock.tests.UsageVarargTest.varargIntAccepted":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":101,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":71,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":51,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":190,"org.easymock.tests.ReplayStateInvalidUsageTest.times":412,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":58,"org.easymock.tests2.DependencyTest.testClassMocking":491,"org.easymock.tests2.AnswerTest.answer":292,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":455,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":396,"org.easymock.tests2.CaptureTest.testAnd":24,"org.easymock.tests2.UsageTest.strictResetToDefault":31,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":89,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":192,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":279,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":331,"org.easymock.tests2.DelegateToTest.testDelegate":268,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":224,"org.easymock.tests.LimitationsTest.mockFinalMethod":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":337,"org.easymock.tests2.DependencyTest.testClassMockingSupport":492,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":382,"org.easymock.tests2.CaptureTest.testCapture1_2446744":471,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":222,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":453,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":406,"org.easymock.tests.UsageThrowableTest.throwError":196,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":39,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":37,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":485,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":407,"org.easymock.tests.MockingTest.testInterfaceMocking":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":210,"org.easymock.tests2.UsageTest.niceToStrict":286,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":13,"org.easymock.tests2.MockBuilderTest.testCreateMock":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":61,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":33,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":218,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":280,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":395,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":418,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":385,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":400,"org.easymock.tests.UsageOverloadedMethodTest.overloading":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":140,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":436,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":244,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":178,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":256,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":435,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":4,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":474,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":367,"org.easymock.tests2.EasyMockSupportClassTest.testAll":135,"org.easymock.tests.MockClassControlTest.testEquals":128,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":117,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":454,"org.easymock.tests2.CaptureTest.testCaptureAll":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":335,"org.easymock.tests.MockNameTest.defaultName":378,"org.easymock.tests2.UsageConstraintsTest.testMatches":437,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":194,"org.easymock.samples.ExampleTest.voteForRemovals":314,"org.easymock.tests.UsageVarargTest.allKinds":177,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":166,"org.easymock.samples.BasicClassMockTest.testPrintContent":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":336,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":202,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":429,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":426,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":241,"org.easymock.tests2.UsageConstraintsTest.greaterThan":439,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":102,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":81,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":330,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":90,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":114,"org.easymock.samples.ExampleTest.voteForRemoval":311,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":147,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":300,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":495,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":487,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":115,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":284,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":278,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":236,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":425,"org.easymock.tests2.CaptureTest.testCaptureFirst":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":65,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":291,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":424,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":252,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":476,"org.easymock.tests2.CaptureTest.testCapture2_2446744":475,"org.easymock.tests2.UsageTest.moreThanOneArgument":285,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":355,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":176,"org.easymock.tests.GenericTest.testBridgedEquals":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":392,"org.easymock.tests.UsageExpectAndReturnTest.longType":248,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":333,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":227,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":442,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":380,"org.easymock.tests.UsageCallCountTest.tooManyCalls":393,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":201,"org.easymock.tests.MockingTest.testNiceClassMocking":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":69,"org.easymock.tests.MockingTest.testClassMocking":107,"org.easymock.tests2.UsageConstraintsTest.testContains":434,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":386,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":133,"org.easymock.tests2.UsageConstraintsTest.testFind":20,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":180,"org.easymock.tests.MockTypeTest.fromEasyMockClass":397,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":468,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":376,"org.easymock.tests.UsageExpectAndReturnTest.object":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":62,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":67,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":172,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":97,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":373,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":94,"org.easymock.tests.UsageTest.exactCallCountByLastCall":233,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":419,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":325,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":103,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":168,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":261,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":243,"org.easymock.tests.MockClassControlTest.testHashCode":127,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":42,"org.easymock.tests2.EasyMockSupportTest.testVerify":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":480,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":417,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":452,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":465,"org.easymock.tests.UsageVarargTest.varargCharAccepted":171,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":361,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":360,"org.easymock.tests2.UsageTest.openCallCountByLastCall":288,"org.easymock.tests.DefaultClassInstantiatorTest.object":110,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":283,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":416,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":371,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":216,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":56,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":41,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":490,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":126,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":215,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":483,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":125,"org.easymock.tests2.UsageTest.resumeIfFailure":290,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":493,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":239,"org.easymock.tests2.StubTest.stubWithReturnValue":298,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":104,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":443,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":254,"org.easymock.tests2.SerializationTest.testAllMockedMethod":130,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":317,"org.easymock.samples.SupportTest.voteForRemovals":307,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":44,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":221,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":359,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":34,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":30,"org.easymock.tests.UsageExpectAndThrowTest.object":219,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":10,"org.easymock.tests2.DelegateToTest.testWrongClass":267,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":234,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":235,"org.easymock.samples.ConstructorCalledMockTest.testTax":498,"org.easymock.tests.UsageStrictMockTest.range":156,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":496,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":445,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":68,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":220,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":14,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":414,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":401,"org.easymock.tests2.CaptureTest.testCaptureNone":295,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":366,"org.easymock.tests.UsageUnorderedTest.message":154,"org.easymock.tests.UsageVerifyTest.twoReturns":153,"org.easymock.tests.UsageVarargTest.varargByteAccepted":175,"org.easymock.tests2.ThreadingTest.testThreadSafe":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":85,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":390,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":150,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":374,"org.easymock.tests2.CaptureTest.testCapture_2617107":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":357,"org.easymock.tests2.UsageConstraintsTest.any":8,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":411,"org.easymock.tests2.StubTest.stub":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":381,"org.easymock.tests.UsageExpectAndThrowTest.longType":212,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":358,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":113,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":410,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":272,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":46,"org.easymock.tests2.SerializationTest.testClass":92,"org.easymock.tests.LimitationsTest.mockNativeMethod":120,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":394,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":264,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":55,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":274,"org.easymock.tests2.NameTest.nameForMocksControl":78,"org.easymock.tests2.MockedExceptionTest.testMockedException":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":136,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":232,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":467,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":213,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":321,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":15,"org.easymock.tests.MockingTest.testNicePartialClassMocking":319,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":144,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":53,"org.easymock.tests2.CaptureTest.testCaptureLast":294,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":383,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":22,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":70,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":441,"org.easymock.tests.MockingTest.testTwoMocks":108,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":451,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":217,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":163,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":12,"org.easymock.samples.ExampleTest.removeNonExistingDocument":500,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":408,"org.easymock.tests.UsageStrictMockTest.differentMethods":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":60,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":43,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":111,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":301,"org.easymock.tests2.MockBuilderTest.testCreateMockString":74,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":82,"org.easymock.tests.UsageExpectAndThrowTest.floatType":211,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":428,"org.easymock.tests.UsageVerifyTest.twoThrows":152,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":482,"org.easymock.samples.ExampleTest.voteAgainstRemoval":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":349,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":364,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":303,"org.easymock.tests.LimitationsTest.privateConstructor":119,"org.easymock.tests2.UsageConstraintsTest.testNotNull":11,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":463,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":203,"org.easymock.tests2.UsageTest.defaultResetToNice":165,"org.easymock.samples.ExampleTest.voteAgainstRemovals":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":350,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":54,"org.easymock.tests.UsageVarargTest.differentLength":368,"org.easymock.tests2.CallbackTest.callback":269,"org.easymock.tests2.UsageConstraintsTest.equals":432,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":489,"org.easymock.tests.UsageTest.openCallCountByLastCall":231,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":430,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":206,"org.easymock.tests.UsageCallCountTest.tooFewCalls":388,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":403,"org.easymock.tests.UsageThrowableTest.throwCheckedException":200,"org.easymock.tests.MockingTest.testStrictClassMocking":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":450,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":363,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":59,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":413,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":449,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":36,"org.easymock.tests.ObjectMethodsTest.testHashCode":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":100,"org.easymock.tests2.NameTest.nameForNiceMock":77,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":302,"org.easymock.tests2.DependencyTest.testInterfaceMocking":304,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":98,"org.easymock.samples.ExampleTest.addDocument":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":484,"org.easymock.tests2.DelegateToTest.testStubDelegate":266,"org.easymock.tests2.AnswerTest.stubAnswer":35,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":182,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":460,"org.easymock.tests.UsageVarargTest.varargLongAccepted":174,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":347,"org.easymock.tests.UsageExpectAndReturnTest.floatType":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":427,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":499,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":440,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":422,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":50,"org.easymock.tests.UsageThrowableTest.noUpperLimit":197,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":431,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":148,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":472,"org.easymock.tests2.SerializationTest.test":275,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests2.UsageConstraintsTest.testSame":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":246,"org.easymock.samples.SupportTest.addDocument":306,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":448,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":137,"org.easymock.tests.GenericTest.testPackageScope":116,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":49,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":322,"org.easymock.tests2.NameTest.nameForMock":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":257,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":462,"org.easymock.tests2.UsageStrictMockTest.differentMethods":273,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":146,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":223,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":370,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":332,"org.easymock.tests2.MockedExceptionTest.testRealException":464,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":399,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":352,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":105,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":351,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":415,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":205,"org.easymock.tests2.NameTest.nameForStrictMock":76,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":458,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":466,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":143,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":149,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":112,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":457,"org.easymock.tests2.UsageStrictMockTest.range":161,"org.easymock.tests2.UsageConstraintsTest.lessThan":444,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":99,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":479,"org.easymock.tests2.CaptureTest.testCaptureRightOne":28,"org.easymock.tests2.UsageConstraintsTest.testOr":21,"org.easymock.tests.UsageRangeTest.combination":329,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":88,"org.easymock.tests.UsageTest.wrongArguments":158,"org.easymock.tests2.MockBuilderTest.testWithConstructor":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":478,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":339,"org.easymock.tests.UsageVarargTest.varargShortAccepted":173,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":391,"org.easymock.tests2.UsageConstraintsTest.cmpTo":433,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":341,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":289,"org.easymock.tests2.CaptureTest.testCaptureFromStub":29,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":405,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":72,"org.easymock.tests.UsageTest.unexpectedCallWithArray":157,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":259,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":183,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.samples.ExampleTest.addAndChangeDocument":315,"org.easymock.tests.UsageStrictMockTest.testVerify":377,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":316,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":334,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":473,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":188,"org.easymock.tests.LimitationsTest.abstractClass":118,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":251,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":189,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":66}}]
