[{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[39],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[40,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[42,43],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[44,45,46,47,48,49],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[50],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[30,32,51,52,53,54,35,36,38],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[55,56,26,26,27,27,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,35,85,86,87,88,38,89,90,91,92,93,94,95,96,97,98,99,100,101],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[122,123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.LastControl:92","failures":[102,103,107,108,110,112,116,118,120],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[32,124,38],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[30,51,52,53,125,126,36],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[127,128,129,8,46,130,131,132,133,134,135,47,19,136],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[44,45,46,47,48,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[30,137,35,36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[38,138,89,139],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[30,51,52,53,125,126,36],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[108],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[140,55,56,26,26,27,27,141,0,142,143,144,145,146,57,147,148,149,150,151,152,153,154,155,59,60,62,63,65,156,157,158,159,160,161,162,67,68,69,70,163,71,72,1,164,165,166,167,168,127,169,170,171,172,173,128,129,174,175,176,177,178,179,73,122,180,181,2,182,3,183,184,4,185,186,187,188,189,190,102,103,104,105,106,107,108,109,110,111,191,192,193,194,195,196,43,197,112,113,198,199,200,114,115,201,74,75,202,76,77,78,80,82,83,84,35,116,117,118,119,203,204,205,206,207,208,120,121,209,210,85,86,87,88,211,212,213,214,8,9,215,216,217,218,219,220,221,222,223,224,225,226,227,228,38,138,89,229,230,231,232,233,234,235,236,237,90,91,92,238,239,240,241,242,243,244,245,246,130,247,248,131,132,249,7,250,251,252,253,254,255,256,257,258,259,260,261,94,262,263,264,265,266,267,268,269,270,271,272,273,274,5,275,276,123,277,278,95,96,97,98,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,133,134,294,295,296,297,10,298,299,11,12,135,99,300,301,302,303,304,305,13,306,307,308,14,15,309,16,310,311,17,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,47,328,329,19,20,330,331,332,333,334,335,336,337,21,338,339,340,22,23,341,24,342,343,25,344,345,346,347,348],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[349],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":103,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":245,"org.easymock.tests2.UsageTest.argumentsOrdered":129,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":242,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":170,"org.easymock.tests2.StubTest.stubWithReturnValue":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":30,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":200,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":23,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":147,"org.easymock.tests2.SerializationTest.testAllMockedMethod":89,"org.easymock.tests2.DelegateToTest.testReturnException":158,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":240,"org.easymock.tests.MockingTest.testPartialClassMocking":96,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":124,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":45,"org.easymock.samples.SupportTest.voteForRemovals":149,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":50,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":310,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":139,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":302,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":86,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":182,"org.easymock.tests.UsageExpectAndThrowTest.object":309,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":113,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":51,"org.easymock.tests2.DelegateToTest.testWrongClass":160,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":332,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":333,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":232,"org.easymock.tests2.UsageTest.wrongArguments":127,"org.easymock.tests.UsageStrictMockTest.range":19,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":223,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":67,"org.easymock.tests2.UsageConstraintsTest.testNull":105,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":16,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":62,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":101,"org.easymock.tests2.CaptureTest.testPrimitive":119,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":236,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":316,"org.easymock.tests.UsageTest.moreThanOneArgument":246,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":131,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":321,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":48,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":281,"org.easymock.tests2.CaptureTest.testCaptureNone":207,"org.easymock.tests.UsageUnorderedTest.message":135,"org.easymock.tests.UsageVerifyTest.twoReturns":134,"org.easymock.tests.UsageVarargTest.varargByteAccepted":290,"org.easymock.tests2.ThreadingTest.testThreadSafe":150,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":10,"org.easymock.tests.UsageTest.argumentsOrdered":132,"org.easymock.tests.UsageVarargTest.varargIntAccepted":284,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":266,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":7,"org.easymock.tests2.CaptureTest.testCapture_2617107":118,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":235,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":61,"org.easymock.tests2.UsageConstraintsTest.any":111,"org.easymock.tests2.StubTest.stub":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":253,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":231,"org.easymock.tests.UsageExpectAndThrowTest.longType":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":241,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":214,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests.LimitationsTest.mockNativeMethod":99,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":155,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":348,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":92,"org.easymock.tests2.AnswerTest.answer":2,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":110,"org.easymock.tests2.CaptureTest.testAnd":116,"org.easymock.tests2.UsageTest.strictResetToDefault":167,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":81,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":29,"org.easymock.tests2.NameTest.nameForMocksControl":188,"org.easymock.tests2.MockedExceptionTest.testMockedException":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":320,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":220,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":248,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":12,"org.easymock.tests2.DelegateToTest.testDelegate":162,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":13,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":98,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":74,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":63,"org.easymock.tests.MockingTest.testNicePartialClassMocking":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":312,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":78,"org.easymock.tests2.CaptureTest.testCaptureLast":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":243,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":301,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":72,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":108,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":198,"org.easymock.tests.MockingTest.testTwoMocks":95,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":300,"org.easymock.tests2.CaptureTest.testCapture1_2446744":203,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":14,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":128,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":115,"org.easymock.tests.UsageThrowableTest.throwError":254,"org.easymock.tests.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":152,"org.easymock.tests2.MockBuilderTest.testCreateMockString":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":323,"org.easymock.tests.UsageExpectAndThrowTest.floatType":304,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":196,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":183,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":37,"org.easymock.tests.UsageVerifyTest.twoThrows":133,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":87,"org.easymock.samples.PartialClassMockTest.testGetArea":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":250,"org.easymock.samples.ExampleTest.voteAgainstRemoval":143,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":280,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":279,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":303,"org.easymock.tests2.UsageTest.niceToStrict":169,"org.easymock.tests2.UsageConstraintsTest.testNotNull":114,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":261,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":178,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":60,"org.easymock.tests2.MockBuilderTest.testCreateMock":64,"org.easymock.tests2.UsageTest.defaultResetToNice":173,"org.easymock.samples.ExampleTest.voteAgainstRemovals":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":344,"org.easymock.tests.UsageVarargTest.differentLength":287,"org.easymock.tests2.CallbackTest.callback":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":34,"org.easymock.tests.UsageTest.openCallCountByLastCall":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":15,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":44,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":221,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":39,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":189,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":271,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":262,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":234,"org.easymock.tests.UsageCallCountTest.tooFewCalls":264,"org.easymock.tests.UsageOverloadedMethodTest.overloading":273,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":194,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":123,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":272,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":70,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":24,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":193,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":208,"org.easymock.tests.UsageThrowableTest.throwCheckedException":258,"org.easymock.tests2.EasyMockSupportClassTest.testAll":85,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":91,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":314,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":6,"org.easymock.tests2.CaptureTest.testCaptureAll":117,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":325,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":71,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":69,"org.easymock.tests2.UsageConstraintsTest.testMatches":195,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":163,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":322,"org.easymock.samples.ExampleTest.voteForRemovals":145,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":349,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":125,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":154,"org.easymock.tests2.NameTest.nameForNiceMock":187,"org.easymock.tests.UsageVarargTest.allKinds":292,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":293,"org.easymock.tests2.DependencyTest.testInterfaceMocking":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":53,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.samples.ExampleTest.addDocument":144,"org.easymock.tests2.DelegateToTest.testStubDelegate":159,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":260,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":211,"org.easymock.tests2.AnswerTest.stubAnswer":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":244,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":161,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":54,"org.easymock.tests2.UsageConstraintsTest.greaterThan":43,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":31,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":295,"org.easymock.tests.UsageVarargTest.varargLongAccepted":289,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":84,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":330,"org.easymock.samples.ExampleTest.voteForRemoval":142,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":151,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":347,"org.easymock.tests.UsageExpectAndReturnTest.floatType":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":79,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":35,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests.UsageThrowableTest.noUpperLimit":255,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":197,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":94,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":166,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":190,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":204,"org.easymock.tests2.SerializationTest.test":138,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":32,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":218,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":40,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":256,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":335,"org.easymock.tests2.UsageConstraintsTest.testSame":106,"org.easymock.samples.SupportTest.addDocument":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":239,"org.easymock.tests2.CaptureTest.testCaptureFirst":210,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":219,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":340,"org.easymock.tests.GenericTest.testPackageScope":90,"org.easymock.tests2.CaptureTest.testCapture2_2446744":209,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":153,"org.easymock.tests2.UsageTest.moreThanOneArgument":168,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":11,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":65,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":291,"org.easymock.tests.GenericTest.testBridgedEquals":93,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":267,"org.easymock.tests2.NameTest.nameForMock":185,"org.easymock.tests.UsageExpectAndReturnTest.longType":337,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":342,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":315,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":238,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":199,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":313,"org.easymock.tests2.UsageStrictMockTest.differentMethods":9,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":319,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":21,"org.easymock.tests.UsageCallCountTest.tooManyCalls":268,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":17,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":297,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":263,"org.easymock.tests2.MockedExceptionTest.testRealException":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":306,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":213,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":259,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":233,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":68,"org.easymock.tests2.UsageConstraintsTest.testContains":192,"org.easymock.tests2.NameTest.nameForStrictMock":186,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":73,"org.easymock.tests2.UsageConstraintsTest.testFind":104,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":274,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":180,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":77,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":326,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":181,"org.easymock.tests.UsageExpectAndReturnTest.object":341,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":80,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":59,"org.easymock.tests2.UsageStrictMockTest.range":8,"org.easymock.tests2.UsageConstraintsTest.lessThan":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":224,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":52,"org.easymock.tests.UsageTest.exactCallCountByLastCall":249,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":324,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":18,"org.easymock.tests2.CaptureTest.testCaptureRightOne":120,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":298,"org.easymock.tests2.UsageConstraintsTest.testOr":107,"org.easymock.tests.UsageRangeTest.combination":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":36,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":345,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":75,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":276,"org.easymock.tests.UsageTest.wrongArguments":130,"org.easymock.tests2.MockBuilderTest.testWithConstructor":28,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":338,"org.easymock.tests2.EasyMockSupportTest.testVerify":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":343,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":299,"org.easymock.tests.UsageVarargTest.varargShortAccepted":288,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":270,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":5,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":41,"org.easymock.tests2.UsageConstraintsTest.cmpTo":191,"org.easymock.tests.UsageVarargTest.varargCharAccepted":285,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":3,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":212,"org.easymock.tests2.UsageTest.openCallCountByLastCall":171,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":172,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":227,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":269,"org.easymock.tests2.CaptureTest.testCaptureFromStub":121,"org.easymock.tests.UsageTest.unexpectedCallWithArray":46,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":136,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":308,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":257,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":47,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":265,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":25,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":329,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":82,"org.easymock.tests2.UsageConstraintsTest.constraints":102,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":307,"org.easymock.samples.ExampleTest.addAndChangeDocument":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":346,"org.easymock.tests.UsageStrictMockTest.testVerify":331,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":229,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":140,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":88,"org.easymock.tests2.CompareToTest.testGreateThan":42,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":205,"org.easymock.tests2.UsageTest.resumeIfFailure":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":251,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":339,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":252,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":222}}]
