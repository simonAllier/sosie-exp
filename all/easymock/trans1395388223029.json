[{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:52","sourceCode":"final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[17,18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(this.java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"defaultValue"}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[40,41,42,43,44,45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[47,48],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[36,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[53,53,54,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,36,52,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,24,27,28,29,30,99,100,101,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.LastControl:85","failures":[7,10,11,12],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[53,53,54,54,103,55,104,105,106,107,108,109,110,111,112,113,114,115,61,62,63,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,47,143,144,145,146,147,148,149,150,151,65,67,152,153,154,68,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,70,18,36,51,71,72,73,74,77,79,81,82,84,87,88,89,90,200,91,92,201,202,203,204,205,206,207,5,6,208,7,209,8,9,210,48,211,212,21,213,214,215,216,217,11,39,218,219,12,220,221,93,94,222,95,96,97,24,28,29,30,3,13,223,224,225,226,227,228,15,229,230,231,4,232,102],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[233,234],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":6,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":111,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":46,"org.easymock.tests2.StubTest.stubWithReturnValue":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":219,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":125,"org.easymock.tests2.SerializationTest.testAllMockedMethod":52,"org.easymock.tests.MockingTest.testPartialClassMocking":61,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":38,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":45,"org.easymock.samples.SupportTest.voteForRemovals":103,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":233,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":32,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":72,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":39,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":187,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":156,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":210,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":143,"org.easymock.samples.ConstructorCalledMockTest.testTax":53,"org.easymock.tests.UsageStrictMockTest.range":137,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":181,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":87,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":59,"org.easymock.tests2.UsageConstraintsTest.testNull":7,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":81,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":183,"org.easymock.tests2.CaptureTest.testPrimitive":224,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":145,"org.easymock.tests.UsageTest.moreThanOneArgument":112,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":222,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":40,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":166,"org.easymock.tests2.CaptureTest.testCaptureNone":227,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":141,"org.easymock.tests.UsageVerifyTest.twoReturns":110,"org.easymock.tests2.ThreadingTest.testThreadSafe":201,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":56,"org.easymock.tests2.CaptureTest.testCapture_2617107":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":147,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":75,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":80,"org.easymock.tests2.UsageConstraintsTest.any":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":151,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":3,"org.easymock.tests2.SerializationTest.testClass":36,"org.easymock.tests.LimitationsTest.mockNativeMethod":68,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":4,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":67,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":135,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests2.CaptureTest.testAnd":13,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":101,"org.easymock.tests2.UsageTest.strictResetToDefault":189,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":0,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":165,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":178,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":114,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":63,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":82,"org.easymock.tests.MockingTest.testNicePartialClassMocking":62,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":97,"org.easymock.tests2.CaptureTest.testCaptureLast":226,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":92,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":218,"org.easymock.tests.MockingTest.testTwoMocks":60,"org.easymock.tests2.CaptureTest.testCapture1_2446744":225,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":116,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":220,"org.easymock.tests.UsageThrowableTest.throwError":157,"org.easymock.tests.UsageStrictMockTest.differentMethods":138,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":203,"org.easymock.tests2.MockBuilderTest.testCreateMockString":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":168,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":73,"org.easymock.samples.PartialClassMockTest.testGetArea":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":148,"org.easymock.samples.ExampleTest.voteAgainstRemoval":106,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":139,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":140,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":29,"org.easymock.tests2.UsageTest.niceToStrict":191,"org.easymock.tests2.ThreadingTest.testChangeDefault":22,"org.easymock.tests2.UsageConstraintsTest.testNotNull":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":163,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":79,"org.easymock.tests2.UsageTest.defaultResetToNice":194,"org.easymock.tests2.MockBuilderTest.testCreateMock":83,"org.easymock.samples.ExampleTest.voteAgainstRemovals":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":25,"org.easymock.tests.UsageTest.openCallCountByLastCall":113,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":44,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":179,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":206,"org.easymock.tests.UsageOverloadedMethodTest.overloading":153,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":213,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":90,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":127,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":152,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":21,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":228,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":20,"org.easymock.tests.UsageThrowableTest.throwCheckedException":160,"org.easymock.tests2.EasyMockSupportClassTest.testAll":71,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":66,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":41,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":99,"org.easymock.tests2.CaptureTest.testCaptureAll":223,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":91,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":89,"org.easymock.tests2.UsageConstraintsTest.testMatches":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":200,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":19,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":167,"org.easymock.samples.ExampleTest.voteForRemovals":107,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":205,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":109,"org.easymock.tests2.DependencyTest.testInterfaceMocking":186,"org.easymock.samples.BasicClassMockTest.testPrintContent":57,"org.easymock.tests2.DelegateToTest.testStubDelegate":232,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":162,"org.easymock.tests2.AnswerTest.stubAnswer":18,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":50,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":136,"org.easymock.tests2.UsageConstraintsTest.greaterThan":216,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":170,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":30,"org.easymock.samples.ExampleTest.voteForRemoval":105,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":202,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":31,"org.easymock.tests.UsageExpectAndReturnTest.floatType":118,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":134,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":98,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":54,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":217,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":207,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":64,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":188,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":33,"org.easymock.tests2.SerializationTest.test":51,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":176,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":158,"org.easymock.tests2.UsageConstraintsTest.testSame":209,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":117,"org.easymock.tests2.CaptureTest.testCaptureFirst":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":17,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":177,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":123,"org.easymock.tests.GenericTest.testPackageScope":65,"org.easymock.tests2.CaptureTest.testCapture2_2446744":230,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":204,"org.easymock.tests2.UsageTest.moreThanOneArgument":190,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":84,"org.easymock.tests.GenericTest.testBridgedEquals":234,"org.easymock.tests.UsageExpectAndReturnTest.longType":119,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":174,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":128,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":108,"org.easymock.tests2.UsageStrictMockTest.differentMethods":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":164,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":26,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":172,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":124,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":197,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":144,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":161,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":88,"org.easymock.tests2.UsageConstraintsTest.testContains":212,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":76,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":102,"org.easymock.tests2.UsageConstraintsTest.testFind":208,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":154,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":16,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":96,"org.easymock.tests.UsageExpectAndReturnTest.object":126,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":35,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":11,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":24,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":77,"org.easymock.tests2.UsageStrictMockTest.range":198,"org.easymock.tests2.UsageConstraintsTest.lessThan":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":182,"org.easymock.tests.UsageTest.exactCallCountByLastCall":115,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":47,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":175,"org.easymock.tests2.CaptureTest.testCaptureRightOne":15,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests.UsageRangeTest.combination":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":132,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":69,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":129,"org.easymock.tests2.UsageConstraintsTest.cmpTo":211,"org.easymock.tests2.UsageTest.openCallCountByLastCall":192,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":193,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":185,"org.easymock.tests2.CaptureTest.testCaptureFromStub":229,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":78,"org.easymock.tests.UsageTest.unexpectedCallWithArray":42,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":159,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":130,"org.easymock.tests2.UsageConstraintsTest.constraints":5,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":28,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":133,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":74,"org.easymock.tests2.UsageTest.resumeIfFailure":195,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":58,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":122,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":180,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":34}}]
