[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.EasyMock:557","failures":[25,26,26,27,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,0,47,48,1,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,2,3,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,4,5,6,7,8,101,102,103,104,105,106,107,9,10,11,12,13,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,14,15,130,131,132,133,134,135,136,16,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,17,167,168,18,169,170,24,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,19,191,192,20,21,193,194,195,196,22,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,23,250,251,252,253,254,255],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[167],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[176],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:60","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[256,257],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[162,163,164,165,166,17,167,168,258,18,176,177,180,181,190,19,259,191,194,195],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[260,261,236,262,263,264,237,238,239,265,266,240,241,242,243,245,246],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[267,48,268,269,270,271,1,272,62,63,273,274,275,276,66,101,102,103,277,278,279,280,104,281,108,282,283,284,285,286,287,288,289,133,290,291,292,16,293,137,138,294,295,296,297,145,147,149,150,152,153,162,173,183,298,189,299,300,207,301,209,210,302,211,303,212,214,304,215,305,306,307,219,220,231,264,239,266,241,242,245,246,249,308,309,310,311,312,23,313,250,251,314],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:173","failures":[203],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,315,9,10,11,12,13,14,15,292,16,160,161,162,163,164,165,166,17,167,168,258,18,169,170,24,171,172,173,174,175,176,177,178,316,179,180,181,182,187,190,19,259,191,192,317,318,20,21,193,194,195,196,22,228,229,236,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[139],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[43,44,45,46,0,47,3,11,156,157,158,159],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[319],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[320,201,203],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[25,321,322,323,26,26,27,27,324,325,28,29,30,31,32,326,33,34,35,36,37,38,39,40,327,41,42,43,44,45,46,0,47,267,48,268,328,329,270,271,1,50,51,52,53,54,55,56,57,58,60,62,63,274,64,65,275,276,66,2,3,67,68,69,70,71,72,73,74,75,76,77,330,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,4,5,6,7,8,101,102,103,331,332,333,334,335,277,336,337,338,339,315,104,105,106,107,9,10,11,12,13,281,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,14,15,130,288,131,132,289,133,134,135,136,291,340,292,16,293,137,138,294,341,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,342,156,157,158,159,160,161,162,163,164,165,166,17,167,168,18,169,170,24,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,19,259,191,192,317,318,20,21,193,194,195,196,22,197,198,199,200,343,201,202,203,204,205,206,207,208,209,210,211,212,213,214,304,215,305,216,217,218,306,307,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,308,309,310,311,312,344,23,313,250,251,314,252,253,254,255],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":163,"org.easymock.tests2.UsageTest.argumentsOrdered":307,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":62,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":320,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":305,"org.easymock.tests2.StubTest.stubWithReturnValue":248,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":323,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":90,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":179,"org.easymock.tests2.SerializationTest.testAllMockedMethod":343,"org.easymock.tests2.DelegateToTest.testReturnException":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":44,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":142,"org.easymock.tests.MockingTest.testPartialClassMocking":78,"org.easymock.samples.SupportTest.voteForRemovals":28,"org.easymock.tests.MockClassControlTest.testToString":278,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":121,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":109,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":143,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":223,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":61,"org.easymock.tests.UsageExpectAndThrowTest.object":119,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":198,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":177,"org.easymock.tests2.DelegateToTest.testWrongClass":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":14,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":15,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":168,"org.easymock.tests2.UsageTest.wrongArguments":304,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":9,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.tests.UsageStrictMockTest.range":137,"org.easymock.samples.ExampleTest.answerVsDelegate":30,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":240,"org.easymock.tests2.UsageConstraintsTest.testNull":165,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":120,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":209,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":153,"org.easymock.tests2.CaptureTest.testPrimitive":191,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":13,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":275,"org.easymock.tests.UsageTest.moreThanOneArgument":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":128,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":53,"org.easymock.tests2.CaptureTest.testCaptureNone":21,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":141,"org.easymock.tests.UsageUnorderedTest.message":1,"org.easymock.tests.UsageVerifyTest.twoReturns":103,"org.easymock.tests.UsageVarargTest.varargByteAccepted":338,"org.easymock.tests2.ThreadingTest.testThreadSafe":184,"org.easymock.tests.UsageTest.argumentsOrdered":276,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":35,"org.easymock.tests.UsageVarargTest.varargIntAccepted":333,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":329,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":321,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":296,"org.easymock.tests2.CaptureTest.testCapture_2617107":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":4,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":12,"org.easymock.tests2.UsageConstraintsTest.any":18,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":256,"org.easymock.tests2.StubTest.stub":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":8,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":45,"org.easymock.tests.UsageExpectAndThrowTest.longType":112,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":313,"org.easymock.tests2.SerializationTest.testClass":199,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":183,"org.easymock.tests.LimitationsTest.mockNativeMethod":42,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":189,"org.easymock.tests2.AnswerTest.answer":222,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":41,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":100,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":257,"org.easymock.tests2.CaptureTest.testAnd":190,"org.easymock.tests2.UsageTest.strictResetToDefault":213,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":264,"org.easymock.tests2.NameTest.nameForMocksControl":311,"org.easymock.tests2.MockedExceptionTest.testMockedException":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":52,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":148,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":65,"org.easymock.tests2.DelegateToTest.testDelegate":206,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":39,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":113,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":230,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":210,"org.easymock.tests.MockingTest.testNicePartialClassMocking":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":124,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":235,"org.easymock.tests2.CaptureTest.testCaptureLast":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":0,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":108,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":246,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":167,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":178,"org.easymock.tests.MockingTest.testTwoMocks":330,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":281,"org.easymock.tests2.CaptureTest.testCapture1_2446744":192,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":261,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":117,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":306,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":181,"org.easymock.tests.UsageThrowableTest.throwError":70,"org.easymock.tests.UsageStrictMockTest.differentMethods":138,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":284,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":186,"org.easymock.tests2.MockBuilderTest.testCreateMockString":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":55,"org.easymock.tests.UsageExpectAndThrowTest.floatType":111,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":173,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":225,"org.easymock.tests.UsageVerifyTest.twoThrows":102,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":254,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":5,"org.easymock.samples.ExampleTest.voteAgainstRemoval":32,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":139,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":140,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":238,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":297,"org.easymock.tests2.UsageTest.niceToStrict":215,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":110,"org.easymock.tests2.ThreadingTest.testChangeDefault":260,"org.easymock.tests2.UsageConstraintsTest.testNotNull":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":77,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":156,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":208,"org.easymock.tests2.MockBuilderTest.testCreateMock":302,"org.easymock.tests2.UsageTest.defaultResetToNice":218,"org.easymock.samples.ExampleTest.voteAgainstRemovals":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":96,"org.easymock.tests.UsageVarargTest.differentLength":277,"org.easymock.tests2.CallbackTest.callback":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":262,"org.easymock.tests.UsageTest.openCallCountByLastCall":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":118,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":160,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":69,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":11,"org.easymock.tests.UsageCallCountTest.tooFewCalls":268,"org.easymock.tests.UsageOverloadedMethodTest.overloading":57,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":132,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":171,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":92,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":56,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":24,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":193,"org.easymock.tests.UsageThrowableTest.throwCheckedException":74,"org.easymock.tests2.EasyMockSupportClassTest.testAll":252,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":327,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":126,"org.easymock.tests2.CaptureTest.testCaptureAll":19,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":245,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":299,"org.easymock.tests.MockNameTest.defaultName":272,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":242,"org.easymock.tests2.UsageConstraintsTest.testMatches":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":244,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":54,"org.easymock.samples.ExampleTest.voteForRemovals":33,"org.easymock.tests2.NameTest.nameForNiceMock":310,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":188,"org.easymock.tests.UsageVarargTest.allKinds":315,"org.easymock.tests2.DependencyTest.testInterfaceMocking":197,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":101,"org.easymock.samples.BasicClassMockTest.testPrintContent":322,"org.easymock.samples.ExampleTest.addDocument":326,"org.easymock.tests2.DelegateToTest.testStubDelegate":203,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":76,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":312,"org.easymock.tests2.AnswerTest.stubAnswer":226,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":47,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":16,"org.easymock.tests2.UsageConstraintsTest.greaterThan":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":105,"org.easymock.tests.UsageVarargTest.varargLongAccepted":337,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":239,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":294,"org.easymock.samples.ExampleTest.voteForRemoval":31,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":265,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":185,"org.easymock.tests.UsageExpectAndReturnTest.floatType":83,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":99,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":221,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests.UsageThrowableTest.noUpperLimit":71,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":175,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":212,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":50,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":161,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":317,"org.easymock.tests2.SerializationTest.test":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":146,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":82,"org.easymock.tests2.UsageConstraintsTest.testSame":166,"org.easymock.samples.SupportTest.addDocument":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":43,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":201,"org.easymock.tests2.CaptureTest.testCaptureFirst":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":147,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":220,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":49,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":88,"org.easymock.tests.GenericTest.testPackageScope":40,"org.easymock.tests2.UsageTest.moreThanOneArgument":214,"org.easymock.tests2.CaptureTest.testCapture2_2446744":196,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":187,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":38,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":211,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":339,"org.easymock.tests.GenericTest.testBridgedEquals":319,"org.easymock.tests2.NameTest.nameForMock":308,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":270,"org.easymock.tests.UsageExpectAndReturnTest.longType":84,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":127,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":316,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":129,"org.easymock.tests2.UsageStrictMockTest.differentMethods":251,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":51,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":135,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":85,"org.easymock.tests.UsageCallCountTest.tooManyCalls":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":123,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":107,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":48,"org.easymock.tests2.MockedExceptionTest.testRealException":159,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":89,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":114,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":10,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":241,"org.easymock.tests2.NameTest.nameForStrictMock":309,"org.easymock.tests2.UsageConstraintsTest.testContains":170,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":158,"org.easymock.tests2.UsageConstraintsTest.testFind":164,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":58,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":228,"org.easymock.tests.MockTypeTest.fromEasyMockClass":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":234,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":291,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":229,"org.easymock.tests.UsageExpectAndReturnTest.object":91,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":236,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":207,"org.easymock.tests2.UsageStrictMockTest.range":250,"org.easymock.tests2.UsageConstraintsTest.lessThan":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":152,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":335,"org.easymock.tests.UsageTest.exactCallCountByLastCall":66,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":2,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":145,"org.easymock.tests2.CaptureTest.testCaptureRightOne":194,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":59,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":36,"org.easymock.tests2.UsageConstraintsTest.testOr":17,"org.easymock.tests.UsageRangeTest.combination":104,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":331,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":231,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":97,"org.easymock.tests.UsageTest.wrongArguments":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":131,"org.easymock.tests2.EasyMockSupportTest.testVerify":342,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":94,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":37,"org.easymock.tests.UsageVarargTest.varargShortAccepted":336,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":68,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":130,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":269,"org.easymock.tests2.UsageConstraintsTest.cmpTo":169,"org.easymock.tests.UsageVarargTest.varargCharAccepted":334,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":224,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":344,"org.easymock.tests2.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":155,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":67,"org.easymock.tests2.CaptureTest.testCaptureFromStub":195,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":301,"org.easymock.tests.UsageTest.unexpectedCallWithArray":273,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":116,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":292,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":73,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":328,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":95,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":293,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":280,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":237,"org.easymock.tests2.UsageConstraintsTest.constraints":162,"org.easymock.samples.ExampleTest.addAndChangeDocument":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":115,"org.easymock.tests.UsageStrictMockTest.testVerify":341,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":98,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":134,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":324,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":340,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":255,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":318,"org.easymock.tests2.UsageTest.resumeIfFailure":219,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":6,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":282,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":7,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":133,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":150}}]
