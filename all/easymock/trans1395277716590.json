[{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"position":"org.easymock.internal.LastControl:92","failures":[18,19,20,21,22,23,24,25,26],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:112","sourceCode":"if (!(org.easymock.Capture<T>.hasCaptured())) {\n    this.java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[27,28,29,30,31,32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[33],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,0,0,1,1,47,2,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,10,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,18,19,96,97,98,20,21,99,22,100,101,102,103,104,105,106,107,108,23,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,33,128,129,130,131,24,28,25,132,133,134,135,136,29,137,26,30,31,138,139,140,141,142,143,11,144,145,146,12,147,148,149,150,151,152,153,154,14,155,156,157,158,159,16,160,161,17,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,18,19,96,97,98,20,21,99,22,100,101,102,103,104,105,106,107,108,23,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,33,128,129,130,131,24,28,25,132,133,134,135,136,29,137,26,30,31,138,139,326,327,328,140,141,329,145,152,153,155,162,330,163,164,165,166,167,168,170,331,332,333,171,334,335,336,337,338,172,173,174,175,176,339,177,178,179,180,181,182,183,184,185,186,187,188,189,193,194,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,340,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,341,342,343,344,258,259,260,261,262,263,264,265,266,345,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,346,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,347,325,348,349,350],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[373,374,375],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[287],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[18,19,97,20,21,22,23,113,24,25,26],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod","bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[359,309,312,313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[0,0,1,1,376,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[358,377,302,303,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,0,1,1,2,3,378,10,379,380,381,13,382,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[19,21,23],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,383,384,4,63,5,385,64,386,387,388,6,389,390,391,392,7,65,393,394,395,396,397,66,8,9,398,399,10,11,12,400,379,380,381,13,376,382],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[100,236],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[223,226],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[94,107,109],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[19,96,22,100],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":19,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":175,"org.easymock.tests2.UsageTest.argumentsOrdered":58,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":361,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":53,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":43,"org.easymock.tests2.DelegateToTest.testReturnException":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":288,"org.easymock.tests.MockingTest.testPartialClassMocking":190,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":6,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":238,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":153,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":183,"org.easymock.tests2.UsageTest.wrongArguments":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":332,"org.easymock.samples.ExampleTest.answerVsDelegate":35,"org.easymock.tests2.UsageConstraintsTest.testNull":97,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":156,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":84,"org.easymock.tests2.CaptureTest.testPrimitive":132,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":187,"org.easymock.tests.UsageTest.moreThanOneArgument":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":257,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":233,"org.easymock.tests.UsageTest.argumentsOrdered":181,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":309,"org.easymock.tests.UsageVarargTest.varargIntAccepted":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":297,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":162,"org.easymock.tests2.AnswerTest.answer":127,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":367,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":328,"org.easymock.tests2.CaptureTest.testAnd":24,"org.easymock.tests2.UsageTest.strictResetToDefault":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":16,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":380,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":79,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":300,"org.easymock.tests2.DelegateToTest.testDelegate":93,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":338,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":198,"org.easymock.tests2.CaptureTest.testCapture1_2446744":133,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":251,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":326,"org.easymock.tests.UsageThrowableTest.throwError":223,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":235,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":9,"org.easymock.samples.PartialClassMockTest.testGetArea":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":294,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":389,"org.easymock.tests2.UsageTest.niceToStrict":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":375,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":395,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":247,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":80,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":260,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":261,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":170,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":7,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":104,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":281,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":213,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":103,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":137,"org.easymock.tests2.EasyMockSupportClassTest.testAll":63,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":196,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":255,"org.easymock.tests2.CaptureTest.testCaptureAll":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":336,"org.easymock.tests.MockNameTest.defaultName":340,"org.easymock.tests2.UsageConstraintsTest.testMatches":105,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":234,"org.easymock.samples.ExampleTest.voteForRemovals":39,"org.easymock.tests.UsageVarargTest.allKinds":324,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":284,"org.easymock.samples.BasicClassMockTest.testPrintContent":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":337,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":229,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":116,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":292,"org.easymock.tests2.UsageConstraintsTest.greaterThan":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":5,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":299,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":17,"org.easymock.samples.ExampleTest.voteForRemoval":36,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":164,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":343,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":168,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":48,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":77,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":287,"org.easymock.tests2.CaptureTest.testCaptureFirst":138,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":78,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":209,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":166,"org.easymock.tests2.CaptureTest.testCapture2_2446744":31,"org.easymock.tests2.UsageTest.moreThanOneArgument":50,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":368,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":323,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":267,"org.easymock.tests.UsageExpectAndReturnTest.longType":205,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":256,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":111,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":308,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":231,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":303,"org.easymock.tests.UsageCallCountTest.tooManyCalls":268,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":243,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":228,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":143,"org.easymock.tests2.UsageConstraintsTest.testContains":102,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":262,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":69,"org.easymock.tests2.UsageConstraintsTest.testFind":96,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests.MockTypeTest.fromEasyMockClass":341,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":72,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":269,"org.easymock.tests.UsageExpectAndReturnTest.object":212,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":83,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":318,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":349,"org.easymock.tests.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":3,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":218,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":314,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":280,"org.easymock.tests2.EasyMockSupportTest.testVerify":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":391,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":311,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":259,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":139,"org.easymock.tests.UsageVarargTest.varargCharAccepted":317,"org.easymock.tests2.CaptureTest.testCaptureMultiple":27,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":372,"org.easymock.tests2.UsageTest.openCallCountByLastCall":54,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":373,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":258,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":392,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":245,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":226,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":160,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":244,"org.easymock.tests.CapturesMatcherTest.test":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":66,"org.easymock.tests2.UsageTest.resumeIfFailure":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":290,"org.easymock.tests2.StubTest.stubWithReturnValue":62,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":381,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":112,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":211,"org.easymock.tests2.SerializationTest.testAllMockedMethod":74,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":200,"org.easymock.samples.SupportTest.voteForRemovals":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":250,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":201,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":33,"org.easymock.tests.UsageExpectAndThrowTest.object":248,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":109,"org.easymock.tests2.DelegateToTest.testWrongClass":91,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":194,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":274,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":82,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":142,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":249,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":149,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":180,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":331,"org.easymock.tests2.CaptureTest.testCaptureNone":29,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":307,"org.easymock.tests.UsageUnorderedTest.message":188,"org.easymock.tests.UsageVerifyTest.twoReturns":286,"org.easymock.tests.UsageVarargTest.varargByteAccepted":322,"org.easymock.tests2.ThreadingTest.testThreadSafe":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":393,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":266,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":44,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":350,"org.easymock.tests2.CaptureTest.testCapture_2617107":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":370,"org.easymock.tests2.UsageConstraintsTest.any":100,"org.easymock.tests2.StubTest.stub":61,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":304,"org.easymock.tests.UsageExpectAndThrowTest.longType":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":371,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":119,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests.LimitationsTest.mockNativeMethod":169,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":221,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":122,"org.easymock.tests2.NameTest.nameForMocksControl":126,"org.easymock.tests2.MockedExceptionTest.testMockedException":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":385,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":179,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":242,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":154,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":150,"org.easymock.tests.MockingTest.testNicePartialClassMocking":191,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":158,"org.easymock.tests2.CaptureTest.testCaptureLast":136,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":199,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":12,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":21,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":110,"org.easymock.tests.MockingTest.testTwoMocks":189,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":246,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":114,"org.easymock.tests.UsageStrictMockTest.differentMethods":275,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":386,"org.easymock.tests.UsageExpectAndThrowTest.floatType":240,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":4,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":129,"org.easymock.tests.UsageVerifyTest.twoThrows":285,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":378,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":65,"org.easymock.samples.ExampleTest.voteAgainstRemoval":37,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":362,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":161,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":399,"org.easymock.tests2.UsageConstraintsTest.testNotNull":113,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":230,"org.easymock.tests2.UsageTest.defaultResetToNice":56,"org.easymock.samples.ExampleTest.voteAgainstRemovals":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":363,"org.easymock.tests.UsageVarargTest.differentLength":319,"org.easymock.tests2.CallbackTest.callback":140,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":15,"org.easymock.tests.UsageTest.openCallCountByLastCall":178,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":185,"org.easymock.tests.UsageCallCountTest.tooFewCalls":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":144,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":333,"org.easymock.tests.UsageThrowableTest.throwCheckedException":227,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":146,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":237,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":330,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":145,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":131,"org.easymock.tests.ObjectMethodsTest.testHashCode":348,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":167,"org.easymock.tests2.NameTest.nameForNiceMock":125,"org.easymock.tests2.DependencyTest.testInterfaceMocking":152,"org.easymock.samples.ExampleTest.addDocument":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":8,"org.easymock.tests2.DelegateToTest.testStubDelegate":90,"org.easymock.tests2.AnswerTest.stubAnswer":130,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":272,"org.easymock.tests.UsageVarargTest.varargLongAccepted":321,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":360,"org.easymock.tests.UsageExpectAndReturnTest.floatType":204,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":2,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":108,"org.easymock.tests.UsageThrowableTest.noUpperLimit":224,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":95,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":134,"org.easymock.tests2.SerializationTest.test":73,"org.easymock.tests2.UsageConstraintsTest.testSame":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":203,"org.easymock.samples.SupportTest.addDocument":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":387,"org.easymock.tests.GenericTest.testPackageScope":195,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":355,"org.easymock.tests2.NameTest.nameForMock":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":214,"org.easymock.tests2.UsageStrictMockTest.differentMethods":121,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":382,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":252,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":347,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":301,"org.easymock.tests2.MockedExceptionTest.testRealException":70,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":364,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":184,"org.easymock.tests2.NameTest.nameForStrictMock":124,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":374,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":157,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":23,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":147,"org.easymock.tests2.UsageStrictMockTest.range":120,"org.easymock.tests2.UsageConstraintsTest.lessThan":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":390,"org.easymock.tests2.CaptureTest.testCaptureRightOne":26,"org.easymock.tests2.UsageConstraintsTest.testOr":20,"org.easymock.tests.UsageRangeTest.combination":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":14,"org.easymock.tests.UsageTest.wrongArguments":177,"org.easymock.tests2.MockBuilderTest.testWithConstructor":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":352,"org.easymock.tests.UsageVarargTest.varargShortAccepted":320,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":345,"org.easymock.tests2.UsageConstraintsTest.cmpTo":101,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":354,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":55,"org.easymock.tests2.CaptureTest.testCaptureFromStub":30,"org.easymock.tests.UsageTest.unexpectedCallWithArray":339,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":271,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":265,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":376,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":216,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":273,"org.easymock.samples.ExampleTest.addAndChangeDocument":40,"org.easymock.tests.UsageStrictMockTest.testVerify":277,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":47,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":335,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":208,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":81,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":315}}]
