[{"position":"org.easymock.internal.LastControl:61","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,0,89,90,91,92,93,94,95,96,97,98,99,100,101,102,1,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,2,3,4,5,7,8,9,10,11,12,15,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,155,156,157,46,47,158,159,160,161,162,163,164,165,166,167,168,169,170,48,49,50,51,52,53,54,55,58,171,172,173,174,59,175,176,177,178,179,180,181,182,183,184,60,185,63,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,65,66,257,258,259,260,261],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[78,79,262,263,264,265,266,267,101,268,269,270,126,137,141,271,272,273,274,158,275,276,159,277,278,279,280,281,282,283,284,285,160,286,287,288,289,290,161,291,292],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[20,25,37],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[293,177,178,294,295],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[68,69,71,72,73,74,75,76,77,80,81,82,83,84,296,85,86,87,88,0,67,91,97,98,99,100,297,102,1,298,299,103,104,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,127,128,129,130,131,2,3,4,5,6,7,8,9,10,11,12,13,14,15,132,133,300,16,134,135,138,139,301,142,143,302,144,145,303,304,305,306,147,307,148,149,150,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,155,156,308,157,46,47,158,162,163,164,165,166,309,167,168,169,170,48,49,50,51,52,53,54,55,56,57,58,171,172,173,174,59,175,310,311,312,177,178,295,181,182,183,184,313,314,60,61,315,185,62,63,316,317,186,187,188,318,197,198,319,320,321,322,323,324,325,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,326,327,226,228,229,230,231,232,328,329,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,330,254,255,331,256,332,333,334,335,336,337,64,65,66,257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[70,93,95,96,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[32,339],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[68,69,70,71,72,73,74,75,76,340,77,78,79,80,81,82,83,84,296,85,86,87,88,341,342,0,343,344,89,345,90,67,346,347,348,349,350,351,352,91,353,354,355,356,357,358,92,262,359,360,263,361,93,94,95,264,96,362,265,363,364,267,365,97,98,99,100,101,268,366,297,102,1,298,299,103,104,367,105,106,107,108,109,368,369,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,370,371,372,373,374,375,376,131,2,3,4,5,6,7,8,9,10,11,12,13,14,15,132,133,300,16,134,135,136,137,138,377,139,140,141,271,301,142,143,302,144,145,303,304,146,305,306,147,307,378,379,148,149,380,381,382,383,384,150,385,386,387,388,389,390,151,152,153,154,17,18,19,20,391,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,392,155,156,308,393,157,45,46,394,47,272,273,274,158,275,276,159,277,278,279,280,281,282,283,284,285,160,286,287,288,289,290,161,291,292,395,162,163,164,396,165,166,309,167,168,169,170,48,49,50,51,52,53,397,54,55,56,57,58,171,172,173,174,59,175,310,398,311,312,399,176,400,293,177,178,294,295,179,180,181,182,183,184,401,313,314,60,61,315,185,62,63,316,317,186,187,188,189,190,191,192,193,402,403,404,405,406,407,194,195,408,196,409,410,411,318,197,198,319,320,321,322,323,412,413,199,414,415,416,417,418,419,420,421,422,324,423,424,325,425,426,200,201,202,203,204,427,428,429,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,430,225,431,432,433,434,326,327,226,227,228,229,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,230,231,232,459,460,461,462,328,329,463,464,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,330,254,255,331,256,465,332,333,334,335,336,337,64,65,66,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,257,489,490,491,492,258,259,260,261],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:257","sourceCode":"final net.sf.cglib.proxy.Enhancer net.sf.cglib.proxy.Enhancer = new net.sf.cglib.proxy.Enhancer() {\n    /** \n     * Filter all private constructors but do not check that there are\n     * some left\n     */\n@java.lang.SuppressWarnings(value = \"rawtypes\")\n    @java.lang.Override\n    protected void filterConstructors(final java.lang.Class sc, final java.util.List constructors) {\n        net.sf.cglib.core.CollectionUtils.net.sf.cglib.core.CollectionUtils.filter(java.util.List, new net.sf.cglib.core.VisibilityPredicate(java.lang.Class , true));\n    }\n}","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[299,302,305,306,400,62,317,231,232,465,332,335,336,64,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[70,341,345,90,347,92,359,360,93,94,95,96,363,364,365,126,159,160,161,294,466,471],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[299,302,305,306,400,62,317,231,232,465,332,335,336,64,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[22,27,37,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[126,127,128,494],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[68,69,70,78,78,79,79,84,296,86,87,88,341,0,89,345,90,67,92,495,359,360,93,94,95,96,363,364,338,365,99,101,126,128,135,136,137,138,140,141,496,497,498,499,158,159,160,161,177,178,294,407,194,195,196,225,253,466,471,257],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[68,69,70,71,72,73,74,75,76,340,77,78,79,80,81,82,83,84,296,85,86,87,88,341,342,0,343,344,89,345,90,67,346,347,348,349,350,351,352,91,353,354,355,356,357,358,92,262,359,360,263,361,93,94,95,264,96,362,265,363,364,267,365,97,98,99,100,101,268,366,297,102,1,298,299,103,104,367,105,106,107,108,109,368,369,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,370,371,372,373,374,375,376,131,2,3,4,5,6,7,8,9,10,11,12,13,14,15,132,133,300,16,134,135,136,137,138,377,139,140,141,271,301,142,143,302,144,145,303,304,146,305,306,147,307,378,379,148,149,380,381,382,383,384,150,385,386,387,388,389,390,151,152,153,154,17,18,19,20,391,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,392,155,156,308,393,157,45,46,394,47,272,273,274,158,275,276,159,277,278,279,280,281,282,283,284,285,160,286,287,288,289,290,161,291,292,395,162,163,164,396,165,166,309,167,168,169,170,48,49,50,51,52,53,397,54,55,56,57,58,171,172,173,174,59,175,310,398,311,312,399,176,400,293,177,178,294,295,179,180,181,182,183,184,401,313,314,60,61,315,185,62,63,316,317,186,187,188,189,190,191,192,193,402,403,404,405,406,407,194,195,408,196,409,410,411,318,197,198,319,320,321,322,323,412,413,199,414,415,416,417,418,419,420,421,422,324,423,424,325,425,426,200,201,202,203,204,427,428,429,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,430,225,431,432,433,434,326,327,226,227,228,229,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,230,231,232,459,460,461,462,328,329,463,464,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,330,254,255,331,256,465,332,333,334,335,336,337,64,65,66,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,257,489,490,491,492,258,259,260,261],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[2,3,4,5,12,13,19,20,21,22,23,24,25,26,27,28,37,38,42,43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[146],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[2,4,12,19,20,22,24,25,27,37,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[378,379],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[264,268,500,501,502,503,504],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[17,35,41,505],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":20,"org.easymock.tests2.UsageTest.argumentsOrdered":306,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":331,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":123,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":445,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":145,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":80,"org.easymock.tests2.DelegateToTest.testReturnException":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":172,"org.easymock.tests.MockingTest.testPartialClassMocking":194,"org.easymock.tests.MockClassControlTest.testToString":431,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":367,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":280,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":233,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":500,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":54,"org.easymock.tests2.UsageTest.wrongArguments":302,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":390,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":260,"org.easymock.samples.ExampleTest.answerVsDelegate":72,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":471,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":410,"org.easymock.tests2.UsageConstraintsTest.testNull":22,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":86,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":122,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":327,"org.easymock.tests2.CaptureTest.testPrimitive":5,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":252,"org.easymock.tests.UsageTest.moreThanOneArgument":256,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":202,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":462,"org.easymock.tests.UsageTest.argumentsOrdered":336,"org.easymock.tests.UsageVarargTest.varargIntAccepted":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":504,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":357,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":372,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":53,"org.easymock.tests.ReplayStateInvalidUsageTest.times":483,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests2.DependencyTest.testClassMocking":378,"org.easymock.tests2.AnswerTest.answer":109,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":452,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":154,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":468,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":89,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":117,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":228,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":464,"org.easymock.tests2.DelegateToTest.testDelegate":157,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":248,"org.easymock.tests.LimitationsTest.mockFinalMethod":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":193,"org.easymock.tests2.DependencyTest.testClassMockingSupport":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":412,"org.easymock.tests2.CaptureTest.testCapture1_2446744":6,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":152,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":477,"org.easymock.tests.UsageThrowableTest.throwError":318,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":470,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":395,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":358,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":204,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":292,"org.easymock.samples.PartialClassMockTest.testGetArea":70,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":478,"org.easymock.tests.MockingTest.testInterfaceMocking":408,"org.easymock.tests2.CompareToTest.testLessOrEqual":505,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":50,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":403,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":426,"org.easymock.tests2.UsageTest.niceToStrict":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":93,"org.easymock.tests2.MockBuilderTest.testCreateMock":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":288,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":387,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":242,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":118,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":467,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":429,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":179,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":258,"org.easymock.tests.UsageOverloadedMethodTest.overloading":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":290,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":32,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":216,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":330,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":31,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":11,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":396,"org.easymock.tests2.EasyMockSupportClassTest.testAll":158,"org.easymock.tests.MockClassControlTest.testEquals":326,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":178,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":250,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":191,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":153,"org.easymock.tests2.CaptureTest.testCaptureAll":3,"org.easymock.tests.MockNameTest.defaultName":397,"org.easymock.tests2.UsageConstraintsTest.testMatches":33,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":475,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":203,"org.easymock.samples.ExampleTest.voteForRemovals":76,"org.easymock.tests.UsageVarargTest.allKinds":48,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":230,"org.easymock.samples.BasicClassMockTest.testPrintContent":69,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":192,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":322,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":354,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":421,"org.easymock.tests2.UsageConstraintsTest.greaterThan":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":275,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":227,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":422,"org.easymock.samples.ExampleTest.voteForRemoval":73,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":133,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":346,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":472,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":373,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":341,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":253,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":301,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":115,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":171,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":392,"org.easymock.tests2.CaptureTest.testCaptureFirst":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":116,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":307,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":400,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":212,"org.easymock.tests2.UsageTest.moreThanOneArgument":143,"org.easymock.tests2.CaptureTest.testCapture2_2446744":14,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":453,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":364,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":170,"org.easymock.tests.GenericTest.testBridgedEquals":295,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":313,"org.easymock.tests.UsageExpectAndReturnTest.longType":208,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":189,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":113,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":251,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":338,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":474,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":40,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":249,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":200,"org.easymock.tests.UsageCallCountTest.tooManyCalls":314,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":238,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":321,"org.easymock.tests.MockingTest.testNiceClassMocking":411,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":136,"org.easymock.tests.MockingTest.testClassMocking":406,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":495,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":180,"org.easymock.tests2.UsageConstraintsTest.testContains":30,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":99,"org.easymock.tests2.UsageConstraintsTest.testFind":21,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":255,"org.easymock.tests.MockTypeTest.fromEasyMockClass":469,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":47,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":315,"org.easymock.tests.UsageExpectAndReturnTest.object":215,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":0,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":501,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":166,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":325,"org.easymock.tests.UsageTest.exactCallCountByLastCall":337,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":490,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":328,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":268,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":221,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":311,"org.easymock.tests.MockClassControlTest.testHashCode":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":349,"org.easymock.tests2.EasyMockSupportTest.testVerify":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":283,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":329,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":428,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":310,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":151,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":45,"org.easymock.tests.UsageVarargTest.varargCharAccepted":165,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":414,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":458,"org.easymock.tests2.UsageTest.openCallCountByLastCall":303,"org.easymock.tests.DefaultClassInstantiatorTest.object":415,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":124,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":427,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":423,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":284,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":499,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":348,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":433,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":345,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":239,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":222,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":459,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":161,"org.easymock.tests2.UsageTest.resumeIfFailure":147,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":466,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":371,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":174,"org.easymock.tests2.StubTest.stubWithReturnValue":130,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":264,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":41,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":214,"org.easymock.tests2.SerializationTest.testAllMockedMethod":128,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":451,"org.easymock.samples.SupportTest.voteForRemovals":83,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":351,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":245,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":494,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":457,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":368,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":492,"org.easymock.tests.UsageExpectAndThrowTest.object":243,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":38,"org.easymock.tests2.DelegateToTest.testWrongClass":308,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":65,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":66,"org.easymock.samples.ConstructorCalledMockTest.testTax":78,"org.easymock.tests.UsageStrictMockTest.range":317,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":375,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":120,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":135,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":244,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":95,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":272,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":259,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":404,"org.easymock.tests2.CaptureTest.testCaptureNone":10,"org.easymock.tests.UsageUnorderedTest.message":64,"org.easymock.tests.UsageVerifyTest.twoReturns":232,"org.easymock.tests.UsageVarargTest.varargByteAccepted":169,"org.easymock.tests2.ThreadingTest.testThreadSafe":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":286,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":184,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":425,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":68,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":57,"org.easymock.tests2.UsageConstraintsTest.any":28,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":482,"org.easymock.tests2.StubTest.stub":129,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":173,"org.easymock.tests.UsageExpectAndThrowTest.longType":236,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":419,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":481,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":298,"org.easymock.tests2.SerializationTest.testClass":126,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":91,"org.easymock.tests.LimitationsTest.mockNativeMethod":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":224,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":294,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":382,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":104,"org.easymock.tests2.NameTest.nameForMocksControl":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":384,"org.easymock.tests2.MockedExceptionTest.testMockedException":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":276,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":334,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":394,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":196,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":237,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":96,"org.easymock.tests.MockingTest.testNicePartialClassMocking":195,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":88,"org.easymock.tests2.CaptureTest.testCaptureLast":9,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":380,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":413,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":141,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":25,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":39,"org.easymock.tests.MockingTest.testTwoMocks":407,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":205,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":241,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":305,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":43,"org.easymock.samples.ExampleTest.removeNonExistingDocument":340,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":479,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":386,"org.easymock.tests.UsageStrictMockTest.differentMethods":186,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":350,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":417,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":300,"org.easymock.tests2.MockBuilderTest.testCreateMockString":365,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":430,"org.easymock.tests.UsageExpectAndThrowTest.floatType":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":277,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":274,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":110,"org.easymock.tests.UsageVerifyTest.twoThrows":231,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":366,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":160,"org.easymock.samples.ExampleTest.voteAgainstRemoval":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":402,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":90,"org.easymock.tests.LimitationsTest.privateConstructor":488,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":270,"org.easymock.tests2.UsageConstraintsTest.testNotNull":42,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":97,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":323,"org.easymock.tests2.UsageTest.defaultResetToNice":146,"org.easymock.samples.ExampleTest.voteAgainstRemovals":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":220,"org.easymock.tests.UsageVarargTest.differentLength":309,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":381,"org.easymock.tests2.CallbackTest.callback":131,"org.easymock.tests2.UsageConstraintsTest.equals":391,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":343,"org.easymock.tests.UsageTest.openCallCountByLastCall":333,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":56,"org.easymock.tests.UsageCallCountTest.tooFewCalls":182,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":261,"org.easymock.tests.UsageThrowableTest.throwCheckedException":320,"org.easymock.tests.MockingTest.testStrictClassMocking":405,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":140,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":385,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":137,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":484,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":139,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":112,"org.easymock.tests.ObjectMethodsTest.testHashCode":424,"org.easymock.tests2.CompareToTest.testGreateOrEqual":339,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":503,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":134,"org.easymock.tests2.NameTest.nameForNiceMock":107,"org.easymock.tests2.DependencyTest.testInterfaceMocking":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":502,"org.easymock.samples.ExampleTest.addDocument":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":287,"org.easymock.tests2.DelegateToTest.testStubDelegate":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":291,"org.easymock.tests2.AnswerTest.stubAnswer":111,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":63,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":362,"org.easymock.tests.UsageVarargTest.varargLongAccepted":168,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.floatType":207,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":223,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":101,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":79,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":399,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":36,"org.easymock.tests.UsageThrowableTest.noUpperLimit":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":370,"org.easymock.tests2.SerializationTest.test":127,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":7,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":416,"org.easymock.tests2.UsageConstraintsTest.testSame":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":206,"org.easymock.samples.SupportTest.addDocument":82,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":377,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":278,"org.easymock.tests.GenericTest.testPackageScope":177,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":355,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":409,"org.easymock.tests2.NameTest.nameForMock":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":217,"org.easymock.tests2.UsageStrictMockTest.differentMethods":103,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":267,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":344,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":209,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":247,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":324,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":229,"org.easymock.tests2.MockedExceptionTest.testRealException":100,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":448,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":486,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":55,"org.easymock.tests2.NameTest.nameForStrictMock":106,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":361,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":46,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":374,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":418,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":37,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":359,"org.easymock.tests2.UsageStrictMockTest.range":299,"org.easymock.tests2.UsageConstraintsTest.lessThan":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":114,"org.easymock.tests2.CaptureTest.testCaptureRightOne":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":282,"org.easymock.tests2.UsageConstraintsTest.testOr":24,"org.easymock.tests.UsageRangeTest.combination":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":296,"org.easymock.tests.UsageTest.wrongArguments":332,"org.easymock.tests2.MockBuilderTest.testWithConstructor":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":279,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":218,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":420,"org.easymock.tests.UsageVarargTest.varargShortAccepted":167,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":401,"org.easymock.tests2.UsageConstraintsTest.cmpTo":29,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":438,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":304,"org.easymock.tests2.CaptureTest.testCaptureFromStub":13,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":476,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":360,"org.easymock.tests.UsageTest.unexpectedCallWithArray":465,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":62,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":183,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":219,"org.easymock.tests2.UsageConstraintsTest.constraints":19,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.samples.ExampleTest.addAndChangeDocument":77,"org.easymock.tests.UsageStrictMockTest.testVerify":188,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":81,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":190,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":8,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":51,"org.easymock.tests.LimitationsTest.abstractClass":487,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":211,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":52,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":119}}]
