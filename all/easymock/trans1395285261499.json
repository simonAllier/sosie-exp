[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,125,126,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,0,1,250,251,252],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:60","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> java.util.Stack<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.get()","type":"CtLocalVariableImpl"},"failures":[8,9,10,11,12,14,15,16,17,18,23,253,34,51,254,73,74,78,79,135,136,255,137,138,256,257,139,140,141,142,143,144,145,158,165,174,197,198,199,200,201,202,203,204,205,206,258,207,208,209,210,211,212,213,214,215,216,217,218,259,219,220,221,222,260,246,247],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.Capture:134","failures":[261,262],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[17,150],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[177,263,264,248,265,266,267,268,269,270],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[135,255,142,199,200,202,204,205,258,216,220],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[272,51],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[273,274,275,276,13,277,278,279,280,281,282,27,28,29,283,253,34,284,35,36,285,37,286,287,288,51,289,290,291,85,292,293,294,295,296,297,89,298,116,117,299,300,301,302,120,153,303,161,304,305,306,307,308,168,169,172,173,309,174,310,175,176,311,180,182,184,185,187,188,199,213,223,312,313,224,314,226,227,315,228,316,229,317,236,237,239,318,240,319,320,321,244,245,322],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[210],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[323,324,169,173,325,326,327,263,328,329,265],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[193],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[191],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[8,9,10,11,12,14,15,18,23,27,28,32,33,34,35,36,37,38,39,40,43,46,47,48,49,50,53,54,57,59,60,61,62,64,65,66,67,69,70,71,72,73,74,78,96,97,100,102,103,104,105,107,108,109,110,112,113,114,115,116,117,118,119,127,129,136,137,138,139,140,141,142,145,151,156,160,162,163,174,175,176,179,180,181,184,185,188,190,193,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,236,238,239,240,241,242,244,246,247,251,252],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[137],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[4,5,330,27,33,35,36,37,44,85,118,119,175,176,198,199,201,203,204,209,212,215,221,241,242],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[206],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[135,255,142,199,200,202,204,205,258,216,220],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[331,273,332,333,274,275,334,2,335,3,4,5,6,7,8,9,10,11,12,276,13,336,14,15,16,17,18,19,20,21,22,23,24,277,337,338,278,279,280,281,282,339,330,340,341,342,343,344,345,346,347,348,349,350,351,352,353,25,354,355,356,357,358,26,359,360,361,362,363,364,27,28,29,30,31,32,33,283,365,253,34,284,35,36,285,366,37,38,39,40,271,41,367,42,368,369,370,286,287,288,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,43,44,45,46,47,48,49,50,51,289,386,387,52,388,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,389,390,391,392,393,394,290,395,396,397,398,254,73,74,75,76,77,78,79,80,81,82,83,84,291,399,85,292,400,401,293,294,295,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,86,296,87,88,297,89,298,424,425,426,90,91,427,92,428,429,430,93,94,95,431,432,433,434,435,436,437,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,299,300,118,119,301,302,120,438,439,440,441,121,122,123,124,442,443,444,125,126,127,445,128,129,130,131,446,132,447,133,448,134,135,136,255,137,138,256,257,139,140,141,142,143,144,145,449,450,451,452,453,146,147,148,149,150,151,152,153,154,155,156,157,454,455,158,456,457,303,159,160,161,458,304,459,305,306,307,308,460,461,462,463,464,465,162,466,163,164,165,166,167,168,169,170,467,171,172,173,325,468,469,470,471,309,472,174,310,175,176,311,177,178,473,179,180,181,182,183,184,185,186,187,188,189,190,474,191,192,193,194,195,196,197,198,199,200,475,201,202,203,204,205,206,258,207,208,209,210,211,212,213,214,215,216,217,218,259,219,220,221,222,476,477,478,479,480,223,312,481,482,483,484,485,313,224,314,486,225,487,226,227,488,264,315,228,316,489,490,491,492,493,229,317,494,495,496,497,498,499,500,501,230,502,503,231,504,505,506,507,508,509,510,511,512,232,513,514,515,516,517,233,518,519,520,521,234,235,260,236,237,238,239,318,240,319,241,242,243,320,321,244,245,246,322,247,248,265,249,0,1,250,251,252],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[273,332,274,2,3,4,5,6,7,8,9,10,11,12,276,13,14,15,16,17,18,19,20,21,22,23,24,278,279,281,282,25,26,360,361,362,363,364,27,28,29,31,32,33,283,365,253,34,284,35,36,285,366,37,38,39,40,43,44,45,46,47,48,49,50,51,289,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,389,390,391,393,394,290,395,396,397,398,254,73,74,75,76,77,78,79,80,81,82,83,84,291,399,85,292,400,401,293,294,295,86,296,87,88,297,89,298,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,299,300,118,119,301,302,120,438,439,440,441,121,122,123,124,442,445,128,129,130,131,446,132,133,448,134,135,136,255,137,138,256,257,139,140,141,142,143,144,145,146,147,148,149,150,151,154,305,306,307,308,162,163,164,165,166,167,171,468,469,470,471,309,472,174,310,175,176,311,178,179,180,181,182,183,184,185,186,187,188,189,190,474,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,258,207,208,209,210,211,212,213,214,215,216,217,218,259,219,220,221,222,223,312,313,229,317,234,235,236,237,238,239,318,240,319,241,242,243,320,321,244,245,246,247,248,249,0,1,250,251,252],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[214,522],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,276,13,14,15,16,17,18,19,20,21,22,23,24,25,26,360,361,362,363,364,27,28,29,30,31,32,33,283,365,253,34,284,35,36,285,366,37,38,39,40,41,367,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,389,390,391,393,394,290,395,396,397,398,254,73,74,75,76,77,78,79,80,81,82,83,84,291,85,292,400,401,293,294,295,86,296,87,88,297,89,298,426,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,299,300,118,119,301,302,120,438,439,440,441,121,122,123,124,442,443,444,125,125,126,126,127,445,128,129,130,131,446,132,133,448,134,135,136,255,137,138,256,257,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,454,158,303,159,160,161,305,306,307,308,162,163,164,165,166,167,168,169,170,171,172,173,468,469,470,471,309,472,174,310,175,176,311,177,178,473,179,180,181,182,183,184,185,186,187,188,189,190,474,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,258,207,208,209,210,211,212,213,214,215,216,217,218,259,219,220,221,222,223,313,224,225,487,226,227,315,228,316,229,230,231,232,233,234,235,236,237,238,239,318,240,319,241,242,243,320,321,244,245,246,247,248,249,0,1,250,251,252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[261,262],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[261,261,135,136,255,137,138,256,257,139,140,141,142,143,144,145],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":200,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests2.UsageTest.argumentsOrdered":321,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":348,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":319,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":445,"org.easymock.tests2.DelegateToTest.testReturnException":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":20,"org.easymock.tests.MockingTest.testPartialClassMocking":90,"org.easymock.tests.MockClassControlTest.testToString":286,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":459,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":2,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":507,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":53,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":231,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":235,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":423,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":266,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":14,"org.easymock.tests2.UsageTest.wrongArguments":318,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":498,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":440,"org.easymock.samples.ExampleTest.answerVsDelegate":129,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":280,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":429,"org.easymock.tests2.UsageConstraintsTest.testNull":202,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":155,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":188,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":373,"org.easymock.tests2.CaptureTest.testPrimitive":137,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":18,"org.easymock.tests.UsageTest.moreThanOneArgument":117,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":72,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":82,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":3,"org.easymock.tests.UsageTest.argumentsOrdered":302,"org.easymock.tests.UsageVarargTest.varargIntAccepted":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":8,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":313,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":484,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":462,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":12,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":407,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":229,"org.easymock.tests.ReplayStateInvalidUsageTest.times":382,"org.easymock.tests2.DependencyTest.testClassMocking":520,"org.easymock.tests2.AnswerTest.answer":249,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":471,"org.easymock.tests2.CaptureTest.testAnd":135,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":338,"org.easymock.tests2.UsageTest.strictResetToDefault":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":81,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":183,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":39,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":7,"org.easymock.tests2.DelegateToTest.testDelegate":196,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":406,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":68,"org.easymock.tests.LimitationsTest.mockFinalMethod":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":364,"org.easymock.tests2.DependencyTest.testClassMockingSupport":521,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":276,"org.easymock.tests2.CaptureTest.testCapture1_2446744":138,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":455,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":469,"org.easymock.tests.UsageThrowableTest.throwError":43,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":376,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":279,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":485,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":84,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":519,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":410,"org.easymock.samples.PartialClassMockTest.testGetArea":127,"org.easymock.tests.MockingTest.testInterfaceMocking":427,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":508,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":54,"org.easymock.tests2.UsageTest.niceToStrict":240,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":275,"org.easymock.tests2.ThreadingTest.testChangeDefault":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":225,"org.easymock.tests2.MockBuilderTest.testCreateMock":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":515,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":495,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":62,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":184,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":123,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":438,"org.easymock.tests.UsageOverloadedMethodTest.overloading":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":512,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":88,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":211,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":107,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":31,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":210,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":141,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":392,"org.easymock.tests2.EasyMockSupportClassTest.testAll":230,"org.easymock.tests.MockClassControlTest.testEquals":372,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":367,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":70,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":470,"org.easymock.tests2.CaptureTest.testCaptureAll":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":362,"org.easymock.tests.MockNameTest.defaultName":289,"org.easymock.tests2.UsageConstraintsTest.testMatches":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":83,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":374,"org.easymock.samples.ExampleTest.voteForRemovals":132,"org.easymock.tests.UsageVarargTest.allKinds":254,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":27,"org.easymock.samples.BasicClassMockTest.testPrintContent":444,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":363,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":49,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":24,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":195,"org.easymock.tests2.UsageConstraintsTest.greaterThan":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":502,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":38,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":161,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":411,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":437,"org.easymock.samples.ExampleTest.voteForRemoval":130,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":458,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":163,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":281,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":454,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":403,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":30,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":237,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":181,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":500,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":19,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":191,"org.easymock.tests2.CaptureTest.testCaptureFirst":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":182,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":245,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":103,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":165,"org.easymock.tests2.CaptureTest.testCapture2_2446744":144,"org.easymock.tests2.UsageTest.moreThanOneArgument":239,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":355,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":398,"org.easymock.tests.GenericTest.testBridgedEquals":368,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":294,"org.easymock.tests.UsageExpectAndReturnTest.longType":99,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":360,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":71,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":124,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":69,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":80,"org.easymock.tests.UsageCallCountTest.tooManyCalls":295,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":516,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":497,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":48,"org.easymock.tests.MockingTest.testNiceClassMocking":430,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":168,"org.easymock.tests.MockingTest.testClassMocking":425,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":399,"org.easymock.tests2.UsageConstraintsTest.testContains":209,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":148,"org.easymock.tests2.UsageConstraintsTest.testFind":201,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":33,"org.easymock.tests.MockTypeTest.fromEasyMockClass":278,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":247,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":283,"org.easymock.tests.UsageExpectAndReturnTest.object":106,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":496,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":187,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":394,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":267,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":333,"org.easymock.tests.UsageTest.exactCallCountByLastCall":120,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":4,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":265,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":389,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":112,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":87,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":477,"org.easymock.tests.MockClassControlTest.testHashCode":371,"org.easymock.tests2.EasyMockSupportTest.testVerify":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":510,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":5,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":122,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":86,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":468,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":260,"org.easymock.tests.UsageVarargTest.varargCharAccepted":393,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":359,"org.easymock.tests2.UsageTest.openCallCountByLastCall":241,"org.easymock.tests.DefaultClassInstantiatorTest.object":431,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":190,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":121,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":511,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":492,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":476,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":409,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":159,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":59,"org.easymock.tests.CapturesMatcherTest.test":261,"org.easymock.tests.ReplayStateInvalidCallsTest.times":415,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":113,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":75,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":233,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":287,"org.easymock.tests2.UsageTest.resumeIfFailure":244,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":277,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":22,"org.easymock.tests2.StubTest.stubWithReturnValue":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":263,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":105,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":219,"org.easymock.tests2.SerializationTest.testAllMockedMethod":473,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":25,"org.easymock.samples.SupportTest.voteForRemovals":134,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":65,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":26,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":0,"org.easymock.tests.UsageExpectAndThrowTest.object":63,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":335,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":217,"org.easymock.tests2.DelegateToTest.testWrongClass":194,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":413,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":73,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":74,"org.easymock.samples.ConstructorCalledMockTest.testTax":125,"org.easymock.tests.UsageStrictMockTest.range":35,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":464,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":186,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":167,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":499,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":384,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":439,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":405,"org.easymock.tests2.CaptureTest.testCaptureNone":140,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":95,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":450,"org.easymock.tests.UsageUnorderedTest.message":51,"org.easymock.tests.UsageVerifyTest.twoReturns":29,"org.easymock.tests.UsageVarargTest.varargByteAccepted":397,"org.easymock.tests2.ThreadingTest.testThreadSafe":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":513,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":401,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":443,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":274,"org.easymock.tests2.CaptureTest.testCapture_2617107":255,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":357,"org.easymock.tests2.UsageConstraintsTest.any":207,"org.easymock.tests2.StubTest.stub":150,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":381,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":21,"org.easymock.tests.UsageExpectAndThrowTest.longType":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":358,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":435,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":380,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":310,"org.easymock.tests2.SerializationTest.testClass":177,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests.LimitationsTest.mockNativeMethod":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":115,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":42,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":491,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":421,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests2.NameTest.nameForMocksControl":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":493,"org.easymock.tests2.MockedExceptionTest.testMockedException":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":503,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":57,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":92,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":322,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":152,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":227,"org.easymock.tests.MockingTest.testNicePartialClassMocking":91,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":157,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":489,"org.easymock.tests2.CaptureTest.testCaptureLast":139,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":13,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":420,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":173,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":205,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":218,"org.easymock.tests.MockingTest.testTwoMocks":426,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":417,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":61,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":320,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":221,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":453,"org.easymock.samples.ExampleTest.removeNonExistingDocument":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":494,"org.easymock.tests.UsageStrictMockTest.differentMethods":36,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":478,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":452,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":433,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":164,"org.easymock.tests2.MockBuilderTest.testCreateMockString":316,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":504,"org.easymock.tests.UsageExpectAndThrowTest.floatType":55,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":501,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":250,"org.easymock.tests.UsageVerifyTest.twoThrows":28,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":232,"org.easymock.samples.ExampleTest.voteAgainstRemoval":131,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":349,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":160,"org.easymock.tests.LimitationsTest.privateConstructor":387,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":324,"org.easymock.tests2.UsageConstraintsTest.testNotNull":220,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":146,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":50,"org.easymock.tests2.UsageTest.defaultResetToNice":243,"org.easymock.samples.ExampleTest.voteAgainstRemovals":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":350,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":490,"org.easymock.tests.UsageVarargTest.differentLength":290,"org.easymock.tests2.CallbackTest.callback":236,"org.easymock.tests2.UsageConstraintsTest.equals":475,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":456,"org.easymock.tests.UsageTest.openCallCountByLastCall":118,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":197,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":16,"org.easymock.tests.UsageCallCountTest.tooFewCalls":292,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":170,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":441,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":451,"org.easymock.tests.UsageThrowableTest.throwCheckedException":47,"org.easymock.tests.MockingTest.testStrictClassMocking":424,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":172,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":79,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":317,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":383,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":171,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":252,"org.easymock.tests.ObjectMethodsTest.testHashCode":332,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":419,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":166,"org.easymock.tests2.NameTest.nameForNiceMock":307,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":414,"org.easymock.tests2.DependencyTest.testInterfaceMocking":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":268,"org.easymock.samples.ExampleTest.addDocument":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":514,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":518,"org.easymock.tests2.DelegateToTest.testStubDelegate":193,"org.easymock.tests2.AnswerTest.stubAnswer":251,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":488,"org.easymock.tests.UsageVarargTest.varargLongAccepted":396,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":347,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":114,"org.easymock.tests.UsageExpectAndReturnTest.floatType":98,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":248,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":483,"org.easymock.tests.UsageThrowableTest.noUpperLimit":44,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":215,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":297,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":198,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":460,"org.easymock.tests2.SerializationTest.test":178,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":256,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":432,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":97,"org.easymock.tests2.UsageConstraintsTest.testSame":203,"org.easymock.samples.SupportTest.addDocument":448,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":467,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":404,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":505,"org.easymock.tests.GenericTest.testPackageScope":41,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":482,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":428,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":402,"org.easymock.tests2.NameTest.nameForMock":305,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":108,"org.easymock.tests2.UsageStrictMockTest.differentMethods":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":329,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":457,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":100,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":67,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":331,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":40,"org.easymock.tests2.MockedExceptionTest.testRealException":149,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":282,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":351,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":15,"org.easymock.tests2.NameTest.nameForStrictMock":306,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":486,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":246,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":156,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":463,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":434,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":216,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":272,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":224,"org.easymock.tests2.UsageStrictMockTest.range":175,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":408,"org.easymock.tests2.UsageConstraintsTest.lessThan":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":509,"org.easymock.tests2.CaptureTest.testCaptureRightOne":142,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":449,"org.easymock.tests2.UsageConstraintsTest.testOr":204,"org.easymock.tests.UsageRangeTest.combination":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":153,"org.easymock.tests.UsageTest.wrongArguments":300,"org.easymock.tests2.MockBuilderTest.testWithConstructor":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":506,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":370,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":101,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":330,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":436,"org.easymock.tests.UsageVarargTest.varargShortAccepted":395,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":293,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":422,"org.easymock.tests2.UsageConstraintsTest.cmpTo":208,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":1,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":341,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":242,"org.easymock.tests2.CaptureTest.testCaptureFromStub":143,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":375,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":314,"org.easymock.tests.UsageTest.unexpectedCallWithArray":299,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":418,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":253,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":400,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":328,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":110,"org.easymock.tests2.CaptureTest.testCapture":262,"org.easymock.tests2.UsageConstraintsTest.constraints":199,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.samples.ExampleTest.addAndChangeDocument":133,"org.easymock.tests.UsageStrictMockTest.testVerify":366,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":442,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":365,"org.easymock.tests2.CompareToTest.testGreateThan":522,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":361,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":10,"org.easymock.tests.LimitationsTest.abstractClass":386,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":11,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":89,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":185}}]
