[{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,0,1,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[251],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[252,253],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[200],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.RecordState:136","failures":[25,42,43,46,83,122,123,124,125,126,131,132,133,134,135,136,137,254,254,255,255,157,173,183,184,187,188,189,190,193,195,196,198,199,205,206,207],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[256,41,257,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[259],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[2,261,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,262,23,24,25,26,27,28,29,263,264,265,266,267,268,269,30,31,32,33,270,34,35,36,37,38,39,40,256,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,271,272,273,67,68,274,69,275,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,276,85,86,87,88,89,90,277,278,279,91,92,280,93,94,95,96,97,98,281,99,100,101,102,103,104,105,106,107,108,109,110,282,111,112,113,114,115,283,284,117,257,118,119,258,120,285,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,286,287,288,289,290,291,254,254,255,255,292,293,294,295,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,296,169,297,170,171,298,299,300,301,302,172,173,174,175,176,177,178,179,180,181,182,303,304,305,306,307,183,184,185,186,187,188,189,190,0,1,308,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,309,208,209,210,310,211,212,311,213,214,215,216,217,312,313,314,315,316,317,318,319,320,321,322,323,324,325,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,326,236,237,327,328,238,239,240,329,241,242,330,331,332,333,334,243,244,245,246,247,335,336,248,249,250],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[184],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[133],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[24,27,337,280,93,96,97,121,128,129,175,224,230,231],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[24,338,339,280,340,341],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[185,1,195,207,342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[186,190,308],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[343],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[344,345,346,347,348,349,218,350,351],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[24,338,339,353,92,280,93,96,97,340,354,341,355,223,224,230,231],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":186,"org.easymock.tests2.UsageTest.argumentsOrdered":231,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":91,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":88,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":226,"org.easymock.tests2.StubTest.stubWithReturnValue":171,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":350,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":293,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":204,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":12,"org.easymock.tests2.SerializationTest.testAllMockedMethod":220,"org.easymock.tests2.DelegateToTest.testReturnException":208,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":86,"org.easymock.tests.MockingTest.testPartialClassMocking":99,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":341,"org.easymock.samples.SupportTest.voteForRemovals":295,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":59,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":305,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":47,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":335,"org.easymock.tests.UsageExpectAndThrowTest.object":57,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":311,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":345,"org.easymock.tests2.DelegateToTest.testWrongClass":210,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":132,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":1,"org.easymock.tests2.UsageTest.wrongArguments":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":42,"org.easymock.samples.ConstructorCalledMockTest.testTax":254,"org.easymock.tests.UsageStrictMockTest.range":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":104,"org.easymock.samples.ExampleTest.answerVsDelegate":139,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":320,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":326,"org.easymock.tests2.UsageConstraintsTest.testNull":188,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":58,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":330,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":322,"org.easymock.tests2.CaptureTest.testPrimitive":149,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":46,"org.easymock.tests.UsageTest.moreThanOneArgument":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":66,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":96,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":103,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":162,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":124,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":273,"org.easymock.tests2.CaptureTest.testCaptureNone":154,"org.easymock.tests.UsageUnorderedTest.message":121,"org.easymock.tests.UsageVerifyTest.twoReturns":129,"org.easymock.tests.UsageVarargTest.varargByteAccepted":113,"org.easymock.tests2.ThreadingTest.testThreadSafe":213,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":264,"org.easymock.tests.UsageTest.argumentsOrdered":97,"org.easymock.tests.UsageVarargTest.varargIntAccepted":108,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":33,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":133,"org.easymock.tests2.CaptureTest.testCapture_2617107":148,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":355,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":349,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":240,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":45,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":242,"org.easymock.tests2.UsageConstraintsTest.any":191,"org.easymock.tests2.StubTest.stub":170,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":87,"org.easymock.tests.UsageExpectAndThrowTest.longType":50,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":174,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":312,"org.easymock.tests2.SerializationTest.testClass":218,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":303,"org.easymock.tests.LimitationsTest.mockNativeMethod":2,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":274,"org.easymock.tests2.AnswerTest.answer":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":22,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":182,"org.easymock.tests2.CaptureTest.testAnd":146,"org.easymock.tests2.UsageTest.strictResetToDefault":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":168,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":177,"org.easymock.tests2.NameTest.nameForMocksControl":301,"org.easymock.tests2.MockedExceptionTest.testMockedException":244,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":123,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":317,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":70,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":268,"org.easymock.tests2.DelegateToTest.testDelegate":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":51,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":101,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":160,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":331,"org.easymock.tests.MockingTest.testNicePartialClassMocking":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":62,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":165,"org.easymock.tests2.CompareToTest.testCompareEqual":352,"org.easymock.tests2.CaptureTest.testCaptureLast":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":41,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":239,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":40,"org.easymock.tests.MockingTest.testTwoMocks":281,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":256,"org.easymock.tests2.CaptureTest.testCapture1_2446744":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":55,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":180,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":230,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":206,"org.easymock.tests.UsageThrowableTest.throwError":75,"org.easymock.tests.UsageStrictMockTest.differentMethods":28,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":116,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":215,"org.easymock.tests2.MockBuilderTest.testCreateMockString":334,"org.easymock.tests.UsageExpectAndThrowTest.floatType":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":126,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":197,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":248,"org.easymock.tests.UsageVerifyTest.twoThrows":128,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":306,"org.easymock.samples.PartialClassMockTest.testGetArea":289,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":134,"org.easymock.samples.ExampleTest.voteAgainstRemoval":141,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":272,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":271,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":169,"org.easymock.tests2.UsageTest.niceToStrict":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":48,"org.easymock.tests2.UsageConstraintsTest.testNotNull":205,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":243,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":82,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":241,"org.easymock.tests2.MockBuilderTest.testCreateMock":332,"org.easymock.tests2.UsageTest.defaultResetToNice":229,"org.easymock.samples.ExampleTest.voteAgainstRemovals":138,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":18,"org.easymock.tests.UsageVarargTest.differentLength":282,"org.easymock.tests2.CallbackTest.callback":145,"org.easymock.tests2.UsageConstraintsTest.equals":259,"org.easymock.tests.UsageTest.openCallCountByLastCall":94,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":340,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":56,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":318,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":251,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":279,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":269,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":102,"org.easymock.tests.UsageCallCountTest.tooFewCalls":31,"org.easymock.tests.UsageOverloadedMethodTest.overloading":73,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":195,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":119,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":327,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":14,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":194,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":105,"org.easymock.tests.UsageThrowableTest.throwCheckedException":79,"org.easymock.tests2.EasyMockSupportClassTest.testAll":304,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":68,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":354,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":64,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":38,"org.easymock.tests2.CaptureTest.testCaptureAll":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":181,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":238,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":84,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":237,"org.easymock.tests2.UsageConstraintsTest.testMatches":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":328,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":125,"org.easymock.tests2.CompareToTest.testGreateOrEqual":342,"org.easymock.samples.ExampleTest.voteForRemovals":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":348,"org.easymock.tests2.NameTest.nameForNiceMock":300,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":217,"org.easymock.tests.UsageVarargTest.allKinds":115,"org.easymock.tests2.DependencyTest.testInterfaceMocking":212,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":347,"org.easymock.samples.BasicClassMockTest.testPrintContent":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":39,"org.easymock.samples.ExampleTest.addDocument":142,"org.easymock.tests2.DelegateToTest.testStubDelegate":209,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":81,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":302,"org.easymock.tests2.AnswerTest.stubAnswer":249,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":90,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":25,"org.easymock.tests2.UsageConstraintsTest.greaterThan":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":275,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":297,"org.easymock.tests.UsageVarargTest.varargLongAccepted":112,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":29,"org.easymock.samples.ExampleTest.voteForRemoval":140,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":21,"org.easymock.tests.UsageExpectAndReturnTest.floatType":5,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":166,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":178,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":255,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":199,"org.easymock.tests.UsageThrowableTest.noUpperLimit":76,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":221,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":130,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":184,"org.easymock.tests2.SerializationTest.test":219,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":151,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":315,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":77,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":4,"org.easymock.tests2.UsageConstraintsTest.testSame":189,"org.easymock.samples.SupportTest.addDocument":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":85,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":309,"org.easymock.tests2.CaptureTest.testCaptureFirst":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":316,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":233,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":10,"org.easymock.tests.GenericTest.testPackageScope":67,"org.easymock.tests2.UsageTest.moreThanOneArgument":223,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":216,"org.easymock.tests2.CaptureTest.testCapture2_2446744":158,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":267,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":333,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":114,"org.easymock.tests2.NameTest.nameForMock":298,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":34,"org.easymock.tests.UsageExpectAndReturnTest.longType":6,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":15,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":276,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":203,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":63,"org.easymock.tests2.UsageStrictMockTest.differentMethods":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":122,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":7,"org.easymock.tests.UsageCallCountTest.tooManyCalls":35,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":61,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":71,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":30,"org.easymock.tests2.MockedExceptionTest.testRealException":246,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":52,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":173,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":43,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":236,"org.easymock.tests2.NameTest.nameForStrictMock":299,"org.easymock.tests2.UsageConstraintsTest.testContains":193,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":245,"org.easymock.tests2.UsageConstraintsTest.testFind":187,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":74,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":234,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":164,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":262,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":235,"org.easymock.tests.UsageExpectAndReturnTest.object":13,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":200,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":167,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":329,"org.easymock.tests2.UsageStrictMockTest.range":175,"org.easymock.tests2.UsageConstraintsTest.lessThan":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":346,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":110,"org.easymock.tests.UsageTest.exactCallCountByLastCall":98,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":83,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":314,"org.easymock.tests2.CaptureTest.testCaptureRightOne":156,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":265,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":353,"org.easymock.tests2.UsageConstraintsTest.testOr":190,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":344,"org.easymock.tests.UsageRangeTest.combination":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":19,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":106,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":161,"org.easymock.tests.UsageTest.wrongArguments":93,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":118,"org.easymock.tests2.EasyMockSupportTest.testVerify":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":8,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":16,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":278,"org.easymock.tests.UsageVarargTest.varargShortAccepted":111,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":117,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":270,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":179,"org.easymock.tests2.UsageConstraintsTest.cmpTo":192,"org.easymock.tests.UsageVarargTest.varargCharAccepted":109,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":336,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests2.UsageTest.openCallCountByLastCall":227,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":228,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":277,"org.easymock.tests2.CaptureTest.testCaptureFromStub":157,"org.easymock.tests.UsageTest.unexpectedCallWithArray":280,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":337,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":78,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":32,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":17,"org.easymock.tests2.CaptureTest.testCapture":253,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":296,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":26,"org.easymock.tests2.UsageConstraintsTest.constraints":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":53,"org.easymock.samples.ExampleTest.addAndChangeDocument":144,"org.easymock.tests.CapturesMatcherTest.test":252,"org.easymock.tests.UsageStrictMockTest.testVerify":263,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":20,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":286,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":307,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":37,"org.easymock.tests2.UsageTest.resumeIfFailure":232,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":135,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":9,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":319,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":107}}]
