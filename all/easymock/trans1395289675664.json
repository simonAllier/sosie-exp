[{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,1],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[11,12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[14,15,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[17,18,19],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[20,21,22,23,24,25,13,26],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[27],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[28],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[29,29,30,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"status":-1,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:139","sourceCode":"return java.lang.Class<?>[][int].isPrimitive()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[29,29,30,30,84,20,85,86,87,88,89,90,31,32,91,92,33,93,94,21,34,95,35,96,97,98,99,100,101,102,36,103,104,37,105,106,107,108,109,110,111,112,113,38,114,115,116,117,118,39,119,120,22,121,23,122,123,2,3,124,125,126,127,4,5,128,6,129,130,131,132,133,134,135,136,137,7,138,139,140,141,142,143,144,24,11,145,25,12,13,146,147,148,149,8,150,9,151,152,153,154,155,156,157,10,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,40,199,42,43,200,201,44,45,46,202,47,203,48,49,204,51,52,53,205,54,55,56,57,206,58,207,208,59,60,61,62,209,210,63,64,65,66,211,67,68,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,70,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,71,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,17,18,267,268,269,19,270,271,272,273,72,73,74,274,75,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,76,312,313,314,315,316,317,0,77,78,79,1,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,80,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,14,386,387,388,389,81,390,391,82,392,393,394,395,396,397,398,399,400,15,16,401,402,403,404,83,405,26,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,27,469,470,471,472,473,474,475,476,477,478,479,480,481,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"position":"org.easymock.internal.LastControl:61","failures":[2,3,126,4,5,142,8,150,9,155,156,10,160,332,349,350,351],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[135,140,150,9,152,153,154,155,156,160],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[163],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[29,30,84,20,85,86,87,88,89,90,31,32,91,92,33,93,94,21,34,95,35,96,483,484,485,97,98,99,100,101,102,36,103,104,37,105,106,107,108,109,110,111,112,113,38,114,115,116,117,118,39,119,120,22,121,23,122,123,2,3,124,125,126,127,4,5,128,6,129,130,131,132,133,134,135,136,137,7,138,139,140,141,142,143,144,24,11,145,25,12,13,146,147,148,149,8,150,9,151,152,153,154,155,156,157,10,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,40,199,42,43,200,201,44,45,46,202,47,486,203,48,49,204,51,52,53,205,54,55,56,57,206,58,207,208,59,60,61,62,209,210,63,64,65,66,487,211,67,68,28,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,70,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,71,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,17,18,267,268,269,19,270,271,272,273,72,73,74,274,75,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,76,312,313,314,315,316,317,0,77,78,79,1,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,488,335,80,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,14,386,387,388,389,81,489,490,390,391,82,392,393,394,395,396,397,398,399,400,15,16,401,402,403,404,83,405,26,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,27,469,470,471,472,473,474,475,476,477,478,479,480,481,482],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[135,177,55,342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[84,20,85,86,87,88,90,31,32,91,92,33,93,94,21,34,95,35,36,37,38,39,22,23,122,123,2,3,125,126,127,4,5,128,6,129,130,131,132,133,134,135,136,137,7,138,139,140,141,142,143,144,24,25,12,13,8,150,9,151,152,153,154,155,156,157,10,159,160,161,162,163,164,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,42,44,46,47,49,52,53,205,54,55,56,58,60,61,62,63,64,65,66,211,67,68,214,215,221,229,230,231,232,70,240,71,250,251,252,253,254,255,256,257,258,264,265,73,74,75,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,307,308,309,310,77,78,321,322,323,325,326,327,328,329,330,331,332,333,334,80,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,14,386,397,398,399,400,15,16,401,402,83,26,407,408,410,412,413,414,415,416,449,450,451,452,453,454,455,456,457,458,463,466,467,474,476,477,478,479,481,482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[491,492],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[84,20,85,86,87,88,89,90,21,34,95,35,483,484,485,97,99,22,23,122,123,2,3,125,126,127,4,5,128,129,130,131,132,133,134,135,136,137,7,138,139,140,141,142,143,144,24,25,12,13,146,147,148,149,8,150,9,151,152,153,154,155,156,157,10,158,159,160,161,162,163,164,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,198,40,42,43,201,44,45,48,49,51,52,53,205,54,55,56,57,58,208,59,60,61,62,209,64,65,67,68,214,229,230,231,232,70,247,248,71,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,17,272,273,73,74,274,75,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,302,303,304,307,308,309,310,311,76,312,313,314,315,316,317,77,78,321,322,323,325,326,327,328,329,330,331,332,333,334,80,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,14,386,81,390,391,82,392,393,397,398,399,400,15,16,401,402,83,26,406,407,408,410,411,412,413,414,415,416,441,442,443,444,445,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,469,470,471,472,473,474,475,476,477,478,479,480,481,482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[439],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[6],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[172,258,351,353,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,384,14,397,399,400,15,16,401,402,408,420,446,447,448,463],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:77","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[494,495],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[29,29,30,30,84,20,85,86,87,88,90,31,32,91,92,33,93,94,21,34,95,35,36,37,38,39,22,23,122,123,2,3,125,126,127,4,5,128,6,129,130,131,132,133,134,135,136,137,7,138,139,140,141,142,143,144,24,11,145,25,12,13,8,150,9,151,152,153,154,155,156,157,10,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,42,44,46,47,49,52,53,205,54,55,56,58,60,61,62,63,64,65,66,211,67,68,214,215,221,229,230,231,232,70,240,247,248,71,249,250,251,252,253,254,255,256,257,258,264,265,73,74,75,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,307,308,309,310,77,78,79,319,321,322,323,325,326,327,328,329,330,331,332,333,334,335,80,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,14,386,387,388,389,394,395,396,397,398,399,400,15,16,401,402,83,26,407,408,410,412,413,414,415,416,433,439,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,466,467,469,470,471,472,473,474,476,477,478,479,481,482],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[17,18,267,268,19,271],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[29,30,84,20,85,86,87,88,89,90,31,32,91,92,33,93,94,21,34,95,35,96,97,98,99,100,101,102,36,103,104,37,105,106,107,108,109,110,111,112,113,38,114,115,116,117,118,39,119,120,22,121,23,122,123,2,3,124,125,126,127,4,5,128,6,129,130,131,132,133,134,135,136,137,7,138,139,140,141,142,143,144,24,11,145,25,12,13,146,147,148,149,8,150,9,151,152,153,154,155,156,157,10,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,40,42,43,201,44,45,46,47,203,48,49,51,52,53,205,54,55,56,57,206,58,207,208,59,60,61,62,209,210,63,64,65,66,487,211,67,68,28,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,70,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,71,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,17,18,267,268,269,19,271,272,273,72,73,74,274,75,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,76,312,313,314,315,316,317,0,77,78,79,1,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,80,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,14,386,387,388,389,81,489,490,390,391,82,392,393,394,395,396,397,398,399,400,15,16,401,402,403,404,83,405,26,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,27,469,470,471,472,473,474,475,476,477,478,479,480,481,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[139],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[136,496],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[29,30,199,497,204,207],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageTest.argumentsOrdered":182,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":353,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":427,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":177,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":92,"org.easymock.tests2.DelegateToTest.testReturnException":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":460,"org.easymock.tests.MockingTest.testPartialClassMocking":73,"org.easymock.tests.MockClassControlTest.testToString":312,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":228,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":108,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":362,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":215,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":128,"org.easymock.tests2.UsageTest.wrongArguments":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":348,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":261,"org.easymock.samples.ExampleTest.answerVsDelegate":20,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":82,"org.easymock.tests2.UsageConstraintsTest.testNull":126,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":276,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":54,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":194,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":317,"org.easymock.tests2.CaptureTest.testPrimitive":151,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":352,"org.easymock.tests.UsageTest.moreThanOneArgument":354,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":381,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":471,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":465,"org.easymock.tests.UsageTest.argumentsOrdered":360,"org.easymock.tests.UsageVarargTest.varargIntAccepted":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":412,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":245,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":416,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":221,"org.easymock.tests.ReplayStateInvalidUsageTest.times":344,"org.easymock.tests2.DependencyTest.testClassMocking":212,"org.easymock.tests2.AnswerTest.answer":24,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":434,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":149,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":490,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":189,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":309,"org.easymock.tests2.DelegateToTest.testDelegate":171,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":377,"org.easymock.tests.LimitationsTest.mockFinalMethod":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":463,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":445,"org.easymock.tests2.DependencyTest.testClassMockingSupport":213,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":298,"org.easymock.tests2.CaptureTest.testCapture1_2446744":152,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":147,"org.easymock.tests.UsageThrowableTest.throwError":397,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":338,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":391,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":488,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":120,"org.easymock.samples.PartialClassMockTest.testGetArea":33,"org.easymock.tests.MockingTest.testInterfaceMocking":274,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":413,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":388,"org.easymock.tests2.UsageTest.niceToStrict":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":109,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":306,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":44,"org.easymock.tests2.MockBuilderTest.testCreateMock":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":116,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":224,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":371,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":190,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":489,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":448,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":474,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":259,"org.easymock.tests.UsageOverloadedMethodTest.overloading":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":113,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":408,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":289,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":382,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":491,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":132,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":157,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":324,"org.easymock.tests2.EasyMockSupportClassTest.testAll":36,"org.easymock.tests.MockClassControlTest.testEquals":316,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":379,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":443,"org.easymock.tests2.CaptureTest.testCaptureAll":150,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":148,"org.easymock.tests.MockNameTest.defaultName":263,"org.easymock.tests2.UsageConstraintsTest.testMatches":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":472,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":336,"org.easymock.samples.ExampleTest.voteForRemovals":88,"org.easymock.tests.UsageVarargTest.allKinds":332,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":385,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":444,"org.easymock.samples.BasicClassMockTest.testPrintContent":32,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":401,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":464,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":242,"org.easymock.tests2.UsageConstraintsTest.greaterThan":136,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":308,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":62,"org.easymock.samples.ExampleTest.voteForRemoval":85,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":271,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":162,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":209,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":392,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":57,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":172,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":80,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":187,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":459,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":166,"org.easymock.tests2.CaptureTest.testCaptureFirst":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":188,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":184,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":285,"org.easymock.tests2.UsageTest.moreThanOneArgument":174,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":164,"org.easymock.tests2.CaptureTest.testCapture2_2446744":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":49,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":331,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":481,"org.easymock.tests.UsageExpectAndReturnTest.longType":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":441,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":185,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":380,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":140,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":469,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":395,"org.easymock.tests.UsageCallCountTest.tooManyCalls":482,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":286,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":367,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":64,"org.easymock.tests.MockingTest.testNiceClassMocking":277,"org.easymock.tests.MockingTest.testClassMocking":273,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":475,"org.easymock.tests2.UsageConstraintsTest.testContains":131,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":41,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":71,"org.easymock.tests2.UsageConstraintsTest.testFind":125,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":384,"org.easymock.tests.MockTypeTest.fromEasyMockClass":390,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":450,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":23,"org.easymock.tests.UsageExpectAndReturnTest.object":288,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":193,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":326,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":304,"org.easymock.tests.UsageTest.exactCallCountByLastCall":361,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":466,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":318,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":233,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":294,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":321,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":407,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":236,"org.easymock.tests.MockClassControlTest.testHashCode":315,"org.easymock.tests2.EasyMockSupportTest.testVerify":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":111,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":467,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":447,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":146,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":198,"org.easymock.tests.UsageVarargTest.varargCharAccepted":325,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":266,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":440,"org.easymock.tests2.UsageTest.openCallCountByLastCall":178,"org.easymock.tests.DefaultClassInstantiatorTest.object":17,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":196,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":446,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":369,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":400,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":219,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":235,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":60,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":314,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":368,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":295,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":39,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":313,"org.easymock.tests2.UsageTest.resumeIfFailure":183,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":81,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":462,"org.easymock.tests2.StubTest.stubWithReturnValue":258,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":202,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":141,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":287,"org.easymock.tests2.SerializationTest.testAllMockedMethod":35,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":433,"org.easymock.samples.SupportTest.voteForRemovals":94,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":374,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":439,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":11,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":320,"org.easymock.tests.UsageExpectAndThrowTest.object":372,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":138,"org.easymock.tests2.DelegateToTest.testWrongClass":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":333,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":334,"org.easymock.tests.UsageStrictMockTest.range":455,"org.easymock.samples.ConstructorCalledMockTest.testTax":29,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":98,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":192,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":373,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":100,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":346,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":260,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":389,"org.easymock.tests2.CaptureTest.testCaptureNone":156,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":494,"org.easymock.tests.UsageUnorderedTest.message":449,"org.easymock.tests.UsageVerifyTest.twoReturns":386,"org.easymock.tests.UsageVarargTest.varargByteAccepted":330,"org.easymock.tests2.ThreadingTest.testThreadSafe":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":114,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":479,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":31,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":305,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":351,"org.easymock.tests2.UsageConstraintsTest.any":129,"org.easymock.tests2.StubTest.stub":257,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":343,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndThrowTest.longType":365,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":269,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":342,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":253,"org.easymock.tests2.SerializationTest.testClass":34,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":240,"org.easymock.tests.LimitationsTest.mockNativeMethod":83,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":79,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":297,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":218,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":256,"org.easymock.tests2.NameTest.nameForMocksControl":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":220,"org.easymock.tests2.MockedExceptionTest.testMockedException":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":104,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":358,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":121,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":75,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":366,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":52,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":47,"org.easymock.tests.MockingTest.testNicePartialClassMocking":74,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":56,"org.easymock.tests2.CompareToTest.testCompareEqual":493,"org.easymock.tests2.CaptureTest.testCaptureLast":155,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":216,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":299,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":68,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":139,"org.easymock.tests.MockingTest.testTwoMocks":72,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":278,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":370,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":181,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":143,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":495,"org.easymock.samples.ExampleTest.removeNonExistingDocument":89,"org.easymock.tests.UsageStrictMockTest.differentMethods":456,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":223,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":237,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":267,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":163,"org.easymock.tests2.MockBuilderTest.testCreateMockString":51,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":105,"org.easymock.tests.UsageExpectAndThrowTest.floatType":364,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":102,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":25,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":234,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":38,"org.easymock.samples.ExampleTest.voteAgainstRemoval":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":428,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":387,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":61,"org.easymock.tests.LimitationsTest.privateConstructor":404,"org.easymock.tests2.UsageConstraintsTest.testNotNull":142,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":402,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":247,"org.easymock.tests2.UsageTest.defaultResetToNice":180,"org.easymock.samples.ExampleTest.voteAgainstRemovals":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":293,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":217,"org.easymock.tests.UsageVarargTest.differentLength":327,"org.easymock.tests2.CallbackTest.callback":21,"org.easymock.tests2.UsageConstraintsTest.equals":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":207,"org.easymock.tests.UsageTest.openCallCountByLastCall":357,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":350,"org.easymock.tests.UsageCallCountTest.tooFewCalls":477,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":262,"org.easymock.tests.UsageThrowableTest.throwCheckedException":15,"org.easymock.tests.MockingTest.testStrictClassMocking":272,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":67,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":265,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":222,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":211,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":13,"org.easymock.tests.ObjectMethodsTest.testHashCode":303,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":165,"org.easymock.tests2.NameTest.nameForNiceMock":231,"org.easymock.tests2.DependencyTest.testInterfaceMocking":214,"org.easymock.samples.ExampleTest.addDocument":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":115,"org.easymock.tests2.DelegateToTest.testStubDelegate":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":119,"org.easymock.tests2.AnswerTest.stubAnswer":12,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":453,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":486,"org.easymock.tests.UsageVarargTest.varargLongAccepted":329,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndReturnTest.floatType":280,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":296,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":70,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":30,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":409,"org.easymock.tests.UsageThrowableTest.noUpperLimit":398,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":244,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":123,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":96,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":153,"org.easymock.tests2.SerializationTest.test":95,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":492,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":18,"org.easymock.tests2.UsageConstraintsTest.testSame":127,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":279,"org.easymock.samples.SupportTest.addDocument":93,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":487,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":106,"org.easymock.tests.GenericTest.testPackageScope":77,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":243,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":275,"org.easymock.tests2.NameTest.nameForMock":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":290,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":204,"org.easymock.tests2.UsageStrictMockTest.differentMethods":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":282,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":376,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":301,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":310,"org.easymock.tests2.MockedExceptionTest.testRealException":249,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":430,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":252,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":349,"org.easymock.tests2.NameTest.nameForStrictMock":230,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":201,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":22,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":97,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":7,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":268,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":254,"org.easymock.tests2.UsageConstraintsTest.lessThan":144,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":110,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":4,"org.easymock.tests.UsageRangeTest.combination":307,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":53,"org.easymock.tests.UsageTest.wrongArguments":356,"org.easymock.tests2.MockBuilderTest.testWithConstructor":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":107,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":76,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":291,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":19,"org.easymock.tests.UsageVarargTest.varargShortAccepted":328,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":480,"org.easymock.tests2.UsageConstraintsTest.cmpTo":130,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":420,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":179,"org.easymock.tests2.CaptureTest.testCaptureFromStub":158,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":337,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":43,"org.easymock.tests.UsageTest.unexpectedCallWithArray":355,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":452,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":478,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":497,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":292,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":454,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.samples.ExampleTest.addAndChangeDocument":90,"org.easymock.tests.UsageStrictMockTest.testVerify":458,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":91,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":451,"org.easymock.tests2.CompareToTest.testGreateThan":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":442,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":414,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":69,"org.easymock.tests.LimitationsTest.abstractClass":403,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":415,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":191,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":322}}]
