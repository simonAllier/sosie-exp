[{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[3,4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[8,9,10,11,12,13,14,15,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,36,37,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.Range:36","failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,18,19,73,74,75,20,21,22,23,76,77,78,79,80,24,81,25,26,82,27,28,29,83,84,85,86,30,31,32,87,88,89,90,91,92,93,0,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,1,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,17,128,129,130,3,131,4,132,133,134,135,136,137,138,139,140,141,142,143,144,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,34,160,161,162,163,164,165,166,167,168,35,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,5,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,36,37,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,38,39,40,41,42,276,8,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,2,294,295,296,297,298,299,300,301,302,43,303,44,45,304,305,46,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,47,48,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,9,10,11,378,379,380,381,382,383,384,385,386,12,387,13,388,389,390,391,392,393,394,395,14,15,396,16,397,398,399,400,401,402,403,404,405,406,407,408,49,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,50,51,52,53,54,472,473,474,475,476,477,478,479,480,481,482,6,483,7,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[488,489,490,491,408,417],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,18,19,73,74,75,20,21,22,23,76,77,78,79,80,24,81,25,26,82,27,28,29,83,84,85,86,30,31,32,492,493,494,495,496,497,87,89,90,92,93,0,94,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,1,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,498,127,17,128,129,130,3,131,4,132,133,134,135,136,137,138,139,140,141,142,143,144,33,145,146,147,148,149,151,152,153,154,155,156,157,158,159,34,160,161,162,163,164,165,167,168,35,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,5,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,36,37,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,38,39,40,41,42,276,8,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,2,294,295,296,297,299,300,301,302,43,303,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,44,45,304,305,46,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,47,48,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,9,10,11,378,379,380,381,382,383,384,385,386,12,387,13,388,389,390,391,392,393,394,395,14,15,396,16,397,398,399,400,401,402,403,404,405,406,407,408,49,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,442,443,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,50,51,52,53,54,472,473,474,475,476,477,478,479,480,481,482,6,483,7,484,485,486,487],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,18,19,73,74,75,20,21,22,23,76,77,78,79,80,24,81,25,26,82,27,28,29,83,84,85,86,30,31,32,496,87,89,90,92,93,0,94,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,1,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,498,127,17,128,129,130,3,131,4,132,133,134,135,136,137,138,139,140,141,142,143,144,33,145,146,147,148,149,151,152,153,154,155,156,157,158,159,34,160,161,162,163,164,165,167,168,35,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,5,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,36,37,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,38,39,40,41,42,276,8,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,2,294,295,296,297,299,300,301,302,43,303,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,44,45,304,305,46,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,47,48,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,9,10,11,378,379,380,381,382,383,384,385,386,12,387,13,388,389,390,391,392,393,394,395,14,15,396,16,397,398,399,400,401,402,403,404,405,406,407,408,49,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,442,443,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,50,51,52,53,54,472,473,474,475,476,477,478,479,480,481,482,6,483,7,484,485,486,487],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[439,440,441,443,445],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[94,354],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[468],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,18,19,73,74,75,20,21,22,23,76,77,78,79,80,24,81,25,26,82,27,28,29,83,84,85,86,30,31,32,87,88,89,90,91,92,93,0,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,1,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,17,128,129,130,3,131,4,132,133,134,135,136,137,138,139,140,141,142,143,144,33,145,146,147,151,152,153,154,155,156,157,158,159,34,160,161,162,163,164,165,166,167,168,35,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,5,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,253,254,36,36,37,37,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,38,39,40,41,42,276,8,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,2,294,295,296,297,299,300,301,302,43,303,44,45,304,305,46,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,352,353,354,355,356,47,48,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,9,10,11,378,379,380,381,382,383,384,385,386,12,387,13,388,389,390,391,392,393,394,395,14,15,396,16,397,398,399,400,401,402,403,404,405,406,407,408,49,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,50,51,52,53,54,472,473,474,475,476,477,478,479,480,481,482,6,483,7,484,485,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type","org.easymock.MockType.NICE":"type"}},{"position":"org.easymock.internal.Range:40","failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,18,19,73,74,75,20,21,22,23,76,77,78,79,80,24,81,25,26,82,27,28,29,83,84,85,86,30,31,32,87,88,89,90,91,92,93,0,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,1,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,17,128,129,130,3,131,4,132,133,134,135,136,137,138,139,140,141,142,143,144,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,34,160,161,162,163,164,165,166,167,168,35,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,5,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,36,37,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,38,39,40,41,42,276,8,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,2,294,295,296,297,298,299,300,301,302,43,303,44,45,304,305,46,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,47,48,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,9,10,11,378,379,380,381,382,383,384,385,386,12,387,13,388,389,390,391,392,393,394,395,14,15,396,16,397,398,399,400,401,402,403,404,405,406,407,408,49,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,50,51,52,53,54,472,473,474,475,476,477,478,479,480,481,482,6,483,7,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[259,260,262,263,265,40],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,18,19,73,74,75,20,21,22,23,76,77,78,79,80,24,81,25,26,82,27,28,29,83,84,85,86,30,31,32,87,89,90,92,93,0,94,96,98,99,100,102,103,104,105,106,107,108,109,110,111,1,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,17,128,129,130,3,131,4,132,133,134,135,136,137,138,139,140,141,142,143,144,33,145,146,147,151,152,153,154,155,156,157,158,159,34,160,161,162,163,164,165,167,168,35,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,5,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,253,254,36,36,37,37,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,38,39,40,41,42,276,8,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,2,294,295,296,297,299,300,301,302,43,303,44,45,304,305,46,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,352,353,354,355,356,47,48,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,9,10,11,378,379,380,381,382,383,384,385,386,12,387,13,388,389,390,391,392,393,394,395,14,15,396,16,397,398,399,400,401,402,403,404,405,406,407,408,49,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,442,443,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,50,51,52,53,54,472,473,474,475,476,477,478,479,480,481,482,6,483,7,484,485,486,487],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[103,104,105,521],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[103,104,105,521],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[18,19,73,74,20,21,22,23,76,77,78,79,80,24,81,25,26,82,27,28,29,83,84,85,86,30,31,32,113,128,134,135,136,137,138,139,140,141,142,143,144,33,145,146,154,35,240,242,38,39,40,41,42,293,43,303,44,45,304,305,46,47,48,400,408,49,431],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[278],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[21,78,29,30],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[87,522,89,90,93,0,94,96,99,100,523,102,103,105,106,107,109,110,111,1,113,116,117,118,119,524,525,526,162,164,176,179,189,195,244,245,246,247,250,251,253,254,36,36,37,37,256,294,295,296,333,349,354,376,414,475,476,477,479],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[442,527,528],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[529],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[492],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[132,380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:162","sourceCode":"org.easymock.internal.matchers.Captures<java.lang.Object>.setPotentialValue(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[170,213,219,220,530,400,408,410,417,418,421,422,470,471,487],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[442,527,528],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[531,532,533],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[2,297],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":74,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":415,"org.easymock.tests2.UsageTest.argumentsOrdered":220,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":70,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":387,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":215,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":255,"org.easymock.tests2.DelegateToTest.testReturnException":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":428,"org.easymock.tests.MockingTest.testPartialClassMocking":476,"org.easymock.tests.MockClassControlTest.testToString":334,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":55,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":183,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":312,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":158,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":520,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":44,"org.easymock.tests2.UsageTest.wrongArguments":213,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":209,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":435,"org.easymock.samples.ExampleTest.answerVsDelegate":261,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":354,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":481,"org.easymock.tests2.UsageConstraintsTest.testNull":21,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":109,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":69,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":339,"org.easymock.tests2.CaptureTest.testPrimitive":137,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":46,"org.easymock.tests.UsageTest.moreThanOneArgument":416,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":331,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":52,"org.easymock.tests.UsageTest.argumentsOrdered":422,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":357,"org.easymock.tests.UsageVarargTest.varargIntAccepted":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":38,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":149,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":238,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":42,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":504,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests.ReplayStateInvalidUsageTest.times":370,"org.easymock.tests2.DependencyTest.testClassMocking":155,"org.easymock.tests2.AnswerTest.answer":5,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":393,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":125,"org.easymock.tests2.CaptureTest.testAnd":134,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":351,"org.easymock.tests2.UsageTest.strictResetToDefault":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":116,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":64,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":301,"org.easymock.tests2.DelegateToTest.testDelegate":133,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":361,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":503,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":327,"org.easymock.tests.LimitationsTest.mockFinalMethod":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":431,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":405,"org.easymock.tests2.DependencyTest.testClassMockingSupport":156,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":466,"org.easymock.tests2.CaptureTest.testCapture1_2446744":138,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":123,"org.easymock.tests.UsageThrowableTest.throwError":268,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":364,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":353,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":239,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":197,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":507,"org.easymock.samples.PartialClassMockTest.testGetArea":256,"org.easymock.tests.MockingTest.testInterfaceMocking":478,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":184,"org.easymock.tests2.UsageTest.niceToStrict":214,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":313,"org.easymock.tests2.ThreadingTest.testChangeDefault":498,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":531,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":93,"org.easymock.tests2.MockBuilderTest.testCreateMock":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":206,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":488,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":321,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":65,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":350,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":399,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":433,"org.easymock.tests.UsageOverloadedMethodTest.overloading":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":194,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":484,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":25,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":457,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":279,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":527,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":81,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":143,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":285,"org.easymock.tests2.EasyMockSupportClassTest.testAll":176,"org.easymock.tests.MockClassControlTest.testEquals":338,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":295,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":329,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":524,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":403,"org.easymock.tests2.CaptureTest.testCaptureAll":135,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":124,"org.easymock.tests.MockNameTest.defaultName":472,"org.easymock.tests2.UsageConstraintsTest.testMatches":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":53,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":362,"org.easymock.samples.ExampleTest.voteForRemovals":265,"org.easymock.tests.UsageVarargTest.allKinds":293,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":469,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":404,"org.easymock.samples.BasicClassMockTest.testPrintContent":254,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":274,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":432,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":235,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":444,"org.easymock.tests2.UsageConstraintsTest.greaterThan":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":119,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":508,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":445,"org.easymock.samples.ExampleTest.voteForRemoval":262,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":127,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":120,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":355,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":1,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":500,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":414,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":62,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":427,"org.easymock.tests2.CaptureTest.testCaptureFirst":146,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":63,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":222,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":487,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":453,"org.easymock.tests2.CaptureTest.testCapture2_2446744":145,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":128,"org.easymock.tests2.UsageTest.moreThanOneArgument":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":394,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":100,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":292,"org.easymock.tests.GenericTest.testBridgedEquals":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":347,"org.easymock.tests.UsageExpectAndReturnTest.longType":449,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":401,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":60,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":523,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":330,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":85,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":328,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":425,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":50,"org.easymock.tests.UsageCallCountTest.tooManyCalls":348,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":454,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":208,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":273,"org.easymock.tests.MockingTest.testNiceClassMocking":482,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":245,"org.easymock.tests.MockingTest.testClassMocking":474,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":522,"org.easymock.tests2.UsageConstraintsTest.testContains":24,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":341,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":162,"org.easymock.tests2.UsageConstraintsTest.testFind":20,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":281,"org.easymock.tests.MockTypeTest.fromEasyMockClass":352,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":406,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":242,"org.easymock.tests.UsageExpectAndReturnTest.object":456,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":68,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":287,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":309,"org.easymock.tests.UsageTest.exactCallCountByLastCall":423,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":276,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":358,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":165,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":462,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":282,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":7,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":229,"org.easymock.tests.MockClassControlTest.testHashCode":337,"org.easymock.tests2.EasyMockSupportTest.testVerify":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":186,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":359,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":398,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":6,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":122,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":154,"org.easymock.tests.UsageVarargTest.varargCharAccepted":286,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":437,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":16,"org.easymock.tests2.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":532,"org.easymock.tests.DefaultClassInstantiatorTest.object":438,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":71,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":397,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":307,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":530,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":187,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":319,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":201,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":228,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":506,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":117,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":318,"org.easymock.tests.ReplayStateInvalidCallsTest.times":512,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":463,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":424,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":195,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":335,"org.easymock.tests2.UsageTest.resumeIfFailure":221,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":349,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":430,"org.easymock.tests2.StubTest.stubWithReturnValue":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":455,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":86,"org.easymock.tests2.SerializationTest.testAllMockedMethod":105,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":392,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":489,"org.easymock.samples.SupportTest.voteForRemovals":259,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":324,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":521,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":396,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":223,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":277,"org.easymock.tests.UsageExpectAndThrowTest.object":322,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":83,"org.easymock.tests2.DelegateToTest.testWrongClass":4,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":510,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":47,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":48,"org.easymock.tests.UsageStrictMockTest.range":410,"org.easymock.samples.ConstructorCalledMockTest.testTax":36,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":152,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":67,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":244,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":323,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":94,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":173,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":434,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":490,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":502,"org.easymock.tests2.CaptureTest.testCaptureNone":142,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":11,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":493,"org.easymock.tests.UsageUnorderedTest.message":400,"org.easymock.tests.UsageVerifyTest.twoReturns":471,"org.easymock.tests.UsageVarargTest.varargByteAccepted":291,"org.easymock.tests2.ThreadingTest.testThreadSafe":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":190,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":345,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":253,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":310,"org.easymock.tests2.CaptureTest.testCapture_2617107":136,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":305,"org.easymock.tests2.UsageConstraintsTest.any":79,"org.easymock.tests2.StubTest.stub":159,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":369,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":15,"org.easymock.tests.UsageExpectAndThrowTest.longType":315,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":442,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":368,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":169,"org.easymock.tests2.SerializationTest.testClass":103,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":233,"org.easymock.tests.LimitationsTest.mockNativeMethod":376,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":465,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":296,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":526,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":200,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":518,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":172,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":494,"org.easymock.tests2.NameTest.nameForMocksControl":59,"org.easymock.tests2.MockedExceptionTest.testMockedException":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":178,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":420,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":479,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":316,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":106,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":96,"org.easymock.tests.MockingTest.testNicePartialClassMocking":477,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":111,"org.easymock.tests2.CaptureTest.testCaptureLast":141,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":198,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":467,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":517,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":76,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":251,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":84,"org.easymock.tests.MockingTest.testTwoMocks":475,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":514,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":446,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":320,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":31,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":497,"org.easymock.samples.ExampleTest.removeNonExistingDocument":266,"org.easymock.tests.UsageStrictMockTest.differentMethods":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":205,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":230,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":496,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":440,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":17,"org.easymock.tests2.MockBuilderTest.testCreateMockString":102,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":180,"org.easymock.tests.UsageExpectAndThrowTest.floatType":314,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":175,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":225,"org.easymock.tests.UsageVerifyTest.twoThrows":470,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":166,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":189,"org.easymock.samples.ExampleTest.voteAgainstRemoval":263,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":13,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":118,"org.easymock.tests.LimitationsTest.privateConstructor":375,"org.easymock.tests2.UsageConstraintsTest.testNotNull":30,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":160,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":275,"org.easymock.tests2.UsageTest.defaultResetToNice":218,"org.easymock.samples.ExampleTest.voteAgainstRemovals":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":388,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":199,"org.easymock.tests.UsageVarargTest.differentLength":288,"org.easymock.tests2.CallbackTest.callback":243,"org.easymock.tests2.UsageConstraintsTest.equals":75,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":114,"org.easymock.tests.UsageTest.openCallCountByLastCall":419,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":304,"org.easymock.tests.UsageCallCountTest.tooFewCalls":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":436,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":495,"org.easymock.tests.UsageThrowableTest.throwCheckedException":272,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":491,"org.easymock.tests.MockingTest.testStrictClassMocking":473,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":250,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":204,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":246,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":371,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":249,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":227,"org.easymock.tests.ObjectMethodsTest.testHashCode":308,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":516,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":129,"org.easymock.tests2.NameTest.nameForNiceMock":58,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":511,"org.easymock.tests2.DependencyTest.testInterfaceMocking":157,"org.easymock.samples.ExampleTest.addDocument":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":191,"org.easymock.tests2.DelegateToTest.testStubDelegate":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":196,"org.easymock.tests2.AnswerTest.stubAnswer":226,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":49,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":97,"org.easymock.tests.UsageVarargTest.varargLongAccepted":290,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":12,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":464,"org.easymock.tests.UsageExpectAndReturnTest.floatType":448,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":164,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":37,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":485,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":237,"org.easymock.tests.UsageThrowableTest.noUpperLimit":269,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":19,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":147,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":139,"org.easymock.tests2.SerializationTest.test":104,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":528,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":447,"org.easymock.tests2.UsageConstraintsTest.testSame":22,"org.easymock.samples.SupportTest.addDocument":258,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":248,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":501,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":181,"org.easymock.tests.GenericTest.testPackageScope":294,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":236,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":480,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":499,"org.easymock.tests2.NameTest.nameForMock":56,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":458,"org.easymock.tests2.UsageStrictMockTest.differentMethods":171,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":101,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":115,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":450,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":326,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":306,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":302,"org.easymock.tests2.MockedExceptionTest.testRealException":163,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":389,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":45,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":373,"org.easymock.tests2.NameTest.nameForStrictMock":57,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":92,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":533,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":240,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":110,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":151,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":441,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":29,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":89,"org.easymock.tests2.UsageStrictMockTest.range":170,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":505,"org.easymock.tests2.UsageConstraintsTest.lessThan":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":185,"org.easymock.tests2.CaptureTest.testCaptureRightOne":144,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":492,"org.easymock.tests2.UsageConstraintsTest.testOr":23,"org.easymock.tests.UsageRangeTest.combination":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":107,"org.easymock.tests.UsageTest.wrongArguments":418,"org.easymock.tests2.MockBuilderTest.testWithConstructor":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":182,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":379,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":443,"org.easymock.tests.UsageVarargTest.varargShortAccepted":289,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":346,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":519,"org.easymock.tests2.UsageConstraintsTest.cmpTo":80,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":224,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":509,"org.easymock.tests2.CompareToTest.testLessThan":529,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":381,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests2.CaptureTest.testCaptureFromStub":33,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":363,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":90,"org.easymock.tests.UsageTest.unexpectedCallWithArray":417,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":515,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":408,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":344,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":460,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":409,"org.easymock.tests2.UsageConstraintsTest.constraints":73,"org.easymock.samples.ExampleTest.addAndChangeDocument":267,"org.easymock.tests.UsageStrictMockTest.testVerify":413,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":257,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":407,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":402,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":140,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":525,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":452,"org.easymock.tests.LimitationsTest.abstractClass":374,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":66,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":283}}]
