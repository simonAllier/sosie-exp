[{"position":"org.easymock.internal.ReflectionUtils:117","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,39,40,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[56,57,58,59,60,61,62,63,64],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[66,67,68,69,70,71,56,72,57,73,74,62,75,76,77,78,79],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,80,4,5,6,7,81,8,9,10,11,82,12,83,84,13,14,15,16,85,86,87,88,66,67,89,90,68,91,69,70,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,71,108,109,110,111,112,17,113,114,18,115,116,117,118,119,120,121,122,123,19,124,125,126,127,128,20,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,21,175,22,56,72,57,176,58,59,60,73,74,61,62,63,64,75,177,178,23,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,26,28,29,214,30,31,32,33,215,34,35,37,216,217,218,219,220,221,38,222,223,224,225,226,227,228,229,230,231,232,233,234,235,39,40,236,237,238,239,240,241,242,243,244,245,246,41,42,43,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,76,267,268,269,270,271,272,273,274,275,276,277,278,44,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,45,46,47,350,48,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,49,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,50,442,443,444,445,446,447,448,449,450,451,452,453,454,51,455,456,52,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,53,54,55,473,474,77,78,79,475],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[21,175,22,476],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"suffix","key":"suffix"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[158,184,346,377],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[448,449,450,451,453,454],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[197],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[66,92,98,109,477],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[165,169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[478,479,341,374,480,481],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[482,483,484,485,486,487,488,38],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[11,14,15,86,18,19,20,21,26,28,29,30,32,33,35,37,43,51,52,55],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[482,483,484,485,486,487,488,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[483,484,485,486,487,489,222],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[66,67,68,69,70,93,103,71,56,57,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[2,5,490,491,492,110,111,112,17,113,114,18,115,116,117,118,119,120,121,122,123,19,124,125,126,127,128,20,129,130,21,493,494,489,215,495,496,38,222,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[150,151,157,158,478,497,479,498,340,341,342,345,346,374,480,481,499],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[7,14,16,66,100,148,151,152,153,157,158,159,160,174,180,183,184,185,28,34,35,37,224,228,229,232,262,270,339,341,342,345,346,347,355,356,366,372,374,376,377,378,438,439,440,500,501,502,503],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[21,175,22,476],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[133],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[27,36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[452,504,505],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:159","failures":[83,493,495,496,39,40],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[94,254],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[188,189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[136,137,138,139,140,142,143,144,145,146,147,202,203,204,205,206,208,209,210,211,212,213,456],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[0,1,2,3,80,4,5,6,7,81,8,9,10,12,14,15,16,87,88,66,67,90,68,91,69,70,92,94,95,96,97,98,99,100,101,102,103,104,105,107,71,108,109,17,18,19,20,131,132,133,134,135,141,148,149,150,152,154,155,156,159,160,167,21,175,56,72,176,58,73,74,61,62,64,75,23,182,184,185,191,195,196,207,28,30,32,33,35,217,38,223,224,225,226,227,228,229,230,231,232,233,234,237,239,241,242,244,43,248,249,250,251,252,254,270,271,272,273,44,280,282,283,284,285,286,287,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,325,339,340,343,344,347,46,47,48,354,356,375,377,378,429,430,431,459,460,53,55,474,77,475],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[151,157,158,184,341,342,345,346,355,356,366,374,377,503],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[478,479,341,374,480,481],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[66,67,68,69,70,93,103,71,56,57,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":67,"org.easymock.tests2.UsageTest.argumentsOrdered":158,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":339,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":233,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":411,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":153,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":247,"org.easymock.tests2.DelegateToTest.testReturnException":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":467,"org.easymock.tests.MockingTest.testPartialClassMocking":46,"org.easymock.tests.MockClassControlTest.testToString":442,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":197,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":118,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":18,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":381,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":483,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":474,"org.easymock.tests2.UsageTest.wrongArguments":151,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":147,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":427,"org.easymock.samples.ExampleTest.answerVsDelegate":240,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":52,"org.easymock.tests2.UsageConstraintsTest.testNull":68,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":352,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":8,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":447,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":232,"org.easymock.tests2.CaptureTest.testPrimitive":176,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":475,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":400,"org.easymock.tests.UsageTest.moreThanOneArgument":340,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":332,"org.easymock.tests.UsageTest.argumentsOrdered":346,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":367,"org.easymock.tests.UsageVarargTest.varargIntAccepted":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":248,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":487,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":212,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":252,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests.ReplayStateInvalidUsageTest.times":296,"org.easymock.tests2.DependencyTest.testClassMocking":193,"org.easymock.tests2.AnswerTest.answer":187,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":418,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":164,"org.easymock.tests2.CaptureTest.testAnd":56,"org.easymock.tests2.UsageTest.strictResetToDefault":149,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":494,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":272,"org.easymock.tests2.DelegateToTest.testDelegate":170,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":371,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":396,"org.easymock.tests.LimitationsTest.mockFinalMethod":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":470,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":465,"org.easymock.tests2.DependencyTest.testClassMockingSupport":194,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":335,"org.easymock.tests2.CaptureTest.testCapture1_2446744":58,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":394,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":162,"org.easymock.tests.UsageThrowableTest.throwError":280,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":290,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":456,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":501,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":334,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":130,"org.easymock.samples.PartialClassMockTest.testGetArea":43,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":291,"org.easymock.tests.MockingTest.testInterfaceMocking":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":249,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":268,"org.easymock.tests2.UsageTest.niceToStrict":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":119,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":30,"org.easymock.tests2.MockBuilderTest.testCreateMock":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":126,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":144,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":478,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":390,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":228,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":329,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":432,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":425,"org.easymock.tests.UsageOverloadedMethodTest.overloading":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":123,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":98,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":323,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":429,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":311,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":504,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":97,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":61,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":259,"org.easymock.tests.MockClassControlTest.testEquals":446,"org.easymock.tests2.EasyMockSupportClassTest.testAll":17,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":398,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":463,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":163,"org.easymock.tests2.CaptureTest.testCaptureAll":72,"org.easymock.tests.MockNameTest.defaultName":253,"org.easymock.tests2.UsageConstraintsTest.testMatches":99,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":333,"org.easymock.samples.ExampleTest.voteForRemovals":244,"org.easymock.tests.UsageVarargTest.allKinds":76,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":354,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":464,"org.easymock.samples.BasicClassMockTest.testPrintContent":42,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":286,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":471,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":488,"org.easymock.tests2.UsageConstraintsTest.greaterThan":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":113,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":16,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":454,"org.easymock.samples.ExampleTest.voteForRemoval":241,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":132,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":85,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":457,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":11,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":148,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":49,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":225,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":466,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":165,"org.easymock.tests2.CaptureTest.testCaptureFirst":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":226,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":160,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":307,"org.easymock.tests2.UsageTest.moreThanOneArgument":150,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":134,"org.easymock.tests2.CaptureTest.testCapture2_2446744":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":35,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":266,"org.easymock.tests.GenericTest.testBridgedEquals":473,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":439,"org.easymock.tests.UsageExpectAndReturnTest.longType":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":461,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":223,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":399,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":36,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":106,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":338,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":397,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":330,"org.easymock.tests.UsageCallCountTest.tooManyCalls":440,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":127,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":386,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":285,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":1,"org.easymock.tests.MockingTest.testNiceClassMocking":353,"org.easymock.tests.MockingTest.testClassMocking":349,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":433,"org.easymock.tests2.UsageConstraintsTest.testContains":96,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":27,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":23,"org.easymock.tests2.UsageConstraintsTest.testFind":90,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":431,"org.easymock.tests.MockTypeTest.fromEasyMockClass":455,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":173,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":372,"org.easymock.tests.UsageExpectAndReturnTest.object":310,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":484,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":261,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":363,"org.easymock.tests.UsageTest.exactCallCountByLastCall":347,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":357,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":368,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":499,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":222,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":256,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":316,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":322,"org.easymock.tests.MockClassControlTest.testHashCode":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":203,"org.easymock.tests2.EasyMockSupportTest.testVerify":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":121,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":369,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":320,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":328,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":502,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":161,"org.easymock.tests.UsageVarargTest.varargCharAccepted":260,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":424,"org.easymock.tests2.UsageTest.openCallCountByLastCall":154,"org.easymock.tests.DefaultClassInstantiatorTest.object":448,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":327,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":361,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":139,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":202,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":444,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":14,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":387,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":317,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":274,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":20,"org.easymock.tests2.UsageTest.resumeIfFailure":159,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":469,"org.easymock.tests2.StubTest.stubWithReturnValue":217,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":489,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":107,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":309,"org.easymock.tests2.SerializationTest.testAllMockedMethod":22,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":417,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":479,"org.easymock.samples.SupportTest.voteForRemovals":237,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":393,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":476,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":423,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":188,"org.easymock.tests.UsageExpectAndThrowTest.object":391,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":359,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":104,"org.easymock.tests2.DelegateToTest.testWrongClass":168,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":459,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":460,"org.easymock.samples.ConstructorCalledMockTest.testTax":39,"org.easymock.tests.UsageStrictMockTest.range":377,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":220,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":230,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":392,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":110,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":298,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":426,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":480,"org.easymock.tests2.CaptureTest.testCaptureNone":74,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":269,"org.easymock.tests.UsageUnorderedTest.message":366,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":500,"org.easymock.tests.UsageVerifyTest.twoReturns":356,"org.easymock.tests.UsageVarargTest.varargByteAccepted":265,"org.easymock.tests2.ThreadingTest.testThreadSafe":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":124,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":437,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":41,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":364,"org.easymock.tests2.CaptureTest.testCapture_2617107":57,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":498,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":79,"org.easymock.tests2.UsageConstraintsTest.any":94,"org.easymock.tests2.StubTest.stub":216,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":295,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndThrowTest.longType":384,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":452,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":294,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":183,"org.easymock.tests2.SerializationTest.testClass":21,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests.LimitationsTest.mockNativeMethod":44,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":55,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":319,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":138,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":186,"org.easymock.tests2.NameTest.nameForMocksControl":201,"org.easymock.tests2.MockedExceptionTest.testMockedException":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":114,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":344,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":385,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":172,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":48,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":6,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":33,"org.easymock.tests.MockingTest.testNicePartialClassMocking":47,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":136,"org.easymock.tests2.CaptureTest.testCaptureLast":73,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":336,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":5,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":70,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":105,"org.easymock.tests.MockingTest.testTwoMocks":45,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":389,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":157,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":108,"org.easymock.samples.ExampleTest.removeNonExistingDocument":245,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":143,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":292,"org.easymock.tests.UsageStrictMockTest.differentMethods":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":204,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":450,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":133,"org.easymock.tests2.MockBuilderTest.testCreateMockString":37,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":115,"org.easymock.tests.UsageExpectAndThrowTest.floatType":383,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":112,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":190,"org.easymock.tests.UsageVerifyTest.twoThrows":355,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":19,"org.easymock.samples.ExampleTest.voteAgainstRemoval":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":412,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":15,"org.easymock.tests.LimitationsTest.privateConstructor":278,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":492,"org.easymock.tests2.UsageConstraintsTest.testNotNull":71,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":177,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":287,"org.easymock.tests2.UsageTest.defaultResetToNice":156,"org.easymock.samples.ExampleTest.voteAgainstRemovals":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":315,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":137,"org.easymock.tests.UsageVarargTest.differentLength":262,"org.easymock.tests2.CallbackTest.callback":174,"org.easymock.tests2.UsageConstraintsTest.equals":89,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":83,"org.easymock.tests.UsageTest.openCallCountByLastCall":343,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":78,"org.easymock.tests.UsageCallCountTest.tooFewCalls":435,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":3,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":428,"org.easymock.tests.UsageThrowableTest.throwCheckedException":284,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":481,"org.easymock.tests.MockingTest.testStrictClassMocking":348,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":4,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":142,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":2,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":297,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":80,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":192,"org.easymock.tests2.CompareToTest.testGreateOrEqual":477,"org.easymock.tests.ObjectMethodsTest.testHashCode":362,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":486,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":135,"org.easymock.tests2.NameTest.nameForNiceMock":200,"org.easymock.tests2.DependencyTest.testInterfaceMocking":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":485,"org.easymock.samples.ExampleTest.addDocument":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":125,"org.easymock.tests2.DelegateToTest.testStubDelegate":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":129,"org.easymock.tests2.AnswerTest.stubAnswer":191,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":375,"org.easymock.tests.UsageVarargTest.varargLongAccepted":264,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.floatType":302,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":318,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":38,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":40,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":211,"org.easymock.tests.UsageThrowableTest.noUpperLimit":281,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":88,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":218,"org.easymock.tests2.SerializationTest.test":175,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":59,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":505,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":449,"org.easymock.tests2.UsageConstraintsTest.testSame":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":301,"org.easymock.samples.SupportTest.addDocument":236,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":116,"org.easymock.tests.GenericTest.testPackageScope":53,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":210,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":351,"org.easymock.tests2.NameTest.nameForMock":198,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":312,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":496,"org.easymock.tests2.UsageStrictMockTest.differentMethods":185,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":304,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":395,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":360,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":273,"org.easymock.tests2.MockedExceptionTest.testRealException":179,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":414,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":182,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":77,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":299,"org.easymock.tests2.NameTest.nameForStrictMock":199,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":214,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":171,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":219,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":451,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":103,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":28,"org.easymock.tests2.UsageStrictMockTest.range":184,"org.easymock.tests2.UsageConstraintsTest.lessThan":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":120,"org.easymock.tests2.CaptureTest.testCaptureRightOne":62,"org.easymock.tests2.UsageConstraintsTest.testOr":69,"org.easymock.tests.UsageRangeTest.combination":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":7,"org.easymock.tests.UsageTest.wrongArguments":342,"org.easymock.tests2.MockBuilderTest.testWithConstructor":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":117,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":50,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":313,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":453,"org.easymock.tests.UsageVarargTest.varargShortAccepted":263,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":438,"org.easymock.tests2.UsageConstraintsTest.cmpTo":95,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":404,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":155,"org.easymock.tests2.CaptureTest.testCaptureFromStub":63,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":289,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":29,"org.easymock.tests.UsageTest.unexpectedCallWithArray":341,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":374,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":436,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":495,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":314,"org.easymock.tests2.UsageConstraintsTest.constraints":66,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":376,"org.easymock.samples.ExampleTest.addAndChangeDocument":246,"org.easymock.tests2.ConstraintsToStringTest.notToString":506,"org.easymock.tests.UsageStrictMockTest.testVerify":380,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":238,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":373,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":462,"org.easymock.tests2.CompareToTest.testGreateThan":65,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":60,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":250,"org.easymock.tests.LimitationsTest.abstractClass":277,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":251,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":229,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":257}}]
