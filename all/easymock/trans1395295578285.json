[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"candidateParameters","i":"i"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,0,56,57,58,1,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,2,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[72,76,78,83,84,87,115,116,118,119,120,121,122,123,239,276,287,299,333,337,338,344,346,348,349,352,353,354,365,371,372,374,377,383,384,385,387,417,462,467,468,473],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[50,483,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:218","sourceCode":"return ","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[17,18,19,20,21,24,25,26,29,30,31,32,33,34,35,66,67,68,69,70,71,72,73,74,76,77,79,81,84,85,86,87,88,89,90,92,93,97,116,117,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,156,157,158,159,160,161,162,166,168,169,170,171,172,173,174,175,176,177,178,187,192,193,195,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,241,242,243,244,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,271,272,273,274,275,276,279,280,281,282,283,284,285,286,288,289,290,291,294,297,299,304,305,306,307,315,316,319,320,321,322,323,325,326,327,329,330,331,332,334,335,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,361,362,363,364,365,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,396,403,409,410,411,413,425,435,438,448,454,459,460,462,464,465,467,468,471,474,476,478,479,482,485,486,487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[369],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[110],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[412,488,480,489,490,491,492,493,494],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[486,487],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.Range:40","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,0,56,57,58,1,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,2,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[13,14,71,72,73,77,80,81,83,84,117,123,149,160,161,176,178,181,232,233,235,236,237,238,239,240,257,304,305,306,307,335,337,338,361,368,369,374,375,388,389,463,465,466,469,470,472,473,475,482],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:249","sourceCode":"return ","type":"CtReturnImpl"},"failures":[75,92,94],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > int) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[412,480,489,490,491,492,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"currentPosition":"i","callCount":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[17,18,19,20,21,22,25,26,29,71,73,75,76,77,81,83,84,87,88,89,90,92,115,117,118,119,120,121,122,127,161,162,166,167,187,192,193,195,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,237,240,254,256,258,259,261,265,266,267,268,269,270,273,274,275,276,278,279,280,282,285,286,287,288,289,290,291,294,298,299,300,315,316,317,318,319,320,321,322,323,325,326,327,335,337,338,340,341,343,344,345,346,347,348,349,350,351,352,353,354,358,362,363,364,365,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,396,405,409,411,413,417,425,435,438,448,454,459,460,463,464,465,467,469,470,471,474,475,479,482,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[280,292,302,403,410],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[13,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[17,18,19,20,21,25,26,29,71,73,75,76,77,81,83,84,87,88,89,90,92,96,115,117,118,119,120,121,122,127,161,162,166,187,192,193,195,204,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,237,240,254,256,258,259,261,265,266,267,269,270,273,274,275,276,278,279,282,285,286,287,288,289,290,291,294,298,299,300,315,316,317,318,319,320,321,322,323,325,326,327,335,337,338,340,341,343,344,345,346,347,348,349,350,351,352,353,354,358,362,363,364,365,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,396,405,409,411,413,417,425,435,438,448,454,459,460,463,464,465,467,469,470,471,474,475,479,482,486],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[434],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,0,56,57,58,1,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,2,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,303,304,305,306,307,308,312,313,314,315,316,317,318,319,320,321,323,325,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,405,406,408,409,410,411,413,416,417,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,435,437,438,439,440,443,446,448,449,450,451,452,453,454,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,482,483,484,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[266,268,276,364,365,368,370,371,373,383,388],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[72,73,80,83,123,188,495,234,235,238,239,337,466,472,473],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[496],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[365],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[372,378,390,497],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[412,480,489,490,491,492,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":365,"org.easymock.tests2.UsageTest.argumentsOrdered":473,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":232,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":353,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":54,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":468,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":255,"org.easymock.tests2.DelegateToTest.testReturnException":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":31,"org.easymock.tests.MockingTest.testPartialClassMocking":192,"org.easymock.tests.MockClassControlTest.testToString":98,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":303,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":442,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":438,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":129,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":460,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":372,"org.easymock.tests2.UsageTest.wrongArguments":466,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":25,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":431,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":243,"org.easymock.samples.ExampleTest.answerVsDelegate":257,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":41,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":197,"org.easymock.tests2.UsageConstraintsTest.testNull":368,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":289,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":103,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":352,"org.easymock.tests2.CaptureTest.testPrimitive":269,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":29,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":148,"org.easymock.tests.UsageTest.moreThanOneArgument":233,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":170,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":12,"org.easymock.tests.UsageTest.argumentsOrdered":239,"org.easymock.tests.UsageVarargTest.varargIntAccepted":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":493,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":403,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":310,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":21,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":425,"org.easymock.tests.ReplayStateInvalidUsageTest.times":2,"org.easymock.tests2.DependencyTest.testClassMocking":457,"org.easymock.tests2.AnswerTest.answer":482,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":59,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":332,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":38,"org.easymock.tests2.CaptureTest.testAnd":266,"org.easymock.tests2.UsageTest.strictResetToDefault":464,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":169,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":347,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":16,"org.easymock.tests2.DelegateToTest.testDelegate":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":144,"org.easymock.tests.LimitationsTest.mockFinalMethod":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":70,"org.easymock.tests2.DependencyTest.testClassMockingSupport":458,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":22,"org.easymock.tests2.CaptureTest.testCapture1_2446744":270,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":142,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":330,"org.easymock.tests.UsageThrowableTest.throwError":115,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":106,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":40,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":402,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":456,"org.easymock.samples.PartialClassMockTest.testGetArea":254,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":107,"org.easymock.tests.MockingTest.testInterfaceMocking":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":18,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":201,"org.easymock.tests2.UsageTest.niceToStrict":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":443,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":130,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":44,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":409,"org.easymock.tests2.MockBuilderTest.testCreateMock":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":451,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":428,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":138,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":348,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":37,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":247,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":241,"org.easymock.tests.UsageOverloadedMethodTest.overloading":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":447,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":185,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":378,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":223,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":377,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":275,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":152,"org.easymock.tests2.EasyMockSupportClassTest.testAll":435,"org.easymock.tests.MockClassControlTest.testEquals":102,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":93,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":68,"org.easymock.tests2.CaptureTest.testCaptureAll":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":331,"org.easymock.tests.MockNameTest.defaultName":124,"org.easymock.tests2.UsageConstraintsTest.testMatches":379,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":171,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":104,"org.easymock.samples.ExampleTest.voteForRemovals":261,"org.easymock.tests.UsageVarargTest.allKinds":160,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":69,"org.easymock.samples.BasicClassMockTest.testPrintContent":251,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":121,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":333,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":35,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":360,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":494,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":210,"org.easymock.tests2.UsageConstraintsTest.greaterThan":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":436,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":300,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":211,"org.easymock.samples.ExampleTest.voteForRemoval":258,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":301,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":316,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":42,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":292,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":463,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":74,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":345,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":30,"org.easymock.tests2.CaptureTest.testCaptureFirst":279,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":50,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":346,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":475,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":219,"org.easymock.tests2.UsageTest.moreThanOneArgument":465,"org.easymock.tests2.CaptureTest.testCapture2_2446744":278,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":318,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":60,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":159,"org.easymock.tests.GenericTest.testBridgedEquals":95,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":180,"org.easymock.tests.UsageExpectAndReturnTest.longType":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":66,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":343,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":147,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":386,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":248,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":164,"org.easymock.tests.UsageCallCountTest.tooManyCalls":181,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":120,"org.easymock.tests.MockingTest.testNiceClassMocking":198,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":321,"org.easymock.tests.MockingTest.testClassMocking":190,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":174,"org.easymock.tests2.UsageConstraintsTest.testContains":376,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":282,"org.easymock.tests2.UsageConstraintsTest.testFind":367,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":77,"org.easymock.tests.MockTypeTest.fromEasyMockClass":39,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":478,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":78,"org.easymock.tests.UsageExpectAndReturnTest.object":222,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":351,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":490,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":154,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":6,"org.easymock.tests.UsageTest.exactCallCountByLastCall":240,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":49,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":9,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":480,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":228,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":184,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":392,"org.easymock.tests.MockClassControlTest.testHashCode":101,"org.easymock.tests2.EasyMockSupportTest.testVerify":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":445,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":14,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":329,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":461,"org.easymock.tests.UsageVarargTest.varargCharAccepted":153,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":203,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":65,"org.easymock.tests2.UsageTest.openCallCountByLastCall":469,"org.easymock.tests.DefaultClassInstantiatorTest.object":204,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":354,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":245,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":4,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":446,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":118,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":391,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":100,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":298,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":135,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":229,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":454,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":99,"org.easymock.tests2.UsageTest.resumeIfFailure":474,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":36,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":33,"org.easymock.tests2.StubTest.stubWithReturnValue":285,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":412,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":387,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":221,"org.easymock.tests2.SerializationTest.testAllMockedMethod":342,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":1,"org.easymock.samples.SupportTest.voteForRemovals":265,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":91,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":141,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":64,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":483,"org.easymock.tests.UsageExpectAndThrowTest.object":139,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":11,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":384,"org.easymock.tests2.DelegateToTest.testWrongClass":359,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":161,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":162,"org.easymock.tests.UsageStrictMockTest.range":83,"org.easymock.samples.ConstructorCalledMockTest.testTax":252,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":313,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":350,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":432,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":113,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":238,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":242,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":202,"org.easymock.tests2.CaptureTest.testCaptureNone":274,"org.easymock.tests.UsageUnorderedTest.message":123,"org.easymock.tests.UsageVerifyTest.twoReturns":73,"org.easymock.tests.UsageVarargTest.varargByteAccepted":158,"org.easymock.tests2.ThreadingTest.testThreadSafe":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":449,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":178,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":7,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":250,"org.easymock.tests2.CaptureTest.testCapture_2617107":268,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":62,"org.easymock.tests2.UsageConstraintsTest.any":374,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":111,"org.easymock.tests2.StubTest.stub":284,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":165,"org.easymock.tests.UsageExpectAndThrowTest.longType":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":63,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":208,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":110,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":336,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":396,"org.easymock.tests2.SerializationTest.testClass":340,"org.easymock.tests.LimitationsTest.mockNativeMethod":127,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":94,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":231,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":422,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":339,"org.easymock.tests2.NameTest.nameForMocksControl":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":424,"org.easymock.tests2.MockedExceptionTest.testMockedException":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":437,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":237,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":477,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":133,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":195,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":286,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":413,"org.easymock.tests.MockingTest.testNicePartialClassMocking":193,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":291,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":420,"org.easymock.tests2.CaptureTest.testCaptureLast":273,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":23,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":327,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":371,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":385,"org.easymock.tests.MockingTest.testTwoMocks":191,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":328,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":137,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":472,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":389,"org.easymock.samples.ExampleTest.removeNonExistingDocument":262,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":427,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":108,"org.easymock.tests.UsageStrictMockTest.differentMethods":84,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":393,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":206,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":317,"org.easymock.tests2.MockBuilderTest.testCreateMockString":419,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":439,"org.easymock.tests.UsageExpectAndThrowTest.floatType":131,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":485,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":481,"org.easymock.tests.UsageVerifyTest.twoThrows":72,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":448,"org.easymock.samples.ExampleTest.voteAgainstRemoval":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":55,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":200,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":299,"org.easymock.tests.LimitationsTest.privateConstructor":126,"org.easymock.tests2.UsageConstraintsTest.testNotNull":388,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":122,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":280,"org.easymock.tests2.UsageTest.defaultResetToNice":471,"org.easymock.samples.ExampleTest.voteAgainstRemovals":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":227,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":421,"org.easymock.tests.UsageVarargTest.differentLength":155,"org.easymock.tests2.CallbackTest.callback":462,"org.easymock.tests2.UsageConstraintsTest.equals":366,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":295,"org.easymock.tests.UsageTest.openCallCountByLastCall":236,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":362,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":27,"org.easymock.tests.UsageCallCountTest.tooFewCalls":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":244,"org.easymock.tests.UsageThrowableTest.throwCheckedException":119,"org.easymock.tests.MockingTest.testStrictClassMocking":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":167,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":426,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":322,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":112,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":325,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":487,"org.easymock.tests2.CompareToTest.testGreateOrEqual":497,"org.easymock.tests.ObjectMethodsTest.testHashCode":5,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":492,"org.easymock.tests2.NameTest.nameForNiceMock":306,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":319,"org.easymock.tests2.DependencyTest.testInterfaceMocking":459,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":491,"org.easymock.samples.ExampleTest.addDocument":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.DelegateToTest.testStubDelegate":358,"org.easymock.tests2.AnswerTest.stubAnswer":486,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":81,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":414,"org.easymock.tests.UsageVarargTest.varargLongAccepted":157,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":53,"org.easymock.tests.UsageExpectAndReturnTest.floatType":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":230,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":479,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":253,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":400,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests.UsageThrowableTest.noUpperLimit":116,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":363,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":308,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":271,"org.easymock.tests2.SerializationTest.test":341,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":205,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":213,"org.easymock.tests2.UsageConstraintsTest.testSame":369,"org.easymock.samples.SupportTest.addDocument":264,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":324,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":440,"org.easymock.tests.GenericTest.testPackageScope":92,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":48,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":399,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":196,"org.easymock.tests2.NameTest.nameForMock":304,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":224,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":418,"org.easymock.tests2.UsageStrictMockTest.differentMethods":338,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":216,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":143,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":3,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":90,"org.easymock.tests2.MockedExceptionTest.testRealException":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":314,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":56,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":335,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":26,"org.easymock.tests2.NameTest.nameForStrictMock":305,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":408,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":476,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":290,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":312,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":207,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":383,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":405,"org.easymock.tests2.UsageStrictMockTest.range":337,"org.easymock.tests2.UsageConstraintsTest.lessThan":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":52,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":444,"org.easymock.tests2.CaptureTest.testCaptureRightOne":276,"org.easymock.tests2.UsageConstraintsTest.testOr":370,"org.easymock.tests.UsageRangeTest.combination":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":287,"org.easymock.tests.UsageTest.wrongArguments":235,"org.easymock.tests2.MockBuilderTest.testWithConstructor":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":441,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":225,"org.easymock.tests.UsageVarargTest.varargShortAccepted":156,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":209,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":179,"org.easymock.tests2.UsageConstraintsTest.cmpTo":375,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":47,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":470,"org.easymock.tests2.CaptureTest.testCaptureFromStub":277,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":105,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":406,"org.easymock.tests.UsageTest.unexpectedCallWithArray":234,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":80,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":177,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":496,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":226,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":82,"org.easymock.tests2.UsageConstraintsTest.constraints":364,"org.easymock.samples.ExampleTest.addAndChangeDocument":263,"org.easymock.tests.UsageStrictMockTest.testVerify":86,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":249,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":67,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":19,"org.easymock.tests.LimitationsTest.abstractClass":125,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":218,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":20,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":349}}]
