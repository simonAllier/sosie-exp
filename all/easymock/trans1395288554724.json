[{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[93,94,95,96,97],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[100,101,102,103,104],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[100,100,101,101,105,106,107,108,109,110,111,112,113,0,114,115,116,117,118,119,120,2,121,122,123,124,5,7,8,125,126,127,128,129,130,131,132,133,134,135,136,137,138,14,16,139,17,19,140,141,142,23,24,143,25,144,26,145,27,28,146,29,30,147,148,32,149,34,35,37,150,151,39,40,152,153,41,42,154,155,156,157,158,159,160,161,43,162,163,164,165,45,166,167,168,169,170,171,172,173,174,175,176,93,177,94,178,46,179,180,181,182,183,184,185,186,187,188,189,190,191,192,47,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,50,210,211,212,53,54,56,57,213,214,215,216,217,218,219,60,220,221,222,223,224,66,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,67,68,245,246,73,247,83,248,249,250,251,252,253,254,255,256,257,258,259,89,90,91,92,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[100,100,101,101,105,317,318,319,106,107,108,109,320,110,321,111,322,112,323,113,0,114,115,116,117,324,118,1,119,120,2,121,122,123,124,4,325,5,6,7,8,9,10,11,12,13,125,126,127,128,129,130,131,132,133,134,135,136,137,138,14,326,327,328,329,16,139,17,18,19,20,140,141,142,21,22,23,24,143,25,144,26,145,27,28,146,29,30,147,148,330,31,149,331,34,35,36,37,38,150,151,39,40,152,153,41,42,154,157,158,159,332,160,161,333,43,162,163,164,165,45,166,167,169,170,171,173,174,175,176,93,177,94,178,46,179,180,181,182,183,184,185,187,188,189,190,191,192,47,193,194,195,196,197,199,200,201,202,203,204,205,206,207,48,208,209,50,51,210,211,212,52,334,53,54,55,56,57,58,335,213,214,215,216,217,218,219,336,337,338,339,340,95,341,342,343,344,345,346,59,347,60,61,348,349,62,66,350,351,352,353,354,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,67,68,69,70,245,246,71,72,73,355,356,357,358,359,360,80,81,82,361,362,363,83,248,249,250,253,254,255,84,364,365,366,367,368,369,370,371,372,373,374,375,256,89,90,91,92,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,376,282,283,284,285,286,287,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[377,378,379,380,381,382,383,150,384,160],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[324,3,121,31,331,163],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[100,100,101,101,105,317,318,319,106,107,108,109,320,110,321,111,322,112,323,113,0,114,115,116,117,324,118,1,119,120,2,121,122,123,124,4,325,5,6,7,8,9,10,11,12,13,125,126,127,128,129,130,131,132,133,134,135,136,137,138,14,326,327,328,329,16,139,17,18,19,20,140,141,142,21,22,23,24,143,25,144,26,145,27,28,146,29,30,147,148,330,31,32,149,331,34,35,36,37,38,150,151,39,40,152,153,41,42,154,155,156,157,158,159,332,160,161,333,43,162,163,164,165,45,166,167,168,169,170,171,172,173,174,175,176,93,177,94,178,46,179,180,181,182,183,184,185,186,187,188,189,190,191,192,47,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,48,208,209,49,50,51,385,210,211,212,52,334,53,54,55,56,57,58,335,213,214,215,216,217,218,219,336,337,338,339,340,95,341,342,343,344,345,346,59,347,60,61,348,349,62,63,64,220,221,222,223,224,65,66,350,351,352,353,354,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,67,68,69,70,245,246,71,72,73,247,355,356,357,358,359,360,80,81,82,361,362,363,83,248,249,250,251,252,253,254,255,84,364,365,366,367,368,369,370,371,88,372,373,374,375,256,257,258,259,89,90,91,92,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,376,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[386,387],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[377,379,380,381,388,389,384],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[377,378,379,380,381,382,383,150,384,160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[93,94,95,96,97],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[125,127,135,46,179,181,183,184,186,195,200],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[100,100,101,101,105,318,319,113,0,115,116,117,324,118,1,119,120,2,123,31,390,32,33,149,331,34,35,36,37,391,38,392,150,151,39,40,152,41,42,160,333,162,163,164,165,385,210,211,212,74,77,360,278,279,376,280,288],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[393,394,53,69,395,396],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[397,193],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[160,161,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[1,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[48,49,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[5,7,8,17,18,21,22,398,399,400,401,394,402,403,48,49,50,54,56,57,65,66,68,70,71,72,89,90,91,92],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[179,183],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[125,126,127,128,135,136,46,179,180,181,182,183,184,185,186,187,195,196,200,201],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[155,404],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[160,161,333,405],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[406],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[100,100,101,101,105,317,318,319,106,107,108,109,320,110,111,322,112,323,113,0,114,115,116,117,118,119,120,2,121,122,123,124,4,325,5,6,7,8,9,10,11,12,13,125,126,127,128,129,130,131,132,133,134,135,136,137,138,14,16,139,17,18,19,20,140,141,142,21,22,23,24,143,25,144,26,145,27,28,146,29,30,147,148,330,32,149,34,35,37,150,151,39,40,152,153,41,42,154,155,156,157,158,159,160,161,333,43,162,163,164,165,45,166,167,168,169,170,171,172,173,174,175,176,93,177,94,178,46,179,180,181,182,183,184,185,186,187,188,189,190,191,192,47,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,50,210,211,212,52,334,53,54,55,56,57,58,335,213,214,215,216,217,218,219,59,60,61,348,349,63,64,221,222,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,67,68,70,245,246,71,72,73,247,83,248,249,250,407,408,409,410,411,412,404,413,414,415,416,417,418,419,420,421,251,422,423,424,425,426,252,427,253,254,255,367,368,369,370,371,88,372,373,374,375,256,257,258,259,89,90,91,92,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,376,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:115","sourceCode":"for (final org.easymock.internal.MethodSerializationWrapper org.easymock.internal.MethodSerializationWrapper : java.util.Set<org.easymock.internal.MethodSerializationWrapper>) {\n    try {\n        java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n    }\n}","type":"CtForEachImpl"},"failures":[160],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[386,387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":179,"org.easymock.tests2.UsageTest.argumentsOrdered":22,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":416,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":20,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":317,"org.easymock.tests2.DelegateToTest.testReturnException":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":283,"org.easymock.tests.MockingTest.testPartialClassMocking":210,"org.easymock.tests.MockClassControlTest.testToString":80,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":3,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":225,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":379,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":185,"org.easymock.tests2.UsageTest.wrongArguments":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":357,"org.easymock.samples.ExampleTest.answerVsDelegate":107,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":77,"org.easymock.tests2.UsageConstraintsTest.testNull":181,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":30,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":363,"org.easymock.tests2.CaptureTest.testPrimitive":128,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":217,"org.easymock.tests.UsageTest.moreThanOneArgument":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":244,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":270,"org.easymock.tests.UsageTest.argumentsOrdered":72,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":220,"org.easymock.tests.UsageVarargTest.varargIntAccepted":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":421,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":402,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":389,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":31,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":409,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":277,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":400,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":14,"org.easymock.tests.ReplayStateInvalidUsageTest.times":343,"org.easymock.tests2.AnswerTest.answer":154,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":422,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":329,"org.easymock.tests2.CaptureTest.testAnd":125,"org.easymock.tests2.UsageTest.strictResetToDefault":139,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":249,"org.easymock.tests2.DelegateToTest.testDelegate":173,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":224,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":65,"org.easymock.tests2.CaptureTest.testCapture1_2446744":129,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":327,"org.easymock.tests.UsageThrowableTest.throwError":260,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":338,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":272,"org.easymock.samples.PartialClassMockTest.testGetArea":105,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":274,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":290,"org.easymock.tests2.UsageTest.niceToStrict":19,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":149,"org.easymock.tests2.MockBuilderTest.testCreateMock":36,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":393,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":234,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":27,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":259,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":59,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":355,"org.easymock.tests.UsageOverloadedMethodTest.overloading":254,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":191,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":209,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":253,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":308,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":190,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":134,"org.easymock.tests2.EasyMockSupportClassTest.testAll":162,"org.easymock.tests.MockClassControlTest.testEquals":362,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":242,"org.easymock.tests2.CaptureTest.testCaptureAll":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":328,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":352,"org.easymock.tests.MockNameTest.defaultName":87,"org.easymock.tests2.UsageConstraintsTest.testMatches":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":271,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":336,"org.easymock.samples.ExampleTest.voteForRemovals":110,"org.easymock.tests.UsageVarargTest.allKinds":256,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":90,"org.easymock.samples.BasicClassMockTest.testPrintContent":319,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":353,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":266,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":4,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":287,"org.easymock.tests2.UsageConstraintsTest.greaterThan":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":383,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":248,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":2,"org.easymock.samples.ExampleTest.voteForRemoval":108,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":175,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":324,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":16,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":278,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":144,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":282,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":168,"org.easymock.tests2.CaptureTest.testCaptureFirst":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":26,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":24,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":51,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":304,"org.easymock.tests2.CaptureTest.testCapture2_2446744":137,"org.easymock.tests2.UsageTest.moreThanOneArgument":17,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":423,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":37,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":375,"org.easymock.tests.GenericTest.testBridgedEquals":387,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":63,"org.easymock.tests.UsageExpectAndReturnTest.longType":300,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":350,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":391,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":243,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":198,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":268,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":293,"org.easymock.tests.UsageCallCountTest.tooManyCalls":64,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":230,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":265,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":39,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":390,"org.easymock.tests2.UsageConstraintsTest.testContains":189,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":347,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":123,"org.easymock.tests2.UsageConstraintsTest.testFind":180,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":255,"org.easymock.tests.MockTypeTest.fromEasyMockClass":75,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":52,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":206,"org.easymock.tests.UsageExpectAndReturnTest.object":307,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":29,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":371,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":380,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":365,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":98,"org.easymock.tests.UsageTest.exactCallCountByLastCall":73,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":96,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":384,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":313,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":367,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":208,"org.easymock.tests.MockClassControlTest.testHashCode":361,"org.easymock.tests2.EasyMockSupportTest.testVerify":330,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":222,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":207,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":258,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":326,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":332,"org.easymock.tests.UsageVarargTest.varargCharAccepted":370,"org.easymock.tests2.CaptureTest.testCaptureMultiple":406,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":427,"org.easymock.tests2.UsageTest.openCallCountByLastCall":140,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":148,"org.easymock.tests.DefaultClassInstantiatorTest.object":366,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":257,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":263,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":119,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":82,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":231,"org.easymock.tests.CapturesMatcherTest.test":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":314,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":165,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":81,"org.easymock.tests2.UsageTest.resumeIfFailure":23,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":285,"org.easymock.tests2.StubTest.stubWithReturnValue":167,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":377,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":199,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":306,"org.easymock.tests2.SerializationTest.testAllMockedMethod":333,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":251,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":394,"org.easymock.samples.SupportTest.voteForRemovals":112,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":237,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":405,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":252,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":155,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":97,"org.easymock.tests.UsageExpectAndThrowTest.object":235,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":196,"org.easymock.tests2.DelegateToTest.testWrongClass":171,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":219,"org.easymock.samples.ConstructorCalledMockTest.testTax":100,"org.easymock.tests.UsageStrictMockTest.range":56,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":236,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":34,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":71,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":356,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":395,"org.easymock.tests2.CaptureTest.testCaptureNone":133,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":291,"org.easymock.tests.UsageUnorderedTest.message":89,"org.easymock.tests.UsageVerifyTest.twoReturns":92,"org.easymock.tests.UsageVarargTest.varargByteAccepted":374,"org.easymock.tests2.ThreadingTest.testThreadSafe":174,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":349,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":85,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":318,"org.easymock.tests2.CaptureTest.testCapture_2617107":127,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":216,"org.easymock.tests2.UsageConstraintsTest.any":187,"org.easymock.tests2.StubTest.stub":166,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":342,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndThrowTest.longType":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":284,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":341,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":6,"org.easymock.tests2.SerializationTest.testClass":160,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":43,"org.easymock.tests.LimitationsTest.mockNativeMethod":288,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":280,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":316,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":9,"org.easymock.tests2.NameTest.nameForMocksControl":13,"org.easymock.tests2.MockedExceptionTest.testMockedException":122,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":246,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":212,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":229,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":35,"org.easymock.tests.MockingTest.testNicePartialClassMocking":211,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":117,"org.easymock.tests2.CaptureTest.testCaptureLast":132,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":66,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":184,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":42,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":197,"org.easymock.tests.MockingTest.testTwoMocks":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":297,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":233,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":21,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":201,"org.easymock.samples.ExampleTest.removeNonExistingDocument":321,"org.easymock.tests.UsageStrictMockTest.differentMethods":57,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":340,"org.easymock.tests2.ConstraintsToStringTest.andToString":401,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":176,"org.easymock.tests2.MockBuilderTest.testCreateMockString":38,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":359,"org.easymock.tests.UsageExpectAndThrowTest.floatType":227,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":47,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":157,"org.easymock.tests.UsageVerifyTest.twoThrows":91,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":164,"org.easymock.samples.ExampleTest.voteAgainstRemoval":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":289,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":120,"org.easymock.tests2.UsageConstraintsTest.testNotNull":200,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":121,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":267,"org.easymock.tests2.UsageTest.defaultResetToNice":142,"org.easymock.samples.ExampleTest.voteAgainstRemovals":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":312,"org.easymock.tests.UsageVarargTest.differentLength":88,"org.easymock.tests2.CallbackTest.callback":45,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":102,"org.easymock.tests.UsageTest.openCallCountByLastCall":245,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":215,"org.easymock.tests.UsageCallCountTest.tooFewCalls":61,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":152,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":358,"org.easymock.tests.UsageThrowableTest.throwCheckedException":264,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":396,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":41,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":296,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":15,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":344,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":153,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":159,"org.easymock.tests.ObjectMethodsTest.testHashCode":364,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":388,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":177,"org.easymock.tests2.NameTest.nameForNiceMock":12,"org.easymock.tests2.DependencyTest.testInterfaceMocking":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":381,"org.easymock.samples.ExampleTest.addDocument":320,"org.easymock.tests2.DelegateToTest.testStubDelegate":170,"org.easymock.tests2.AnswerTest.stubAnswer":158,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":54,"org.easymock.tests.UsageVarargTest.varargLongAccepted":373,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.floatType":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":315,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":150,"org.easymock.tests2.ConstraintsToStringTest.orToString":398,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":101,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":49,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":194,"org.easymock.tests.UsageThrowableTest.noUpperLimit":261,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":178,"org.easymock.tests2.SerializationTest.test":161,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":130,"org.easymock.tests2.UsageConstraintsTest.testSame":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":298,"org.easymock.samples.SupportTest.addDocument":322,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":95,"org.easymock.tests.GenericTest.testPackageScope":279,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.NameTest.nameForMock":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":309,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":104,"org.easymock.tests2.UsageStrictMockTest.differentMethods":8,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":239,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":250,"org.easymock.tests2.MockedExceptionTest.testRealException":124,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":419,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":214,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":346,"org.easymock.tests2.NameTest.nameForStrictMock":11,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":116,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":195,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":32,"org.easymock.tests2.UsageStrictMockTest.range":7,"org.easymock.tests2.UsageConstraintsTest.lessThan":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":382,"org.easymock.tests2.CaptureTest.testCaptureRightOne":135,"org.easymock.tests2.UsageConstraintsTest.testOr":183,"org.easymock.tests.UsageRangeTest.combination":83,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":0,"org.easymock.tests.UsageTest.wrongArguments":70,"org.easymock.tests2.MockBuilderTest.testWithConstructor":103,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":310,"org.easymock.tests.UsageVarargTest.varargShortAccepted":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":62,"org.easymock.tests2.UsageConstraintsTest.cmpTo":188,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":410,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":141,"org.easymock.tests2.CaptureTest.testCaptureFromStub":136,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":337,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":33,"org.easymock.tests.UsageTest.unexpectedCallWithArray":69,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":311,"org.easymock.tests2.UsageConstraintsTest.constraints":46,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":55,"org.easymock.samples.ExampleTest.addAndChangeDocument":111,"org.easymock.tests2.ConstraintsToStringTest.notToString":399,"org.easymock.tests.UsageStrictMockTest.testVerify":335,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":323,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":334,"org.easymock.tests2.CompareToTest.testGreateThan":397,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":351,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":131,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":275,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":303,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":28,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":368}}]
