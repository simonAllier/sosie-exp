[{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[0,11,1,12,2,13,3,4,14,5,15,6,7,16,8,17,9,18,10,19],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"position":"org.easymock.internal.MockBuilder:71","failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[72,73,74],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[75,76,77],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[80,81,82,83,84,85,86,0,11,12,87,88,89,90,2,13,91,92,93,50,51,52,94,95,96,97,98,99,100,101,102,103,104,105,106,53,107,108,109,110,111,112,113,114,78,115,116,117,118,119,120,121,55,56,122,123,124,125,126,127,128,129,130,131,27,28,29,132,59,61,63,64,66,133,134,135,136,137,138,139,140,141,30,142,143,144,145,146,147,148,149,150,151,152,153,154,3,4,14,5,15,6,7,16,17,155,156,157,158,159,160,161,162,9,18,163,164,10,19,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,35,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,70,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,36,214,37,38,39,215,216,217,40,41,42,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,43,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,79,49,280,281,282,283,284,285,286,71,287,287,288,288],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[127],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[80,81,82,83,84,85,86,289,290,0,11,1,12,87,291,292,88,89,90,2,13,91,92,293,294,295,93,296,297,50,298,299,300,301,302,303,304,305,306,51,307,308,309,310,311,52,312,313,94,95,96,97,98,99,100,101,102,103,104,105,106,314,53,107,315,108,109,110,316,111,112,113,114,78,115,116,117,118,119,120,54,73,121,317,318,319,55,56,122,320,57,321,322,323,324,325,326,123,124,327,328,329,330,331,125,332,333,334,335,336,337,126,127,128,129,130,131,338,339,340,341,342,343,27,344,28,29,345,346,347,348,349,350,351,352,353,354,355,132,356,357,358,359,360,361,58,59,60,362,61,62,63,64,363,65,66,67,133,134,135,136,137,138,139,140,141,30,31,142,364,143,144,145,32,33,146,147,148,149,150,151,152,153,154,3,4,365,14,5,15,6,7,16,8,17,155,156,157,158,159,160,161,162,9,18,163,366,164,10,19,165,367,368,166,369,167,168,169,170,171,68,370,371,69,372,373,374,375,376,377,378,172,379,380,381,382,383,384,173,174,175,176,177,178,179,180,34,35,385,181,182,183,184,185,186,187,188,189,190,191,192,193,194,386,387,388,389,390,391,392,393,394,395,396,195,196,197,397,198,398,70,399,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,36,400,401,214,402,403,404,405,406,407,37,38,39,215,216,217,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,40,424,41,42,425,426,218,219,220,221,222,223,224,225,427,428,429,430,431,432,433,434,435,436,437,438,439,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,247,456,457,458,459,460,248,461,462,463,464,249,250,465,251,466,467,468,469,470,471,472,473,474,252,43,475,44,253,254,45,46,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,47,279,79,48,49,476,477,478,479,280,281,282,283,480,284,481,285,482,286,71,287,287,288,288,483],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[484,24,485,486,423,475],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[81,82,83,85,86,0,11,1,12,87,291,292,88,89,90,2,13,91,92,93,50,51,52,94,95,96,97,98,99,100,101,102,103,104,105,106,314,53,107,315,108,109,110,111,112,113,114,78,115,116,117,118,119,120,54,121,319,55,56,122,321,322,323,324,123,124,125,126,129,130,131,342,343,27,344,28,29,345,347,348,349,350,132,58,59,61,62,63,64,65,66,67,133,134,135,136,137,138,139,140,141,30,31,142,364,143,144,145,32,33,146,147,148,149,150,151,152,153,154,3,4,14,5,15,6,7,16,17,155,156,157,158,159,160,161,162,9,18,163,366,164,10,19,165,166,167,168,169,170,171,374,375,376,377,378,172,379,380,381,382,383,384,176,177,178,179,180,35,181,182,183,184,185,186,187,188,190,191,192,193,194,386,393,394,395,396,198,398,210,211,212,213,36,400,401,214,402,403,404,405,406,407,37,38,39,215,216,217,408,409,410,412,413,414,415,416,417,418,419,421,422,423,40,424,41,42,425,426,218,219,220,221,222,223,224,225,427,428,429,430,431,432,433,434,435,436,437,438,439,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,249,250,251,470,471,472,252,43,475,44,253,254,45,46,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,47,279,79,49,476,477,478,479,280,281,282,283,480,284,481,285,482,286,71,287,287,288,288,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[72,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[157,419],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"expected"}},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[27,28,29,30,487,488,489,490,36,37,38,39,40,41,42,43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[94,126,131,278,281],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[53,54,58,491,59,60,61,62,63,64,65,66,492,67,68,69,70,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[493,161],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[493,161],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[80,81,82,83,84,85,86,289,290,0,11,1,12,87,291,292,88,89,90,2,13,91,92,293,294,295,93,296,297,50,298,299,300,301,302,303,304,305,306,51,307,308,309,310,311,52,312,313,94,95,96,97,98,99,100,101,102,103,104,105,106,314,53,107,315,108,109,110,316,111,112,113,114,78,115,116,117,118,119,120,54,121,317,318,319,55,56,122,320,57,321,322,323,324,123,124,327,328,329,330,331,125,332,333,334,335,336,337,126,127,128,129,130,131,338,339,340,341,342,343,27,344,28,29,345,347,348,349,350,351,352,353,354,355,132,356,357,358,359,360,361,58,59,60,362,61,62,63,64,363,65,66,67,133,134,135,136,137,138,139,140,141,30,31,142,364,143,144,145,32,33,146,147,148,149,150,151,152,153,154,3,4,365,14,5,15,6,7,16,8,17,155,156,157,158,159,160,161,162,9,18,163,366,164,10,19,165,367,368,166,369,167,168,169,170,171,68,370,371,69,372,373,374,375,376,377,378,172,379,380,381,382,383,384,173,174,175,176,177,178,179,180,34,35,385,181,182,183,184,185,186,187,188,189,190,191,192,193,194,386,387,388,389,390,391,392,393,394,395,396,195,196,197,397,198,398,70,399,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,36,400,401,214,402,403,404,405,406,407,37,38,39,215,216,217,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,40,424,41,42,425,426,218,219,220,221,222,223,224,225,427,428,429,430,431,432,433,434,435,436,437,438,439,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,247,456,457,458,459,460,248,461,462,463,464,249,250,465,251,466,467,468,469,470,471,472,473,474,252,43,475,44,253,254,45,46,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,47,279,79,48,49,476,477,478,479,280,281,282,283,480,284,481,285,482,286,71,287,287,288,288,483],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[0,1,12,87,291,292,88,90,494,2,13,92],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[390,495,496],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[75,76,77],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[28,29,143,144,154,3,14,15,6,156,159,162,19,210,214,37,217,41,42,253,254],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[7,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[330,354],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[497],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[0,11,1,12,2,13,3,4,14,5,15,6,7,16,8,17,9,18,10,19],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[484,24,86,485,486,167,423,40,475,44,253,254,45,46,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[440,444,445,454,458],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[28,31,32,33,498,36,38,39,423,41,475,44,45,46,476],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests2.UsageTest.argumentsOrdered":33,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":252,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":450,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":364,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":483,"org.easymock.tests2.DelegateToTest.testReturnException":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":219,"org.easymock.tests.MockingTest.testPartialClassMocking":249,"org.easymock.tests.MockClassControlTest.testToString":429,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":346,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":301,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":256,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":487,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":124,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":167,"org.easymock.tests2.UsageTest.wrongArguments":31,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":395,"org.easymock.samples.ExampleTest.answerVsDelegate":281,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":69,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":467,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":118,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":434,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":104,"org.easymock.tests2.CaptureTest.testPrimitive":12,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":171,"org.easymock.tests.UsageTest.moreThanOneArgument":43,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":275,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":192,"org.easymock.tests.UsageTest.argumentsOrdered":46,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":199,"org.easymock.tests.UsageVarargTest.varargIntAccepted":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":455,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":176,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":360,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":180,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":22,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests.ReplayStateInvalidUsageTest.times":381,"org.easymock.tests2.DependencyTest.testClassMocking":325,"org.easymock.tests2.AnswerTest.answer":126,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":456,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":324,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":99,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":212,"org.easymock.tests2.DelegateToTest.testDelegate":85,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":271,"org.easymock.tests.LimitationsTest.mockFinalMethod":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":439,"org.easymock.tests2.DependencyTest.testClassMockingSupport":326,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":34,"org.easymock.tests2.CaptureTest.testCapture1_2446744":87,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":269,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":322,"org.easymock.tests.UsageThrowableTest.throwError":181,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":376,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":371,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":313,"org.easymock.samples.PartialClassMockTest.testGetArea":71,"org.easymock.tests.MockingTest.testInterfaceMocking":465,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":177,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":205,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":474,"org.easymock.tests2.UsageTest.niceToStrict":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":302,"org.easymock.tests2.ThreadingTest.testChangeDefault":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":75,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":61,"org.easymock.tests2.MockBuilderTest.testCreateMock":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":309,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":334,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":484,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":265,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":100,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":209,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":400,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":393,"org.easymock.tests.UsageOverloadedMethodTest.overloading":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":311,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":158,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":79,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":238,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":495,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":157,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":90,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":411,"org.easymock.tests.MockClassControlTest.testEquals":433,"org.easymock.tests2.EasyMockSupportClassTest.testAll":93,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":398,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":437,"org.easymock.tests2.CaptureTest.testCaptureAll":11,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":323,"org.easymock.tests.MockNameTest.defaultName":420,"org.easymock.tests2.UsageConstraintsTest.testMatches":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":193,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":374,"org.easymock.samples.ExampleTest.voteForRemovals":284,"org.easymock.tests.UsageVarargTest.allKinds":419,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":37,"org.easymock.samples.BasicClassMockTest.testPrintContent":479,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":438,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":187,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":342,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":84,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":357,"org.easymock.tests2.UsageConstraintsTest.greaterThan":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":211,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":122,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":392,"org.easymock.samples.ExampleTest.voteForRemoval":282,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":149,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":320,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":54,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":140,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":226,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":97,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":218,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":80,"org.easymock.tests2.CaptureTest.testCaptureFirst":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":446,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":98,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":147,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":476,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":234,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":151,"org.easymock.tests2.UsageTest.moreThanOneArgument":30,"org.easymock.tests2.CaptureTest.testCapture2_2446744":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":457,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":66,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":418,"org.easymock.tests.GenericTest.testBridgedEquals":399,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":406,"org.easymock.tests.UsageExpectAndReturnTest.longType":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":435,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":95,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":492,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":274,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":189,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":366,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":174,"org.easymock.tests.UsageCallCountTest.tooManyCalls":407,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":310,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":261,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":186,"org.easymock.tests.MockingTest.testNiceClassMocking":468,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":134,"org.easymock.tests.MockingTest.testClassMocking":463,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":491,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":401,"org.easymock.tests2.UsageConstraintsTest.testContains":156,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":114,"org.easymock.tests2.UsageConstraintsTest.testFind":14,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":217,"org.easymock.tests.MockTypeTest.fromEasyMockClass":370,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":421,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":111,"org.easymock.tests.UsageExpectAndReturnTest.object":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":103,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":413,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":472,"org.easymock.tests.UsageTest.exactCallCountByLastCall":255,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":195,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":289,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":408,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":243,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":279,"org.easymock.tests.MockClassControlTest.testHashCode":432,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":352,"org.easymock.tests2.EasyMockSupportTest.testVerify":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":304,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":201,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":208,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":321,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":290,"org.easymock.tests.UsageVarargTest.varargCharAccepted":412,"org.easymock.tests2.CaptureTest.testCaptureMultiple":497,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":461,"org.easymock.tests2.UsageTest.openCallCountByLastCall":143,"org.easymock.tests.DefaultClassInstantiatorTest.object":386,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":106,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":76,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":207,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":470,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":305,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":351,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":431,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":55,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":262,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":244,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":173,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":52,"org.easymock.tests2.UsageTest.resumeIfFailure":146,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":221,"org.easymock.tests2.StubTest.stubWithReturnValue":109,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":236,"org.easymock.tests2.SerializationTest.testAllMockedMethod":315,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":247,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":24,"org.easymock.samples.SupportTest.voteForRemovals":286,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":397,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":354,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":268,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":248,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":127,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":197,"org.easymock.tests.UsageExpectAndThrowTest.object":266,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":18,"org.easymock.tests2.DelegateToTest.testWrongClass":83,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":276,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":277,"org.easymock.tests.UsageStrictMockTest.range":41,"org.easymock.samples.ConstructorCalledMockTest.testTax":287,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":340,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":133,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":267,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":63,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":293,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":394,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":485,"org.easymock.tests2.CaptureTest.testCaptureNone":89,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":206,"org.easymock.tests.UsageUnorderedTest.message":36,"org.easymock.tests.UsageVerifyTest.twoReturns":39,"org.easymock.tests.UsageVarargTest.varargByteAccepted":417,"org.easymock.tests2.ThreadingTest.testThreadSafe":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":307,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":404,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":478,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":473,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":170,"org.easymock.tests2.UsageConstraintsTest.any":17,"org.easymock.tests2.StubTest.stub":108,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":380,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":220,"org.easymock.tests.UsageExpectAndThrowTest.longType":259,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":390,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":379,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":344,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":132,"org.easymock.tests2.SerializationTest.testClass":53,"org.easymock.tests.LimitationsTest.mockNativeMethod":166,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":246,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":329,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":345,"org.easymock.tests2.NameTest.nameForMocksControl":350,"org.easymock.tests2.MockedExceptionTest.testMockedException":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":297,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":254,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":251,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":260,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":316,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":115,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":64,"org.easymock.tests.MockingTest.testNicePartialClassMocking":250,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":120,"org.easymock.tests2.CaptureTest.testCaptureLast":88,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":139,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":163,"org.easymock.tests.MockingTest.testTwoMocks":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":264,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":19,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":72,"org.easymock.samples.ExampleTest.removeNonExistingDocument":481,"org.easymock.tests.UsageStrictMockTest.differentMethods":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":333,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":353,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":388,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":150,"org.easymock.tests2.ConstraintsToStringTest.andToString":23,"org.easymock.tests2.MockBuilderTest.testCreateMockString":67,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":427,"org.easymock.tests.UsageExpectAndThrowTest.floatType":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":298,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":295,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":129,"org.easymock.tests.UsageVerifyTest.twoThrows":38,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.ExampleTest.voteAgainstRemoval":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":204,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":56,"org.easymock.tests.LimitationsTest.privateConstructor":368,"org.easymock.tests2.UsageConstraintsTest.testNotNull":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":188,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":112,"org.easymock.tests2.UsageTest.defaultResetToNice":145,"org.easymock.samples.ExampleTest.voteAgainstRemovals":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":242,"org.easymock.tests.UsageVarargTest.differentLength":414,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":328,"org.easymock.tests2.CallbackTest.callback":94,"org.easymock.tests2.UsageConstraintsTest.equals":365,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":317,"org.easymock.tests.UsageTest.openCallCountByLastCall":253,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":169,"org.easymock.tests.UsageCallCountTest.tooFewCalls":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":136,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":396,"org.easymock.tests.UsageThrowableTest.throwCheckedException":185,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":486,"org.easymock.tests.MockingTest.testStrictClassMocking":462,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":138,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":225,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":332,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":137,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":131,"org.easymock.tests.ObjectMethodsTest.testHashCode":471,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":152,"org.easymock.tests2.NameTest.nameForNiceMock":349,"org.easymock.tests2.DependencyTest.testInterfaceMocking":123,"org.easymock.samples.ExampleTest.addDocument":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":308,"org.easymock.tests2.DelegateToTest.testStubDelegate":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":312,"org.easymock.tests2.AnswerTest.stubAnswer":130,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":40,"org.easymock.tests.UsageVarargTest.varargLongAccepted":416,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.floatType":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":86,"org.easymock.tests2.ConstraintsToStringTest.orToString":20,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":288,"org.easymock.tests.UsageThrowableTest.noUpperLimit":182,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":162,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":359,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":154,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":338,"org.easymock.tests2.SerializationTest.test":107,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":291,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":387,"org.easymock.tests2.UsageConstraintsTest.testSame":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":228,"org.easymock.samples.SupportTest.addDocument":482,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":299,"org.easymock.tests.GenericTest.testPackageScope":198,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":358,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":466,"org.easymock.tests2.NameTest.nameForMock":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":239,"org.easymock.tests2.UsageStrictMockTest.differentMethods":29,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":318,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":231,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":270,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":469,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":213,"org.easymock.tests2.MockedExceptionTest.testRealException":78,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":453,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":27,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":168,"org.easymock.tests2.NameTest.nameForStrictMock":348,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":362,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":110,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":77,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":119,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":339,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":488,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":389,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests.ErrorMessageTest.testGetters":489,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":59,"org.easymock.tests2.UsageStrictMockTest.range":28,"org.easymock.tests2.UsageConstraintsTest.lessThan":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":96,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":303,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":210,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":116,"org.easymock.tests.UsageTest.wrongArguments":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":300,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":240,"org.easymock.tests.UsageVarargTest.varargShortAccepted":415,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":391,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":405,"org.easymock.tests2.UsageConstraintsTest.cmpTo":155,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":443,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":144,"org.easymock.tests2.CaptureTest.testCaptureFromStub":13,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":375,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":60,"org.easymock.tests.UsageTest.unexpectedCallWithArray":475,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":423,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":403,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":241,"org.easymock.tests2.CaptureTest.testCapture":494,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":424,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.samples.ExampleTest.addAndChangeDocument":285,"org.easymock.tests2.ConstraintsToStringTest.notToString":21,"org.easymock.tests.UsageStrictMockTest.testVerify":426,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":477,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":422,"org.easymock.tests2.CompareToTest.testGreateThan":493,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":436,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":178,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":233,"org.easymock.tests.LimitationsTest.abstractClass":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":179,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":49,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":490,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":101}}]
