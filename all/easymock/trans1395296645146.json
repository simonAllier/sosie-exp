[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[4,5,6,7,8,9,10],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:71","sourceCode":"return org.easymock.MockType","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:77","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[13,14,15],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[16,17,18,19,20,21],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:86","sourceCode":"return org.easymock.internal.Results.getMainInterval().expectedCount()","type":"CtReturnImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,18,37,38,39,40,41,42,43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[44,45,46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.ConstructorArgs:77","failures":[67],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[68,69,66,70,71],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[72,73,74],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[76,77,78,4,4,5,5,79,80,81,49,50,82,83,68,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,52,114,115,116,117,118,119,120,121,122,123,61,62,63,124,125,64,65,66,126,127,128,129,130,10,131,70,132,133,71,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[45,171,172,173,174,175,176,177,178,179,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[50,54,55,56,180,181,60],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[182,183,23,24,184,185,26,186,187,27,28,188,189,45,190,191,192,193,194,118,63,124,64,66,132,71,195,33,35,36,196,18,197,38,39,198,19,41,42,43,199,200,201,202,203,204,205,206,207],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[185,208,35,209,198,210],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[211,212,213,214,215,216,217,218,219,76,77,220,221,78,4,5,79,80,81,222,49,51,223,224,82,83,68,84,225,85,86,226,182,227,22,183,23,24,228,229,230,231,232,184,185,233,25,26,186,187,234,235,236,27,28,188,189,237,208,92,95,105,111,238,239,240,241,242,243,244,45,171,245,172,246,173,174,46,247,248,249,12,47,250,190,251,252,176,253,254,255,256,177,257,48,258,259,260,14,261,262,178,263,179,264,265,266,267,268,0,269,2,270,271,3,272,191,273,274,275,192,193,276,277,194,278,279,280,52,53,114,59,281,282,283,116,118,121,122,123,61,63,124,64,65,66,284,126,127,128,129,130,70,132,133,71,285,286,287,288,289,290,291,195,292,293,137,138,294,295,296,297,298,299,300,33,34,35,36,196,301,18,37,197,38,39,302,303,303,198,40,19,41,304,305,42,43,199,145,306,307,308,309,210,310,147,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,202,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,152,153,154,385,386,387,388,203,204,205,389,390,391,392,393],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[211,212,213,214,215,216,217,394,218,219,76,77,220,221,78,4,4,5,5,79,80,81,222,49,50,395,396,397,398,399,51,400,401,402,403,404,405,406,407,223,224,82,83,68,84,225,85,86,408,409,410,411,412,226,413,414,415,416,417,418,182,227,22,183,23,24,228,229,230,231,232,184,185,233,25,26,186,187,234,235,236,27,28,188,189,237,208,87,88,419,420,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,238,239,240,241,242,243,244,45,171,421,245,172,246,173,174,46,175,247,248,249,12,47,250,190,251,252,176,253,254,255,256,177,257,48,422,29,30,31,32,258,423,259,13,260,14,261,424,262,178,263,179,264,265,266,267,268,0,269,2,270,271,3,272,191,273,274,275,192,193,276,277,194,278,279,280,52,53,114,59,425,426,281,282,283,116,118,119,120,121,122,123,61,62,63,124,64,65,66,284,126,127,128,129,427,130,10,131,70,132,133,71,134,135,285,286,287,288,289,290,291,195,428,292,293,429,430,431,136,137,138,139,140,141,432,433,142,434,435,294,295,296,297,298,299,300,33,34,35,36,436,437,438,209,439,440,441,442,443,444,15,445,446,447,448,449,450,451,452,453,454,455,456,457,196,301,18,37,197,38,39,302,458,198,40,19,41,304,305,42,43,199,143,144,145,146,306,307,308,309,210,310,147,459,460,461,462,463,148,464,465,466,467,468,469,470,471,472,473,474,475,311,476,312,313,477,478,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,479,480,481,482,483,345,346,347,348,349,484,350,351,202,352,353,354,355,356,485,357,358,359,360,361,362,363,364,486,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,487,488,489,149,150,151,152,153,490,154,491,492,155,493,494,385,386,387,388,203,204,205,156,157,158,159,160,161,162,163,495,496,497,389,390,391,392,393,498,499,500,164,165,166,167,168,169,170,501,502,503],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[50,52,54,55,56,180,181,60,62],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[4,5,49,50,68,86,69,504,505,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,52,6,506,60,62,7,9],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[237,449,456,466,318],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[186,192],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[441],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[165,169],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[11,243,251,256],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[176],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[212,213,214,215,216,217,394,218,76,77,220,221,79,80,81,222,406,407,223,224,84,225,182,227,22,183,23,24,228,507,229,230,231,232,184,185,233,25,26,186,187,234,235,236,27,28,188,189,237,208,87,88,419,420,89,92,94,95,97,103,107,110,238,239,240,241,242,243,244,45,171,245,172,246,173,174,46,175,247,248,249,12,47,250,190,251,252,176,253,254,255,256,177,257,48,29,258,259,13,260,14,261,424,262,178,263,179,264,265,266,267,268,0,269,2,270,271,3,272,191,273,274,275,192,276,194,278,279,280,53,114,59,425,426,281,282,283,65,66,284,126,127,128,427,130,131,70,132,71,134,285,286,287,288,289,290,291,195,428,292,293,429,430,431,137,138,140,432,435,294,295,296,297,298,299,300,33,34,35,36,450,456,196,301,18,37,197,38,39,302,458,198,40,19,41,304,305,42,43,199,143,145,306,307,308,309,210,310,147,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,311,476,312,313,477,478,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,479,480,481,482,483,345,346,347,348,349,350,351,202,352,353,354,355,356,485,357,358,359,360,361,362,363,364,486,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,487,488,489,149,150,151,152,490,491,492,155,493,494,385,386,387,388,203,204,205,156,157,158,159,160,161,162,163,496,389,390,391,392,393,498,499,500,508,164,165,166,167,168,169,509,170,501,502,503],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[429,430,431,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[23,26,27,28,33,35,36,18,38,19,41,42,43,201,314],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:124","failures":[211,212,213,214,215,216,217,218,219,76,77,220,221,78,4,5,79,80,81,222,49,51,223,224,82,83,68,84,225,85,86,226,182,227,22,183,23,24,228,229,230,231,232,184,185,233,25,26,186,187,234,235,236,27,28,188,189,237,208,92,95,105,111,238,239,240,241,242,243,244,45,171,245,172,246,173,174,46,247,248,249,12,47,250,190,251,252,176,253,254,255,256,177,257,48,258,259,260,14,261,262,178,263,179,264,265,266,267,268,0,269,2,270,271,3,272,191,273,274,275,192,193,276,277,194,278,279,280,52,53,114,59,281,282,283,116,118,121,122,123,61,63,124,64,65,66,284,126,127,128,129,130,70,132,133,71,285,286,287,288,289,290,291,195,292,293,137,138,294,295,296,297,298,299,300,33,34,35,36,196,301,18,37,197,38,39,302,303,303,198,40,19,41,304,305,42,43,199,145,306,307,308,309,210,310,147,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,202,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,152,153,154,385,386,387,388,203,204,205,389,390,391,392,393],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[95,118,124,132,135],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":171,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":198,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":15,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":187,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":211,"org.easymock.tests2.DelegateToTest.testReturnException":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":307,"org.easymock.tests.MockingTest.testPartialClassMocking":152,"org.easymock.tests.MockClassControlTest.testToString":158,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":422,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":99,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":365,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":54,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":46,"org.easymock.tests2.UsageTest.wrongArguments":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":315,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":405,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":290,"org.easymock.samples.ExampleTest.answerVsDelegate":213,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":142,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":492,"org.easymock.tests2.UsageConstraintsTest.testNull":172,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":126,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":163,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":194,"org.easymock.tests2.CaptureTest.testPrimitive":264,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":319,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":384,"org.easymock.tests.UsageTest.moreThanOneArgument":40,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":391,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":479,"org.easymock.tests.UsageTest.argumentsOrdered":43,"org.easymock.tests.UsageVarargTest.varargIntAccepted":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":449,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":181,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":417,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":438,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":324,"org.easymock.tests.ReplayStateInvalidUsageTest.times":472,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":51,"org.easymock.tests2.DependencyTest.testClassMocking":406,"org.easymock.tests2.AnswerTest.answer":59,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":451,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":232,"org.easymock.tests2.CaptureTest.testAnd":178,"org.easymock.tests2.UsageTest.strictResetToDefault":233,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":506,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":275,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":292,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":483,"org.easymock.tests2.DelegateToTest.testDelegate":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":380,"org.easymock.tests.LimitationsTest.mockFinalMethod":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":298,"org.easymock.tests2.DependencyTest.testClassMockingSupport":407,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":501,"org.easymock.tests2.CaptureTest.testCapture1_2446744":265,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":427,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":230,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":466,"org.easymock.tests.UsageThrowableTest.throwError":357,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":433,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":418,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":393,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":113,"org.easymock.samples.PartialClassMockTest.testGetArea":78,"org.easymock.tests.MockingTest.testInterfaceMocking":490,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":467,"org.easymock.tests2.CompareToTest.testLessOrEqual":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":321,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":488,"org.easymock.tests2.UsageTest.niceToStrict":186,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":67,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":121,"org.easymock.tests2.MockBuilderTest.testCreateMock":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":108,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":402,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":374,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":192,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":431,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":493,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":288,"org.easymock.tests.UsageOverloadedMethodTest.overloading":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":104,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":47,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":313,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":336,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":12,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":269,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":484,"org.easymock.tests.MockClassControlTest.testEquals":162,"org.easymock.tests2.EasyMockSupportClassTest.testAll":92,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":382,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":231,"org.easymock.tests2.CaptureTest.testCaptureAll":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":296,"org.easymock.tests.MockNameTest.defaultName":485,"org.easymock.tests2.UsageConstraintsTest.testMatches":250,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":464,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":392,"org.easymock.samples.ExampleTest.voteForRemovals":217,"org.easymock.tests.UsageVarargTest.allKinds":356,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":34,"org.easymock.samples.BasicClassMockTest.testPrintContent":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":297,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":363,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":182,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":424,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":310,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":509,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":58,"org.easymock.tests2.UsageConstraintsTest.greaterThan":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":93,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":428,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":71,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":170,"org.easymock.samples.ExampleTest.voteForRemoval":214,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":134,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":239,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":434,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":129,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":185,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":147,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":273,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":306,"org.easymock.tests2.CaptureTest.testCaptureFirst":3,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":274,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":189,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":332,"org.easymock.tests2.UsageTest.moreThanOneArgument":25,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":241,"org.easymock.tests2.CaptureTest.testCapture2_2446744":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":452,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":124,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":355,"org.easymock.tests.GenericTest.testBridgedEquals":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":204,"org.easymock.tests.UsageExpectAndReturnTest.longType":328,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":294,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":383,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":486,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":255,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":381,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":499,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":389,"org.easymock.tests.UsageCallCountTest.tooManyCalls":205,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":333,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":370,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":362,"org.easymock.tests.MockingTest.testNiceClassMocking":155,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":83,"org.easymock.tests.MockingTest.testClassMocking":150,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":494,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":117,"org.easymock.tests2.UsageConstraintsTest.testContains":249,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":81,"org.easymock.tests2.UsageConstraintsTest.testFind":245,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":287,"org.easymock.tests.MockTypeTest.fromEasyMockClass":432,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":196,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":259,"org.easymock.tests.UsageExpectAndReturnTest.object":335,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":403,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":277,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":55,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":351,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":462,"org.easymock.tests.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":495,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":480,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":341,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":347,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":409,"org.easymock.tests.MockClassControlTest.testHashCode":161,"org.easymock.tests2.EasyMockSupportTest.testVerify":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":102,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":481,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":430,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":311,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":229,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":507,"org.easymock.tests.UsageVarargTest.varargCharAccepted":350,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":508,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":457,"org.easymock.tests2.UsageTest.openCallCountByLastCall":234,"org.easymock.tests.DefaultClassInstantiatorTest.object":164,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":429,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":460,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":372,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":360,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":398,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":408,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":160,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":132,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":371,"org.easymock.tests.CapturesMatcherTest.test":303,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":342,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":498,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":111,"org.easymock.tests2.UsageTest.resumeIfFailure":188,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":309,"org.easymock.tests2.StubTest.stubWithReturnValue":208,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":60,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":256,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":334,"org.easymock.tests2.SerializationTest.testAllMockedMethod":114,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":450,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":75,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":17,"org.easymock.samples.SupportTest.voteForRemovals":221,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":136,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":377,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":456,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":425,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":497,"org.easymock.tests.UsageExpectAndThrowTest.object":375,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":253,"org.easymock.tests2.DelegateToTest.testWrongClass":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":299,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":300,"org.easymock.tests.UsageStrictMockTest.range":38,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":419,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":376,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":123,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":474,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":89,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":289,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":20,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":489,"org.easymock.tests2.CaptureTest.testCaptureNone":0,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":73,"org.easymock.tests.UsageUnorderedTest.message":33,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":206,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests.UsageVarargTest.varargByteAccepted":354,"org.easymock.tests2.ThreadingTest.testThreadSafe":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":106,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":388,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":463,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":76,"org.easymock.tests2.CaptureTest.testCapture_2617107":179,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":318,"org.easymock.tests2.UsageConstraintsTest.any":247,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":471,"org.easymock.tests2.StubTest.stub":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":308,"org.easymock.tests.UsageExpectAndThrowTest.longType":368,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":168,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":470,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":183,"org.easymock.tests2.SerializationTest.testClass":52,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":226,"org.easymock.tests.LimitationsTest.mockNativeMethod":145,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":139,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":344,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":397,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":228,"org.easymock.tests2.NameTest.nameForMocksControl":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":399,"org.easymock.tests2.MockedExceptionTest.testMockedException":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":94,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":305,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":423,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":154,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":369,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":65,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":61,"org.easymock.tests.MockingTest.testNicePartialClassMocking":153,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":128,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":395,"org.easymock.tests2.CaptureTest.testCaptureLast":268,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":502,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":174,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":86,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":254,"org.easymock.tests.MockingTest.testTwoMocks":151,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":373,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":257,"org.easymock.samples.ExampleTest.removeNonExistingDocument":394,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":468,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":401,"org.easymock.tests.UsageStrictMockTest.differentMethods":39,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":410,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":166,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":74,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":240,"org.easymock.tests2.MockBuilderTest.testCreateMockString":64,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":96,"org.easymock.tests.UsageExpectAndThrowTest.floatType":367,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":91,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":281,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":105,"org.easymock.samples.ExampleTest.voteAgainstRemoval":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":133,"org.easymock.tests.LimitationsTest.privateConstructor":144,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":505,"org.easymock.tests2.UsageConstraintsTest.testNotNull":177,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":79,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":364,"org.easymock.tests2.UsageTest.defaultResetToNice":236,"org.easymock.samples.ExampleTest.voteAgainstRemovals":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":396,"org.easymock.tests.UsageVarargTest.differentLength":202,"org.easymock.tests2.CallbackTest.callback":184,"org.easymock.tests2.UsageConstraintsTest.equals":421,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":10,"org.easymock.tests.UsageTest.openCallCountByLastCall":304,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":243,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":317,"org.easymock.tests.UsageCallCountTest.tooFewCalls":386,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":291,"org.easymock.tests.UsageThrowableTest.throwCheckedException":361,"org.easymock.tests.MockingTest.testStrictClassMocking":149,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":21,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":85,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":346,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":400,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":68,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":473,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":225,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":283,"org.easymock.tests.ObjectMethodsTest.testHashCode":461,"org.easymock.tests2.CompareToTest.testGreateOrEqual":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":180,"org.easymock.tests2.NameTest.nameForNiceMock":31,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":242,"org.easymock.tests2.DependencyTest.testInterfaceMocking":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":56,"org.easymock.samples.ExampleTest.addDocument":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":112,"org.easymock.tests2.DelegateToTest.testStubDelegate":14,"org.easymock.tests2.AnswerTest.stubAnswer":282,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":37,"org.easymock.tests.UsageVarargTest.varargLongAccepted":353,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.floatType":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":343,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":49,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":477,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":416,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":252,"org.easymock.tests.UsageThrowableTest.noUpperLimit":358,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":244,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":87,"org.easymock.tests2.SerializationTest.test":53,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":266,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":165,"org.easymock.tests2.UsageConstraintsTest.testSame":246,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":326,"org.easymock.samples.SupportTest.addDocument":220,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":97,"org.easymock.tests.GenericTest.testPackageScope":137,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":415,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":491,"org.easymock.tests2.NameTest.nameForMock":29,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":337,"org.easymock.tests2.UsageStrictMockTest.differentMethods":24,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":379,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":293,"org.easymock.tests2.MockedExceptionTest.testRealException":222,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":447,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":475,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":316,"org.easymock.tests2.NameTest.nameForStrictMock":30,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":120,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":127,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":88,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":176,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":167,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":118,"org.easymock.tests2.UsageStrictMockTest.range":23,"org.easymock.tests2.UsageConstraintsTest.lessThan":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":101,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":72,"org.easymock.tests2.UsageConstraintsTest.testOr":173,"org.easymock.tests.UsageRangeTest.combination":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":66,"org.easymock.tests.UsageTest.wrongArguments":41,"org.easymock.tests2.MockBuilderTest.testWithConstructor":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":98,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":338,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":169,"org.easymock.tests.UsageVarargTest.varargShortAccepted":352,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":203,"org.easymock.tests2.UsageConstraintsTest.cmpTo":248,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":209,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":235,"org.easymock.tests2.CaptureTest.testCaptureFromStub":270,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":465,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":119,"org.easymock.tests.UsageTest.unexpectedCallWithArray":19,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":387,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":339,"org.easymock.tests2.CaptureTest.testCapture":1,"org.easymock.tests2.UsageConstraintsTest.constraints":45,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":197,"org.easymock.samples.ExampleTest.addAndChangeDocument":218,"org.easymock.tests.UsageStrictMockTest.testVerify":458,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":219,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":295,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":267,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":322,"org.easymock.tests.LimitationsTest.abstractClass":143,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":331,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":193,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":348}}]
