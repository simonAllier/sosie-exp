[{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[7,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:73","sourceCode":"return java.lang.reflect.Field","type":"CtReturnImpl"},"failures":[9,10,11,4,12,13,14,15,16,17,6,18,19,20],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[21,22,23,24,7,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[211,212,213,214,215,216,217,218,219,220],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[21,61,63,221,64,222,223],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[224,225,226],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[227,82],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[228,229,22,230,23,231,25,27,232,28,30,32,33,233,38,39,234,235,40,41,55,236,56,57,227,58,237,238,239,240,62,241,96,242,243,97,244,245,246,247,113,114,115,116,117,128,130,131,138,139,140,141,142,143,146,147,149,150,151,153,154,155,156,157,181,184,191,192,193,194,195,196,198,199,200,201,248,249,250],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[251,228,229,21,22,230,252,23,253,254,255,1,231,256,257,2,24,258,26,259,27,232,28,260,30,33,34,35,36,261,37,233,38,39,234,235,40,41,42,43,44,45,47,48,49,262,50,51,54,55,56,57,227,58,237,263,239,59,60,264,265,266,267,268,269,270,271,272,61,62,64,273,274,275,276,277,278,279,280,281,282,283,284,285,286,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,287,288,289,290,92,93,94,95,291,96,292,242,243,100,101,103,104,293,294,244,245,246,247,295,296,297,298,110,111,112,113,114,115,116,117,299,300,120,301,128,131,132,302,133,134,135,136,303,137,304,305,306,307,308,309,310,311,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,312,313,314,315,316,184,185,188,189,190,317,318,319,320,321,322,323,324,325,326,191,192,193,194,195,196,197,198,199,200,327,328,201,248,249,250,203],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[329,330],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[42,44,51,68,69,71,73,74,331,85,89],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"message"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[333,334,335,336,101,102,107,108,337,338,339,127,203,204,205,208,209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[340,216,217],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:813","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[30,32,33,287,288,289,290,101,102,107,108,110,111,112,127,128,130,131,180,203,205,208,209],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[333,335,337,338,127,204],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":69,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":202,"org.easymock.tests2.UsageTest.argumentsOrdered":108,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":283,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":136,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":104,"org.easymock.tests2.StubTest.stubWithReturnValue":65,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":219,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":88,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":147,"org.easymock.tests2.SerializationTest.testAllMockedMethod":261,"org.easymock.tests2.DelegateToTest.testReturnException":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":134,"org.easymock.tests.MockingTest.testPartialClassMocking":198,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":335,"org.easymock.samples.SupportTest.voteForRemovals":228,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":172,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":160,"org.easymock.tests.UsageExpectAndThrowTest.object":170,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":232,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":212,"org.easymock.tests2.DelegateToTest.testWrongClass":63,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":192,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":75,"org.easymock.tests2.UsageTest.wrongArguments":102,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":184,"org.easymock.samples.ConstructorCalledMockTest.testTax":254,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":14,"org.easymock.tests.UsageStrictMockTest.range":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":297,"org.easymock.samples.ExampleTest.answerVsDelegate":21,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":233,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":332,"org.easymock.tests2.UsageConstraintsTest.testNull":71,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":57,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":171,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":282,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":242,"org.easymock.tests2.CaptureTest.testPrimitive":45,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":188,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":208,"org.easymock.tests.UsageTest.moreThanOneArgument":203,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":179,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":296,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":56,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":195,"org.easymock.tests2.CaptureTest.testCaptureNone":262,"org.easymock.tests.UsageUnorderedTest.message":180,"org.easymock.tests.UsageVerifyTest.twoReturns":112,"org.easymock.tests.UsageVarargTest.varargByteAccepted":324,"org.easymock.tests2.ThreadingTest.testThreadSafe":24,"org.easymock.tests.UsageTest.argumentsOrdered":209,"org.easymock.tests.UsageVarargTest.varargIntAccepted":319,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":309,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":256,"org.easymock.tests2.CaptureTest.testCapture_2617107":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":113,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":336,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":217,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":187,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":292,"org.easymock.tests2.UsageConstraintsTest.any":76,"org.easymock.tests2.StubTest.stub":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":135,"org.easymock.tests.UsageExpectAndThrowTest.longType":163,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":31,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":268,"org.easymock.tests2.SerializationTest.testClass":35,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":259,"org.easymock.tests.LimitationsTest.mockNativeMethod":181,"org.easymock.tests2.AnswerTest.answer":92,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":157,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":272,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":10,"org.easymock.tests2.CaptureTest.testAnd":42,"org.easymock.tests2.UsageTest.strictResetToDefault":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":263,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":34,"org.easymock.tests2.NameTest.nameForMocksControl":290,"org.easymock.tests2.MockedExceptionTest.testMockedException":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":249,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":207,"org.easymock.tests2.DelegateToTest.testDelegate":64,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":164,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":55,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":243,"org.easymock.tests.MockingTest.testNicePartialClassMocking":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":175,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":340,"org.easymock.tests2.CaptureTest.testCaptureLast":49,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":303,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":118,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":74,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":316,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":87,"org.easymock.tests2.CaptureTest.testCapture1_2446744":46,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":138,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":173,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":168,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":107,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":90,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":225,"org.easymock.tests.UsageThrowableTest.throwError":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":12,"org.easymock.tests.UsageStrictMockTest.differentMethods":131,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":158,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":16,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":7,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":20,"org.easymock.tests2.MockBuilderTest.testCreateMockString":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":197,"org.easymock.tests.UsageExpectAndThrowTest.floatType":162,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":82,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":93,"org.easymock.tests.UsageVerifyTest.twoThrows":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":246,"org.easymock.samples.PartialClassMockTest.testGetArea":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":114,"org.easymock.samples.ExampleTest.voteAgainstRemoval":230,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":239,"org.easymock.tests2.UsageTest.niceToStrict":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":161,"org.easymock.tests2.ThreadingTest.testChangeDefault":224,"org.easymock.tests2.UsageConstraintsTest.testNotNull":89,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":264,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":125,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":96,"org.easymock.tests2.UsageTest.defaultResetToNice":293,"org.easymock.samples.ExampleTest.voteAgainstRemovals":229,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":9,"org.easymock.tests2.CallbackTest.callback":37,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":13,"org.easymock.tests.UsageTest.openCallCountByLastCall":206,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":169,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":278,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":186,"org.easymock.tests.UsageCallCountTest.tooFewCalls":307,"org.easymock.tests.UsageOverloadedMethodTest.overloading":189,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":80,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":149,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":79,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":298,"org.easymock.tests.UsageThrowableTest.throwCheckedException":122,"org.easymock.tests2.EasyMockSupportClassTest.testAll":244,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":311,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":338,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":271,"org.easymock.tests2.CaptureTest.testCaptureAll":43,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":39,"org.easymock.tests2.UsageConstraintsTest.testMatches":81,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":8,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":235,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":196,"org.easymock.samples.ExampleTest.voteForRemovals":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":216,"org.easymock.tests2.NameTest.nameForNiceMock":289,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":26,"org.easymock.tests.UsageVarargTest.allKinds":326,"org.easymock.tests2.DependencyTest.testInterfaceMocking":27,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":315,"org.easymock.samples.BasicClassMockTest.testPrintContent":257,"org.easymock.samples.ExampleTest.addDocument":252,"org.easymock.tests2.DelegateToTest.testStubDelegate":62,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":124,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":29,"org.easymock.tests2.AnswerTest.stubAnswer":94,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":221,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":137,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":218,"org.easymock.tests2.UsageConstraintsTest.greaterThan":83,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":248,"org.easymock.tests.UsageVarargTest.varargLongAccepted":323,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":240,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":132,"org.easymock.samples.ExampleTest.voteForRemoval":22,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":258,"org.easymock.tests.UsageExpectAndReturnTest.floatType":140,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":156,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":255,"org.easymock.tests.UsageThrowableTest.noUpperLimit":300,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":84,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":328,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":67,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":99,"org.easymock.tests2.SerializationTest.test":36,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":275,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":120,"org.easymock.tests2.UsageConstraintsTest.testSame":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":139,"org.easymock.samples.SupportTest.addDocument":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":133,"org.easymock.tests2.CaptureTest.testCaptureFirst":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":276,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":109,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":145,"org.easymock.tests.GenericTest.testPackageScope":310,"org.easymock.tests2.CaptureTest.testCapture2_2446744":53,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":25,"org.easymock.tests2.UsageTest.moreThanOneArgument":101,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":97,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":19,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":325,"org.easymock.tests.GenericTest.testBridgedEquals":330,"org.easymock.tests2.NameTest.nameForMock":287,"org.easymock.tests.UsageExpectAndReturnTest.longType":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":312,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":178,"org.easymock.tests2.UsageStrictMockTest.differentMethods":33,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":142,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":250,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":306,"org.easymock.tests2.MockedExceptionTest.testRealException":267,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":146,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":220,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":165,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":185,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":38,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":305,"org.easymock.tests2.NameTest.nameForStrictMock":288,"org.easymock.tests2.UsageConstraintsTest.testContains":78,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":266,"org.easymock.tests2.UsageConstraintsTest.testFind":70,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":190,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":227,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":60,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":126,"org.easymock.tests.UsageExpectAndReturnTest.object":148,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":85,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":237,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":241,"org.easymock.tests2.UsageStrictMockTest.range":32,"org.easymock.tests2.UsageConstraintsTest.lessThan":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":281,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":17,"org.easymock.tests.UsageTest.exactCallCountByLastCall":210,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":182,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":215,"org.easymock.tests2.CaptureTest.testCaptureRightOne":51,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":339,"org.easymock.tests2.UsageConstraintsTest.testOr":73,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":211,"org.easymock.tests.UsageRangeTest.combination":201,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":236,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":154,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":222,"org.easymock.tests.UsageTest.wrongArguments":205,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":15,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":327,"org.easymock.tests2.EasyMockSupportTest.testVerify":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":151,"org.easymock.tests.UsageVarargTest.varargShortAccepted":322,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":269,"org.easymock.tests2.UsageConstraintsTest.cmpTo":77,"org.easymock.tests.UsageVarargTest.varargCharAccepted":320,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":260,"org.easymock.tests2.UsageTest.openCallCountByLastCall":105,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":284,"org.easymock.tests2.CaptureTest.testCaptureFromStub":52,"org.easymock.tests.UsageTest.unexpectedCallWithArray":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":121,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":5,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":152,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":238,"org.easymock.tests2.UsageConstraintsTest.constraints":68,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":129,"org.easymock.samples.ExampleTest.addAndChangeDocument":253,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":166,"org.easymock.tests.UsageStrictMockTest.testVerify":302,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":155,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":2,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":313,"org.easymock.tests2.UsageTest.resumeIfFailure":294,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":48,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":115,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":116,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":159,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":279}}]
