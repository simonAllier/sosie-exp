[{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,157,158,158,159,160,161,162,163,164,165,166,0,167,1,168,169,170,171,172,173,174,2,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,3,4,240,5,241,6,7,242,8,243,244,245,246,247,248,249,250,251,9,252,253,254,255,10,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[252],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[238,250,252],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[53,54,76,80,81,83,86,124,128,129,131,134,215,216],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[298],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[11,13,14,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,42,43,44,45,46,47,48,49,299,50,51,52,53,54,55,300,56,57,58,59,60,301,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,302,303,304,305,306,307,308,309,310,311,92,93,94,95,96,97,98,99,100,101,102,103,104,312,105,313,314,315,316,317,106,108,109,111,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,153,154,155,156,318,319,320,157,157,158,158,159,321,160,161,162,163,322,164,165,323,166,0,167,1,168,169,170,171,172,173,174,2,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,193,194,195,324,325,326,327,196,197,198,199,200,201,202,203,204,205,206,207,212,328,213,214,215,216,217,218,219,329,220,221,222,223,224,225,226,227,228,229,230,231,330,232,233,234,235,236,237,238,239,3,4,240,5,241,6,7,242,8,243,244,245,246,247,248,249,250,251,9,252,253,254,255,10,256,257,258,260,261,263,264,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[157,158,331,218,332,333,334,335,336,337,291,338,339],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[183],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[340,341],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[342,343],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[42,43,44,50,51,53,54,70,141,143,146,147,324,325,326,327,213,215,216,278,279,285,286],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[157,157,158,158,331,218,332,333,334,336,337,291,338,339],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[157,158,331,332,337],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[345,42,48,54,56,144,145,216,239,3,240,241,6,245,248,251,256,282,283],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:126","failures":[108,161,233,235,237],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[246],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[346,347,348,199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.RecordState:274","failures":[106,161,275,289,290,292,295,296,297],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[251],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[349],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[334,338,350,351,352,353,354],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[50,355,356,142,357,358],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[342,60,301,61,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"bridgeMethod","bridgeMethod":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[346,347,348,199,201],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[12,15,16,359],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[168],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests2.UsageTest.argumentsOrdered":286,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":140,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":32,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":281,"org.easymock.tests2.StubTest.stubWithReturnValue":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":334,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":321,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":255,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":129,"org.easymock.tests2.SerializationTest.testAllMockedMethod":329,"org.easymock.tests2.DelegateToTest.testReturnException":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":30,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":35,"org.easymock.tests.MockingTest.testPartialClassMocking":114,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":358,"org.easymock.samples.SupportTest.voteForRemovals":166,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":342,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":11,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":84,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":72,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":36,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":293,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":347,"org.easymock.tests.UsageExpectAndThrowTest.object":82,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":274,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":350,"org.easymock.tests2.DelegateToTest.testWrongClass":235,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":93,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":94,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":242,"org.easymock.tests2.UsageTest.wrongArguments":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":24,"org.easymock.tests.UsageStrictMockTest.range":53,"org.easymock.samples.ConstructorCalledMockTest.testTax":157,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":151,"org.easymock.samples.ExampleTest.answerVsDelegate":161,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":201,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":83,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":187,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":263,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":229,"org.easymock.tests2.CaptureTest.testPrimitive":168,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":28,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":91,"org.easymock.tests.UsageTest.moreThanOneArgument":141,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":146,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":150,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":186,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":102,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":119,"org.easymock.tests2.CaptureTest.testCaptureNone":173,"org.easymock.tests.UsageUnorderedTest.message":70,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":349,"org.easymock.tests.UsageVerifyTest.twoReturns":44,"org.easymock.tests.UsageVarargTest.varargByteAccepted":310,"org.easymock.tests2.ThreadingTest.testThreadSafe":196,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":12,"org.easymock.tests.UsageTest.argumentsOrdered":147,"org.easymock.tests.UsageVarargTest.varargIntAccepted":304,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":315,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":17,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":354,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":259,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":27,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":262,"org.easymock.tests2.UsageConstraintsTest.any":243,"org.easymock.tests2.StubTest.stub":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":21,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":97,"org.easymock.tests.UsageExpectAndThrowTest.longType":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":31,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":214,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":258,"org.easymock.tests2.SerializationTest.testClass":218,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":268,"org.easymock.tests.LimitationsTest.mockNativeMethod":71,"org.easymock.tests2.AnswerTest.answer":292,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":139,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":211,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":277,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":333,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":192,"org.easymock.tests2.NameTest.nameForMocksControl":327,"org.easymock.tests2.MockedExceptionTest.testMockedException":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":224,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":58,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests2.DelegateToTest.testDelegate":237,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":76,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":116,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":184,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":264,"org.easymock.tests.MockingTest.testNicePartialClassMocking":115,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":87,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":189,"org.easymock.tests2.CompareToTest.testCompareEqual":298,"org.easymock.tests2.CaptureTest.testCaptureLast":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":33,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":23,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":207,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":41,"org.easymock.tests.MockingTest.testTwoMocks":113,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":22,"org.easymock.tests2.CaptureTest.testCapture1_2446744":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":85,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":80,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":285,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":256,"org.easymock.tests.UsageThrowableTest.throwError":62,"org.easymock.tests.UsageStrictMockTest.differentMethods":54,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":341,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":198,"org.easymock.tests2.MockBuilderTest.testCreateMockString":267,"org.easymock.tests.UsageExpectAndThrowTest.floatType":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":104,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":249,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":339,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":271,"org.easymock.samples.PartialClassMockTest.testGetArea":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":18,"org.easymock.samples.ExampleTest.voteAgainstRemoval":163,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":118,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":194,"org.easymock.tests2.UsageTest.niceToStrict":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":73,"org.easymock.tests2.UsageConstraintsTest.testNotNull":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":69,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":178,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":261,"org.easymock.tests2.UsageTest.defaultResetToNice":284,"org.easymock.tests2.MockBuilderTest.testCreateMock":265,"org.easymock.samples.ExampleTest.voteAgainstRemovals":160,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":135,"org.easymock.tests.UsageVarargTest.differentLength":307,"org.easymock.tests2.CallbackTest.callback":275,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":331,"org.easymock.tests.UsageTest.openCallCountByLastCall":144,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":357,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":81,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":225,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":238,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":26,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":149,"org.easymock.tests.UsageCallCountTest.tooFewCalls":313,"org.easymock.tests.UsageOverloadedMethodTest.overloading":47,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":247,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":204,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":131,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":246,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":174,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":152,"org.easymock.tests.UsageThrowableTest.throwCheckedException":66,"org.easymock.tests2.EasyMockSupportClassTest.testAll":269,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":301,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":356,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":39,"org.easymock.tests2.CaptureTest.testCaptureAll":167,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":206,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":99,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":203,"org.easymock.tests2.UsageConstraintsTest.testMatches":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":205,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":103,"org.easymock.samples.ExampleTest.voteForRemovals":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":353,"org.easymock.tests2.NameTest.nameForNiceMock":326,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":200,"org.easymock.tests.UsageVarargTest.allKinds":92,"org.easymock.tests2.DependencyTest.testInterfaceMocking":273,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":352,"org.easymock.samples.BasicClassMockTest.testPrintContent":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":40,"org.easymock.samples.ExampleTest.addDocument":322,"org.easymock.tests2.DelegateToTest.testStubDelegate":234,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":68,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":212,"org.easymock.tests2.AnswerTest.stubAnswer":296,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":34,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":51,"org.easymock.tests2.UsageConstraintsTest.greaterThan":250,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":335,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":57,"org.easymock.tests.UsageVarargTest.varargLongAccepted":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":195,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":55,"org.easymock.samples.ExampleTest.voteForRemoval":162,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":197,"org.easymock.tests.UsageExpectAndReturnTest.floatType":122,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":291,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":190,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":158,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":251,"org.easymock.tests.UsageThrowableTest.noUpperLimit":63,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":110,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":276,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":239,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":45,"org.easymock.tests2.SerializationTest.test":219,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":170,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":222,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":64,"org.easymock.tests2.UsageConstraintsTest.testSame":241,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":121,"org.easymock.samples.SupportTest.addDocument":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":29,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":232,"org.easymock.tests2.CaptureTest.testCaptureFirst":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":223,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":288,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":348,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":112,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":127,"org.easymock.tests.GenericTest.testPackageScope":60,"org.easymock.tests2.UsageTest.moreThanOneArgument":278,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":199,"org.easymock.tests2.CaptureTest.testCapture2_2446744":176,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":15,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":266,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":311,"org.easymock.tests.GenericTest.testBridgedEquals":343,"org.easymock.tests2.NameTest.nameForMock":324,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":316,"org.easymock.tests.UsageExpectAndReturnTest.longType":123,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":37,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":90,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":132,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":254,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":156,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":337,"org.easymock.tests2.UsageStrictMockTest.differentMethods":216,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":88,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":100,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":124,"org.easymock.tests.UsageCallCountTest.tooManyCalls":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":86,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":59,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":105,"org.easymock.tests2.MockedExceptionTest.testRealException":181,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":128,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":77,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":67,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":25,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":202,"org.easymock.tests2.NameTest.nameForStrictMock":325,"org.easymock.tests2.UsageConstraintsTest.testContains":245,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":180,"org.easymock.tests2.UsageConstraintsTest.testFind":240,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":48,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":289,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":188,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":290,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":49,"org.easymock.tests.UsageExpectAndReturnTest.object":130,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":191,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":260,"org.easymock.tests2.UsageStrictMockTest.range":215,"org.easymock.tests2.UsageConstraintsTest.lessThan":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":351,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":306,"org.easymock.tests.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":359,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":221,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":346,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":340,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":13,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":338,"org.easymock.tests.UsageRangeTest.combination":56,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":302,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":185,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":108,"org.easymock.tests.UsageTest.wrongArguments":143,"org.easymock.tests2.MockBuilderTest.testWithConstructor":332,"org.easymock.tests2.EasyMockSupportTest.testVerify":330,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":345,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":133,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":14,"org.easymock.tests.UsageVarargTest.varargShortAccepted":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":106,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":154,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":208,"org.easymock.tests2.UsageConstraintsTest.cmpTo":244,"org.easymock.tests.UsageVarargTest.varargCharAccepted":305,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":294,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":328,"org.easymock.tests2.UsageTest.openCallCountByLastCall":282,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":283,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":231,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":153,"org.easymock.tests2.CaptureTest.testCaptureFromStub":175,"org.easymock.tests.UsageTest.unexpectedCallWithArray":142,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":79,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":65,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":50,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":134,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":193,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":52,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":78,"org.easymock.samples.ExampleTest.addAndChangeDocument":165,"org.easymock.tests.UsageStrictMockTest.testVerify":300,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":95,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":318,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":38,"org.easymock.tests2.UsageTest.resumeIfFailure":287,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":19,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":20,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":111,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":303,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":226}}]
