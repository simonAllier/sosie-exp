[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,0,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[100,104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[1,2,3,4,453,453,454,454,5,6,7,8,9,10,11,12,13,15,21,22,23,24,25,27,28,33,35,36,37,38,39,40,41,42,43,44,45,46,50,52,54,55,57,60,62,63,64,65,66,67,68,70,71,76,77,78,79,80,81,82,83,84,85,86,90,91,92,93,94,95,96,97,455,456,457,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,155,162,163,164,165,166,167,168,169,170,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,208,213,214,215,216,217,218,219,220,221,222,223,224,225,259,260,261,262,263,264,265,266,267,268,269,270,271,276,277,278,279,280,281,282,283,285,286,287,288,289,290,292,293,294,295,296,0,297,298,299,300,301,302,304,305,306,307,314,321,322,323,324,325,331,338,339,340,341,342,343,344,345,346,347,348,349,350,351,354,355,458,356,357,359,360,361,363,364,365,366,367,368,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,459,392,395,396,397,398,400,401,402,403,404,405,406,409,411,413,417,418,460,419,420,461,462,422,423,424,426,427,428,429,430,431,432,433,434,435,436,439,441,446,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[9,44,46,49,50,71,76,77,79,80,81,82,83,84,92,139,140,141,142,153,154,219,220,223,286,287,292,293,305,306,363,379,381,382,385,386,388,389,391,392,426,427,428,429,432,435],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[153,219,295],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[300],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[463],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[464],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[76,81,92,140,379,386],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[26,30],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[289],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[465,466,463],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[467,468,50,140,141,222,434],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer","i":"matches"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[289],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[469,77,79,82,83,139,140,141,219,220,222,223,381,382,388,389,426,427,428,429,432,434,435],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[1,7,8,10,11,13,33,64,65,66,67,455,456,457,114,115,116,117,118,119,122,123,125,126,127,129,130,131,132,133,134,135,136,137,138,162,163,164,165,166,201,202,220,222,223,324,354,355,360,369,372,374,375,377,459,401,402,403,404,405,406,409,412,413,414,417,418,460,419,420,461,462,432,434,435,439,441,446,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[24,100,104,135,276,277,278,279,324,358,359,360,361,362,363,403,420],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[90,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[226],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[1,2,3,453,453,454,454,26,27,28,29,30,31,32,33,34,63,99,100,101,102,103,104,106,107,108,109,455,456,457,113,154,155,156,157,158,159,160,161,174,177,234,272,273,276,277,278,458,357,368,470,369,370,371,372,373,374,375,471,376,377,472,378,459,473,474,475,401,402,404,405,406,407,409,476,410,411,412,413,414,415,416,417,418,460,419,461,462,437,438,477,439,478,440,441,442,443,479,480,444,481,482,445,483,446,447,448,449,450,451,452,484,485],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,40,86,168,210,211,212,242,276,277,278,279,423],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[486,408,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[51,64,65,66,67,68,134,135,136,137,138,166,167,170,200,201,202,220,235,239,240,249,254,280,296,298,299,307,423,432],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"failures":[99,100,104],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[488],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":283,"org.easymock.tests2.UsageTest.argumentsOrdered":389,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":76,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":269,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":245,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":384,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":4,"org.easymock.tests2.DelegateToTest.testReturnException":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":36,"org.easymock.tests.MockingTest.testPartialClassMocking":455,"org.easymock.tests.MockClassControlTest.testToString":156,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":425,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":480,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":441,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":180,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":469,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":355,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":290,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":166,"org.easymock.tests2.UsageTest.wrongArguments":382,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":215,"org.easymock.samples.ExampleTest.answerVsDelegate":9,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":177,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":112,"org.easymock.tests2.UsageConstraintsTest.testNull":286,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":404,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":161,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":268,"org.easymock.tests2.CaptureTest.testPrimitive":341,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":170,"org.easymock.tests.UsageTest.moreThanOneArgument":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":199,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":66,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":16,"org.easymock.tests.UsageTest.argumentsOrdered":83,"org.easymock.tests.UsageVarargTest.varargIntAccepted":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":134,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":319,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":138,"org.easymock.tests.ReplayStateInvalidUsageTest.times":59,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":331,"org.easymock.tests2.DependencyTest.testClassMocking":352,"org.easymock.tests2.AnswerTest.answer":392,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":367,"org.easymock.tests2.CaptureTest.testAnd":338,"org.easymock.tests2.UsageTest.strictResetToDefault":380,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":411,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":65,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":263,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":20,"org.easymock.tests2.DelegateToTest.testDelegate":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":195,"org.easymock.tests.LimitationsTest.mockFinalMethod":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":25,"org.easymock.tests2.DependencyTest.testClassMockingSupport":353,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":171,"org.easymock.tests2.CaptureTest.testCapture1_2446744":342,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":408,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":365,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":53,"org.easymock.tests.UsageThrowableTest.throwError":90,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":176,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":485,"org.easymock.samples.PartialClassMockTest.testGetArea":1,"org.easymock.tests.MockingTest.testInterfaceMocking":110,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":135,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":444,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":181,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":234,"org.easymock.tests2.UsageTest.niceToStrict":383,"org.easymock.tests2.ThreadingTest.testChangeDefault":486,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":235,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":372,"org.easymock.tests2.MockBuilderTest.testCreateMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":449,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":189,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":89,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":213,"org.easymock.tests.UsageOverloadedMethodTest.overloading":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":451,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":206,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":125,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":69,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":295,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":347,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":145,"org.easymock.tests2.EasyMockSupportClassTest.testAll":439,"org.easymock.tests.MockClassControlTest.testEquals":160,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":28,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":197,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":23,"org.easymock.tests2.CaptureTest.testCaptureAll":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":366,"org.easymock.tests.MockNameTest.defaultName":75,"org.easymock.tests2.UsageConstraintsTest.testMatches":0,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":67,"org.easymock.samples.ExampleTest.voteForRemovals":13,"org.easymock.tests.UsageVarargTest.allKinds":153,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":24,"org.easymock.samples.BasicClassMockTest.testPrintContent":3,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":96,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":316,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":362,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":105,"org.easymock.tests2.UsageConstraintsTest.greaterThan":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":478,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":163,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":414,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":106,"org.easymock.samples.ExampleTest.voteForRemoval":10,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":415,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":322,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":178,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":407,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":63,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":379,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":261,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":35,"org.easymock.tests2.CaptureTest.testCaptureFirst":351,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":241,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":262,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":391,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":209,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":121,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":324,"org.easymock.tests2.CaptureTest.testCapture2_2446744":350,"org.easymock.tests2.UsageTest.moreThanOneArgument":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":253,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":377,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":152,"org.easymock.tests.GenericTest.testBridgedEquals":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":48,"org.easymock.tests.UsageExpectAndReturnTest.longType":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":21,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":259,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":472,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":198,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":200,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":303,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":64,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":211,"org.easymock.tests.UsageCallCountTest.tooManyCalls":49,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":450,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":95,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":418,"org.easymock.tests.MockingTest.testNiceClassMocking":113,"org.easymock.tests.MockingTest.testClassMocking":108,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":470,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":42,"org.easymock.tests2.UsageConstraintsTest.testContains":294,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":278,"org.easymock.tests2.UsageConstraintsTest.testFind":285,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":71,"org.easymock.tests.MockTypeTest.fromEasyMockClass":175,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":400,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":217,"org.easymock.tests.UsageExpectAndReturnTest.object":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":267,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":147,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":232,"org.easymock.tests.UsageTest.exactCallCountByLastCall":84,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":240,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":17,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":72,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":473,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":142,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":130,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":205,"org.easymock.tests.MockClassControlTest.testHashCode":159,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":310,"org.easymock.tests2.EasyMockSupportTest.testVerify":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":482,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":18,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":88,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":203,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":364,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":308,"org.easymock.tests.UsageVarargTest.varargCharAccepted":146,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":98,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":258,"org.easymock.tests2.UsageTest.openCallCountByLastCall":385,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":465,"org.easymock.tests.DefaultClassInstantiatorTest.object":99,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":270,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":87,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":445,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":412,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":158,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":186,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":452,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":157,"org.easymock.tests2.UsageTest.resumeIfFailure":390,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":38,"org.easymock.tests2.StubTest.stubWithReturnValue":423,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":123,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":304,"org.easymock.tests2.SerializationTest.testAllMockedMethod":357,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":251,"org.easymock.samples.SupportTest.voteForRemovals":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":312,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":192,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":257,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":393,"org.easymock.tests.UsageExpectAndThrowTest.object":190,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":74,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":301,"org.easymock.tests2.DelegateToTest.testWrongClass":361,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":202,"org.easymock.samples.ConstructorCalledMockTest.testTax":453,"org.easymock.tests.UsageStrictMockTest.range":222,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":274,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":417,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":464,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":191,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":437,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":61,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":214,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":228,"org.easymock.tests2.CaptureTest.testCaptureNone":346,"org.easymock.tests.UsageUnorderedTest.message":50,"org.easymock.tests.UsageVerifyTest.twoReturns":141,"org.easymock.tests.UsageVarargTest.varargByteAccepted":151,"org.easymock.tests2.ThreadingTest.testThreadSafe":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":447,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":46,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":2,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":233,"org.easymock.tests2.CaptureTest.testCapture_2617107":340,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":173,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":255,"org.easymock.tests2.UsageConstraintsTest.any":292,"org.easymock.tests2.StubTest.stub":422,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":58,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":212,"org.easymock.tests.UsageExpectAndThrowTest.longType":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":256,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":103,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":57,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":433,"org.easymock.tests2.SerializationTest.testClass":458,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":314,"org.easymock.tests.LimitationsTest.mockNativeMethod":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":133,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":29,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":328,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":436,"org.easymock.tests2.NameTest.nameForMocksControl":429,"org.easymock.tests2.MockedExceptionTest.testMockedException":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":440,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":81,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":457,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":399,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":184,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":375,"org.easymock.tests.MockingTest.testNicePartialClassMocking":456,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":406,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":326,"org.easymock.tests2.CaptureTest.testCaptureLast":345,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":172,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":462,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":289,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":302,"org.easymock.tests.MockingTest.testTwoMocks":109,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":421,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":188,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":388,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":306,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":487,"org.easymock.samples.ExampleTest.removeNonExistingDocument":14,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":55,"org.easymock.tests.UsageStrictMockTest.differentMethods":223,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":311,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":101,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":323,"org.easymock.tests2.MockBuilderTest.testCreateMockString":378,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":442,"org.easymock.tests.UsageExpectAndThrowTest.floatType":182,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":477,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":395,"org.easymock.tests.UsageVerifyTest.twoThrows":140,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":446,"org.easymock.samples.ExampleTest.voteAgainstRemoval":11,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":246,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":413,"org.easymock.tests.LimitationsTest.privateConstructor":32,"org.easymock.tests2.UsageConstraintsTest.testNotNull":305,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":97,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":276,"org.easymock.tests2.UsageTest.defaultResetToNice":387,"org.easymock.samples.ExampleTest.voteAgainstRemovals":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":247,"org.easymock.tests.UsageVarargTest.differentLength":148,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":327,"org.easymock.tests2.CallbackTest.callback":424,"org.easymock.tests2.UsageConstraintsTest.equals":284,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":476,"org.easymock.tests.UsageTest.openCallCountByLastCall":80,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":168,"org.easymock.tests.UsageCallCountTest.tooFewCalls":44,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":419,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":216,"org.easymock.tests.UsageThrowableTest.throwCheckedException":94,"org.easymock.tests.MockingTest.testStrictClassMocking":107,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":461,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":86,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":460,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":332,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":60,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":420,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":397,"org.easymock.tests.ObjectMethodsTest.testHashCode":231,"org.easymock.tests2.NameTest.nameForNiceMock":428,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":325,"org.easymock.tests2.DependencyTest.testInterfaceMocking":354,"org.easymock.samples.ExampleTest.addDocument":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":484,"org.easymock.tests2.DelegateToTest.testStubDelegate":360,"org.easymock.tests2.AnswerTest.stubAnswer":396,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":220,"org.easymock.tests.UsageVarargTest.varargLongAccepted":150,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":244,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":132,"org.easymock.tests.UsageExpectAndReturnTest.floatType":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":459,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":454,"org.easymock.tests.UsageThrowableTest.noUpperLimit":91,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":207,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":299,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":318,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":281,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":272,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":343,"org.easymock.tests2.SerializationTest.test":356,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":100,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":115,"org.easymock.tests2.UsageConstraintsTest.testSame":287,"org.easymock.samples.SupportTest.addDocument":6,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":443,"org.easymock.tests.GenericTest.testPackageScope":27,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":239,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":317,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":111,"org.easymock.tests2.NameTest.nameForMock":426,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":126,"org.easymock.tests2.UsageStrictMockTest.differentMethods":435,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":194,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":229,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":165,"org.easymock.tests2.MockedExceptionTest.testRealException":279,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":249,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":275,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":167,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":62,"org.easymock.tests2.NameTest.nameForStrictMock":427,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":466,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":398,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":273,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":467,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":102,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":300,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":369,"org.easymock.tests2.UsageStrictMockTest.range":434,"org.easymock.tests2.UsageConstraintsTest.lessThan":307,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":474,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":243,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":481,"org.easymock.tests2.CaptureTest.testCaptureRightOne":348,"org.easymock.tests2.UsageConstraintsTest.testOr":288,"org.easymock.tests.UsageRangeTest.combination":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":402,"org.easymock.tests.UsageTest.wrongArguments":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":479,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":236,"org.easymock.tests.UsageVarargTest.varargShortAccepted":149,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":104,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":47,"org.easymock.tests2.UsageConstraintsTest.cmpTo":293,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":238,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":386,"org.easymock.tests2.CaptureTest.testCaptureFromStub":349,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":52,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":370,"org.easymock.tests.UsageTest.unexpectedCallWithArray":78,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":219,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":45,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":128,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":221,"org.easymock.tests2.UsageConstraintsTest.constraints":282,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests.UsageStrictMockTest.testVerify":225,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":5,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":22,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":344,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":475,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":136,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":120,"org.easymock.tests.LimitationsTest.abstractClass":31,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":137,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":208,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":468,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":143,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":265}}]
