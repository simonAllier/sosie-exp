[{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[2,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[21],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"failures":[2,2,3,3,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,21,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,4,185,186,187,188,189,190,6,191,192,193,194,195,196,197,198,199,200,201,202,14,203,204,205,15,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,20,230,231,232,233,234,235,236,16,237,238,239,240,241,242,243,19,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[33,69,72],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[267,268,269,270],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[214,216,219,271,233,245,252],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[43,16],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:123","sourceCode":"if (java.lang.Object instanceof org.easymock.EasyMockSupport) {\n    java.lang.Object = ((org.easymock.EasyMockSupport)(java.lang.Object)).createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n} else {\n    java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n}","type":"CtIfImpl"},"failures":[273,274,275,276,277,278,279,244,280,281,282,283,284,285,286,287,288,289,290,256,291,292,293,294,295,296],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"host","this":"this"}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:35","sourceCode":"final java.lang.Object java.lang.Object = org.easymock.internal.matchers.Equals.getExpected()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[33],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[298],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:182","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[211,213,225,228,235,299,298,300,301,302],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[208],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[325,326,33,327,328,39,40,329,330,41,331,42,332,333,66,334,335,336],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[337,338,339,34,35,36,38,328,329,330,333,66,67,68,129,175,340,341,342,182,183,184,343,344,345,346],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[273,2,3,347,22,23,274,24,25,26,27,348,28,29,349,350,351,352,353,354,355,356,357,358,359,360,34,35,36,38,361,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,362,66,68,363,364,74,76,77,80,365,366,367,368,84,85,86,87,88,89,90,91,92,93,94,95,96,369,370,371,372,373,374,375,100,376,377,378,101,379,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,380,133,134,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,381,170,171,172,174,175,176,382,179,180,383,182,184,384,4,343,344,345,346,185,188,189,190,385,386,387,388,6,191,389,192,193,194,195,336,197,390,198,199,201,202,14,203,204,205,15,206,207,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,20,230,231,232,233,234,235,236,237,238,239,240,241,18,243,244,245,246,391,247,392,393,249,250,251,252,255,256,258,259,262,263,264,265,266],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[313,257],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[31,35,98,136,137],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[5,394,272,395,396,397,14,15,398,399,400,401],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[402,403,404,405,406],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[70],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":214,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests2.UsageTest.argumentsOrdered":342,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":313,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":382,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":274,"org.easymock.tests2.DelegateToTest.testReturnException":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":87,"org.easymock.tests.MockingTest.testPartialClassMocking":43,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":9,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":106,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":193,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":337,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":171,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":76,"org.easymock.tests2.UsageTest.wrongArguments":340,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":367,"org.easymock.samples.ExampleTest.answerVsDelegate":25,"org.easymock.tests2.UsageConstraintsTest.testNull":216,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":238,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":167,"org.easymock.tests2.CaptureTest.testPrimitive":247,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":125,"org.easymock.tests.UsageTest.moreThanOneArgument":38,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":147,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":140,"org.easymock.tests.UsageTest.argumentsOrdered":330,"org.easymock.tests.UsageVarargTest.varargIntAccepted":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":92,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":336,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":284,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":96,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":256,"org.easymock.tests2.AnswerTest.answer":185,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":319,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":388,"org.easymock.tests2.CaptureTest.testAnd":245,"org.easymock.tests2.UsageTest.strictResetToDefault":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":18,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":152,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":144,"org.easymock.tests2.DelegateToTest.testDelegate":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":373,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":331,"org.easymock.tests2.CaptureTest.testCapture1_2446744":248,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":119,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":386,"org.easymock.tests.UsageThrowableTest.throwError":132,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":285,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":149,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":12,"org.easymock.samples.PartialClassMockTest.testGetArea":23,"org.easymock.tests2.CompareToTest.testLessOrEqual":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":93,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":69,"org.easymock.tests2.UsageTest.niceToStrict":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":303,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":197,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":293,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":115,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":334,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":163,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":365,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":268,"org.easymock.tests.UsageOverloadedMethodTest.overloading":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":10,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":83,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":225,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":57,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":224,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":251,"org.easymock.tests2.EasyMockSupportClassTest.testAll":192,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":123,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":387,"org.easymock.tests2.CaptureTest.testCaptureAll":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":371,"org.easymock.tests2.UsageConstraintsTest.testMatches":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":148,"org.easymock.samples.ExampleTest.voteForRemovals":28,"org.easymock.tests.UsageVarargTest.allKinds":360,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":34,"org.easymock.samples.BasicClassMockTest.testPrintContent":350,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":372,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":91,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":281,"org.easymock.tests2.UsageConstraintsTest.greaterThan":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":8,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":151,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":19,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":406,"org.easymock.samples.ExampleTest.voteForRemoval":26,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":207,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":85,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":160,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":86,"org.easymock.tests2.CaptureTest.testCaptureFirst":255,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":161,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":181,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":53,"org.easymock.tests2.UsageTest.moreThanOneArgument":175,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":209,"org.easymock.tests2.CaptureTest.testCapture2_2446744":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":320,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":359,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":269,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":401,"org.easymock.tests.UsageExpectAndReturnTest.longType":49,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":369,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":124,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":33,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":98,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":100,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":295,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":137,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":202,"org.easymock.tests2.UsageConstraintsTest.testContains":223,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":375,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":265,"org.easymock.tests2.UsageConstraintsTest.testFind":215,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":105,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":155,"org.easymock.tests.UsageExpectAndReturnTest.object":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":166,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":355,"org.easymock.tests.UsageTest.exactCallCountByLastCall":41,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":270,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":308,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":141,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":62,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":351,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":82,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":276,"org.easymock.tests2.EasyMockSupportTest.testVerify":381,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":142,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":31,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":81,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":385,"org.easymock.tests.UsageVarargTest.varargCharAccepted":354,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":324,"org.easymock.tests2.UsageTest.openCallCountByLastCall":177,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":169,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":30,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":289,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":275,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":112,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":63,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":195,"org.easymock.tests2.UsageTest.resumeIfFailure":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":89,"org.easymock.tests2.StubTest.stubWithReturnValue":157,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":395,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":55,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":232,"org.easymock.tests2.SerializationTest.testAllMockedMethod":389,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":130,"org.easymock.samples.SupportTest.voteForRemovals":22,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":335,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":118,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":131,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":186,"org.easymock.tests.UsageExpectAndThrowTest.object":116,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":73,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":230,"org.easymock.tests2.DelegateToTest.testWrongClass":260,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":127,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":128,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests.UsageStrictMockTest.range":67,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":117,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":198,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":366,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":325,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":70,"org.easymock.tests2.CaptureTest.testCaptureNone":250,"org.easymock.tests.UsageUnorderedTest.message":129,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests.UsageVarargTest.varargByteAccepted":358,"org.easymock.tests2.ThreadingTest.testThreadSafe":206,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":378,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":349,"org.easymock.tests2.CaptureTest.testCapture_2617107":391,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":361,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":322,"org.easymock.tests2.UsageConstraintsTest.any":221,"org.easymock.tests2.StubTest.stub":156,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":99,"org.easymock.tests.UsageExpectAndThrowTest.longType":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":323,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":244,"org.easymock.tests.LimitationsTest.mockNativeMethod":126,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":288,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":384,"org.easymock.tests2.NameTest.nameForMocksControl":346,"org.easymock.tests2.MockedExceptionTest.testMockedException":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":290,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":40,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":110,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":45,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":236,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":199,"org.easymock.tests.MockingTest.testNicePartialClassMocking":44,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":240,"org.easymock.tests2.CompareToTest.testNotComparable":297,"org.easymock.tests2.CaptureTest.testCaptureLast":249,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":286,"org.easymock.tests2.CompareToTest.testCompareEqual":300,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":42,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":15,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":219,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":231,"org.easymock.tests.MockingTest.testTwoMocks":332,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":114,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":341,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":234,"org.easymock.tests.UsageStrictMockTest.differentMethods":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":292,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":277,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":403,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":208,"org.easymock.tests.UsageExpectAndThrowTest.floatType":108,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":7,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":188,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":194,"org.easymock.samples.ExampleTest.voteAgainstRemoval":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":314,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":243,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":400,"org.easymock.tests2.UsageConstraintsTest.testNotNull":233,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":139,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":263,"org.easymock.tests2.UsageTest.defaultResetToNice":179,"org.easymock.samples.ExampleTest.voteAgainstRemovals":24,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":315,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":287,"org.easymock.tests2.CallbackTest.callback":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":17,"org.easymock.tests.UsageTest.openCallCountByLastCall":39,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":211,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":78,"org.easymock.tests.UsageCallCountTest.tooFewCalls":376,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":203,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":368,"org.easymock.tests.UsageThrowableTest.throwCheckedException":136,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":326,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":75,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":205,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":291,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":204,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":190,"org.easymock.tests2.CompareToTest.testGreateOrEqual":301,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":210,"org.easymock.tests2.NameTest.nameForNiceMock":345,"org.easymock.tests2.DependencyTest.testInterfaceMocking":170,"org.easymock.samples.ExampleTest.addDocument":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":11,"org.easymock.tests2.DelegateToTest.testStubDelegate":259,"org.easymock.tests2.AnswerTest.stubAnswer":189,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":66,"org.easymock.tests.UsageVarargTest.varargLongAccepted":357,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":312,"org.easymock.tests.UsageExpectAndReturnTest.floatType":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":64,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests.UsageThrowableTest.noUpperLimit":133,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":283,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":212,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":392,"org.easymock.tests2.SerializationTest.test":191,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":47,"org.easymock.tests2.UsageConstraintsTest.testSame":217,"org.easymock.samples.SupportTest.addDocument":347,"org.easymock.tests.GenericTest.testPackageScope":101,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":282,"org.easymock.tests2.NameTest.nameForMock":343,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":397,"org.easymock.tests2.UsageStrictMockTest.differentMethods":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":153,"org.easymock.tests2.MockedExceptionTest.testRealException":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":407,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":316,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":77,"org.easymock.tests2.NameTest.nameForStrictMock":344,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":154,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":267,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":239,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":404,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":20,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":338,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":196,"org.easymock.tests2.UsageStrictMockTest.range":183,"org.easymock.tests2.UsageConstraintsTest.lessThan":235,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":279,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":311,"org.easymock.tests2.CaptureTest.testCaptureRightOne":252,"org.easymock.tests2.UsageConstraintsTest.testOr":218,"org.easymock.tests.UsageRangeTest.combination":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":16,"org.easymock.tests.UsageTest.wrongArguments":328,"org.easymock.tests2.MockBuilderTest.testWithConstructor":394,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":51,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":304,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":405,"org.easymock.tests.UsageVarargTest.varargShortAccepted":356,"org.easymock.tests2.UsageConstraintsTest.cmpTo":222,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":187,"org.easymock.tests2.CompareToTest.testLessThan":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":306,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests2.CaptureTest.testCaptureFromStub":253,"org.easymock.tests.UsageTest.unexpectedCallWithArray":327,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":333,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":377,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":396,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":60,"org.easymock.tests2.UsageConstraintsTest.constraints":213,"org.easymock.samples.ExampleTest.addAndChangeDocument":29,"org.easymock.tests.UsageStrictMockTest.testVerify":364,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":273,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":362,"org.easymock.tests2.CompareToTest.testGreateThan":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":370,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":393,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":94,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":52,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":95,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":164,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":339,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":352}}]
