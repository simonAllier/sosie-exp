[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[24,28,29,89,100,104,105,108,119,125,299,157,171,176,177,205,300,213,214,301,302,303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[10,10,11,11,26,36,37,40,41,42,43,48,50,51,53,54,60,61,62,74,159,166,167,168,169,170,174,211,247,248,249,250,251,253,254,257,258,259],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[304],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[121,128,159,203,209,218,227,232,256,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,288,289,290,291,292,293,296],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"methodName"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[306,307,308],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[309],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[167,182,188,195,196,200,310,251,264,268,274,281,282],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:362","sourceCode":"return this","type":"CtReturnImpl"},"failures":[28,29,37,38,40,42,43,48,51,54,61,127,128,176,177,205,208,218,220,231,232,287,311,312],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:111","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.createTypeVariableMap(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[28,176,209,210,313],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:30","sourceCode":"return java.lang.reflect.Proxy.((T)(java.lang.reflect.Proxy.newProxyInstance(java.lang.Class<T>.getClassLoader(), new java.lang.Class[]{ java.lang.Class<T> }, java.lang.reflect.InvocationHandler)))","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,314,9,12,14,15,16,19,20,315,316,21,22,23,24,25,26,27,28,29,30,31,32,33,34,317,318,319,320,321,35,322,323,324,325,326,327,36,37,38,39,328,40,41,42,43,44,45,329,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,330,331,78,79,80,332,83,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,333,334,335,336,337,138,338,339,340,341,342,343,143,147,344,345,346,347,309,153,154,155,348,156,157,158,159,160,161,162,163,166,167,168,169,170,171,172,173,174,175,176,177,178,349,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,350,206,207,351,352,353,208,209,210,211,212,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,298,379,301,380,302,381,382,310,216,217,218,383,384,385,386,387,388,389,390,391,392,393,394,220,221,222,223,224,225,226,395,396,397,398,399,400,401,402,403,404,405,406,306,307,308,227,228,229,230,231,232,233,234,235,236,237,238,407,239,240,241,242,243,244,245,246,247,248,249,250,251,408,409,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,410,311,312,411,412,413,414,415,294,416,295,296,417,418,297],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[28,124,130,131,173,176,209,210,419,229,230,233,234,285,297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[51],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[420,421,422,423,424],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[28,124,130,131,173,176,209,210,419,229,230,233,234,285,297],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,314,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,344,345,346,347,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,425,171,172,173,174,175,176,177,178,349,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,350,206,207,208,209,210,211,212,213,214,215,216,217,218,384,385,386,219,393,394,220,221,222,223,224,225,226,395,396,397,398,399,400,401,402,403,404,405,406,426,427,428,429,430,431,432,433,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,418,297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[41,329,55,60],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[434,435,436,437],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[63,64,65,66,67,68,69,70,72,73,74,75,76,438],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,438],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":39,"org.easymock.tests2.UsageTest.argumentsOrdered":131,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":227,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":367,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":126,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":14,"org.easymock.tests2.DelegateToTest.testReturnException":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":200,"org.easymock.tests.MockingTest.testPartialClassMocking":213,"org.easymock.tests.MockClassControlTest.testToString":428,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":150,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":265,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":20,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":45,"org.easymock.tests2.UsageTest.wrongArguments":124,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":253,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":162,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests2.UsageConstraintsTest.testNull":41,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":302,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":84,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":433,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":108,"org.easymock.tests2.CaptureTest.testPrimitive":66,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":257,"org.easymock.tests.UsageTest.moreThanOneArgument":228,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":284,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":168,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":410,"org.easymock.tests.UsageTest.argumentsOrdered":234,"org.easymock.tests.UsageVarargTest.varargIntAccepted":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":247,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":424,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":342,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":251,"org.easymock.tests.ReplayStateInvalidUsageTest.times":403,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests2.AnswerTest.answer":77,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":374,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":34,"org.easymock.tests2.CaptureTest.testAnd":63,"org.easymock.tests2.UsageTest.strictResetToDefault":122,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":206,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":412,"org.easymock.tests2.DelegateToTest.testDelegate":156,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":264,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":354,"org.easymock.tests2.CaptureTest.testCapture1_2446744":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":32,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":397,"org.easymock.tests.UsageThrowableTest.throwError":286,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":390,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":170,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":304,"org.easymock.samples.PartialClassMockTest.testGetArea":13,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":398,"org.easymock.tests.MockingTest.testInterfaceMocking":301,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":248,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":382,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":388,"org.easymock.tests2.UsageTest.niceToStrict":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":114,"org.easymock.tests2.MockBuilderTest.testCreateMock":118,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":274,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":104,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":415,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":393,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":160,"org.easymock.tests.UsageOverloadedMethodTest.overloading":217,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":50,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":190,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":216,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":49,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":72,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":407,"org.easymock.tests.MockClassControlTest.testEquals":432,"org.easymock.tests2.EasyMockSupportClassTest.testAll":149,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":165,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":33,"org.easymock.tests2.CaptureTest.testCaptureAll":64,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":262,"org.easymock.tests.MockNameTest.defaultName":409,"org.easymock.tests2.UsageConstraintsTest.testMatches":51,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":169,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":246,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":208,"org.easymock.samples.BasicClassMockTest.testPrintContent":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":263,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":292,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":339,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":348,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":1,"org.easymock.tests2.UsageConstraintsTest.greaterThan":53,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":350,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":95,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":305,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":87,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":101,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":199,"org.easymock.tests2.CaptureTest.testCaptureFirst":76,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":102,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":133,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":297,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":186,"org.easymock.tests2.UsageTest.moreThanOneArgument":123,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":97,"org.easymock.tests2.CaptureTest.testCapture2_2446744":75,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":375,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":245,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":225,"org.easymock.tests.UsageExpectAndReturnTest.longType":182,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":260,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":283,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":408,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":58,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":166,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":307,"org.easymock.tests.UsageCallCountTest.tooManyCalls":226,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":291,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":140,"org.easymock.tests.MockingTest.testNiceClassMocking":303,"org.easymock.tests.MockingTest.testClassMocking":300,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":394,"org.easymock.tests2.UsageConstraintsTest.testContains":48,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":136,"org.easymock.tests2.UsageConstraintsTest.testFind":40,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":218,"org.easymock.tests.MockTypeTest.fromEasyMockClass":389,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":23,"org.easymock.tests.UsageExpectAndReturnTest.object":189,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":107,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":240,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":386,"org.easymock.tests.UsageTest.exactCallCountByLastCall":235,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":311,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":351,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":195,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":236,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":295,"org.easymock.tests.MockClassControlTest.testHashCode":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":334,"org.easymock.tests2.EasyMockSupportTest.testVerify":111,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":312,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":414,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":31,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":332,"org.easymock.tests.UsageVarargTest.varargCharAccepted":239,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":379,"org.easymock.tests2.UsageTest.openCallCountByLastCall":127,"org.easymock.tests.DefaultClassInstantiatorTest.object":425,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":110,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":413,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":384,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":419,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":333,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":430,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":271,"org.easymock.tests.CapturesMatcherTest.test":438,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":306,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":152,"org.easymock.tests2.UsageTest.resumeIfFailure":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":202,"org.easymock.tests2.StubTest.stubWithReturnValue":159,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":188,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":59,"org.easymock.tests2.SerializationTest.testAllMockedMethod":148,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":373,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":421,"org.easymock.samples.SupportTest.voteForRemovals":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":277,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":298,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":330,"org.easymock.tests.UsageExpectAndThrowTest.object":275,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":353,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":56,"org.easymock.tests2.DelegateToTest.testWrongClass":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":258,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":259,"org.easymock.tests.UsageStrictMockTest.range":176,"org.easymock.samples.ConstructorCalledMockTest.testTax":10,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":315,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":276,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":116,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":405,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":161,"org.easymock.tests2.CaptureTest.testCaptureNone":71,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":310,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":435,"org.easymock.tests.UsageUnorderedTest.message":285,"org.easymock.tests.UsageVerifyTest.twoReturns":210,"org.easymock.tests.UsageVarargTest.varargByteAccepted":244,"org.easymock.tests2.ThreadingTest.testThreadSafe":94,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":223,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":387,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":17,"org.easymock.tests2.CaptureTest.testCapture_2617107":65,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":356,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":377,"org.easymock.tests2.UsageConstraintsTest.any":46,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":402,"org.easymock.tests2.StubTest.stub":158,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":201,"org.easymock.tests.UsageExpectAndThrowTest.longType":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":401,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":27,"org.easymock.tests2.SerializationTest.testClass":146,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":138,"org.easymock.tests.LimitationsTest.mockNativeMethod":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":198,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":319,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":30,"org.easymock.tests2.NameTest.nameForMocksControl":347,"org.easymock.tests2.MockedExceptionTest.testMockedException":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":321,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":232,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":22,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":269,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":81,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":117,"org.easymock.tests.MockingTest.testNicePartialClassMocking":214,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":422,"org.easymock.tests2.CaptureTest.testCaptureLast":70,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":317,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":355,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":145,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":44,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":273,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":130,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":61,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":437,"org.easymock.samples.ExampleTest.removeNonExistingDocument":314,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":399,"org.easymock.tests.UsageStrictMockTest.differentMethods":177,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":335,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":96,"org.easymock.tests2.MockBuilderTest.testCreateMockString":120,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":426,"org.easymock.tests.UsageExpectAndThrowTest.floatType":267,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":52,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":78,"org.easymock.tests.UsageVerifyTest.twoThrows":209,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":151,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":368,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":381,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests2.UsageConstraintsTest.testNotNull":60,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":293,"org.easymock.tests2.UsageTest.defaultResetToNice":129,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":369,"org.easymock.tests.UsageVarargTest.differentLength":241,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":318,"org.easymock.tests2.CallbackTest.callback":157,"org.easymock.tests2.UsageConstraintsTest.equals":328,"org.easymock.tests.UsageTest.openCallCountByLastCall":231,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":255,"org.easymock.tests.UsageCallCountTest.tooFewCalls":221,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":142,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":163,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":436,"org.easymock.tests.UsageThrowableTest.throwCheckedException":290,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":144,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":212,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":322,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":404,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":143,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":80,"org.easymock.tests.ObjectMethodsTest.testHashCode":385,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":423,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":98,"org.easymock.tests2.NameTest.nameForNiceMock":346,"org.easymock.tests2.DependencyTest.testInterfaceMocking":19,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.DelegateToTest.testStubDelegate":154,"org.easymock.tests2.AnswerTest.stubAnswer":79,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":174,"org.easymock.tests.UsageVarargTest.varargLongAccepted":243,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":366,"org.easymock.tests.UsageExpectAndReturnTest.floatType":181,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":93,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":11,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":417,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":54,"org.easymock.tests.UsageThrowableTest.noUpperLimit":287,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":341,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":37,"org.easymock.tests2.SerializationTest.test":147,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":180,"org.easymock.tests2.UsageConstraintsTest.testSame":42,"org.easymock.samples.SupportTest.addDocument":15,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":2,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":299,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":400,"org.easymock.tests.GenericTest.testPackageScope":164,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":340,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":380,"org.easymock.tests2.NameTest.nameForMock":344,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":191,"org.easymock.tests2.UsageStrictMockTest.differentMethods":29,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":279,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":383,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":207,"org.easymock.tests2.MockedExceptionTest.testRealException":137,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":392,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":420,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":370,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":406,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":254,"org.easymock.tests2.NameTest.nameForStrictMock":345,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":21,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":85,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":113,"org.easymock.tests2.UsageStrictMockTest.range":28,"org.easymock.tests2.UsageConstraintsTest.lessThan":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":337,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":365,"org.easymock.tests2.CaptureTest.testCaptureRightOne":73,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":434,"org.easymock.tests2.UsageConstraintsTest.testOr":43,"org.easymock.tests.UsageRangeTest.combination":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":82,"org.easymock.tests.UsageTest.wrongArguments":230,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":358,"org.easymock.tests.UsageVarargTest.varargShortAccepted":242,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":224,"org.easymock.tests2.UsageConstraintsTest.cmpTo":47,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":360,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":128,"org.easymock.tests2.CaptureTest.testCaptureFromStub":74,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":396,"org.easymock.tests.UsageTest.unexpectedCallWithArray":229,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":173,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":193,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":175,"org.easymock.tests2.UsageConstraintsTest.constraints":38,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests.UsageStrictMockTest.testVerify":349,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":12,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":261,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":185,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":105,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":237,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":313}}]
