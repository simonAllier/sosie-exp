[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,2,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,1,386,387,388,389,390,391,0,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[3,33,182,187,369,382,488,384,385,387,388,389,391,393,394,489,396,428],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[398],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[383,1,390,490,395,411,441,446,447,491,492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[335,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[115],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[254,256,265,266,268],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[410,495,496,497,498,499,500,501],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[502,503,68,83,84,85,86,87,88,89,90,229,230,504,505,351],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[506,429,507],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[496,497,498,494,499,500,501],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[351,353,354,355,356,357,358,360,508,361],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[436],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[30],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[30,34],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[295,296,299,301,302,304,314,318,351,353,361],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":296,"org.easymock.tests2.UsageTest.argumentsOrdered":407,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":81,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":255,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":402,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":6,"org.easymock.tests2.DelegateToTest.testReturnException":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":40,"org.easymock.tests.MockingTest.testPartialClassMocking":115,"org.easymock.tests.MockClassControlTest.testToString":164,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":451,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":190,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":368,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":496,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":303,"org.easymock.tests2.UsageTest.wrongArguments":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":174,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":225,"org.easymock.samples.ExampleTest.answerVsDelegate":13,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":187,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":120,"org.easymock.tests2.UsageConstraintsTest.testNull":299,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":425,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":169,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":278,"org.easymock.tests2.CaptureTest.testPrimitive":354,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":178,"org.easymock.tests.UsageTest.moreThanOneArgument":82,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":209,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":71,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":20,"org.easymock.tests.UsageTest.argumentsOrdered":88,"org.easymock.tests.UsageVarargTest.varargIntAccepted":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":260,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":500,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":382,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":332,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":146,"org.easymock.tests.ReplayStateInvalidUsageTest.times":63,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":344,"org.easymock.tests2.DependencyTest.testClassMocking":365,"org.easymock.tests2.AnswerTest.answer":413,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":262,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":381,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":184,"org.easymock.tests2.CaptureTest.testAnd":351,"org.easymock.tests2.UsageTest.strictResetToDefault":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":433,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":70,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":273,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":24,"org.easymock.tests2.DelegateToTest.testDelegate":377,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":205,"org.easymock.tests.LimitationsTest.mockFinalMethod":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":29,"org.easymock.tests2.DependencyTest.testClassMockingSupport":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":179,"org.easymock.tests2.CaptureTest.testCapture1_2446744":355,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":429,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":203,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":379,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":57,"org.easymock.tests.UsageThrowableTest.throwError":95,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":186,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":67,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":73,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":487,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.MockingTest.testInterfaceMocking":117,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":143,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":474,"org.easymock.tests2.UsageTest.niceToStrict":401,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":191,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":244,"org.easymock.tests2.ThreadingTest.testChangeDefault":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":245,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":387,"org.easymock.tests2.MockBuilderTest.testCreateMock":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":347,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":199,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":274,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":45,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":223,"org.easymock.tests.UsageOverloadedMethodTest.overloading":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":478,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":216,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":133,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":74,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":308,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":360,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":153,"org.easymock.tests2.EasyMockSupportClassTest.testAll":466,"org.easymock.tests.MockClassControlTest.testEquals":168,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":207,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":493,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":27,"org.easymock.tests2.CaptureTest.testCaptureAll":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":380,"org.easymock.tests.MockNameTest.defaultName":80,"org.easymock.tests2.UsageConstraintsTest.testMatches":310,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":72,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests.UsageVarargTest.allKinds":161,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":28,"org.easymock.samples.BasicClassMockTest.testPrintContent":5,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":101,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":329,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":376,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":501,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":110,"org.easymock.tests2.UsageConstraintsTest.greaterThan":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":467,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":171,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":436,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":111,"org.easymock.samples.ExampleTest.voteForRemoval":14,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":437,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":335,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":188,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":428,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":397,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":68,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":271,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":39,"org.easymock.tests2.CaptureTest.testCaptureFirst":364,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":272,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":409,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":219,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":129,"org.easymock.tests2.UsageTest.moreThanOneArgument":399,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":337,"org.easymock.tests2.CaptureTest.testCapture2_2446744":363,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":263,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":160,"org.easymock.tests.GenericTest.testBridgedEquals":34,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":52,"org.easymock.tests.UsageExpectAndReturnTest.longType":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":25,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":269,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":489,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":208,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":210,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":316,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":69,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":221,"org.easymock.tests.UsageCallCountTest.tooManyCalls":53,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":195,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":100,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":440,"org.easymock.tests.MockingTest.testNiceClassMocking":121,"org.easymock.tests.MockingTest.testClassMocking":113,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":488,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":46,"org.easymock.tests2.UsageConstraintsTest.testContains":307,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":291,"org.easymock.tests2.UsageConstraintsTest.testFind":298,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":76,"org.easymock.tests.MockTypeTest.fromEasyMockClass":185,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":421,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":227,"org.easymock.tests.UsageExpectAndReturnTest.object":132,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":430,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":277,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":497,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":155,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":242,"org.easymock.tests.UsageTest.exactCallCountByLastCall":89,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":250,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":21,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":77,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":411,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":138,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":215,"org.easymock.tests.MockClassControlTest.testHashCode":167,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":323,"org.easymock.tests2.EasyMockSupportTest.testVerify":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":476,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":22,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":93,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":213,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":378,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":321,"org.easymock.tests.UsageVarargTest.varargCharAccepted":154,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":103,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":268,"org.easymock.tests2.UsageTest.openCallCountByLastCall":403,"org.easymock.tests.DefaultClassInstantiatorTest.object":104,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":280,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":92,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":477,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":197,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":322,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":434,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":166,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":485,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":165,"org.easymock.tests2.UsageTest.resumeIfFailure":408,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":182,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":42,"org.easymock.tests2.StubTest.stubWithReturnValue":449,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":390,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":131,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":317,"org.easymock.tests2.SerializationTest.testAllMockedMethod":371,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":261,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":505,"org.easymock.samples.SupportTest.voteForRemovals":11,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":202,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":267,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":414,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":79,"org.easymock.tests.UsageExpectAndThrowTest.object":200,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":315,"org.easymock.tests2.DelegateToTest.testWrongClass":375,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":211,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":212,"org.easymock.samples.ConstructorCalledMockTest.testTax":7,"org.easymock.tests.UsageStrictMockTest.range":232,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":287,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":439,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":201,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":463,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":65,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":87,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":224,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":502,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":238,"org.easymock.tests2.CaptureTest.testCaptureNone":359,"org.easymock.tests.UsageUnorderedTest.message":54,"org.easymock.tests.UsageVerifyTest.twoReturns":149,"org.easymock.tests.UsageVarargTest.varargByteAccepted":159,"org.easymock.tests2.ThreadingTest.testThreadSafe":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":480,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":50,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":4,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":243,"org.easymock.tests2.CaptureTest.testCapture_2617107":353,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":265,"org.easymock.tests2.UsageConstraintsTest.any":305,"org.easymock.tests2.StubTest.stub":448,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":62,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":41,"org.easymock.tests.UsageExpectAndThrowTest.longType":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":266,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":108,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":61,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":459,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":327,"org.easymock.tests2.SerializationTest.testClass":369,"org.easymock.tests.LimitationsTest.mockNativeMethod":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":141,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":33,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":341,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":462,"org.easymock.tests2.NameTest.nameForMocksControl":455,"org.easymock.tests2.MockedExceptionTest.testMockedException":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":468,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":86,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":420,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":118,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":194,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":422,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":391,"org.easymock.tests.MockingTest.testNicePartialClassMocking":116,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":427,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":495,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":339,"org.easymock.tests2.CaptureTest.testCaptureLast":358,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":180,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":446,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":302,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":2,"org.easymock.tests.MockingTest.testTwoMocks":114,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":198,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":406,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":319,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":507,"org.easymock.samples.ExampleTest.removeNonExistingDocument":18,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":59,"org.easymock.tests.UsageStrictMockTest.differentMethods":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":346,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":324,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":106,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":336,"org.easymock.tests2.MockBuilderTest.testCreateMockString":396,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":470,"org.easymock.tests.UsageExpectAndThrowTest.floatType":192,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":465,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":412,"org.easymock.tests.UsageVerifyTest.twoThrows":148,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":479,"org.easymock.samples.ExampleTest.voteAgainstRemoval":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":256,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":435,"org.easymock.tests.LimitationsTest.privateConstructor":36,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":492,"org.easymock.tests2.UsageConstraintsTest.testNotNull":318,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":102,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":289,"org.easymock.tests2.UsageTest.defaultResetToNice":405,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":257,"org.easymock.tests.UsageVarargTest.differentLength":156,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":340,"org.easymock.tests2.CallbackTest.callback":450,"org.easymock.tests2.UsageConstraintsTest.equals":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":431,"org.easymock.tests.UsageTest.openCallCountByLastCall":85,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":176,"org.easymock.tests.UsageCallCountTest.tooFewCalls":48,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":442,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":226,"org.easymock.tests.UsageThrowableTest.throwCheckedException":99,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":503,"org.easymock.tests.MockingTest.testStrictClassMocking":112,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":445,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":91,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":441,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":345,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":64,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":444,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":418,"org.easymock.tests.ObjectMethodsTest.testHashCode":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":499,"org.easymock.tests2.NameTest.nameForNiceMock":454,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":338,"org.easymock.tests2.DependencyTest.testInterfaceMocking":367,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":498,"org.easymock.samples.ExampleTest.addDocument":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":486,"org.easymock.tests2.DelegateToTest.testStubDelegate":374,"org.easymock.tests2.AnswerTest.stubAnswer":417,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":230,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":0,"org.easymock.tests.UsageVarargTest.varargLongAccepted":158,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":254,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":140,"org.easymock.tests.UsageExpectAndReturnTest.floatType":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":410,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":8,"org.easymock.tests.UsageThrowableTest.noUpperLimit":96,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":217,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":313,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":331,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":294,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":282,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":356,"org.easymock.tests2.SerializationTest.test":370,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":123,"org.easymock.tests2.UsageConstraintsTest.testSame":300,"org.easymock.samples.SupportTest.addDocument":10,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":443,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":471,"org.easymock.tests.GenericTest.testPackageScope":31,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":249,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":330,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":119,"org.easymock.tests2.NameTest.nameForMock":452,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":134,"org.easymock.tests2.UsageStrictMockTest.differentMethods":461,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":395,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":432,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":126,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":204,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":239,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":173,"org.easymock.tests2.MockedExceptionTest.testRealException":292,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":259,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":288,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":258,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":175,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":66,"org.easymock.tests2.NameTest.nameForStrictMock":453,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":386,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":419,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":426,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":286,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":107,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":314,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":384,"org.easymock.tests2.UsageStrictMockTest.range":460,"org.easymock.tests2.UsageConstraintsTest.lessThan":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":253,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":475,"org.easymock.tests2.CaptureTest.testCaptureRightOne":361,"org.easymock.tests2.UsageConstraintsTest.testOr":301,"org.easymock.tests.UsageRangeTest.combination":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":423,"org.easymock.tests.UsageTest.wrongArguments":84,"org.easymock.tests2.MockBuilderTest.testWithConstructor":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":472,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":246,"org.easymock.tests.UsageVarargTest.varargShortAccepted":157,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":109,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":51,"org.easymock.tests2.UsageConstraintsTest.cmpTo":306,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":248,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":404,"org.easymock.tests2.CaptureTest.testCaptureFromStub":362,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":56,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":385,"org.easymock.tests.UsageTest.unexpectedCallWithArray":83,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":229,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":49,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":136,"org.easymock.tests2.CaptureTest.testCapture":508,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":231,"org.easymock.tests2.UsageConstraintsTest.constraints":295,"org.easymock.samples.ExampleTest.addAndChangeDocument":19,"org.easymock.tests.UsageStrictMockTest.testVerify":235,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":9,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":26,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":144,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":128,"org.easymock.tests.LimitationsTest.abstractClass":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":145,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":218,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":275}}]
