[{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,0,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[249],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[153,170,173,250],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[155,156,157,158,159,160,161,162,252,163,172,173,177,178,230,231,232,233,240,253],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[254],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[219],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[153,155,170,176,255],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[256,257,258,112,259,260],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[261,262,263,264,265,2,3,4,5,266,6,7,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,8,9,10,303,304,305,306,307,308,309,11,12,13,14,15,16,17,18,310,311,312,313,314,315,316,317,19,318,20,319,21,22,320,23,321,24,25,26,27,28,29,30,322,323,324,325,326,31,32,258,33,34,35,36,37,38,39,40,41,327,42,43,328,44,45,46,47,48,329,330,331,332,333,49,334,50,335,254,51,52,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,249,353,354,355,356,357,358,359,360,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,361,362,363,93,94,364,95,365,366,367,96,97,98,99,100,101,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,102,387,103,104,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,105,106,107,108,405,109,110,406,407,408,111,112,113,114,115,116,117,409,118,119,120,121,122,123,124,410,125,411,412,126,127,128,129,130,131,132,133,134,135,136,137,413,414,138,415,416,417,418,139,419,420,421,422,423,424,140,425,426,141,427,428,429,430,431,432,433,434,435,142,436,437,438,439,440,143,441,442,144,145,146,147,443,148,149,150,444,151,445,152,153,154,155,156,251,157,158,159,160,161,162,252,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,0,179,180,181,446,447,448,449,182,450,183,184,451,452,453,454,455,185,186,187,188,189,190,191,192,456,193,194,195,196,457,458,459,460,461,462,197,463,464,198,199,465,466,467,468,469,470,471,472,473,474,200,475,476,477,478,479,480,201,202,203,204,205,206,207,481,208,209,210,211,212,482,483,484,485,486,487,488,489,490,491,213,492,493,494,495,496,497,498,214,499,500,501,215,502,216,217,503,218,219,220,221,222,223,504,505,224,225,506,226,227,228,507,229,230,231,232,233,234,235,236,237,238,239,240,253,241,242,508,509,243,244,245,246,247,248],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[199,465],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[510,179,180,181],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[230,232,233,234,235,236,237,239,511,240,253,242],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[176],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[512],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[266,6,7,513,514,515,516,31,258,33,36,37,38,328,96,102,107,108,408,112,114,115,116,133,418,419,155,169,447,453,454,455,185,188,189,190,193,194,195,196,202,206,207,209,216,509,245,246,247],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[289,290,291,345,385],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[295,299,304,307,309,32,258,33,36,37,96,394,395,106,107,108,112,113,115,116,187,188,193,194,461,200,213,244,246,247],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[233],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[179,517,452,214,499,518,519,520,521,522],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[153,170,176,255],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[230,232,234,235,236,239,240,253,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[256,257,258,112,259,260],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[523,524,525],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[523,524,525],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,24,25,26,27,28,29,30,31,32,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,0,179,180,181,182,183,184,185,186,187,189,190,191,192,196,197,198,199,465,200,201,203,204,205,206,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,242,243,244,245,246,247,248],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[138,164,526],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[413,421,446,450,500],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":156,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":31,"org.easymock.tests2.UsageTest.argumentsOrdered":194,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":210,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":348,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":190,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":126,"org.easymock.tests2.DelegateToTest.testReturnException":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":315,"org.easymock.tests.MockingTest.testPartialClassMocking":93,"org.easymock.tests.MockClassControlTest.testToString":399,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":482,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":330,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":430,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":53,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":225,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":288,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":518,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":162,"org.easymock.tests2.UsageTest.wrongArguments":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":97,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":497,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":312,"org.easymock.samples.ExampleTest.answerVsDelegate":120,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":297,"org.easymock.tests2.UsageConstraintsTest.testNull":158,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":366,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":135,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":404,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":209,"org.easymock.tests2.CaptureTest.testPrimitive":233,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":101,"org.easymock.tests.UsageTest.moreThanOneArgument":32,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":72,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":390,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":405,"org.easymock.tests.UsageTest.argumentsOrdered":37,"org.easymock.tests.UsageVarargTest.varargIntAccepted":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":26,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":446,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":479,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":459,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":30,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":272,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":213,"org.easymock.tests.ReplayStateInvalidUsageTest.times":383,"org.easymock.tests2.DependencyTest.testClassMocking":504,"org.easymock.tests2.AnswerTest.answer":197,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":469,"org.easymock.tests2.CaptureTest.testAnd":230,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":294,"org.easymock.tests2.UsageTest.strictResetToDefault":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":417,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":389,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":205,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":407,"org.easymock.tests2.DelegateToTest.testDelegate":229,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":271,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":68,"org.easymock.tests.LimitationsTest.mockFinalMethod":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":326,"org.easymock.tests2.DependencyTest.testClassMockingSupport":505,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":394,"org.easymock.tests2.CaptureTest.testCapture1_2446744":234,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":414,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":467,"org.easymock.tests.UsageThrowableTest.throwError":11,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":377,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":296,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":514,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":480,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":442,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":275,"org.easymock.samples.PartialClassMockTest.testGetArea":118,"org.easymock.tests.MockingTest.testInterfaceMocking":364,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":378,"org.easymock.tests2.CompareToTest.testLessOrEqual":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":431,"org.easymock.tests2.UsageTest.niceToStrict":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":54,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":308,"org.easymock.tests2.ThreadingTest.testChangeDefault":503,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":523,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":182,"org.easymock.tests2.MockBuilderTest.testCreateMock":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":438,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":494,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":62,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":259,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":206,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":293,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":263,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":310,"org.easymock.tests.UsageOverloadedMethodTest.overloading":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":435,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":167,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":22,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":8,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":84,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":166,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":239,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":327,"org.easymock.tests.MockClassControlTest.testEquals":403,"org.easymock.tests2.EasyMockSupportClassTest.testAll":140,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":52,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":70,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":468,"org.easymock.tests2.CaptureTest.testCaptureAll":231,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":324,"org.easymock.tests.MockNameTest.defaultName":309,"org.easymock.tests2.UsageConstraintsTest.testMatches":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":391,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":375,"org.easymock.samples.ExampleTest.voteForRemovals":124,"org.easymock.tests.UsageVarargTest.allKinds":48,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":106,"org.easymock.samples.BasicClassMockTest.testPrintContent":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":325,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":17,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":509,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":507,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":522,"org.easymock.tests2.UsageConstraintsTest.greaterThan":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":425,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":387,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":419,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":276,"org.easymock.samples.ExampleTest.voteForRemoval":121,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":374,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":420,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":218,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":413,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":268,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":185,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":105,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":203,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":314,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":506,"org.easymock.tests2.CaptureTest.testCaptureFirst":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":204,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":80,"org.easymock.tests2.UsageTest.moreThanOneArgument":187,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":220,"org.easymock.tests2.CaptureTest.testCapture2_2446744":241,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":355,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":47,"org.easymock.tests.GenericTest.testBridgedEquals":337,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":6,"org.easymock.tests.UsageExpectAndReturnTest.longType":76,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":71,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":393,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":175,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":388,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":290,"org.easymock.tests.UsageCallCountTest.tooManyCalls":7,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":496,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":145,"org.easymock.tests.MockingTest.testNiceClassMocking":367,"org.easymock.tests.MockingTest.testClassMocking":362,"org.easymock.tests2.UsageConstraintsTest.testContains":165,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":265,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":215,"org.easymock.tests2.UsageConstraintsTest.testFind":157,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":10,"org.easymock.tests.MockTypeTest.fromEasyMockClass":295,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":408,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":152,"org.easymock.tests.UsageExpectAndReturnTest.object":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":495,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":519,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":43,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":306,"org.easymock.tests.UsageTest.exactCallCountByLastCall":38,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":109,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":499,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":39,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":89,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":21,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":471,"org.easymock.tests.MockClassControlTest.testHashCode":402,"org.easymock.tests2.EasyMockSupportTest.testVerify":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":433,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":110,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":20,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":262,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":515,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":466,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":508,"org.easymock.tests.UsageVarargTest.varargCharAccepted":42,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":360,"org.easymock.tests2.UsageTest.openCallCountByLastCall":191,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":524,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":211,"org.easymock.tests.DefaultClassInstantiatorTest.object":368,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":261,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":304,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":434,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":490,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":470,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":418,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":401,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":274,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":59,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":90,"org.easymock.tests.ReplayStateInvalidCallsTest.times":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":289,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":281,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":143,"org.easymock.tests2.UsageTest.resumeIfFailure":195,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":292,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":317,"org.easymock.tests2.StubTest.stubWithReturnValue":223,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":517,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":176,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":82,"org.easymock.tests2.SerializationTest.testAllMockedMethod":181,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":353,"org.easymock.samples.SupportTest.voteForRemovals":129,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":260,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":473,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":65,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":510,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":359,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":463,"org.easymock.tests.UsageExpectAndThrowTest.object":63,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":331,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":173,"org.easymock.tests2.DelegateToTest.testWrongClass":228,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":24,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":278,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":25,"org.easymock.samples.ConstructorCalledMockTest.testTax":411,"org.easymock.tests.UsageStrictMockTest.range":115,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":461,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":481,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":144,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":422,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":385,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":311,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":256,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":270,"org.easymock.tests2.CaptureTest.testCaptureNone":238,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":302,"org.easymock.tests.UsageUnorderedTest.message":96,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":513,"org.easymock.tests.UsageVerifyTest.twoReturns":108,"org.easymock.tests.UsageVarargTest.varargByteAccepted":46,"org.easymock.tests2.ThreadingTest.testThreadSafe":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":436,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":5,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":130,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":307,"org.easymock.tests2.CaptureTest.testCapture_2617107":232,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":396,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":357,"org.easymock.tests2.UsageConstraintsTest.any":163,"org.easymock.tests2.StubTest.stub":222,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":382,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.UsageExpectAndThrowTest.longType":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":358,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":372,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":381,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":245,"org.easymock.tests2.SerializationTest.testClass":179,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests.LimitationsTest.mockNativeMethod":49,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":92,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":336,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":489,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":286,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":248,"org.easymock.tests2.NameTest.nameForMocksControl":486,"org.easymock.tests2.MockedExceptionTest.testMockedException":501,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":426,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":35,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":445,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":57,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":95,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":184,"org.easymock.tests.MockingTest.testNicePartialClassMocking":94,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":137,"org.easymock.tests2.CompareToTest.testCompareEqual":526,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":487,"org.easymock.tests2.CaptureTest.testCaptureLast":237,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":395,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":161,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":150,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":285,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":174,"org.easymock.tests.MockingTest.testTwoMocks":363,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":282,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":61,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":193,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":178,"org.easymock.samples.ExampleTest.removeNonExistingDocument":410,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":493,"org.easymock.tests.UsageStrictMockTest.differentMethods":116,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":472,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":498,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":370,"org.easymock.tests2.ConstraintsToStringTest.andToString":512,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":219,"org.easymock.tests2.MockBuilderTest.testCreateMockString":455,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":427,"org.easymock.tests.UsageExpectAndThrowTest.floatType":55,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":424,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":198,"org.easymock.tests.UsageVerifyTest.twoThrows":107,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":142,"org.easymock.samples.ExampleTest.voteAgainstRemoval":122,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":349,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":139,"org.easymock.tests.LimitationsTest.privateConstructor":333,"org.easymock.tests2.UsageConstraintsTest.testNotNull":177,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":500,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":18,"org.easymock.tests2.UsageTest.defaultResetToNice":456,"org.easymock.samples.ExampleTest.voteAgainstRemovals":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":350,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":488,"org.easymock.tests.UsageVarargTest.differentLength":328,"org.easymock.tests2.CallbackTest.callback":216,"org.easymock.tests2.UsageConstraintsTest.equals":251,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":415,"org.easymock.tests.UsageTest.openCallCountByLastCall":34,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":99,"org.easymock.tests.UsageCallCountTest.tooFewCalls":3,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":147,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":313,"org.easymock.tests.UsageThrowableTest.throwCheckedException":15,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":257,"org.easymock.tests.MockingTest.testStrictClassMocking":361,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":149,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":335,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":492,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":146,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":384,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":148,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":465,"org.easymock.tests.ObjectMethodsTest.testHashCode":305,"org.easymock.tests2.NameTest.nameForNiceMock":485,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":221,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":284,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":279,"org.easymock.tests2.DependencyTest.testInterfaceMocking":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":520,"org.easymock.samples.ExampleTest.addDocument":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.DelegateToTest.testStubDelegate":227,"org.easymock.tests2.AnswerTest.stubAnswer":199,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":113,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":451,"org.easymock.tests.UsageVarargTest.varargLongAccepted":45,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":347,"org.easymock.tests.UsageExpectAndReturnTest.floatType":75,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":214,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":412,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":478,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":171,"org.easymock.tests.UsageThrowableTest.noUpperLimit":12,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":154,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":457,"org.easymock.tests2.SerializationTest.test":180,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":235,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":369,"org.easymock.tests2.UsageConstraintsTest.testSame":159,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":74,"org.easymock.samples.SupportTest.addDocument":128,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":443,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":269,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":428,"org.easymock.tests.GenericTest.testPackageScope":51,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":477,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":365,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":267,"org.easymock.tests2.NameTest.nameForMock":483,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":85,"org.easymock.tests2.UsageStrictMockTest.differentMethods":247,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":416,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":67,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":303,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":104,"org.easymock.tests2.MockedExceptionTest.testRealException":502,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":299,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":351,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":98,"org.easymock.tests2.NameTest.nameForStrictMock":484,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":449,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":525,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":151,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":136,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":460,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":172,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":371,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":447,"org.easymock.tests2.UsageStrictMockTest.range":246,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":273,"org.easymock.tests2.UsageConstraintsTest.lessThan":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":474,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":521,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":432,"org.easymock.tests2.CaptureTest.testCaptureRightOne":240,"org.easymock.tests2.UsageConstraintsTest.testOr":160,"org.easymock.tests.UsageRangeTest.combination":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":133,"org.easymock.tests.UsageTest.wrongArguments":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":429,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":339,"org.easymock.tests.UsageVarargTest.varargShortAccepted":44,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":373,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":266,"org.easymock.tests2.UsageConstraintsTest.cmpTo":164,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":287,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":464,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":277,"org.easymock.tests2.CompareToTest.testLessThan":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":341,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.CaptureTest.testCaptureFromStub":253,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":376,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":448,"org.easymock.tests.UsageTest.unexpectedCallWithArray":258,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":283,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":112,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":4,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":87,"org.easymock.tests2.CaptureTest.testCapture":511,"org.easymock.tests2.UsageConstraintsTest.constraints":155,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":114,"org.easymock.samples.ExampleTest.addAndChangeDocument":125,"org.easymock.tests.UsageStrictMockTest.testVerify":409,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":127,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":111,"org.easymock.tests2.CompareToTest.testGreateThan":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":323,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":28,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":79,"org.easymock.tests.LimitationsTest.abstractClass":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":29,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":23,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":207}}]
