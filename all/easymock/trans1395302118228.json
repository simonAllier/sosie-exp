[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[0,1,2,2,3,3],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,16,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,14,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,12,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,13,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,2,2,3,3,192,193,194,195,196,197],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"returnType","throwableClass":"returnType"}},{"position":"org.easymock.internal.RecordState:243","failures":[29,16,30,31,32,33,34,35,36,37,39,40,42,43,44,45,46,47,48,51,52,53,54,65,66,67,68,69,70,71,75,113,114,115,119,122,123,124,125,126,127,128,129,130,131,132,133,136,137,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,157,175,176,177,178,179,180,182,183,184,185,186,187,188,189,192,193,194,195,196,197],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[198],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[77,105,109,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,161,162,163,164,165,166,167,222,170,173,191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[223,224,225,226,227,228],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[12,78,229,230],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[18,22,23,26,16,35,37,42,231,46,232,233,74,81,95,105,234,107,235,236,237,111,112,238,239,114,115,124,240,241,242,222,169,170,227,243,244,245,174,246,247,248,228,249,183,184],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:222","failures":[250,251,159,160],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[29,16,31,32,33,252,34,198,35,36,37,38,40,253,254,42,255,43,256,44,45,231,46,257,232,258,51,52,53,54,65,66,67,68,70,71,12,229,157,259,260,261,175,262,176,263,264,186,187,188,2,2,3,3,196,265,266],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[268,269,270,10,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[55,271,61,81,82,84,86,87,272,98,102],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[40,4,273,274,5,6,1,275,276,277,278,51,279,280,52,281,282,283,284,285,286,287,288,289,53,290,291,292,293,294,54,295,296,67,71,297,12,298,299,2,3],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[260],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[12,78,229,230],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[300,301],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[12,78,229,230],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[84,98,102],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[302,303],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"failures":[304,202,204,218,219,305,130,132,146,147,153,306,177],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[307,308],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[309,310],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[77,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,161,163,164,165,166,167,222,311,312,313],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":82,"org.easymock.tests2.UsageTest.argumentsOrdered":237,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":15,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":235,"org.easymock.tests2.StubTest.stubWithReturnValue":77,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":101,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":137,"org.easymock.tests2.SerializationTest.testAllMockedMethod":229,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":117,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":269,"org.easymock.tests.MockingTest.testPartialClassMocking":186,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":224,"org.easymock.samples.SupportTest.voteForRemovals":197,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":308,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":284,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":200,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":52,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":118,"org.easymock.tests.UsageExpectAndThrowTest.object":210,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":48,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":7,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":153,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":154,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":88,"org.easymock.tests2.UsageTest.wrongArguments":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":119,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests.UsageStrictMockTest.range":183,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":24,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":261,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":65,"org.easymock.tests2.UsageConstraintsTest.testNull":84,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":211,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":31,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":26,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":44,"org.easymock.tests2.CaptureTest.testPrimitive":57,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":276,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":219,"org.easymock.tests.UsageTest.moreThanOneArgument":171,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":305,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":30,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":179,"org.easymock.tests2.CaptureTest.testCaptureNone":14,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":123,"org.easymock.tests.UsageUnorderedTest.message":246,"org.easymock.tests.UsageVerifyTest.twoReturns":169,"org.easymock.tests2.ThreadingTest.testThreadSafe":72,"org.easymock.tests.UsageTest.argumentsOrdered":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":290,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":265,"org.easymock.tests2.CaptureTest.testCapture_2617107":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":148,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":253,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":199,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":256,"org.easymock.tests2.UsageConstraintsTest.any":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":152,"org.easymock.tests.UsageExpectAndThrowTest.longType":203,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":239,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":116,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":41,"org.easymock.tests.LimitationsTest.mockNativeMethod":157,"org.easymock.tests2.AnswerTest.answer":49,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":147,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":176,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":272,"org.easymock.tests2.CaptureTest.testAnd":55,"org.easymock.tests2.UsageTest.strictResetToDefault":13,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":274,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":21,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":126,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":173,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":204,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":188,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":29,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":45,"org.easymock.tests.MockingTest.testNicePartialClassMocking":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":215,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":270,"org.easymock.tests2.CaptureTest.testCaptureLast":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":221,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":160,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":87,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":71,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":100,"org.easymock.tests.MockingTest.testTwoMocks":264,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":159,"org.easymock.tests2.CaptureTest.testCapture1_2446744":58,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":297,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":213,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":304,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":208,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":236,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":103,"org.easymock.tests.UsageThrowableTest.throwError":161,"org.easymock.tests.UsageStrictMockTest.differentMethods":184,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":310,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":74,"org.easymock.tests2.MockBuilderTest.testCreateMockString":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":281,"org.easymock.tests.UsageExpectAndThrowTest.floatType":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":181,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":278,"org.easymock.tests.UsageVerifyTest.twoThrows":222,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":250,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":53,"org.easymock.samples.PartialClassMockTest.testGetArea":196,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":149,"org.easymock.samples.ExampleTest.voteAgainstRemoval":194,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":122,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":201,"org.easymock.tests2.UsageTest.niceToStrict":107,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":299,"org.easymock.tests2.UsageConstraintsTest.testNotNull":102,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":167,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":43,"org.easymock.tests2.MockBuilderTest.testCreateMock":231,"org.easymock.tests2.UsageTest.defaultResetToNice":110,"org.easymock.samples.ExampleTest.voteAgainstRemovals":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":292,"org.easymock.tests.UsageVarargTest.differentLength":247,"org.easymock.tests2.CallbackTest.callback":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":0,"org.easymock.tests.UsageTest.openCallCountByLastCall":172,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":223,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":209,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":22,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":79,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":313,"org.easymock.tests.UsageOverloadedMethodTest.overloading":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":289,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":220,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":93,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":68,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":139,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":189,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":92,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":60,"org.easymock.tests.UsageThrowableTest.throwCheckedException":164,"org.easymock.tests2.EasyMockSupportClassTest.testAll":51,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":262,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":226,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":217,"org.easymock.tests2.CaptureTest.testCaptureAll":56,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":70,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.testMatches":94,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":180,"org.easymock.samples.ExampleTest.voteForRemovals":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":10,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":76,"org.easymock.tests2.DependencyTest.testInterfaceMocking":47,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":9,"org.easymock.samples.BasicClassMockTest.testPrintContent":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":295,"org.easymock.tests2.DelegateToTest.testStubDelegate":39,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":166,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":238,"org.easymock.tests2.AnswerTest.stubAnswer":50,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":182,"org.easymock.tests2.UsageConstraintsTest.greaterThan":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":279,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":125,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":37,"org.easymock.samples.ExampleTest.voteForRemoval":193,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":73,"org.easymock.tests.UsageExpectAndReturnTest.floatType":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":146,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":40,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":251,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":97,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":263,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":80,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":105,"org.easymock.tests2.SerializationTest.test":78,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":6,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":267,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":19,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":162,"org.easymock.tests2.UsageConstraintsTest.testSame":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":306,"org.easymock.tests2.CaptureTest.testCaptureFirst":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":20,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":112,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":282,"org.easymock.tests.GenericTest.testPackageScope":175,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":75,"org.easymock.tests2.CaptureTest.testCapture2_2446744":63,"org.easymock.tests2.UsageTest.moreThanOneArgument":106,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":46,"org.easymock.tests.GenericTest.testBridgedEquals":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":241,"org.easymock.tests.UsageExpectAndReturnTest.longType":131,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":17,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":257,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":218,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":140,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":216,"org.easymock.tests2.UsageStrictMockTest.differentMethods":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":132,"org.easymock.tests.UsageCallCountTest.tooManyCalls":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":214,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":136,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":268,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":205,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":66,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":254,"org.easymock.tests2.UsageConstraintsTest.testContains":91,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":38,"org.easymock.tests2.UsageConstraintsTest.testFind":83,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":32,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":248,"org.easymock.tests.UsageExpectAndReturnTest.object":138,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":98,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":34,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":114,"org.easymock.tests2.UsageConstraintsTest.lessThan":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":8,"org.easymock.tests.UsageTest.exactCallCountByLastCall":174,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":158,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":286,"org.easymock.tests2.CaptureTest.testCaptureRightOne":61,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":309,"org.easymock.tests2.UsageConstraintsTest.testOr":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":4,"org.easymock.tests.UsageRangeTest.combination":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":144,"org.easymock.tests.UsageTest.wrongArguments":243,"org.easymock.tests2.MockBuilderTest.testWithConstructor":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":283,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":287,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":312,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":301,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":240,"org.easymock.tests2.UsageConstraintsTest.cmpTo":90,"org.easymock.tests2.UsageTest.openCallCountByLastCall":108,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":109,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":311,"org.easymock.tests2.CaptureTest.testCaptureFromStub":62,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":255,"org.easymock.tests.UsageTest.unexpectedCallWithArray":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":207,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":228,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":307,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":1,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":142,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":249,"org.easymock.tests2.UsageConstraintsTest.constraints":81,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":35,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":206,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":54,"org.easymock.tests2.UsageTest.resumeIfFailure":111,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":150,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":151,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":23}}]
