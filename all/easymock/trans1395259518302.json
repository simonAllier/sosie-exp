[{"position":"org.easymock.Capture:82","failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[23,24,25,26,27,28,29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:98","sourceCode":"return new org.easymock.internal.Result(new DelegatingAnswer() , false)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[36,37],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[38,39,40,41,42,43,44,45],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[46,0,47,1,2,3,4,5,6,48,7,9,10,49,11],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[38,39,40,41,42,43,44,45],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,37,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,32,189,190,191,33,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,23,289,290,291,292,293,294,295,296,297,24,24,25,25,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,26,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,31,339,340,341,342,343,344,345,346,347,348,349,350,351,35,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,45,19,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,28,427,428,429,430,431,432,29,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,20,460,461,462,0,47,1,2,3,4,5,6,48,7,9,10,49,11],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,463,464,465,67,466,68,467,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,37,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,32,189,190,191,33,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,468,214,215,216,217,218,219,469,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,470,275,276,277,278,279,280,281,282,283,284,285,286,287,288,23,289,290,291,292,293,294,295,296,297,24,25,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,471,12,315,472,13,316,317,318,26,14,27,473,319,320,474,16,475,476,477,321,322,323,324,325,326,327,328,329,478,330,331,332,333,334,335,336,337,479,338,31,339,340,341,342,343,344,345,346,347,348,349,350,351,35,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,45,19,480,409,410,411,481,412,413,482,414,483,415,416,417,418,419,484,485,486,487,420,488,489,490,421,422,423,424,30,491,425,492,426,28,493,427,428,494,495,429,430,431,432,29,496,433,497,498,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,499,500,20,460,501,461,462,21,22,0,47,1,2,3,4,5,6,48,7,9,10,49,11],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[488,489,490],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[14,39,40,41,42,43,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"failures":[502,503,257,504,505],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[506,406,407,408],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[50,51,52,53,65,124,125,127,131,132,133,134,148,156,157,158,159,160,161,164,165,167,168,169,171,172,173,174,175,200,258,260,261,264,265,267,269,283,284,285,286,287,23,290,292,293,295,301,315,317,26,27,474,321,322,323,324,325,326,327,328,330,334,335,336,385,402,45,425,28,29,435,452,454,455,499,500,20,460,461,462,21],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[14,319,39,40,41,44,406,45,19],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,463,464,465,67,466,68,467,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,37,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,32,189,190,191,33,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,468,214,215,216,217,218,219,469,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,470,275,276,277,278,279,280,281,282,283,284,285,286,287,288,23,289,290,291,292,293,294,295,296,297,24,25,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,471,12,315,472,13,316,317,318,26,14,27,473,319,320,474,16,475,476,477,321,322,323,324,325,326,327,328,329,478,330,331,332,333,334,335,336,337,479,338,31,339,340,341,342,343,344,345,346,347,348,349,350,351,35,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,45,19,480,409,410,411,481,412,413,482,414,483,415,416,417,418,419,484,485,486,487,420,488,489,490,421,422,423,424,30,491,425,492,426,28,493,427,428,494,495,429,430,431,432,29,496,433,497,498,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,499,500,20,460,501,461,462,21,22,0,47,1,2,3,4,5,6,48,7,9,10,49,11],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:94","sourceCode":"throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[24,25,12,16,331],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[55,56,59,60,63,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,119,120,124,125,127,131,132,133,134,135,137,138,140,142,143,144,145,146,148,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,189,196,200,237,258,260,261,264,265,266,283,284,285,286,287,23,290,291,292,293,295,301,302,303,304,306,308,309,310,313,314,315,317,26,27,474,321,322,323,324,325,326,327,328,330,334,335,336,338,31,339,340,342,343,344,345,346,347,349,350,351,35,352,353,354,355,356,357,358,359,360,361,362,363,364,365,369,370,377,382,383,384,385,386,387,393,401,402,403,405,406,407,45,409,410,411,481,412,413,482,414,483,415,416,417,425,28,29,435,443,452,454,455,458,499,500,20,460,461,462,21,0,47,1,2,3,6,48,7,9,49,11],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":340,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.UsageTest.argumentsOrdered":312,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":231,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":307,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":289,"org.easymock.tests2.DelegateToTest.testReturnException":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":193,"org.easymock.tests.MockingTest.testPartialClassMocking":124,"org.easymock.tests.MockClassControlTest.testToString":277,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":419,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":65,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":494,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":76,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":322,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":39,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":148,"org.easymock.tests2.UsageTest.wrongArguments":305,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":449,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":247,"org.easymock.samples.ExampleTest.answerVsDelegate":291,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":68,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":129,"org.easymock.tests2.UsageConstraintsTest.testNull":343,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":326,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":415,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":282,"org.easymock.tests2.CaptureTest.testPrimitive":2,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":152,"org.easymock.tests.UsageTest.moreThanOneArgument":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":95,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":325,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":52,"org.easymock.tests.UsageTest.argumentsOrdered":62,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":270,"org.easymock.tests.UsageVarargTest.varargIntAccepted":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":283,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":471,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":398,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":287,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":443,"org.easymock.tests.ReplayStateInvalidUsageTest.times":210,"org.easymock.tests2.DependencyTest.testClassMocking":476,"org.easymock.tests2.AnswerTest.answer":365,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":374,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":465,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":13,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":412,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":133,"org.easymock.tests2.DelegateToTest.testDelegate":405,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":91,"org.easymock.tests.LimitationsTest.mockFinalMethod":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":188,"org.easymock.tests2.DependencyTest.testClassMockingSupport":477,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":145,"org.easymock.tests2.CaptureTest.testCapture1_2446744":3,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":478,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":372,"org.easymock.tests.UsageThrowableTest.throwError":176,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":204,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":466,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":470,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":399,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":54,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":437,"org.easymock.samples.PartialClassMockTest.testGetArea":23,"org.easymock.tests.MockingTest.testInterfaceMocking":126,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":284,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":495,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":77,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":254,"org.easymock.tests2.UsageTest.niceToStrict":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":221,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":317,"org.easymock.tests2.MockBuilderTest.testCreateMock":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":497,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":446,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":85,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":413,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":464,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":75,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":109,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":245,"org.easymock.tests.UsageOverloadedMethodTest.overloading":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":432,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":138,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":352,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":167,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":142,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":35,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":7,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":99,"org.easymock.tests2.EasyMockSupportClassTest.testAll":425,"org.easymock.tests.MockClassControlTest.testEquals":281,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":190,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":186,"org.easymock.tests2.CaptureTest.testCaptureAll":47,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":373,"org.easymock.tests.MockNameTest.defaultName":118,"org.easymock.tests2.UsageConstraintsTest.testMatches":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":53,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":202,"org.easymock.samples.ExampleTest.voteForRemovals":295,"org.easymock.tests.UsageVarargTest.allKinds":107,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":187,"org.easymock.samples.BasicClassMockTest.testPrintContent":299,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":182,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":450,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":404,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":197,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":469,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":44,"org.easymock.tests2.UsageConstraintsTest.greaterThan":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":492,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":132,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":336,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":220,"org.easymock.samples.ExampleTest.voteForRemoval":292,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":337,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":383,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":467,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":329,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":108,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":302,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":228,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":411,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":192,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":400,"org.easymock.tests2.CaptureTest.testCaptureFirst":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":481,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":314,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":141,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":163,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":385,"org.easymock.tests2.CaptureTest.testCapture2_2446744":49,"org.easymock.tests2.UsageTest.moreThanOneArgument":304,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":239,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":106,"org.easymock.tests.GenericTest.testBridgedEquals":33,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":116,"org.easymock.tests.UsageExpectAndReturnTest.longType":159,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":409,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":94,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":269,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":50,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":71,"org.easymock.tests.UsageCallCountTest.tooManyCalls":117,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":498,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":81,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":181,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":500,"org.easymock.tests.MockingTest.testNiceClassMocking":130,"org.easymock.tests.MockingTest.testClassMocking":122,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":110,"org.easymock.tests2.UsageConstraintsTest.testContains":351,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":377,"org.easymock.tests2.UsageConstraintsTest.testFind":342,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":144,"org.easymock.tests.MockTypeTest.fromEasyMockClass":67,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":255,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":381,"org.easymock.tests.UsageExpectAndReturnTest.object":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":330,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":483,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":40,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":252,"org.easymock.tests.UsageTest.exactCallCountByLastCall":63,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":226,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":64,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":172,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":96,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":137,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":389,"org.easymock.tests.MockClassControlTest.testHashCode":280,"org.easymock.tests2.EasyMockSupportTest.testVerify":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":430,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":272,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":135,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":74,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":371,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":459,"org.easymock.tests.UsageVarargTest.varargCharAccepted":100,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":468,"org.easymock.tests2.CaptureTest.testCaptureMultiple":34,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":244,"org.easymock.tests2.UsageTest.openCallCountByLastCall":308,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":417,"org.easymock.tests.DefaultClassInstantiatorTest.object":214,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":73,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":431,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":83,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":388,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":279,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":334,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":82,"org.easymock.tests.CapturesMatcherTest.test":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":173,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":435,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":278,"org.easymock.tests2.UsageTest.resumeIfFailure":313,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":463,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":488,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":195,"org.easymock.tests2.StubTest.stubWithReturnValue":458,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":165,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":361,"org.easymock.tests2.SerializationTest.testAllMockedMethod":408,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":237,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":505,"org.easymock.samples.SupportTest.voteForRemovals":301,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":88,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":506,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":243,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":366,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":66,"org.easymock.tests.UsageExpectAndThrowTest.object":86,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":358,"org.easymock.tests2.DelegateToTest.testWrongClass":403,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":264,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":265,"org.easymock.samples.ConstructorCalledMockTest.testTax":24,"org.easymock.tests.UsageStrictMockTest.range":260,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":422,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":414,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":499,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":87,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":424,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":246,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":502,"org.easymock.tests2.CaptureTest.testCaptureNone":48,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":268,"org.easymock.tests.UsageUnorderedTest.message":37,"org.easymock.tests.UsageVerifyTest.twoReturns":155,"org.easymock.tests.UsageVarargTest.varargByteAccepted":105,"org.easymock.tests2.ThreadingTest.testThreadSafe":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":496,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":114,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":253,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":298,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":241,"org.easymock.tests2.UsageConstraintsTest.any":349,"org.easymock.tests2.StubTest.stub":457,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":209,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":72,"org.easymock.tests.UsageExpectAndThrowTest.longType":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":242,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":218,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":208,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":453,"org.easymock.tests2.SerializationTest.testClass":406,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":393,"org.easymock.tests.LimitationsTest.mockNativeMethod":200,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":191,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":175,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":440,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":456,"org.easymock.tests2.NameTest.nameForMocksControl":487,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":442,"org.easymock.tests2.MockedExceptionTest.testMockedException":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":426,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":60,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":80,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":380,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":323,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":27,"org.easymock.tests.MockingTest.testNicePartialClassMocking":125,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":328,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":438,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":38,"org.easymock.tests2.CaptureTest.testCaptureLast":6,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":146,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":21,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":346,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":359,"org.easymock.tests.MockingTest.testTwoMocks":123,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":156,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":84,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":311,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":363,"org.easymock.samples.ExampleTest.removeNonExistingDocument":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":445,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":206,"org.easymock.tests.UsageStrictMockTest.differentMethods":261,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":390,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":216,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":384,"org.easymock.tests2.MockBuilderTest.testCreateMockString":475,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":493,"org.easymock.tests.UsageExpectAndThrowTest.floatType":78,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":491,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":368,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":480,"org.easymock.tests.UsageVerifyTest.twoThrows":154,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":29,"org.easymock.samples.ExampleTest.voteAgainstRemoval":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":232,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":266,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":335,"org.easymock.tests.LimitationsTest.privateConstructor":199,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":18,"org.easymock.tests2.UsageConstraintsTest.testNotNull":362,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":183,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":375,"org.easymock.tests2.UsageTest.defaultResetToNice":310,"org.easymock.samples.ExampleTest.voteAgainstRemovals":290,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":233,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":439,"org.easymock.tests.UsageVarargTest.differentLength":102,"org.easymock.tests2.CallbackTest.callback":387,"org.easymock.tests2.UsageConstraintsTest.equals":341,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":331,"org.easymock.tests.UsageTest.openCallCountByLastCall":59,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":338,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":150,"org.easymock.tests.UsageCallCountTest.tooFewCalls":112,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":460,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":248,"org.easymock.tests.UsageThrowableTest.throwCheckedException":180,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":503,"org.easymock.tests.MockingTest.testStrictClassMocking":121,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":462,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":444,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":20,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":461,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":370,"org.easymock.tests.ObjectMethodsTest.testHashCode":251,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":42,"org.easymock.tests2.NameTest.nameForNiceMock":486,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":386,"org.easymock.tests2.DependencyTest.testInterfaceMocking":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":41,"org.easymock.samples.ExampleTest.addDocument":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":436,"org.easymock.tests2.DelegateToTest.testStubDelegate":402,"org.easymock.tests2.AnswerTest.stubAnswer":369,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":258,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":473,"org.easymock.tests.UsageVarargTest.varargLongAccepted":104,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":174,"org.easymock.tests.UsageExpectAndReturnTest.floatType":158,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":45,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":25,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":397,"org.easymock.tests.UsageThrowableTest.noUpperLimit":177,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":139,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":31,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":420,"org.easymock.tests2.SerializationTest.test":407,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":4,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":157,"org.easymock.tests2.UsageConstraintsTest.testSame":344,"org.easymock.samples.SupportTest.addDocument":300,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":501,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":427,"org.easymock.tests.GenericTest.testPackageScope":189,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":225,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":396,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":128,"org.easymock.tests2.NameTest.nameForMock":484,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":168,"org.easymock.tests2.UsageStrictMockTest.differentMethods":455,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":332,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":160,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":90,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":134,"org.easymock.tests2.MockedExceptionTest.testRealException":378,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":69,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":235,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":149,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":213,"org.easymock.tests2.NameTest.nameForStrictMock":485,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":316,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":379,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":327,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":421,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":36,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":217,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":357,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":315,"org.easymock.tests2.UsageStrictMockTest.range":454,"org.easymock.tests2.UsageConstraintsTest.lessThan":364,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":392,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":429,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.UsageConstraintsTest.testOr":345,"org.easymock.tests.UsageRangeTest.combination":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":324,"org.easymock.tests.UsageTest.wrongArguments":58,"org.easymock.tests2.MockBuilderTest.testWithConstructor":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":428,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":222,"org.easymock.tests.UsageVarargTest.varargShortAccepted":103,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":219,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":115,"org.easymock.tests2.UsageConstraintsTest.cmpTo":350,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":224,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":309,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":203,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":472,"org.easymock.tests.UsageTest.unexpectedCallWithArray":57,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":257,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":113,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":170,"org.easymock.tests2.CaptureTest.testCapture":8,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":259,"org.easymock.tests2.UsageConstraintsTest.constraints":339,"org.easymock.samples.ExampleTest.addAndChangeDocument":297,"org.easymock.tests.UsageStrictMockTest.testVerify":263,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":288,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":185,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":285,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":162,"org.easymock.tests.LimitationsTest.abstractClass":198,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":140,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":482,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":97}}]
