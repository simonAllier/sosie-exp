[{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[3,4,5,6],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[42,43,44],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[45,46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[47,48,18,19,21,22,23,49,50,24,51,52,53,25,26],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[54],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[55],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:95","sourceCode":"return java.util.List<T>","type":"CtReturnImpl"},"failures":[68,69,70],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[30,71,38,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[73,74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[43],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[47,75,76,77],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[78,79,80,81],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[47,75,76,77],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[82,83,84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,4,124,125,42,126,127,128,129,130,43,79,131,132,133,134,135,80,136,137,5,138,44,2,139,140,6,141,142,81,143,144,145,27,146,147,148,149,150,28,29,151,152,153,69,154,155,156,157,158,159,160,161,162,163,70,164,165,166,45,167,168,169,170,171,172,173,174,175,176,177,178,179,180,15,181,182,183,184,16,17,47,75,76,185,186,187,188,189,190,191,192,193,48,194,195,196,197,198,46,199,200,201,202,203,204,205,206,207,208,209,56,57,58,73,210,211,212,213,59,214,215,60,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,18,19,233,234,21,235,236,22,237,238,239,240,23,241,242,49,243,244,24,245,246,247,248,249,30,71,250,61,62,63,74,251,252,253,254,64,255,256,65,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,31,32,301,302,33,34,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,35,36,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,0,411,412,413,1,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,37,434,435,38,72,436,437,438,439,440,441,442,443,444,445,446,447,448,449,55,40,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,41,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,66,67,25,26,497,498,499,500,501,502,503,504,505,506,507,508,509],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[137,147,189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[178,206,207,208,209,315,355,356,357,358,359,360,494],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[87,89,90,91,387,468,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1205","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[85,125,137,143,145,27,146,147,28,29,151,152,170,171,172,173,180,15,184,16,186,195,198,199,211,212,217,219,221,222,224,225,234,235,236,240,241,243,244,245,246,248,249,30,71,250,252,253,263,266,267,270,299,300,31,32,33,34,303,340,342,343,346,347,348,350,35,36,351,379,426,427,432,37,434,435,38,72,436,40,452,453,454,458,461,462,463,464,465,467,470,471,41],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[85,87,88,91,102,105,115,121,4,124,125,42,127,128,129,130,43,79,132,133,134,135,80,136,137,5,138,44,2,139,6,141,142,81,144,145,146,147,150,151,153,69,154,155,157,158,159,160,161,162,164,165,166,168,170,171,172,173,174,176,177,178,179,180,15,181,183,184,16,47,75,76,185,187,188,189,190,193,195,197,200,203,204,205,206,207,208,209,211,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,18,234,238,239,240,241,247,248,71,250,252,257,258,259,260,271,272,276,277,278,279,280,281,282,283,284,285,289,290,292,300,305,306,312,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,349,350,35,36,351,352,353,354,355,356,357,358,359,360,373,374,375,377,378,380,381,382,383,384,416,417,418,419,420,428,433,434,72,436,437,439,440,447,448,451,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,496,66,67,25,26,497,498,499,500,501,502,503,504,505,506,508,509],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[47,75,76,77],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[446,55],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[92,93,94,96,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,179,180,15,181,184,16,47,76,185,186,188,189,190,191,193,48,194,195,196,197,198,46,199,206,207,208,229,230,18,19,234,235,236,237,238,239,240,241,49,243,244,245,286,287,288,289,290,292,295,310,311,312,313,349,410,0,411,412,413,1,415,446,447,448,449,55,450,451,452,453,454,455,456,457,458,463,25,25,26,26,499,500,509],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[9,10,11,12,13,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,47,510,20,49],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":42,"org.easymock.tests2.UsageTest.argumentsOrdered":29,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":299,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":395,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":147,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":66,"org.easymock.tests2.DelegateToTest.testReturnException":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":356,"org.easymock.tests.MockingTest.testPartialClassMocking":289,"org.easymock.tests.MockClassControlTest.testToString":452,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":169,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":109,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":320,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":232,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":492,"org.easymock.tests2.UsageTest.wrongArguments":27,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":60,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":318,"org.easymock.samples.ExampleTest.answerVsDelegate":502,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":463,"org.easymock.tests2.UsageConstraintsTest.testNull":128,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":294,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":188,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":457,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":225,"org.easymock.tests2.CaptureTest.testPrimitive":155,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":496,"org.easymock.tests.UsageTest.moreThanOneArgument":300,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":339,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":418,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":421,"org.easymock.tests.UsageTest.argumentsOrdered":34,"org.easymock.tests.UsageVarargTest.varargIntAccepted":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":281,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":234,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":256,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":285,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":211,"org.easymock.tests.ReplayStateInvalidUsageTest.times":369,"org.easymock.tests2.DependencyTest.testClassMocking":229,"org.easymock.tests2.AnswerTest.answer":200,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":402,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":260,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":460,"org.easymock.tests2.CaptureTest.testAnd":153,"org.easymock.tests2.UsageTest.strictResetToDefault":144,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":22,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":220,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":353,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":425,"org.easymock.tests2.DelegateToTest.testDelegate":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":335,"org.easymock.tests.LimitationsTest.mockFinalMethod":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":359,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":280,"org.easymock.tests2.DependencyTest.testClassMockingSupport":230,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":426,"org.easymock.tests2.CaptureTest.testCapture1_2446744":156,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":258,"org.easymock.tests.UsageThrowableTest.throwError":438,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":363,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":462,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":65,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":420,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":51,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":123,"org.easymock.samples.PartialClassMockTest.testGetArea":509,"org.easymock.tests.MockingTest.testInterfaceMocking":291,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":364,"org.easymock.tests2.CompareToTest.testLessOrEqual":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":282,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":308,"org.easymock.tests2.UsageTest.niceToStrict":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":110,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":14,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":238,"org.easymock.tests2.MockBuilderTest.testCreateMock":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":118,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":59,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":329,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":221,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":459,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":431,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":316,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":11,"org.easymock.tests.UsageOverloadedMethodTest.overloading":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":114,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":469,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":483,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":304,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":135,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":161,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":376,"org.easymock.tests.MockClassControlTest.testEquals":456,"org.easymock.tests2.EasyMockSupportClassTest.testAll":102,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":448,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":337,"org.easymock.tests2.CaptureTest.testCaptureAll":69,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":278,"org.easymock.tests.MockNameTest.defaultName":270,"org.easymock.tests2.UsageConstraintsTest.testMatches":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":419,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":361,"org.easymock.samples.ExampleTest.voteForRemovals":506,"org.easymock.tests.UsageVarargTest.allKinds":384,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":350,"org.easymock.samples.BasicClassMockTest.testPrintContent":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":279,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":444,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":246,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":360,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":414,"org.easymock.tests2.UsageConstraintsTest.greaterThan":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":352,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":198,"org.easymock.samples.ExampleTest.voteForRemoval":503,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":415,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":166,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":46,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":95,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":191,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":143,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":349,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":218,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":355,"org.easymock.tests2.CaptureTest.testCaptureFirst":164,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":219,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":152,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":41,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":479,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":167,"org.easymock.tests2.UsageTest.moreThanOneArgument":145,"org.easymock.tests2.CaptureTest.testCapture2_2446744":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":403,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":244,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":383,"org.easymock.tests.GenericTest.testBridgedEquals":55,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":12,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":347,"org.easymock.tests.UsageExpectAndReturnTest.longType":475,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":276,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":338,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":140,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":269,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":416,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":297,"org.easymock.tests.UsageCallCountTest.tooManyCalls":348,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":480,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":325,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":443,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":180,"org.easymock.tests.MockingTest.testNiceClassMocking":295,"org.easymock.tests.MockingTest.testClassMocking":287,"org.easymock.tests2.UsageConstraintsTest.testContains":134,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":341,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":208,"org.easymock.tests2.UsageConstraintsTest.testFind":127,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":306,"org.easymock.tests.MockTypeTest.fromEasyMockClass":461,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":432,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":176,"org.easymock.tests.UsageExpectAndReturnTest.object":482,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":224,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":378,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":265,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":13,"org.easymock.tests.UsageTest.exactCallCountByLastCall":303,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":422,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":273,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":488,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":373,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":468,"org.easymock.tests.ResultTest.createThrowResultToString":84,"org.easymock.tests.MockClassControlTest.testHashCode":455,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":62,"org.easymock.tests2.EasyMockSupportTest.testVerify":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":112,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":423,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":466,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":430,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":257,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":261,"org.easymock.tests.UsageVarargTest.varargCharAccepted":377,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":409,"org.easymock.tests2.CaptureTest.testCaptureMultiple":68,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":408,"org.easymock.tests2.UsageTest.openCallCountByLastCall":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":510,"org.easymock.tests.DefaultClassInstantiatorTest.object":410,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":227,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":429,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":263,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":441,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":73,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":61,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":454,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":326,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":489,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":296,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":121,"org.easymock.tests2.UsageTest.resumeIfFailure":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":458,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":358,"org.easymock.tests2.StubTest.stubWithReturnValue":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":23,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":481,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":6,"org.easymock.tests2.SerializationTest.testAllMockedMethod":76,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":401,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":53,"org.easymock.samples.SupportTest.voteForRemovals":498,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":446,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":332,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":77,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":407,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":201,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":275,"org.easymock.tests.UsageExpectAndThrowTest.object":330,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":2,"org.easymock.tests2.DelegateToTest.testWrongClass":89,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":271,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":272,"org.easymock.tests.UsageStrictMockTest.range":38,"org.easymock.samples.ConstructorCalledMockTest.testTax":25,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":97,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":223,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":179,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":331,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":99,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":317,"org.easymock.tests2.CaptureTest.testCaptureNone":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":309,"org.easymock.tests.UsageUnorderedTest.message":40,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests.UsageVarargTest.varargByteAccepted":382,"org.easymock.tests2.ThreadingTest.testThreadSafe":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":116,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":345,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":499,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":266,"org.easymock.tests2.CaptureTest.testCapture_2617107":154,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":428,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":405,"org.easymock.tests2.UsageConstraintsTest.any":132,"org.easymock.tests2.StubTest.stub":177,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndThrowTest.longType":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":357,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":413,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":367,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":249,"org.easymock.tests2.SerializationTest.testClass":47,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":252,"org.easymock.tests.LimitationsTest.mockNativeMethod":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":491,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":449,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":58,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":250,"org.easymock.tests2.NameTest.nameForMocksControl":173,"org.easymock.tests2.MockedExceptionTest.testMockedException":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":104,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":302,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":175,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":292,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":324,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":185,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":241,"org.easymock.tests.MockingTest.testNicePartialClassMocking":290,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":190,"org.easymock.tests2.CaptureTest.testCaptureLast":159,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":56,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":427,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":43,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":16,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":139,"org.easymock.tests.MockingTest.testTwoMocks":288,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":472,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":328,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":142,"org.easymock.samples.ExampleTest.removeNonExistingDocument":507,"org.easymock.tests.UsageStrictMockTest.differentMethods":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":213,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":63,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":411,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":45,"org.easymock.tests2.MockBuilderTest.testCreateMockString":245,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":106,"org.easymock.tests.UsageExpectAndThrowTest.floatType":322,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":101,"org.easymock.tests.ResultTest.createReturnResultToString":83,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":203,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":233,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":115,"org.easymock.tests.ResultTest.createDelegateResultToString":82,"org.easymock.samples.ExampleTest.voteAgainstRemoval":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":396,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":307,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":197,"org.easymock.tests.LimitationsTest.privateConstructor":311,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":8,"org.easymock.tests2.UsageConstraintsTest.testNotNull":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":445,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":206,"org.easymock.tests2.UsageTest.defaultResetToNice":150,"org.easymock.samples.ExampleTest.voteAgainstRemovals":501,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":397,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":57,"org.easymock.tests.UsageVarargTest.differentLength":379,"org.easymock.tests2.CallbackTest.callback":85,"org.easymock.tests2.UsageConstraintsTest.equals":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":48,"org.easymock.tests.UsageTest.openCallCountByLastCall":301,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":494,"org.easymock.tests.UsageCallCountTest.tooFewCalls":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":181,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":319,"org.easymock.tests.UsageThrowableTest.throwCheckedException":442,"org.easymock.tests.MockingTest.testStrictClassMocking":286,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":184,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":315,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":212,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":370,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":183,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":205,"org.easymock.tests2.CompareToTest.testGreateOrEqual":78,"org.easymock.tests.ObjectMethodsTest.testHashCode":264,"org.easymock.tests2.NameTest.nameForNiceMock":172,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":168,"org.easymock.tests2.DependencyTest.testInterfaceMocking":231,"org.easymock.samples.ExampleTest.addDocument":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":122,"org.easymock.tests2.DelegateToTest.testStubDelegate":88,"org.easymock.tests2.AnswerTest.stubAnswer":204,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":434,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":242,"org.easymock.tests.UsageVarargTest.varargLongAccepted":381,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":490,"org.easymock.tests.UsageExpectAndReturnTest.floatType":474,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":26,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests.UsageThrowableTest.noUpperLimit":439,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":255,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":124,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":92,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":157,"org.easymock.tests2.SerializationTest.test":75,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":473,"org.easymock.tests2.UsageConstraintsTest.testSame":129,"org.easymock.samples.SupportTest.addDocument":497,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":182,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":107,"org.easymock.tests.GenericTest.testPackageScope":447,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":64,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":293,"org.easymock.tests2.NameTest.nameForMock":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":484,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":24,"org.easymock.tests2.UsageStrictMockTest.differentMethods":71,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":194,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":476,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":334,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":354,"org.easymock.tests2.MockedExceptionTest.testRealException":209,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":98,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":398,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":493,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":372,"org.easymock.tests2.NameTest.nameForStrictMock":171,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":237,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":20,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":189,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":96,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":412,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":44,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":235,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests2.UsageConstraintsTest.lessThan":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":393,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":217,"org.easymock.tests2.CaptureTest.testCaptureRightOne":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":111,"org.easymock.tests2.UsageConstraintsTest.testOr":130,"org.easymock.tests.UsageRangeTest.combination":351,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":186,"org.easymock.tests.UsageTest.wrongArguments":32,"org.easymock.tests2.MockBuilderTest.testWithConstructor":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":108,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":477,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":386,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":380,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":346,"org.easymock.tests2.UsageConstraintsTest.cmpTo":133,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":388,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":149,"org.easymock.tests2.CaptureTest.testCaptureFromStub":163,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":362,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":236,"org.easymock.tests.UsageTest.unexpectedCallWithArray":31,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":344,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":486,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":435,"org.easymock.tests2.UsageConstraintsTest.constraints":125,"org.easymock.samples.ExampleTest.addAndChangeDocument":508,"org.easymock.tests2.ConstraintsToStringTest.notToString":54,"org.easymock.tests.UsageStrictMockTest.testVerify":437,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":67,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":433,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":277,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":283,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":478,"org.easymock.tests.LimitationsTest.abstractClass":310,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":222,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":374}}]
