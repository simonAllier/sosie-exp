[{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[0],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,1,311,312,313,314,315,316,2,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[458,459,460],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,461,462,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,463,464,84,465,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,466,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,467,468,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,469,279,280,470,281,282,283,284,471,285,472,473,286,287,474,288,289,290,291,292,293,294,295,296,297,298,299,300,301,475,302,303,304,305,306,307,308,309,310,1,311,312,313,314,315,316,2,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,476,377,378,477,478,479,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,480,481,482,398,399,400,401,402,483,403,484,404,405,406,407,485,486,408,487,488,409,489,410,411,412,413,414,415,416,490,491,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,492,441,493,442,494,495,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[496,497,498,499,500,501,502,477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[318,319],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[476,377,378],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"toStringMethod"}},{"position":"org.easymock.internal.MocksControl:189","failures":[12,14,15,18,19,20,105,112,113,142,143,144,145,146,207,208,209,210,217,219,221,222,223,265,268,269,270,273,274,275,277,278,283,284,285,287,288,299,303,1,342,343,344,345,364,381,383,384,386,387,422,429,432,433,434],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[503],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[278,283,299,308,346,405],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[467,468,469,470,471,473,504,474,505,506,476,477,478,401,402,483,403,484,404,405,406,407,485,486,408,487,488,409,489,410,411,412,413,414,415,416,490,491,492,495,443],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value","properties":"properties","key":"value"}},{"position":"org.easymock.internal.MockBuilder:172","failures":[27,284],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[12,16,17,20,111,113,220,265,271,272,277,336,431],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[471,497,498,499,500,501,478],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[200],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:86","sourceCode":"return org.easymock.internal.Results.getMainInterval().expectedCount()","type":"CtReturnImpl"},"failures":[13,15,18,19,105,111,112,113,219,220,222,223,267,268,274,275,393,394,395,396,431,433,434],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[147,150,251,467,467,468,468,469,470,282,471,472,473,286,474,288,475,305,308,476,477,478,479,405,410],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[507,444,445,446,447,448,449,450,451,452,453,454,455,456,457],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[314,318,328,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[471,497,498,499,500,501,478],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[508,476,377,378],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[471,473,497,498,499,509,502,476,477,478],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[189,337,340,341],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":311,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":12,"org.easymock.tests2.UsageTest.argumentsOrdered":275,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":389,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":193,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":270,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":252,"org.easymock.tests2.DelegateToTest.testReturnException":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":153,"org.easymock.tests.MockingTest.testPartialClassMocking":463,"org.easymock.tests.MockClassControlTest.testToString":239,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":392,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":486,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":405,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":36,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":106,"org.easymock.tests2.UsageTest.wrongArguments":268,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":428,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":209,"org.easymock.samples.ExampleTest.answerVsDelegate":254,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":27,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":86,"org.easymock.tests2.UsageConstraintsTest.testNull":314,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":296,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":388,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":244,"org.easymock.tests2.CaptureTest.testPrimitive":447,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":110,"org.easymock.tests.UsageTest.moreThanOneArgument":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":55,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":9,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":232,"org.easymock.tests.UsageVarargTest.varargIntAccepted":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":501,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":278,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":481,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":369,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":249,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":422,"org.easymock.tests.ReplayStateInvalidUsageTest.times":170,"org.easymock.tests2.DependencyTest.testClassMocking":289,"org.easymock.tests2.AnswerTest.answer":336,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":345,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":462,"org.easymock.tests2.CaptureTest.testAnd":444,"org.easymock.tests2.UsageTest.strictResetToDefault":266,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":8,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":383,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":236,"org.easymock.tests2.DelegateToTest.testDelegate":376,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":51,"org.easymock.tests.LimitationsTest.mockFinalMethod":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":146,"org.easymock.tests2.DependencyTest.testClassMockingSupport":290,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":102,"org.easymock.tests2.CaptureTest.testCapture1_2446744":448,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":343,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":164,"org.easymock.tests.UsageThrowableTest.throwError":134,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":26,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":466,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":11,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":491,"org.easymock.samples.PartialClassMockTest.testGetArea":251,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":165,"org.easymock.tests.MockingTest.testInterfaceMocking":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":246,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":408,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":37,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":216,"org.easymock.tests2.UsageTest.niceToStrict":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":183,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":3,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":282,"org.easymock.tests2.MockBuilderTest.testCreateMock":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":413,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":425,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":45,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":384,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":461,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":207,"org.easymock.tests.UsageOverloadedMethodTest.overloading":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":415,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":125,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":99,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":322,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":453,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":59,"org.easymock.tests2.EasyMockSupportClassTest.testAll":403,"org.easymock.tests.MockClassControlTest.testEquals":243,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":149,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":53,"org.easymock.tests2.CaptureTest.testCaptureAll":445,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":344,"org.easymock.tests.MockNameTest.defaultName":78,"org.easymock.tests2.UsageConstraintsTest.testMatches":324,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":10,"org.easymock.samples.ExampleTest.voteForRemovals":258,"org.easymock.tests2.ConstraintsToStringTest.notNullToString":503,"org.easymock.tests.UsageVarargTest.allKinds":67,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":145,"org.easymock.samples.BasicClassMockTest.testPrintContent":262,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":140,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":366,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":375,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":181,"org.easymock.tests2.UsageConstraintsTest.greaterThan":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":484,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":89,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":306,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":182,"org.easymock.samples.ExampleTest.voteForRemoval":255,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":307,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":354,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":299,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":68,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":265,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":381,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":152,"org.easymock.tests2.CaptureTest.testCaptureFirst":457,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":382,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":277,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":121,"org.easymock.tests2.CaptureTest.testCapture2_2446744":456,"org.easymock.tests2.UsageTest.moreThanOneArgument":267,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":201,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":287,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":66,"org.easymock.tests.GenericTest.testBridgedEquals":151,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":76,"org.easymock.tests.UsageExpectAndReturnTest.longType":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":142,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":379,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":54,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":231,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":52,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":7,"org.easymock.tests.UsageCallCountTest.tooManyCalls":77,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":427,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":139,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":440,"org.easymock.tests.MockingTest.testNiceClassMocking":87,"org.easymock.tests.MockingTest.testClassMocking":82,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":70,"org.easymock.tests2.UsageConstraintsTest.testContains":321,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":348,"org.easymock.tests2.UsageConstraintsTest.testFind":313,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":101,"org.easymock.tests.MockTypeTest.fromEasyMockClass":25,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":217,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":352,"org.easymock.tests.UsageExpectAndReturnTest.object":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":426,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":387,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":61,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":214,"org.easymock.tests.UsageTest.exactCallCountByLastCall":20,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":188,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":21,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":233,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":478,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":130,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":56,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":94,"org.easymock.tests.MockClassControlTest.testHashCode":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":360,"org.easymock.tests2.EasyMockSupportTest.testVerify":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":488,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":34,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":92,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":342,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":438,"org.easymock.tests.UsageVarargTest.varargCharAccepted":60,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":174,"org.easymock.tests2.CaptureTest.testCaptureMultiple":6,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":206,"org.easymock.tests2.UsageTest.openCallCountByLastCall":271,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":390,"org.easymock.tests.DefaultClassInstantiatorTest.object":175,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":4,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":33,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":409,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":420,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":359,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":241,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":304,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":42,"org.easymock.tests.CapturesMatcherTest.test":507,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":416,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":240,"org.easymock.tests2.UsageTest.resumeIfFailure":276,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":24,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":155,"org.easymock.tests2.StubTest.stubWithReturnValue":437,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":471,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":123,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":332,"org.easymock.tests2.SerializationTest.testAllMockedMethod":378,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":199,"org.easymock.samples.SupportTest.voteForRemovals":264,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":48,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":508,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":205,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":337,"org.easymock.tests.UsageExpectAndThrowTest.object":46,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":23,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":329,"org.easymock.tests2.DelegateToTest.testWrongClass":374,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":226,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":227,"org.easymock.samples.ConstructorCalledMockTest.testTax":467,"org.easymock.tests.UsageStrictMockTest.range":222,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":399,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":386,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":439,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":47,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":401,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":172,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":208,"org.easymock.tests2.CaptureTest.testCaptureNone":452,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":230,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":459,"org.easymock.tests.UsageUnorderedTest.message":105,"org.easymock.tests.UsageVerifyTest.twoReturns":113,"org.easymock.tests.UsageVarargTest.varargByteAccepted":65,"org.easymock.tests2.ThreadingTest.testThreadSafe":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":411,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":74,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":215,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":261,"org.easymock.tests2.CaptureTest.testCapture_2617107":446,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":203,"org.easymock.tests2.UsageConstraintsTest.any":319,"org.easymock.tests2.StubTest.stub":436,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":154,"org.easymock.tests.UsageExpectAndThrowTest.longType":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":204,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":179,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":168,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":432,"org.easymock.tests2.SerializationTest.testClass":476,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":364,"org.easymock.tests.LimitationsTest.mockNativeMethod":160,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":150,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":133,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":419,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":435,"org.easymock.tests2.NameTest.nameForMocksControl":396,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":421,"org.easymock.tests2.MockedExceptionTest.testMockedException":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":404,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":17,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":465,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":40,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":351,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":293,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":285,"org.easymock.tests.MockingTest.testNicePartialClassMocking":464,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":496,"org.easymock.tests2.CaptureTest.testCaptureLast":451,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":417,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":103,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":495,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":2,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":330,"org.easymock.tests.MockingTest.testTwoMocks":83,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":443,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":44,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":274,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":334,"org.easymock.samples.ExampleTest.removeNonExistingDocument":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":424,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":166,"org.easymock.tests.UsageStrictMockTest.differentMethods":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":361,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":460,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":177,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":355,"org.easymock.tests2.MockBuilderTest.testCreateMockString":288,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":406,"org.easymock.tests.UsageExpectAndThrowTest.floatType":38,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":483,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":479,"org.easymock.tests.UsageVerifyTest.twoThrows":112,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":410,"org.easymock.samples.ExampleTest.voteAgainstRemoval":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":194,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":228,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":305,"org.easymock.tests.LimitationsTest.privateConstructor":159,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":506,"org.easymock.tests2.UsageConstraintsTest.testNotNull":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":141,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":346,"org.easymock.tests2.UsageTest.defaultResetToNice":273,"org.easymock.samples.ExampleTest.voteAgainstRemovals":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":195,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":418,"org.easymock.tests.UsageVarargTest.differentLength":62,"org.easymock.tests2.CallbackTest.callback":358,"org.easymock.tests2.UsageConstraintsTest.equals":312,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":475,"org.easymock.tests.UsageTest.openCallCountByLastCall":16,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":309,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":108,"org.easymock.tests.UsageCallCountTest.tooFewCalls":72,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":441,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":210,"org.easymock.tests.UsageThrowableTest.throwCheckedException":138,"org.easymock.tests.MockingTest.testStrictClassMocking":81,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":494,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":80,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":492,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":423,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":171,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":442,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":341,"org.easymock.tests.ObjectMethodsTest.testHashCode":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":500,"org.easymock.tests2.NameTest.nameForNiceMock":395,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":357,"org.easymock.tests2.DependencyTest.testInterfaceMocking":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":490,"org.easymock.tests2.DelegateToTest.testStubDelegate":373,"org.easymock.tests2.AnswerTest.stubAnswer":340,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":220,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":472,"org.easymock.tests.UsageVarargTest.varargLongAccepted":64,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":192,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":132,"org.easymock.tests.UsageExpectAndReturnTest.floatType":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":477,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":468,"org.easymock.tests.UsageThrowableTest.noUpperLimit":135,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":96,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":327,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":368,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":310,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":397,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":449,"org.easymock.tests2.SerializationTest.test":377,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":115,"org.easymock.tests2.UsageConstraintsTest.testSame":315,"org.easymock.samples.SupportTest.addDocument":263,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":493,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":407,"org.easymock.tests.GenericTest.testPackageScope":148,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":187,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":367,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":85,"org.easymock.tests2.NameTest.nameForMock":393,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":126,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":474,"org.easymock.tests2.UsageStrictMockTest.differentMethods":434,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":302,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":50,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":91,"org.easymock.tests2.MockedExceptionTest.testRealException":349,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":29,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":197,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":196,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":173,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":107,"org.easymock.tests2.NameTest.nameForStrictMock":394,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":281,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":5,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":350,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":297,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":398,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":178,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":328,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":279,"org.easymock.tests2.UsageStrictMockTest.range":433,"org.easymock.tests2.UsageConstraintsTest.lessThan":335,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":363,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":487,"org.easymock.tests2.CaptureTest.testCaptureRightOne":454,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":458,"org.easymock.tests2.UsageConstraintsTest.testOr":316,"org.easymock.tests.UsageRangeTest.combination":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":294,"org.easymock.tests.UsageTest.wrongArguments":15,"org.easymock.tests2.MockBuilderTest.testWithConstructor":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":485,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":127,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":180,"org.easymock.tests.UsageVarargTest.varargShortAccepted":63,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":75,"org.easymock.tests2.UsageConstraintsTest.cmpTo":320,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":186,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":272,"org.easymock.tests2.CaptureTest.testCaptureFromStub":455,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":163,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":280,"org.easymock.tests.UsageTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":219,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":73,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":504,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":128,"org.easymock.tests2.UsageConstraintsTest.constraints":1,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":221,"org.easymock.samples.ExampleTest.addAndChangeDocument":260,"org.easymock.tests.UsageStrictMockTest.testVerify":225,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":250,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":143,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":247,"org.easymock.tests.LimitationsTest.abstractClass":158,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":120,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":385,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":57}}]
